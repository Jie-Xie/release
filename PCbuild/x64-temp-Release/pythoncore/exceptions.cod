; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0CO@HPEHEBLP@Base?5class?5for?5warnings?5about?5re@ ; `string'
PUBLIC	??_C@_0BA@JIBLCGNF@ResourceWarning?$AA@		; `string'
PUBLIC	??_C@_0HM@KBKMDMHM@Base?5class?5for?5warnings?5about?5by@ ; `string'
PUBLIC	??_C@_0N@BILDEMAG@BytesWarning?$AA@		; `string'
PUBLIC	??_C@_0FP@BEMCLFNP@Base?5class?5for?5warnings?5about?5Un@ ; `string'
PUBLIC	??_C@_0P@DFBLGLPC@UnicodeWarning?$AA@		; `string'
PUBLIC	??_C@_0EC@CFAJPLKK@Base?5class?5for?5warnings?5about?5pr@ ; `string'
PUBLIC	??_C@_0O@MPAGLHE@ImportWarning?$AA@		; `string'
PUBLIC	??_C@_0FG@MEHAINOE@Base?5class?5for?5warnings?5about?5co@ ; `string'
PUBLIC	??_C@_0O@EAIEFLDH@FutureWarning?$AA@		; `string'
PUBLIC	??_C@_0DI@FBPEMJEN@Base?5class?5for?5warnings?5about?5du@ ; `string'
PUBLIC	??_C@_0P@JGMDIAML@RuntimeWarning?$AA@		; `string'
PUBLIC	??_C@_0CO@JDKAKEOK@Base?5class?5for?5warnings?5about?5du@ ; `string'
PUBLIC	??_C@_0O@IOJIPFFN@SyntaxWarning?$AA@		; `string'
PUBLIC	??_C@_0EP@NOKGBDGL@Base?5class?5for?5warnings?5about?5fe@ ; `string'
PUBLIC	??_C@_0BK@JDBEDOM@PendingDeprecationWarning?$AA@ ; `string'
PUBLIC	??_C@_0DD@DDNMECFD@Base?5class?5for?5warnings?5about?5de@ ; `string'
PUBLIC	??_C@_0BD@GIDNBIPD@DeprecationWarning?$AA@	; `string'
PUBLIC	??_C@_0DA@NAMNFIGL@Base?5class?5for?5warnings?5generate@ ; `string'
PUBLIC	??_C@_0M@JCLIHPLC@UserWarning?$AA@		; `string'
PUBLIC	??_C@_0CD@IHAAEPNP@Base?5class?5for?5warning?5categorie@ ; `string'
PUBLIC	??_C@_07KGMMFLDN@Warning?$AA@			; `string'
PUBLIC	??_C@_0O@GFOKIHDB@Buffer?5error?4?$AA@		; `string'
PUBLIC	??_C@_0M@IEEINKIE@BufferError?$AA@		; `string'
PUBLIC	??_C@_0P@ILLCNIIE@Out?5of?5memory?4?$AA@	; `string'
PUBLIC	??_C@_0M@HIBAKAFK@MemoryError?$AA@		; `string'
PUBLIC	??_C@_0DG@LICMCCGN@Async?5run?$CI?$CJ?5detected?5that?5there?5@ ; `string'
PUBLIC	??_C@_0BM@GCGOLDFN@AsyncRunNoActiveEventsError?$AA@ ; `string'
PUBLIC	??_C@_0CH@LDJJHMMC@Async?5run?$CI?$CJ?5called?5without?5any?5e@ ; `string'
PUBLIC	??_C@_0CB@DHCJJACB@AsyncRunCalledWithoutEventsError@ ; `string'
PUBLIC	??_C@_0BN@KHNEADKG@Base?5class?5for?5async?5errors?4?$AA@ ; `string'
PUBLIC	??_C@_0L@POMMPANG@AsyncError?$AA@		; `string'
PUBLIC	??_C@_0EN@KNPFPBJJ@Implicit?5access?5to?5nonlocal?5vari@ ; `string'
PUBLIC	??_C@_0CE@ONNHACJB@ParallelNonlocalVariableAccessEr@ ; `string'
PUBLIC	??_C@_0EL@PLHLDPCD@Implicit?5access?5to?5global?5variab@ ; `string'
PUBLIC	??_C@_0CC@HPLHCPKN@ParallelGlobalVariableAccessErro@ ; `string'
PUBLIC	??_C@_0DD@JGEGKCHH@Import?5not?5permitted?5from?5within@ ; `string'
PUBLIC	??_C@_0BE@FCGCAOGC@ParallelImportError?$AA@	; `string'
PUBLIC	??_C@_0DG@NPBGBDKP@Operation?5not?5permitted?5from?5wit@ ; `string'
PUBLIC	??_C@_0BF@HFKFAIAA@ParallelContextError?$AA@	; `string'
PUBLIC	??_C@_0DE@INBJNFAJ@Failed?5to?5initialize?5parallel?5co@ ; `string'
PUBLIC	??_C@_0CD@MNHCHPAI@ParallelContextInitializationErr@ ; `string'
PUBLIC	??_C@_0CK@IKBKELBP@Failed?5to?5initialize?5new?5paralle@ ; `string'
PUBLIC	??_C@_0CC@IAEHFMP@ParallelThreadInitializationErro@ ; `string'
PUBLIC	??_C@_0CA@NKCFMBPJ@Base?5class?5for?5parallel?5errors?4?$AA@ ; `string'
PUBLIC	??_C@_0O@GFKDNBOD@ParallelError?$AA@		; `string'
PUBLIC	??_C@_0CO@BODDBCMG@Weak?5ref?5proxy?5used?5after?5refere@ ; `string'
PUBLIC	??_C@_0P@NJFCDLEA@ReferenceError?$AA@		; `string'
PUBLIC	??_C@_0LA@PADCOJHH@Internal?5error?5in?5the?5Python?5int@ ; `string'
PUBLIC	??_C@_0M@MLMICFKM@SystemError?$AA@		; `string'
PUBLIC	??_C@_0DM@HNAOGMFP@Second?5argument?5to?5a?5division?5or@ ; `string'
PUBLIC	??_C@_0BC@JKCGANPD@ZeroDivisionError?$AA@	; `string'
PUBLIC	??_C@_0CE@DNDJACFH@Result?5too?5large?5to?5be?5represent@ ; `string'
PUBLIC	??_C@_0O@DAFOBLHH@OverflowError?$AA@		; `string'
PUBLIC	??_C@_0CB@CNKBBAIB@Floating?5point?5operation?5failed?4@ ; `string'
PUBLIC	??_C@_0BD@BMMMKAGK@FloatingPointError?$AA@	; `string'
PUBLIC	??_C@_0CC@PPOJNHHK@Base?5class?5for?5arithmetic?5errors@ ; `string'
PUBLIC	??_C@_0BA@HMBIHIEF@ArithmeticError?$AA@		; `string'
PUBLIC	??_C@_0BC@DHBLDLOI@Assertion?5failed?4?$AA@	; `string'
PUBLIC	??_C@_0P@ECLAGKMP@AssertionError?$AA@		; `string'
PUBLIC	??_C@_0BL@BOAAJAHA@Unicode?5translation?5error?4?$AA@ ; `string'
PUBLIC	??_C@_0BG@MKGFNNGN@UnicodeTranslateError?$AA@	; `string'
PUBLIC	??_C@_0BI@GHLGAONJ@Unicode?5decoding?5error?4?$AA@ ; `string'
PUBLIC	??_C@_0BD@EMOAOOII@UnicodeDecodeError?$AA@	; `string'
PUBLIC	??_C@_0BI@BHCKDJLG@Unicode?5encoding?5error?4?$AA@ ; `string'
PUBLIC	??_C@_0BD@PEGECFKD@UnicodeEncodeError?$AA@	; `string'
PUBLIC	??_C@_0BB@PLOKJKDH@exception?5reason?$AA@	; `string'
PUBLIC	??_C@_06CEHAOENB@reason?$AA@			; `string'
PUBLIC	??_C@_0O@ONMBNCFM@exception?5end?$AA@		; `string'
PUBLIC	??_C@_03JBJLGPFL@end?$AA@			; `string'
PUBLIC	??_C@_0BA@KKPENCDK@exception?5start?$AA@	; `string'
PUBLIC	??_C@_05FAGFPHJG@start?$AA@			; `string'
PUBLIC	??_C@_0BB@FLHDGNGM@exception?5object?$AA@	; `string'
PUBLIC	??_C@_06IEOJBDIK@object?$AA@			; `string'
PUBLIC	??_C@_0BD@HEGPNDEB@exception?5encoding?$AA@	; `string'
PUBLIC	??_C@_08MLPGAEIK@encoding?$AA@			; `string'
PUBLIC	??_C@_0BH@LFJEPFCJ@Unicode?5related?5error?4?$AA@ ; `string'
PUBLIC	??_C@_0N@HJMCMBLP@UnicodeError?$AA@		; `string'
PUBLIC	??_C@_0DA@PDIMAGJA@Inappropriate?5argument?5value?5?$CIof@ ; `string'
PUBLIC	??_C@_0L@POAMGPDC@ValueError?$AA@		; `string'
PUBLIC	??_C@_0BH@NGNBEPFN@Mapping?5key?5not?5found?4?$AA@ ; `string'
PUBLIC	??_C@_08OHPJJKKC@KeyError?$AA@			; `string'
PUBLIC	??_C@_0BN@MPIMOMNM@Sequence?5index?5out?5of?5range?4?$AA@ ; `string'
PUBLIC	??_C@_0L@PDGDGKIP@IndexError?$AA@		; `string'
PUBLIC	??_C@_0BO@OONBGEOC@Base?5class?5for?5lookup?5errors?4?$AA@ ; `string'
PUBLIC	??_C@_0M@MHFOHJEK@LookupError?$AA@		; `string'
PUBLIC	??_C@_0CF@GKBIKMOP@Improper?5mixture?5of?5spaces?5and?5t@ ; `string'
PUBLIC	??_C@_08HFBDNBMM@TabError?$AA@			; `string'
PUBLIC	??_C@_0BG@EODDEBDJ@Improper?5indentation?4?$AA@	; `string'
PUBLIC	??_C@_0BB@PAPDAKC@IndentationError?$AA@		; `string'
PUBLIC	??_C@_0BA@GFAEMOKB@Invalid?5syntax?4?$AA@	; `string'
PUBLIC	??_C@_0M@KIDEJCGH@SyntaxError?$AA@		; `string'
PUBLIC	??_C@_0BO@GMLCEMFL@exception?5print_file_and_line?$AA@ ; `string'
PUBLIC	??_C@_0BE@DKBHEDDB@print_file_and_line?$AA@	; `string'
PUBLIC	??_C@_0P@LGNOADNI@exception?5text?$AA@		; `string'
PUBLIC	??_C@_04CIMGMMMG@text?$AA@			; `string'
PUBLIC	??_C@_0BB@HEONLGIK@exception?5offset?$AA@	; `string'
PUBLIC	??_C@_06KLHHMIGM@offset?$AA@			; `string'
PUBLIC	??_C@_0BB@FEDCHJDL@exception?5lineno?$AA@	; `string'
PUBLIC	??_C@_06ILKIAHNN@lineno?$AA@			; `string'
PUBLIC	??_C@_0O@BHKGJJFD@exception?5msg?$AA@		; `string'
PUBLIC	??_C@_0BF@KBBDNFNN@Attribute?5not?5found?4?$AA@	; `string'
PUBLIC	??_C@_0P@OMMLLIOG@AttributeError?$AA@		; `string'
PUBLIC	??_C@_0DA@JDNAGEED@Local?5name?5referenced?5but?5not?5bo@ ; `string'
PUBLIC	??_C@_0BC@EJBPJIJA@UnboundLocalError?$AA@	; `string'
PUBLIC	??_C@_0BJ@CKADCLHL@Name?5not?5found?5globally?4?$AA@ ; `string'
PUBLIC	??_C@_09GENDEFL@NameError?$AA@			; `string'
PUBLIC	??_C@_0DA@PMFCDFAJ@Method?5or?5function?5hasn?8t?5been?5i@ ; `string'
PUBLIC	??_C@_0BE@NIHEKDAM@NotImplementedError?$AA@	; `string'
PUBLIC	??_C@_0BM@GMHHIONK@Unspecified?5run?9time?5error?4?$AA@ ; `string'
PUBLIC	??_C@_0N@PJCHGDKG@RuntimeError?$AA@		; `string'
PUBLIC	??_C@_0BJ@DBOMGJHD@Read?5beyond?5end?5of?5file?4?$AA@ ; `string'
PUBLIC	??_C@_08BJKGOKBF@EOFError?$AA@			; `string'
PUBLIC	??_C@_0BB@KIFGEFOB@Timeout?5expired?4?$AA@	; `string'
PUBLIC	??_C@_0N@BMLDFELP@TimeoutError?$AA@		; `string'
PUBLIC	??_C@_0BD@CDPGLGNA@Process?5not?5found?4?$AA@	; `string'
PUBLIC	??_C@_0BD@LBBCHOLB@ProcessLookupError?$AA@	; `string'
PUBLIC	??_C@_0BI@ICBFMNFH@Not?5enough?5permissions?4?$AA@ ; `string'
PUBLIC	??_C@_0BA@EGIOHDMA@PermissionError?$AA@		; `string'
PUBLIC	??_C@_0BH@DPFOMFFN@Interrupted?5by?5signal?4?$AA@ ; `string'
PUBLIC	??_C@_0BB@PFBGOELP@InterruptedError?$AA@	; `string'
PUBLIC	??_C@_0CF@MHLAOJGN@Operation?5only?5works?5on?5director@ ; `string'
PUBLIC	??_C@_0BD@BDDBNNNE@NotADirectoryError?$AA@	; `string'
PUBLIC	??_C@_0CH@PKAKIMKI@Operation?5doesn?8t?5work?5on?5direct@ ; `string'
PUBLIC	??_C@_0BC@EPPFJLG@IsADirectoryError?$AA@	; `string'
PUBLIC	??_C@_0BA@DOIDIGMK@File?5not?5found?4?$AA@	; `string'
PUBLIC	??_C@_0BC@IPPJKII@FileNotFoundError?$AA@	; `string'
PUBLIC	??_C@_0BF@PBMIGFNE@File?5already?5exists?4?$AA@	; `string'
PUBLIC	??_C@_0BA@FBEHCPFP@FileExistsError?$AA@		; `string'
PUBLIC	??_C@_0BC@PIBEPGML@Connection?5reset?4?$AA@	; `string'
PUBLIC	??_C@_0BF@KPCMAHCN@ConnectionResetError?$AA@	; `string'
PUBLIC	??_C@_0BE@PAAMHJLG@Connection?5refused?4?$AA@	; `string'
PUBLIC	??_C@_0BH@NFNMCF@ConnectionRefusedError?$AA@	; `string'
PUBLIC	??_C@_0BE@FFDJKHGA@Connection?5aborted?4?$AA@	; `string'
PUBLIC	??_C@_0BH@IAHALHIL@ConnectionAbortedError?$AA@	; `string'
PUBLIC	??_C@_0N@KCAMOIPH@Broken?5pipe?4?$AA@		; `string'
PUBLIC	??_C@_0BA@OKFJGAGB@BrokenPipeError?$AA@		; `string'
PUBLIC	??_C@_0BF@IOACMFNO@Child?5process?5error?4?$AA@	; `string'
PUBLIC	??_C@_0BC@LJAFFAPL@ChildProcessError?$AA@	; `string'
PUBLIC	??_C@_0BC@BCOONDMO@Connection?5error?4?$AA@	; `string'
PUBLIC	??_C@_0BA@FGMDNHAG@ConnectionError?$AA@		; `string'
PUBLIC	??_C@_0BL@LJLKLDJH@I?1O?5operation?5would?5block?4?$AA@ ; `string'
PUBLIC	??_C@_0BA@JGPGLFDG@BlockingIOError?$AA@		; `string'
PUBLIC	??_C@_0CD@BBOAKDDD@Base?5class?5for?5I?1O?5related?5error@ ; `string'
PUBLIC	??_C@_07DLGONEPD@OSError?$AA@			; `string'
PUBLIC	??_C@_0BD@MJNIBNKM@characters_written?$AA@	; `string'
PUBLIC	??_C@_0BF@EGKICGDH@Win32?5exception?5code?$AA@	; `string'
PUBLIC	??_C@_08NNIGBLFN@winerror?$AA@			; `string'
PUBLIC	??_C@_0BD@KPIAFJIH@exception?5filename?$AA@	; `string'
PUBLIC	??_C@_08BABJIOEM@filename?$AA@			; `string'
PUBLIC	??_C@_0BD@HIDDEPNK@exception?5strerror?$AA@	; `string'
PUBLIC	??_C@_08MHKKJIBB@strerror?$AA@			; `string'
PUBLIC	??_C@_0BF@CJFJGJAA@POSIX?5exception?5code?$AA@	; `string'
PUBLIC	??_C@_05PEAMIKEP@errno?$AA@			; `string'
PUBLIC	??_C@_0DI@HEBCIICE@Import?5can?8t?5find?5module?0?5or?5can@ ; `string'
PUBLIC	??_C@_0M@HCFCBBPI@ImportError?$AA@		; `string'
PUBLIC	??_C@_0M@EODBJGBC@module?5path?$AA@		; `string'
PUBLIC	??_C@_04LNEJFJGI@path?$AA@			; `string'
PUBLIC	??_C@_0M@DHLIFJED@module?5name?$AA@		; `string'
PUBLIC	??_C@_04MEMAJGDJ@name?$AA@			; `string'
PUBLIC	??_C@_0BC@KEEHBMNM@exception?5message?$AA@	; `string'
PUBLIC	??_C@_03GLPMCEFE@msg?$AA@			; `string'
PUBLIC	??_C@_0BN@MANALLKN@Program?5interrupted?5by?5user?4?$AA@ ; `string'
PUBLIC	??_C@_0BC@BACBBCED@KeyboardInterrupt?$AA@	; `string'
PUBLIC	??_C@_0CG@KDLBFKIC@Request?5to?5exit?5from?5the?5interpr@ ; `string'
PUBLIC	??_C@_0L@MBGFFHMP@SystemExit?$AA@		; `string'
PUBLIC	??_C@_0P@ENEGNBCK@exception?5code?$AA@		; `string'
PUBLIC	??_C@_04NDFOBODE@code?$AA@			; `string'
PUBLIC	??_C@_0BP@OCIPBJOC@Request?5that?5a?5generator?5exit?4?$AA@ ; `string'
PUBLIC	??_C@_0O@GBGLOLNB@GeneratorExit?$AA@		; `string'
PUBLIC	??_C@_0CJ@IGGDMNCD@Signal?5the?5end?5from?5iterator?4__n@ ; `string'
PUBLIC	??_C@_0O@LGLKOGMF@StopIteration?$AA@		; `string'
PUBLIC	??_C@_0BH@CEJBINIP@generator?5return?5value?$AA@ ; `string'
PUBLIC	??_C@_05MFEJDJP@value?$AA@			; `string'
PUBLIC	??_C@_0BN@GFNFLJFF@Inappropriate?5argument?5type?4?$AA@ ; `string'
PUBLIC	??_C@_09MGGHOBOJ@TypeError?$AA@			; `string'
PUBLIC	??_C@_0CP@EGCLOIMN@Common?5base?5class?5for?5all?5non?9ex@ ; `string'
PUBLIC	??_C@_09FBNMMHMJ@Exception?$AA@			; `string'
PUBLIC	??_C@_0CF@KACNFHAK@Common?5base?5class?5for?5all?5except@ ; `string'
PUBLIC	??_C@_0O@GCAIIPIB@BaseException?$AA@		; `string'
PUBLIC	??_C@_0BF@PLNDEDFH@__suppress_context__?$AA@	; `string'
PUBLIC	??_C@_0BA@IMECEBLM@exception?5cause?$AA@	; `string'
PUBLIC	??_C@_09DJICANKI@__cause__?$AA@			; `string'
PUBLIC	??_C@_0BC@NDBEMMPP@exception?5context?$AA@	; `string'
PUBLIC	??_C@_0M@GKMKEIIC@__context__?$AA@		; `string'
PUBLIC	??_C@_0O@IEBEOCOE@__traceback__?$AA@		; `string'
PUBLIC	??_C@_04BFDDMJJI@args?$AA@			; `string'
PUBLIC	??_C@_08IBFKALI@__dict__?$AA@			; `string'
PUBLIC	??_C@_0P@FLIOKJJK@with_traceback?$AA@		; `string'
PUBLIC	??_C@_0N@MOOGCAMH@__setstate__?$AA@		; `string'
PUBLIC	??_C@_0L@NNMACJIG@__reduce__?$AA@		; `string'
PUBLIC	PyExc_EnvironmentError
PUBLIC	PyExc_IOError
PUBLIC	PyExc_WindowsError
PUBLIC	PyExc_BaseException
PUBLIC	PyExc_Exception
PUBLIC	PyExc_TypeError
PUBLIC	PyExc_StopIteration
PUBLIC	PyExc_GeneratorExit
PUBLIC	PyExc_SystemExit
PUBLIC	PyExc_KeyboardInterrupt
PUBLIC	PyExc_ImportError
PUBLIC	PyExc_OSError
PUBLIC	PyExc_BlockingIOError
PUBLIC	PyExc_ConnectionError
PUBLIC	PyExc_ChildProcessError
PUBLIC	PyExc_BrokenPipeError
PUBLIC	PyExc_ConnectionAbortedError
PUBLIC	PyExc_ConnectionRefusedError
PUBLIC	PyExc_ConnectionResetError
PUBLIC	PyExc_FileExistsError
PUBLIC	PyExc_FileNotFoundError
PUBLIC	PyExc_IsADirectoryError
PUBLIC	PyExc_NotADirectoryError
PUBLIC	PyExc_InterruptedError
PUBLIC	PyExc_PermissionError
PUBLIC	PyExc_ProcessLookupError
PUBLIC	PyExc_TimeoutError
PUBLIC	PyExc_EOFError
PUBLIC	PyExc_RuntimeError
PUBLIC	PyExc_NotImplementedError
PUBLIC	PyExc_NameError
PUBLIC	PyExc_UnboundLocalError
PUBLIC	PyExc_AttributeError
PUBLIC	PyExc_SyntaxError
PUBLIC	PyExc_IndentationError
PUBLIC	PyExc_TabError
PUBLIC	PyExc_LookupError
PUBLIC	PyExc_IndexError
PUBLIC	PyExc_KeyError
PUBLIC	PyExc_ValueError
PUBLIC	PyExc_UnicodeError
PUBLIC	PyExc_UnicodeEncodeError
PUBLIC	PyExc_UnicodeDecodeError
PUBLIC	PyExc_UnicodeTranslateError
PUBLIC	PyExc_AssertionError
PUBLIC	PyExc_ArithmeticError
PUBLIC	PyExc_FloatingPointError
PUBLIC	PyExc_OverflowError
PUBLIC	PyExc_ZeroDivisionError
PUBLIC	PyExc_SystemError
PUBLIC	PyExc_ReferenceError
PUBLIC	PyExc_ParallelError
PUBLIC	PyExc_ParallelThreadInitializationError
PUBLIC	PyExc_ParallelContextInitializationError
PUBLIC	PyExc_ParallelContextError
PUBLIC	PyExc_ParallelImportError
PUBLIC	PyExc_ParallelGlobalVariableAccessError
PUBLIC	PyExc_ParallelNonlocalVariableAccessError
PUBLIC	PyExc_AsyncError
PUBLIC	PyExc_AsyncRunCalledWithoutEventsError
PUBLIC	PyExc_AsyncRunNoActiveEventsError
PUBLIC	PyExc_MemoryError
PUBLIC	PyExc_BufferError
PUBLIC	PyExc_Warning
PUBLIC	PyExc_UserWarning
PUBLIC	PyExc_DeprecationWarning
PUBLIC	PyExc_PendingDeprecationWarning
PUBLIC	PyExc_SyntaxWarning
PUBLIC	PyExc_RuntimeWarning
PUBLIC	PyExc_FutureWarning
PUBLIC	PyExc_ImportWarning
PUBLIC	PyExc_UnicodeWarning
PUBLIC	PyExc_BytesWarning
PUBLIC	PyExc_ResourceWarning
PUBLIC	PyExc_RecursionErrorInst
EXTRN	PyObject_GenericSetAttr:PROC
EXTRN	PyObject_GenericGetAttr:PROC
EXTRN	PyObject_GenericSetDict:PROC
EXTRN	PyObject_GenericGetDict:PROC
_BSS	SEGMENT
PyExc_EnvironmentError DQ 01H DUP (?)
PyExc_IOError DQ 01H DUP (?)
PyExc_WindowsError DQ 01H DUP (?)
errnomap DQ	01H DUP (?)
ImportError_methods DB 020H DUP (?)
memerrors_freelist DQ 01H DUP (?)
memerrors_numfree DD 01H DUP (?)
	ALIGN	8

PyExc_RecursionErrorInst DQ 01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0CO@HPEHEBLP@Base?5class?5for?5warnings?5about?5re@
CONST	SEGMENT
??_C@_0CO@HPEHEBLP@Base?5class?5for?5warnings?5about?5re@ DB 'Base class '
	DB	'for warnings about resource usage.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JIBLCGNF@ResourceWarning?$AA@
CONST	SEGMENT
??_C@_0BA@JIBLCGNF@ResourceWarning?$AA@ DB 'ResourceWarning', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0HM@KBKMDMHM@Base?5class?5for?5warnings?5about?5by@
CONST	SEGMENT
??_C@_0HM@KBKMDMHM@Base?5class?5for?5warnings?5about?5by@ DB 'Base class '
	DB	'for warnings about bytes and buffer related problems, mostly', 0aH
	DB	'related to conversion from str or comparing to str.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BILDEMAG@BytesWarning?$AA@
CONST	SEGMENT
??_C@_0N@BILDEMAG@BytesWarning?$AA@ DB 'BytesWarning', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FP@BEMCLFNP@Base?5class?5for?5warnings?5about?5Un@
CONST	SEGMENT
??_C@_0FP@BEMCLFNP@Base?5class?5for?5warnings?5about?5Un@ DB 'Base class '
	DB	'for warnings about Unicode related problems, mostly', 0aH, 'r'
	DB	'elated to conversion problems.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DFBLGLPC@UnicodeWarning?$AA@
CONST	SEGMENT
??_C@_0P@DFBLGLPC@UnicodeWarning?$AA@ DB 'UnicodeWarning', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@CFAJPLKK@Base?5class?5for?5warnings?5about?5pr@
CONST	SEGMENT
??_C@_0EC@CFAJPLKK@Base?5class?5for?5warnings?5about?5pr@ DB 'Base class '
	DB	'for warnings about probable mistakes in module imports', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MPAGLHE@ImportWarning?$AA@
CONST	SEGMENT
??_C@_0O@MPAGLHE@ImportWarning?$AA@ DB 'ImportWarning', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FG@MEHAINOE@Base?5class?5for?5warnings?5about?5co@
CONST	SEGMENT
??_C@_0FG@MEHAINOE@Base?5class?5for?5warnings?5about?5co@ DB 'Base class '
	DB	'for warnings about constructs that will change semantically', 0aH
	DB	'in the future.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EAIEFLDH@FutureWarning?$AA@
CONST	SEGMENT
??_C@_0O@EAIEFLDH@FutureWarning?$AA@ DB 'FutureWarning', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@FBPEMJEN@Base?5class?5for?5warnings?5about?5du@
CONST	SEGMENT
??_C@_0DI@FBPEMJEN@Base?5class?5for?5warnings?5about?5du@ DB 'Base class '
	DB	'for warnings about dubious runtime behavior.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JGMDIAML@RuntimeWarning?$AA@
CONST	SEGMENT
??_C@_0P@JGMDIAML@RuntimeWarning?$AA@ DB 'RuntimeWarning', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@JDKAKEOK@Base?5class?5for?5warnings?5about?5du@
CONST	SEGMENT
??_C@_0CO@JDKAKEOK@Base?5class?5for?5warnings?5about?5du@ DB 'Base class '
	DB	'for warnings about dubious syntax.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IOJIPFFN@SyntaxWarning?$AA@
CONST	SEGMENT
??_C@_0O@IOJIPFFN@SyntaxWarning?$AA@ DB 'SyntaxWarning', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EP@NOKGBDGL@Base?5class?5for?5warnings?5about?5fe@
CONST	SEGMENT
??_C@_0EP@NOKGBDGL@Base?5class?5for?5warnings?5about?5fe@ DB 'Base class '
	DB	'for warnings about features which will be deprecated', 0aH, 'i'
	DB	'n the future.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@JDBEDOM@PendingDeprecationWarning?$AA@
CONST	SEGMENT
??_C@_0BK@JDBEDOM@PendingDeprecationWarning?$AA@ DB 'PendingDeprecationWa'
	DB	'rning', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@DDNMECFD@Base?5class?5for?5warnings?5about?5de@
CONST	SEGMENT
??_C@_0DD@DDNMECFD@Base?5class?5for?5warnings?5about?5de@ DB 'Base class '
	DB	'for warnings about deprecated features.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GIDNBIPD@DeprecationWarning?$AA@
CONST	SEGMENT
??_C@_0BD@GIDNBIPD@DeprecationWarning?$AA@ DB 'DeprecationWarning', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@NAMNFIGL@Base?5class?5for?5warnings?5generate@
CONST	SEGMENT
??_C@_0DA@NAMNFIGL@Base?5class?5for?5warnings?5generate@ DB 'Base class f'
	DB	'or warnings generated by user code.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JCLIHPLC@UserWarning?$AA@
CONST	SEGMENT
??_C@_0M@JCLIHPLC@UserWarning?$AA@ DB 'UserWarning', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@IHAAEPNP@Base?5class?5for?5warning?5categorie@
CONST	SEGMENT
??_C@_0CD@IHAAEPNP@Base?5class?5for?5warning?5categorie@ DB 'Base class f'
	DB	'or warning categories.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KGMMFLDN@Warning?$AA@
CONST	SEGMENT
??_C@_07KGMMFLDN@Warning?$AA@ DB 'Warning', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GFOKIHDB@Buffer?5error?4?$AA@
CONST	SEGMENT
??_C@_0O@GFOKIHDB@Buffer?5error?4?$AA@ DB 'Buffer error.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IEEINKIE@BufferError?$AA@
CONST	SEGMENT
??_C@_0M@IEEINKIE@BufferError?$AA@ DB 'BufferError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@ILLCNIIE@Out?5of?5memory?4?$AA@
CONST	SEGMENT
??_C@_0P@ILLCNIIE@Out?5of?5memory?4?$AA@ DB 'Out of memory.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HIBAKAFK@MemoryError?$AA@
CONST	SEGMENT
??_C@_0M@HIBAKAFK@MemoryError?$AA@ DB 'MemoryError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@LICMCCGN@Async?5run?$CI?$CJ?5detected?5that?5there?5@
CONST	SEGMENT
??_C@_0DG@LICMCCGN@Async?5run?$CI?$CJ?5detected?5that?5there?5@ DB 'Async'
	DB	' run() detected that there are no active events.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GCGOLDFN@AsyncRunNoActiveEventsError?$AA@
CONST	SEGMENT
??_C@_0BM@GCGOLDFN@AsyncRunNoActiveEventsError?$AA@ DB 'AsyncRunNoActiveE'
	DB	'ventsError', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@LDJJHMMC@Async?5run?$CI?$CJ?5called?5without?5any?5e@
CONST	SEGMENT
??_C@_0CH@LDJJHMMC@Async?5run?$CI?$CJ?5called?5without?5any?5e@ DB 'Async'
	DB	' run() called without any events.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@DHCJJACB@AsyncRunCalledWithoutEventsError@
CONST	SEGMENT
??_C@_0CB@DHCJJACB@AsyncRunCalledWithoutEventsError@ DB 'AsyncRunCalledWi'
	DB	'thoutEventsError', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@KHNEADKG@Base?5class?5for?5async?5errors?4?$AA@
CONST	SEGMENT
??_C@_0BN@KHNEADKG@Base?5class?5for?5async?5errors?4?$AA@ DB 'Base class '
	DB	'for async errors.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@POMMPANG@AsyncError?$AA@
CONST	SEGMENT
??_C@_0L@POMMPANG@AsyncError?$AA@ DB 'AsyncError', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EN@KNPFPBJJ@Implicit?5access?5to?5nonlocal?5vari@
CONST	SEGMENT
??_C@_0EN@KNPFPBJJ@Implicit?5access?5to?5nonlocal?5vari@ DB 'Implicit acc'
	DB	'ess to nonlocal variables not permitted within parallel conte'
	DB	'xt.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@ONNHACJB@ParallelNonlocalVariableAccessEr@
CONST	SEGMENT
??_C@_0CE@ONNHACJB@ParallelNonlocalVariableAccessEr@ DB 'ParallelNonlocal'
	DB	'VariableAccessError', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@PLHLDPCD@Implicit?5access?5to?5global?5variab@
CONST	SEGMENT
??_C@_0EL@PLHLDPCD@Implicit?5access?5to?5global?5variab@ DB 'Implicit acc'
	DB	'ess to global variables not permitted within parallel context'
	DB	'.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@HPLHCPKN@ParallelGlobalVariableAccessErro@
CONST	SEGMENT
??_C@_0CC@HPLHCPKN@ParallelGlobalVariableAccessErro@ DB 'ParallelGlobalVa'
	DB	'riableAccessError', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@JGEGKCHH@Import?5not?5permitted?5from?5within@
CONST	SEGMENT
??_C@_0DD@JGEGKCHH@Import?5not?5permitted?5from?5within@ DB 'Import not p'
	DB	'ermitted from within parallel context.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FCGCAOGC@ParallelImportError?$AA@
CONST	SEGMENT
??_C@_0BE@FCGCAOGC@ParallelImportError?$AA@ DB 'ParallelImportError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@NPBGBDKP@Operation?5not?5permitted?5from?5wit@
CONST	SEGMENT
??_C@_0DG@NPBGBDKP@Operation?5not?5permitted?5from?5wit@ DB 'Operation no'
	DB	't permitted from within parallel context.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HFKFAIAA@ParallelContextError?$AA@
CONST	SEGMENT
??_C@_0BF@HFKFAIAA@ParallelContextError?$AA@ DB 'ParallelContextError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@INBJNFAJ@Failed?5to?5initialize?5parallel?5co@
CONST	SEGMENT
??_C@_0DE@INBJNFAJ@Failed?5to?5initialize?5parallel?5co@ DB 'Failed to in'
	DB	'itialize parallel context for callback.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@MNHCHPAI@ParallelContextInitializationErr@
CONST	SEGMENT
??_C@_0CD@MNHCHPAI@ParallelContextInitializationErr@ DB 'ParallelContextI'
	DB	'nitializationError', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@IKBKELBP@Failed?5to?5initialize?5new?5paralle@
CONST	SEGMENT
??_C@_0CK@IKBKELBP@Failed?5to?5initialize?5new?5paralle@ DB 'Failed to in'
	DB	'itialize new parallel thread.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@IAEHFMP@ParallelThreadInitializationErro@
CONST	SEGMENT
??_C@_0CC@IAEHFMP@ParallelThreadInitializationErro@ DB 'ParallelThreadIni'
	DB	'tializationError', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@NKCFMBPJ@Base?5class?5for?5parallel?5errors?4?$AA@
CONST	SEGMENT
??_C@_0CA@NKCFMBPJ@Base?5class?5for?5parallel?5errors?4?$AA@ DB 'Base cla'
	DB	'ss for parallel errors.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GFKDNBOD@ParallelError?$AA@
CONST	SEGMENT
??_C@_0O@GFKDNBOD@ParallelError?$AA@ DB 'ParallelError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@BODDBCMG@Weak?5ref?5proxy?5used?5after?5refere@
CONST	SEGMENT
??_C@_0CO@BODDBCMG@Weak?5ref?5proxy?5used?5after?5refere@ DB 'Weak ref pr'
	DB	'oxy used after referent went away.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NJFCDLEA@ReferenceError?$AA@
CONST	SEGMENT
??_C@_0P@NJFCDLEA@ReferenceError?$AA@ DB 'ReferenceError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0LA@PADCOJHH@Internal?5error?5in?5the?5Python?5int@
CONST	SEGMENT
??_C@_0LA@PADCOJHH@Internal?5error?5in?5the?5Python?5int@ DB 'Internal er'
	DB	'ror in the Python interpreter.', 0aH, 0aH, 'Please report thi'
	DB	's to the Python maintainer, along with the traceback,', 0aH, 't'
	DB	'he Python version, and the hardware/OS platform and version.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MLMICFKM@SystemError?$AA@
CONST	SEGMENT
??_C@_0M@MLMICFKM@SystemError?$AA@ DB 'SystemError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@HNAOGMFP@Second?5argument?5to?5a?5division?5or@
CONST	SEGMENT
??_C@_0DM@HNAOGMFP@Second?5argument?5to?5a?5division?5or@ DB 'Second argu'
	DB	'ment to a division or modulo operation was zero.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JKCGANPD@ZeroDivisionError?$AA@
CONST	SEGMENT
??_C@_0BC@JKCGANPD@ZeroDivisionError?$AA@ DB 'ZeroDivisionError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@DNDJACFH@Result?5too?5large?5to?5be?5represent@
CONST	SEGMENT
??_C@_0CE@DNDJACFH@Result?5too?5large?5to?5be?5represent@ DB 'Result too '
	DB	'large to be represented.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DAFOBLHH@OverflowError?$AA@
CONST	SEGMENT
??_C@_0O@DAFOBLHH@OverflowError?$AA@ DB 'OverflowError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@CNKBBAIB@Floating?5point?5operation?5failed?4@
CONST	SEGMENT
??_C@_0CB@CNKBBAIB@Floating?5point?5operation?5failed?4@ DB 'Floating poi'
	DB	'nt operation failed.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BMMMKAGK@FloatingPointError?$AA@
CONST	SEGMENT
??_C@_0BD@BMMMKAGK@FloatingPointError?$AA@ DB 'FloatingPointError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@PPOJNHHK@Base?5class?5for?5arithmetic?5errors@
CONST	SEGMENT
??_C@_0CC@PPOJNHHK@Base?5class?5for?5arithmetic?5errors@ DB 'Base class f'
	DB	'or arithmetic errors.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HMBIHIEF@ArithmeticError?$AA@
CONST	SEGMENT
??_C@_0BA@HMBIHIEF@ArithmeticError?$AA@ DB 'ArithmeticError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DHBLDLOI@Assertion?5failed?4?$AA@
CONST	SEGMENT
??_C@_0BC@DHBLDLOI@Assertion?5failed?4?$AA@ DB 'Assertion failed.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@ECLAGKMP@AssertionError?$AA@
CONST	SEGMENT
??_C@_0P@ECLAGKMP@AssertionError?$AA@ DB 'AssertionError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@BOAAJAHA@Unicode?5translation?5error?4?$AA@
CONST	SEGMENT
??_C@_0BL@BOAAJAHA@Unicode?5translation?5error?4?$AA@ DB 'Unicode transla'
	DB	'tion error.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MKGFNNGN@UnicodeTranslateError?$AA@
CONST	SEGMENT
??_C@_0BG@MKGFNNGN@UnicodeTranslateError?$AA@ DB 'UnicodeTranslateError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GHLGAONJ@Unicode?5decoding?5error?4?$AA@
CONST	SEGMENT
??_C@_0BI@GHLGAONJ@Unicode?5decoding?5error?4?$AA@ DB 'Unicode decoding e'
	DB	'rror.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EMOAOOII@UnicodeDecodeError?$AA@
CONST	SEGMENT
??_C@_0BD@EMOAOOII@UnicodeDecodeError?$AA@ DB 'UnicodeDecodeError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@BHCKDJLG@Unicode?5encoding?5error?4?$AA@
CONST	SEGMENT
??_C@_0BI@BHCKDJLG@Unicode?5encoding?5error?4?$AA@ DB 'Unicode encoding e'
	DB	'rror.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PEGECFKD@UnicodeEncodeError?$AA@
CONST	SEGMENT
??_C@_0BD@PEGECFKD@UnicodeEncodeError?$AA@ DB 'UnicodeEncodeError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PLOKJKDH@exception?5reason?$AA@
CONST	SEGMENT
??_C@_0BB@PLOKJKDH@exception?5reason?$AA@ DB 'exception reason', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06CEHAOENB@reason?$AA@
CONST	SEGMENT
??_C@_06CEHAOENB@reason?$AA@ DB 'reason', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@ONMBNCFM@exception?5end?$AA@
CONST	SEGMENT
??_C@_0O@ONMBNCFM@exception?5end?$AA@ DB 'exception end', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03JBJLGPFL@end?$AA@
CONST	SEGMENT
??_C@_03JBJLGPFL@end?$AA@ DB 'end', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KKPENCDK@exception?5start?$AA@
CONST	SEGMENT
??_C@_0BA@KKPENCDK@exception?5start?$AA@ DB 'exception start', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05FAGFPHJG@start?$AA@
CONST	SEGMENT
??_C@_05FAGFPHJG@start?$AA@ DB 'start', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FLHDGNGM@exception?5object?$AA@
CONST	SEGMENT
??_C@_0BB@FLHDGNGM@exception?5object?$AA@ DB 'exception object', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06IEOJBDIK@object?$AA@
CONST	SEGMENT
??_C@_06IEOJBDIK@object?$AA@ DB 'object', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HEGPNDEB@exception?5encoding?$AA@
CONST	SEGMENT
??_C@_0BD@HEGPNDEB@exception?5encoding?$AA@ DB 'exception encoding', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08MLPGAEIK@encoding?$AA@
CONST	SEGMENT
??_C@_08MLPGAEIK@encoding?$AA@ DB 'encoding', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LFJEPFCJ@Unicode?5related?5error?4?$AA@
CONST	SEGMENT
??_C@_0BH@LFJEPFCJ@Unicode?5related?5error?4?$AA@ DB 'Unicode related err'
	DB	'or.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HJMCMBLP@UnicodeError?$AA@
CONST	SEGMENT
??_C@_0N@HJMCMBLP@UnicodeError?$AA@ DB 'UnicodeError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@PDIMAGJA@Inappropriate?5argument?5value?5?$CIof@
CONST	SEGMENT
??_C@_0DA@PDIMAGJA@Inappropriate?5argument?5value?5?$CIof@ DB 'Inappropri'
	DB	'ate argument value (of correct type).', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@POAMGPDC@ValueError?$AA@
CONST	SEGMENT
??_C@_0L@POAMGPDC@ValueError?$AA@ DB 'ValueError', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NGNBEPFN@Mapping?5key?5not?5found?4?$AA@
CONST	SEGMENT
??_C@_0BH@NGNBEPFN@Mapping?5key?5not?5found?4?$AA@ DB 'Mapping key not fo'
	DB	'und.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_08OHPJJKKC@KeyError?$AA@
CONST	SEGMENT
??_C@_08OHPJJKKC@KeyError?$AA@ DB 'KeyError', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@MPIMOMNM@Sequence?5index?5out?5of?5range?4?$AA@
CONST	SEGMENT
??_C@_0BN@MPIMOMNM@Sequence?5index?5out?5of?5range?4?$AA@ DB 'Sequence in'
	DB	'dex out of range.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PDGDGKIP@IndexError?$AA@
CONST	SEGMENT
??_C@_0L@PDGDGKIP@IndexError?$AA@ DB 'IndexError', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@OONBGEOC@Base?5class?5for?5lookup?5errors?4?$AA@
CONST	SEGMENT
??_C@_0BO@OONBGEOC@Base?5class?5for?5lookup?5errors?4?$AA@ DB 'Base class'
	DB	' for lookup errors.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MHFOHJEK@LookupError?$AA@
CONST	SEGMENT
??_C@_0M@MHFOHJEK@LookupError?$AA@ DB 'LookupError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@GKBIKMOP@Improper?5mixture?5of?5spaces?5and?5t@
CONST	SEGMENT
??_C@_0CF@GKBIKMOP@Improper?5mixture?5of?5spaces?5and?5t@ DB 'Improper mi'
	DB	'xture of spaces and tabs.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08HFBDNBMM@TabError?$AA@
CONST	SEGMENT
??_C@_08HFBDNBMM@TabError?$AA@ DB 'TabError', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EODDEBDJ@Improper?5indentation?4?$AA@
CONST	SEGMENT
??_C@_0BG@EODDEBDJ@Improper?5indentation?4?$AA@ DB 'Improper indentation.'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PAPDAKC@IndentationError?$AA@
CONST	SEGMENT
??_C@_0BB@PAPDAKC@IndentationError?$AA@ DB 'IndentationError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GFAEMOKB@Invalid?5syntax?4?$AA@
CONST	SEGMENT
??_C@_0BA@GFAEMOKB@Invalid?5syntax?4?$AA@ DB 'Invalid syntax.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KIDEJCGH@SyntaxError?$AA@
CONST	SEGMENT
??_C@_0M@KIDEJCGH@SyntaxError?$AA@ DB 'SyntaxError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@GMLCEMFL@exception?5print_file_and_line?$AA@
CONST	SEGMENT
??_C@_0BO@GMLCEMFL@exception?5print_file_and_line?$AA@ DB 'exception prin'
	DB	't_file_and_line', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DKBHEDDB@print_file_and_line?$AA@
CONST	SEGMENT
??_C@_0BE@DKBHEDDB@print_file_and_line?$AA@ DB 'print_file_and_line', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LGNOADNI@exception?5text?$AA@
CONST	SEGMENT
??_C@_0P@LGNOADNI@exception?5text?$AA@ DB 'exception text', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04CIMGMMMG@text?$AA@
CONST	SEGMENT
??_C@_04CIMGMMMG@text?$AA@ DB 'text', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HEONLGIK@exception?5offset?$AA@
CONST	SEGMENT
??_C@_0BB@HEONLGIK@exception?5offset?$AA@ DB 'exception offset', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06KLHHMIGM@offset?$AA@
CONST	SEGMENT
??_C@_06KLHHMIGM@offset?$AA@ DB 'offset', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FEDCHJDL@exception?5lineno?$AA@
CONST	SEGMENT
??_C@_0BB@FEDCHJDL@exception?5lineno?$AA@ DB 'exception lineno', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06ILKIAHNN@lineno?$AA@
CONST	SEGMENT
??_C@_06ILKIAHNN@lineno?$AA@ DB 'lineno', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BHKGJJFD@exception?5msg?$AA@
CONST	SEGMENT
??_C@_0O@BHKGJJFD@exception?5msg?$AA@ DB 'exception msg', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KBBDNFNN@Attribute?5not?5found?4?$AA@
CONST	SEGMENT
??_C@_0BF@KBBDNFNN@Attribute?5not?5found?4?$AA@ DB 'Attribute not found.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OMMLLIOG@AttributeError?$AA@
CONST	SEGMENT
??_C@_0P@OMMLLIOG@AttributeError?$AA@ DB 'AttributeError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@JDNAGEED@Local?5name?5referenced?5but?5not?5bo@
CONST	SEGMENT
??_C@_0DA@JDNAGEED@Local?5name?5referenced?5but?5not?5bo@ DB 'Local name '
	DB	'referenced but not bound to a value.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EJBPJIJA@UnboundLocalError?$AA@
CONST	SEGMENT
??_C@_0BC@EJBPJIJA@UnboundLocalError?$AA@ DB 'UnboundLocalError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CKADCLHL@Name?5not?5found?5globally?4?$AA@
CONST	SEGMENT
??_C@_0BJ@CKADCLHL@Name?5not?5found?5globally?4?$AA@ DB 'Name not found g'
	DB	'lobally.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_09GENDEFL@NameError?$AA@
CONST	SEGMENT
??_C@_09GENDEFL@NameError?$AA@ DB 'NameError', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@PMFCDFAJ@Method?5or?5function?5hasn?8t?5been?5i@
CONST	SEGMENT
??_C@_0DA@PMFCDFAJ@Method?5or?5function?5hasn?8t?5been?5i@ DB 'Method or '
	DB	'function hasn''t been implemented yet.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NIHEKDAM@NotImplementedError?$AA@
CONST	SEGMENT
??_C@_0BE@NIHEKDAM@NotImplementedError?$AA@ DB 'NotImplementedError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GMHHIONK@Unspecified?5run?9time?5error?4?$AA@
CONST	SEGMENT
??_C@_0BM@GMHHIONK@Unspecified?5run?9time?5error?4?$AA@ DB 'Unspecified r'
	DB	'un-time error.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PJCHGDKG@RuntimeError?$AA@
CONST	SEGMENT
??_C@_0N@PJCHGDKG@RuntimeError?$AA@ DB 'RuntimeError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DBOMGJHD@Read?5beyond?5end?5of?5file?4?$AA@
CONST	SEGMENT
??_C@_0BJ@DBOMGJHD@Read?5beyond?5end?5of?5file?4?$AA@ DB 'Read beyond end'
	DB	' of file.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08BJKGOKBF@EOFError?$AA@
CONST	SEGMENT
??_C@_08BJKGOKBF@EOFError?$AA@ DB 'EOFError', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KIFGEFOB@Timeout?5expired?4?$AA@
CONST	SEGMENT
??_C@_0BB@KIFGEFOB@Timeout?5expired?4?$AA@ DB 'Timeout expired.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BMLDFELP@TimeoutError?$AA@
CONST	SEGMENT
??_C@_0N@BMLDFELP@TimeoutError?$AA@ DB 'TimeoutError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CDPGLGNA@Process?5not?5found?4?$AA@
CONST	SEGMENT
??_C@_0BD@CDPGLGNA@Process?5not?5found?4?$AA@ DB 'Process not found.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LBBCHOLB@ProcessLookupError?$AA@
CONST	SEGMENT
??_C@_0BD@LBBCHOLB@ProcessLookupError?$AA@ DB 'ProcessLookupError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@ICBFMNFH@Not?5enough?5permissions?4?$AA@
CONST	SEGMENT
??_C@_0BI@ICBFMNFH@Not?5enough?5permissions?4?$AA@ DB 'Not enough permiss'
	DB	'ions.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EGIOHDMA@PermissionError?$AA@
CONST	SEGMENT
??_C@_0BA@EGIOHDMA@PermissionError?$AA@ DB 'PermissionError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@DPFOMFFN@Interrupted?5by?5signal?4?$AA@
CONST	SEGMENT
??_C@_0BH@DPFOMFFN@Interrupted?5by?5signal?4?$AA@ DB 'Interrupted by sign'
	DB	'al.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PFBGOELP@InterruptedError?$AA@
CONST	SEGMENT
??_C@_0BB@PFBGOELP@InterruptedError?$AA@ DB 'InterruptedError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@MHLAOJGN@Operation?5only?5works?5on?5director@
CONST	SEGMENT
??_C@_0CF@MHLAOJGN@Operation?5only?5works?5on?5director@ DB 'Operation on'
	DB	'ly works on directories.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BDDBNNNE@NotADirectoryError?$AA@
CONST	SEGMENT
??_C@_0BD@BDDBNNNE@NotADirectoryError?$AA@ DB 'NotADirectoryError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@PKAKIMKI@Operation?5doesn?8t?5work?5on?5direct@
CONST	SEGMENT
??_C@_0CH@PKAKIMKI@Operation?5doesn?8t?5work?5on?5direct@ DB 'Operation d'
	DB	'oesn''t work on directories.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EPPFJLG@IsADirectoryError?$AA@
CONST	SEGMENT
??_C@_0BC@EPPFJLG@IsADirectoryError?$AA@ DB 'IsADirectoryError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DOIDIGMK@File?5not?5found?4?$AA@
CONST	SEGMENT
??_C@_0BA@DOIDIGMK@File?5not?5found?4?$AA@ DB 'File not found.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IPPJKII@FileNotFoundError?$AA@
CONST	SEGMENT
??_C@_0BC@IPPJKII@FileNotFoundError?$AA@ DB 'FileNotFoundError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PBMIGFNE@File?5already?5exists?4?$AA@
CONST	SEGMENT
??_C@_0BF@PBMIGFNE@File?5already?5exists?4?$AA@ DB 'File already exists.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FBEHCPFP@FileExistsError?$AA@
CONST	SEGMENT
??_C@_0BA@FBEHCPFP@FileExistsError?$AA@ DB 'FileExistsError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PIBEPGML@Connection?5reset?4?$AA@
CONST	SEGMENT
??_C@_0BC@PIBEPGML@Connection?5reset?4?$AA@ DB 'Connection reset.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KPCMAHCN@ConnectionResetError?$AA@
CONST	SEGMENT
??_C@_0BF@KPCMAHCN@ConnectionResetError?$AA@ DB 'ConnectionResetError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PAAMHJLG@Connection?5refused?4?$AA@
CONST	SEGMENT
??_C@_0BE@PAAMHJLG@Connection?5refused?4?$AA@ DB 'Connection refused.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NFNMCF@ConnectionRefusedError?$AA@
CONST	SEGMENT
??_C@_0BH@NFNMCF@ConnectionRefusedError?$AA@ DB 'ConnectionRefusedError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FFDJKHGA@Connection?5aborted?4?$AA@
CONST	SEGMENT
??_C@_0BE@FFDJKHGA@Connection?5aborted?4?$AA@ DB 'Connection aborted.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@IAHALHIL@ConnectionAbortedError?$AA@
CONST	SEGMENT
??_C@_0BH@IAHALHIL@ConnectionAbortedError?$AA@ DB 'ConnectionAbortedError'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KCAMOIPH@Broken?5pipe?4?$AA@
CONST	SEGMENT
??_C@_0N@KCAMOIPH@Broken?5pipe?4?$AA@ DB 'Broken pipe.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OKFJGAGB@BrokenPipeError?$AA@
CONST	SEGMENT
??_C@_0BA@OKFJGAGB@BrokenPipeError?$AA@ DB 'BrokenPipeError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IOACMFNO@Child?5process?5error?4?$AA@
CONST	SEGMENT
??_C@_0BF@IOACMFNO@Child?5process?5error?4?$AA@ DB 'Child process error.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LJAFFAPL@ChildProcessError?$AA@
CONST	SEGMENT
??_C@_0BC@LJAFFAPL@ChildProcessError?$AA@ DB 'ChildProcessError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BCOONDMO@Connection?5error?4?$AA@
CONST	SEGMENT
??_C@_0BC@BCOONDMO@Connection?5error?4?$AA@ DB 'Connection error.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FGMDNHAG@ConnectionError?$AA@
CONST	SEGMENT
??_C@_0BA@FGMDNHAG@ConnectionError?$AA@ DB 'ConnectionError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@LJLKLDJH@I?1O?5operation?5would?5block?4?$AA@
CONST	SEGMENT
??_C@_0BL@LJLKLDJH@I?1O?5operation?5would?5block?4?$AA@ DB 'I/O operation'
	DB	' would block.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JGPGLFDG@BlockingIOError?$AA@
CONST	SEGMENT
??_C@_0BA@JGPGLFDG@BlockingIOError?$AA@ DB 'BlockingIOError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@BBOAKDDD@Base?5class?5for?5I?1O?5related?5error@
CONST	SEGMENT
??_C@_0CD@BBOAKDDD@Base?5class?5for?5I?1O?5related?5error@ DB 'Base class'
	DB	' for I/O related errors.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07DLGONEPD@OSError?$AA@
CONST	SEGMENT
??_C@_07DLGONEPD@OSError?$AA@ DB 'OSError', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MJNIBNKM@characters_written?$AA@
CONST	SEGMENT
??_C@_0BD@MJNIBNKM@characters_written?$AA@ DB 'characters_written', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@EGKICGDH@Win32?5exception?5code?$AA@
CONST	SEGMENT
??_C@_0BF@EGKICGDH@Win32?5exception?5code?$AA@ DB 'Win32 exception code', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08NNIGBLFN@winerror?$AA@
CONST	SEGMENT
??_C@_08NNIGBLFN@winerror?$AA@ DB 'winerror', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KPIAFJIH@exception?5filename?$AA@
CONST	SEGMENT
??_C@_0BD@KPIAFJIH@exception?5filename?$AA@ DB 'exception filename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08BABJIOEM@filename?$AA@
CONST	SEGMENT
??_C@_08BABJIOEM@filename?$AA@ DB 'filename', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HIDDEPNK@exception?5strerror?$AA@
CONST	SEGMENT
??_C@_0BD@HIDDEPNK@exception?5strerror?$AA@ DB 'exception strerror', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08MHKKJIBB@strerror?$AA@
CONST	SEGMENT
??_C@_08MHKKJIBB@strerror?$AA@ DB 'strerror', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CJFJGJAA@POSIX?5exception?5code?$AA@
CONST	SEGMENT
??_C@_0BF@CJFJGJAA@POSIX?5exception?5code?$AA@ DB 'POSIX exception code', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05PEAMIKEP@errno?$AA@
CONST	SEGMENT
??_C@_05PEAMIKEP@errno?$AA@ DB 'errno', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@HEBCIICE@Import?5can?8t?5find?5module?0?5or?5can@
CONST	SEGMENT
??_C@_0DI@HEBCIICE@Import?5can?8t?5find?5module?0?5or?5can@ DB 'Import ca'
	DB	'n''t find module, or can''t find name in module.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HCFCBBPI@ImportError?$AA@
CONST	SEGMENT
??_C@_0M@HCFCBBPI@ImportError?$AA@ DB 'ImportError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EODBJGBC@module?5path?$AA@
CONST	SEGMENT
??_C@_0M@EODBJGBC@module?5path?$AA@ DB 'module path', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04LNEJFJGI@path?$AA@
CONST	SEGMENT
??_C@_04LNEJFJGI@path?$AA@ DB 'path', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DHLIFJED@module?5name?$AA@
CONST	SEGMENT
??_C@_0M@DHLIFJED@module?5name?$AA@ DB 'module name', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04MEMAJGDJ@name?$AA@
CONST	SEGMENT
??_C@_04MEMAJGDJ@name?$AA@ DB 'name', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KEEHBMNM@exception?5message?$AA@
CONST	SEGMENT
??_C@_0BC@KEEHBMNM@exception?5message?$AA@ DB 'exception message', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03GLPMCEFE@msg?$AA@
CONST	SEGMENT
??_C@_03GLPMCEFE@msg?$AA@ DB 'msg', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@MANALLKN@Program?5interrupted?5by?5user?4?$AA@
CONST	SEGMENT
??_C@_0BN@MANALLKN@Program?5interrupted?5by?5user?4?$AA@ DB 'Program inte'
	DB	'rrupted by user.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BACBBCED@KeyboardInterrupt?$AA@
CONST	SEGMENT
??_C@_0BC@BACBBCED@KeyboardInterrupt?$AA@ DB 'KeyboardInterrupt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@KDLBFKIC@Request?5to?5exit?5from?5the?5interpr@
CONST	SEGMENT
??_C@_0CG@KDLBFKIC@Request?5to?5exit?5from?5the?5interpr@ DB 'Request to '
	DB	'exit from the interpreter.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MBGFFHMP@SystemExit?$AA@
CONST	SEGMENT
??_C@_0L@MBGFFHMP@SystemExit?$AA@ DB 'SystemExit', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@ENEGNBCK@exception?5code?$AA@
CONST	SEGMENT
??_C@_0P@ENEGNBCK@exception?5code?$AA@ DB 'exception code', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04NDFOBODE@code?$AA@
CONST	SEGMENT
??_C@_04NDFOBODE@code?$AA@ DB 'code', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@OCIPBJOC@Request?5that?5a?5generator?5exit?4?$AA@
CONST	SEGMENT
??_C@_0BP@OCIPBJOC@Request?5that?5a?5generator?5exit?4?$AA@ DB 'Request t'
	DB	'hat a generator exit.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GBGLOLNB@GeneratorExit?$AA@
CONST	SEGMENT
??_C@_0O@GBGLOLNB@GeneratorExit?$AA@ DB 'GeneratorExit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@IGGDMNCD@Signal?5the?5end?5from?5iterator?4__n@
CONST	SEGMENT
??_C@_0CJ@IGGDMNCD@Signal?5the?5end?5from?5iterator?4__n@ DB 'Signal the '
	DB	'end from iterator.__next__().', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LGLKOGMF@StopIteration?$AA@
CONST	SEGMENT
??_C@_0O@LGLKOGMF@StopIteration?$AA@ DB 'StopIteration', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@CEJBINIP@generator?5return?5value?$AA@
CONST	SEGMENT
??_C@_0BH@CEJBINIP@generator?5return?5value?$AA@ DB 'generator return val'
	DB	'ue', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_05MFEJDJP@value?$AA@
CONST	SEGMENT
??_C@_05MFEJDJP@value?$AA@ DB 'value', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@GFNFLJFF@Inappropriate?5argument?5type?4?$AA@
CONST	SEGMENT
??_C@_0BN@GFNFLJFF@Inappropriate?5argument?5type?4?$AA@ DB 'Inappropriate'
	DB	' argument type.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09MGGHOBOJ@TypeError?$AA@
CONST	SEGMENT
??_C@_09MGGHOBOJ@TypeError?$AA@ DB 'TypeError', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@EGCLOIMN@Common?5base?5class?5for?5all?5non?9ex@
CONST	SEGMENT
??_C@_0CP@EGCLOIMN@Common?5base?5class?5for?5all?5non?9ex@ DB 'Common bas'
	DB	'e class for all non-exit exceptions.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09FBNMMHMJ@Exception?$AA@
CONST	SEGMENT
??_C@_09FBNMMHMJ@Exception?$AA@ DB 'Exception', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@KACNFHAK@Common?5base?5class?5for?5all?5except@
CONST	SEGMENT
??_C@_0CF@KACNFHAK@Common?5base?5class?5for?5all?5except@ DB 'Common base'
	DB	' class for all exceptions', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GCAIIPIB@BaseException?$AA@
CONST	SEGMENT
??_C@_0O@GCAIIPIB@BaseException?$AA@ DB 'BaseException', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PLNDEDFH@__suppress_context__?$AA@
CONST	SEGMENT
??_C@_0BF@PLNDEDFH@__suppress_context__?$AA@ DB '__suppress_context__', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IMECEBLM@exception?5cause?$AA@
CONST	SEGMENT
??_C@_0BA@IMECEBLM@exception?5cause?$AA@ DB 'exception cause', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09DJICANKI@__cause__?$AA@
CONST	SEGMENT
??_C@_09DJICANKI@__cause__?$AA@ DB '__cause__', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NDBEMMPP@exception?5context?$AA@
CONST	SEGMENT
??_C@_0BC@NDBEMMPP@exception?5context?$AA@ DB 'exception context', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GKMKEIIC@__context__?$AA@
CONST	SEGMENT
??_C@_0M@GKMKEIIC@__context__?$AA@ DB '__context__', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IEBEOCOE@__traceback__?$AA@
CONST	SEGMENT
??_C@_0O@IEBEOCOE@__traceback__?$AA@ DB '__traceback__', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04BFDDMJJI@args?$AA@
CONST	SEGMENT
??_C@_04BFDDMJJI@args?$AA@ DB 'args', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08IBFKALI@__dict__?$AA@
CONST	SEGMENT
??_C@_08IBFKALI@__dict__?$AA@ DB '__dict__', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FLIOKJJK@with_traceback?$AA@
CONST	SEGMENT
??_C@_0P@FLIOKJJK@with_traceback?$AA@ DB 'with_traceback', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MOOGCAMH@__setstate__?$AA@
CONST	SEGMENT
??_C@_0N@MOOGCAMH@__setstate__?$AA@ DB '__setstate__', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NNMACJIG@__reduce__?$AA@
CONST	SEGMENT
??_C@_0L@NNMACJIG@__reduce__?$AA@ DB '__reduce__', 00H	; `string'
CONST	ENDS
_DATA	SEGMENT
with_traceback_doc DB 'Exception.with_traceback(tb) --', 0aH, '    set se'
	DB	'lf.__traceback__ to tb and return self.', 00H
	ORG $+14
BaseException_methods DQ FLAT:??_C@_0L@NNMACJIG@__reduce__?$AA@
	DQ	FLAT:BaseException_reduce
	DD	04H
	ORG $+4
	ORG $+8
	DQ	FLAT:??_C@_0N@MOOGCAMH@__setstate__?$AA@
	DQ	FLAT:BaseException_setstate
	DD	08H
	ORG $+4
	ORG $+8
	DQ	FLAT:??_C@_0P@FLIOKJJK@with_traceback?$AA@
	DQ	FLAT:BaseException_with_traceback
	DD	08H
	ORG $+4
	DQ	FLAT:with_traceback_doc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	0000000000000000H
BaseException_getset DQ FLAT:??_C@_08IBFKALI@__dict__?$AA@
	DQ	FLAT:PyObject_GenericGetDict
	DQ	FLAT:PyObject_GenericSetDict
	ORG $+16
	DQ	FLAT:??_C@_04BFDDMJJI@args?$AA@
	DQ	FLAT:BaseException_get_args
	DQ	FLAT:BaseException_set_args
	ORG $+16
	DQ	FLAT:??_C@_0O@IEBEOCOE@__traceback__?$AA@
	DQ	FLAT:BaseException_get_tb
	DQ	FLAT:BaseException_set_tb
	ORG $+16
	DQ	FLAT:??_C@_0M@GKMKEIIC@__context__?$AA@
	DQ	FLAT:BaseException_get_context
	DQ	FLAT:BaseException_set_context
	DQ	FLAT:??_C@_0BC@NDBEMMPP@exception?5context?$AA@
	ORG $+8
	DQ	FLAT:??_C@_09DJICANKI@__cause__?$AA@
	DQ	FLAT:BaseException_get_cause
	DQ	FLAT:BaseException_set_cause
	DQ	FLAT:??_C@_0BA@IMECEBLM@exception?5cause?$AA@
	ORG $+8
	DQ	0000000000000000H
	ORG $+32
BaseException_members DQ FLAT:??_C@_0BF@PLNDEDFH@__suppress_context__?$AA@
	DD	0eH
	ORG $+4
	DQ	0000000000000088H
	ORG $+16
	DQ	0000000000000000H
	ORG $+32
_PyExc_BaseException DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0O@GCAIIPIB@BaseException?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_repr
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_str
	DQ	FLAT:PyObject_GenericGetAttr
	DQ	FLAT:PyObject_GenericSetAttr
	DQ	0000000000000000H
	DD	040044400H
	ORG $+4
	DQ	FLAT:??_C@_0CF@KACNFHAK@Common?5base?5class?5for?5all?5except@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_methods
	DQ	FLAT:BaseException_members
	DQ	FLAT:BaseException_getset
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_BaseException DQ FLAT:_PyExc_BaseException
PyExc_Exception DQ FLAT:_PyExc_Exception
_PyExc_Exception DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_09FBNMMHMJ@Exception?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CP@EGCLOIMN@Common?5base?5class?5for?5all?5non?9ex@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_BaseException
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_TypeError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_09MGGHOBOJ@TypeError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BN@GFNFLJFF@Inappropriate?5argument?5type?4?$AA@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_TypeError DQ FLAT:_PyExc_TypeError
PyExc_StopIteration DQ FLAT:_PyExc_StopIteration
StopIteration_members DQ FLAT:??_C@_05MFEJDJP@value?$AA@
	DD	06H
	ORG $+4
	DQ	0000000000000090H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BH@CEJBINIP@generator?5return?5value?$AA@
	DQ	0000000000000000H
	ORG $+32
_PyExc_StopIteration DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0O@LGLKOGMF@StopIteration?$AA@
	DQ	00000000000000a0H
	DQ	0000000000000000H
	DQ	FLAT:StopIteration_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CJ@IGGDMNCD@Signal?5the?5end?5from?5iterator?4__n@
	DQ	FLAT:StopIteration_traverse
	DQ	FLAT:StopIteration_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:StopIteration_members
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:StopIteration_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
_PyExc_GeneratorExit DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0O@GBGLOLNB@GeneratorExit?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BP@OCIPBJOC@Request?5that?5a?5generator?5exit?4?$AA@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_BaseException
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_GeneratorExit DQ FLAT:_PyExc_GeneratorExit
PyExc_SystemExit DQ FLAT:_PyExc_SystemExit
SystemExit_members DQ FLAT:??_C@_04NDFOBODE@code?$AA@
	DD	06H
	ORG $+4
	DQ	0000000000000090H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0P@ENEGNBCK@exception?5code?$AA@
	DQ	0000000000000000H
	ORG $+32
_PyExc_SystemExit DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0L@MBGFFHMP@SystemExit?$AA@
	DQ	00000000000000a0H
	DQ	0000000000000000H
	DQ	FLAT:SystemExit_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CG@KDLBFKIC@Request?5to?5exit?5from?5the?5interpr@
	DQ	FLAT:SystemExit_traverse
	DQ	FLAT:SystemExit_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:SystemExit_members
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_BaseException
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:SystemExit_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
_PyExc_KeyboardInterrupt DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BC@BACBBCED@KeyboardInterrupt?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BN@MANALLKN@Program?5interrupted?5by?5user?4?$AA@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_BaseException
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_KeyboardInterrupt DQ FLAT:_PyExc_KeyboardInterrupt
PyExc_ImportError DQ FLAT:_PyExc_ImportError
ImportError_members DQ FLAT:??_C@_03GLPMCEFE@msg?$AA@
	DD	06H
	ORG $+4
	DQ	0000000000000090H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BC@KEEHBMNM@exception?5message?$AA@
	DQ	FLAT:??_C@_04MEMAJGDJ@name?$AA@
	DD	06H
	ORG $+4
	DQ	0000000000000098H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0M@DHLIFJED@module?5name?$AA@
	DQ	FLAT:??_C@_04LNEJFJGI@path?$AA@
	DD	06H
	ORG $+4
	DQ	00000000000000a0H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0M@EODBJGBC@module?5path?$AA@
	DQ	0000000000000000H
	ORG $+32
_PyExc_ImportError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0M@HCFCBBPI@ImportError?$AA@
	DQ	00000000000000b0H
	DQ	0000000000000000H
	DQ	FLAT:ImportError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:ImportError_str
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0DI@HEBCIICE@Import?5can?8t?5find?5module?0?5or?5can@
	DQ	FLAT:ImportError_traverse
	DQ	FLAT:ImportError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:ImportError_methods
	DQ	FLAT:ImportError_members
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:ImportError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
OSError_members DQ FLAT:??_C@_05PEAMIKEP@errno?$AA@
	DD	06H
	ORG $+4
	DQ	0000000000000090H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BF@CJFJGJAA@POSIX?5exception?5code?$AA@
	DQ	FLAT:??_C@_08MHKKJIBB@strerror?$AA@
	DD	06H
	ORG $+4
	DQ	0000000000000098H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BD@HIDDEPNK@exception?5strerror?$AA@
	DQ	FLAT:??_C@_08BABJIOEM@filename?$AA@
	DD	06H
	ORG $+4
	DQ	00000000000000a0H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BD@KPIAFJIH@exception?5filename?$AA@
	DQ	FLAT:??_C@_08NNIGBLFN@winerror?$AA@
	DD	06H
	ORG $+4
	DQ	00000000000000a8H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BF@EGKICGDH@Win32?5exception?5code?$AA@
	DQ	0000000000000000H
	ORG $+32
PyExc_OSError DQ FLAT:_PyExc_OSError
OSError_methods DQ FLAT:??_C@_0L@NNMACJIG@__reduce__?$AA@
	DQ	FLAT:OSError_reduce
	DD	04H
	ORG $+4
	ORG $+8
	DQ	0000000000000000H
	ORG $+24
OSError_getset DQ FLAT:??_C@_0BD@MJNIBNKM@characters_written?$AA@
	DQ	FLAT:OSError_written_get
	DQ	FLAT:OSError_written_set
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000000H
	ORG $+32
_PyExc_OSError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_07DLGONEPD@OSError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:OSError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:OSError_str
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CD@BBOAKDDD@Base?5class?5for?5I?1O?5related?5error@
	DQ	FLAT:OSError_traverse
	DQ	FLAT:OSError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:OSError_methods
	DQ	FLAT:OSError_members
	DQ	FLAT:OSError_getset
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:OSError_init
	DQ	0000000000000000H
	DQ	FLAT:OSError_new
	ORG $+72
_PyExc_BlockingIOError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BA@JGPGLFDG@BlockingIOError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:OSError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BL@LJLKLDJH@I?1O?5operation?5would?5block?4?$AA@
	DQ	FLAT:OSError_traverse
	DQ	FLAT:OSError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_OSError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:OSError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
PyExc_BlockingIOError DQ FLAT:_PyExc_BlockingIOError
PyExc_ConnectionError DQ FLAT:_PyExc_ConnectionError
_PyExc_ConnectionError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BA@FGMDNHAG@ConnectionError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:OSError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BC@BCOONDMO@Connection?5error?4?$AA@
	DQ	FLAT:OSError_traverse
	DQ	FLAT:OSError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_OSError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:OSError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
_PyExc_ChildProcessError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BC@LJAFFAPL@ChildProcessError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:OSError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BF@IOACMFNO@Child?5process?5error?4?$AA@
	DQ	FLAT:OSError_traverse
	DQ	FLAT:OSError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_OSError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:OSError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
PyExc_ChildProcessError DQ FLAT:_PyExc_ChildProcessError
PyExc_BrokenPipeError DQ FLAT:_PyExc_BrokenPipeError
_PyExc_BrokenPipeError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BA@OKFJGAGB@BrokenPipeError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:OSError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0N@KCAMOIPH@Broken?5pipe?4?$AA@
	DQ	FLAT:OSError_traverse
	DQ	FLAT:OSError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_ConnectionError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:OSError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
_PyExc_ConnectionAbortedError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BH@IAHALHIL@ConnectionAbortedError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:OSError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BE@FFDJKHGA@Connection?5aborted?4?$AA@
	DQ	FLAT:OSError_traverse
	DQ	FLAT:OSError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_ConnectionError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:OSError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
PyExc_ConnectionAbortedError DQ FLAT:_PyExc_ConnectionAbortedError
PyExc_ConnectionRefusedError DQ FLAT:_PyExc_ConnectionRefusedError
_PyExc_ConnectionRefusedError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BH@NFNMCF@ConnectionRefusedError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:OSError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BE@PAAMHJLG@Connection?5refused?4?$AA@
	DQ	FLAT:OSError_traverse
	DQ	FLAT:OSError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_ConnectionError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:OSError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
_PyExc_ConnectionResetError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BF@KPCMAHCN@ConnectionResetError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:OSError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BC@PIBEPGML@Connection?5reset?4?$AA@
	DQ	FLAT:OSError_traverse
	DQ	FLAT:OSError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_ConnectionError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:OSError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
PyExc_ConnectionResetError DQ FLAT:_PyExc_ConnectionResetError
PyExc_FileExistsError DQ FLAT:_PyExc_FileExistsError
_PyExc_FileExistsError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BA@FBEHCPFP@FileExistsError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:OSError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BF@PBMIGFNE@File?5already?5exists?4?$AA@
	DQ	FLAT:OSError_traverse
	DQ	FLAT:OSError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_OSError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:OSError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
_PyExc_FileNotFoundError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BC@IPPJKII@FileNotFoundError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:OSError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BA@DOIDIGMK@File?5not?5found?4?$AA@
	DQ	FLAT:OSError_traverse
	DQ	FLAT:OSError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_OSError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:OSError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
PyExc_FileNotFoundError DQ FLAT:_PyExc_FileNotFoundError
PyExc_IsADirectoryError DQ FLAT:_PyExc_IsADirectoryError
_PyExc_IsADirectoryError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BC@EPPFJLG@IsADirectoryError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:OSError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CH@PKAKIMKI@Operation?5doesn?8t?5work?5on?5direct@
	DQ	FLAT:OSError_traverse
	DQ	FLAT:OSError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_OSError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:OSError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
_PyExc_NotADirectoryError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BD@BDDBNNNE@NotADirectoryError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:OSError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CF@MHLAOJGN@Operation?5only?5works?5on?5director@
	DQ	FLAT:OSError_traverse
	DQ	FLAT:OSError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_OSError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:OSError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
PyExc_NotADirectoryError DQ FLAT:_PyExc_NotADirectoryError
PyExc_InterruptedError DQ FLAT:_PyExc_InterruptedError
_PyExc_InterruptedError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BB@PFBGOELP@InterruptedError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:OSError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BH@DPFOMFFN@Interrupted?5by?5signal?4?$AA@
	DQ	FLAT:OSError_traverse
	DQ	FLAT:OSError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_OSError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:OSError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
_PyExc_PermissionError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BA@EGIOHDMA@PermissionError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:OSError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BI@ICBFMNFH@Not?5enough?5permissions?4?$AA@
	DQ	FLAT:OSError_traverse
	DQ	FLAT:OSError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_OSError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:OSError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
PyExc_PermissionError DQ FLAT:_PyExc_PermissionError
PyExc_ProcessLookupError DQ FLAT:_PyExc_ProcessLookupError
_PyExc_ProcessLookupError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BD@LBBCHOLB@ProcessLookupError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:OSError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BD@CDPGLGNA@Process?5not?5found?4?$AA@
	DQ	FLAT:OSError_traverse
	DQ	FLAT:OSError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_OSError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:OSError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
_PyExc_TimeoutError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0N@BMLDFELP@TimeoutError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:OSError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BB@KIFGEFOB@Timeout?5expired?4?$AA@
	DQ	FLAT:OSError_traverse
	DQ	FLAT:OSError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_OSError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:OSError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
PyExc_TimeoutError DQ FLAT:_PyExc_TimeoutError
PyExc_EOFError DQ FLAT:_PyExc_EOFError
_PyExc_EOFError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_08BJKGOKBF@EOFError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BJ@DBOMGJHD@Read?5beyond?5end?5of?5file?4?$AA@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_RuntimeError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0N@PJCHGDKG@RuntimeError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BM@GMHHIONK@Unspecified?5run?9time?5error?4?$AA@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_RuntimeError DQ FLAT:_PyExc_RuntimeError
PyExc_NotImplementedError DQ FLAT:_PyExc_NotImplementedError
_PyExc_NotImplementedError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BE@NIHEKDAM@NotImplementedError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0DA@PMFCDFAJ@Method?5or?5function?5hasn?8t?5been?5i@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_RuntimeError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_NameError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_09GENDEFL@NameError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BJ@CKADCLHL@Name?5not?5found?5globally?4?$AA@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_NameError DQ FLAT:_PyExc_NameError
PyExc_UnboundLocalError DQ FLAT:_PyExc_UnboundLocalError
_PyExc_UnboundLocalError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BC@EJBPJIJA@UnboundLocalError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0DA@JDNAGEED@Local?5name?5referenced?5but?5not?5bo@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_NameError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_AttributeError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0P@OMMLLIOG@AttributeError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BF@KBBDNFNN@Attribute?5not?5found?4?$AA@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_AttributeError DQ FLAT:_PyExc_AttributeError
PyExc_SyntaxError DQ FLAT:_PyExc_SyntaxError
SyntaxError_members DQ FLAT:??_C@_03GLPMCEFE@msg?$AA@
	DD	06H
	ORG $+4
	DQ	0000000000000090H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0O@BHKGJJFD@exception?5msg?$AA@
	DQ	FLAT:??_C@_08BABJIOEM@filename?$AA@
	DD	06H
	ORG $+4
	DQ	0000000000000098H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BD@KPIAFJIH@exception?5filename?$AA@
	DQ	FLAT:??_C@_06ILKIAHNN@lineno?$AA@
	DD	06H
	ORG $+4
	DQ	00000000000000a0H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BB@FEDCHJDL@exception?5lineno?$AA@
	DQ	FLAT:??_C@_06KLHHMIGM@offset?$AA@
	DD	06H
	ORG $+4
	DQ	00000000000000a8H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BB@HEONLGIK@exception?5offset?$AA@
	DQ	FLAT:??_C@_04CIMGMMMG@text?$AA@
	DD	06H
	ORG $+4
	DQ	00000000000000b0H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0P@LGNOADNI@exception?5text?$AA@
	DQ	FLAT:??_C@_0BE@DKBHEDDB@print_file_and_line?$AA@
	DD	06H
	ORG $+4
	DQ	00000000000000b8H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BO@GMLCEMFL@exception?5print_file_and_line?$AA@
	DQ	0000000000000000H
	ORG $+32
PyExc_IndentationError DQ FLAT:_PyExc_IndentationError
_PyExc_SyntaxError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0M@KIDEJCGH@SyntaxError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:SyntaxError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:SyntaxError_str
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BA@GFAEMOKB@Invalid?5syntax?4?$AA@
	DQ	FLAT:SyntaxError_traverse
	DQ	FLAT:SyntaxError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:SyntaxError_members
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:SyntaxError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
_PyExc_IndentationError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BB@PAPDAKC@IndentationError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:SyntaxError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BG@EODDEBDJ@Improper?5indentation?4?$AA@
	DQ	FLAT:SyntaxError_traverse
	DQ	FLAT:SyntaxError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_SyntaxError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:SyntaxError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
_PyExc_TabError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_08HFBDNBMM@TabError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:SyntaxError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CF@GKBIKMOP@Improper?5mixture?5of?5spaces?5and?5t@
	DQ	FLAT:SyntaxError_traverse
	DQ	FLAT:SyntaxError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_IndentationError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:SyntaxError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
PyExc_TabError DQ FLAT:_PyExc_TabError
PyExc_LookupError DQ FLAT:_PyExc_LookupError
_PyExc_LookupError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0M@MHFOHJEK@LookupError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BO@OONBGEOC@Base?5class?5for?5lookup?5errors?4?$AA@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_IndexError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0L@PDGDGKIP@IndexError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BN@MPIMOMNM@Sequence?5index?5out?5of?5range?4?$AA@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_LookupError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_IndexError DQ FLAT:_PyExc_IndexError
PyExc_KeyError DQ FLAT:_PyExc_KeyError
_PyExc_KeyError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_08OHPJJKKC@KeyError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:KeyError_str
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BH@NGNBEPFN@Mapping?5key?5not?5found?4?$AA@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_LookupError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
_PyExc_ValueError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0L@POAMGPDC@ValueError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0DA@PDIMAGJA@Inappropriate?5argument?5value?5?$CIof@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_ValueError DQ FLAT:_PyExc_ValueError
PyExc_UnicodeError DQ FLAT:_PyExc_UnicodeError
_PyExc_UnicodeError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0N@HJMCMBLP@UnicodeError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BH@LFJEPFCJ@Unicode?5related?5error?4?$AA@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_ValueError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
UnicodeError_members DQ FLAT:??_C@_08MLPGAEIK@encoding?$AA@
	DD	06H
	ORG $+4
	DQ	0000000000000090H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BD@HEGPNDEB@exception?5encoding?$AA@
	DQ	FLAT:??_C@_06IEOJBDIK@object?$AA@
	DD	06H
	ORG $+4
	DQ	0000000000000098H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BB@FLHDGNGM@exception?5object?$AA@
	DQ	FLAT:??_C@_05FAGFPHJG@start?$AA@
	DD	013H
	ORG $+4
	DQ	00000000000000a0H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BA@KKPENCDK@exception?5start?$AA@
	DQ	FLAT:??_C@_03JBJLGPFL@end?$AA@
	DD	013H
	ORG $+4
	DQ	00000000000000a8H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0O@ONMBNCFM@exception?5end?$AA@
	DQ	FLAT:??_C@_06CEHAOENB@reason?$AA@
	DD	06H
	ORG $+4
	DQ	00000000000000b0H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BB@PLOKJKDH@exception?5reason?$AA@
	DQ	0000000000000000H
	ORG $+32
_PyExc_UnicodeEncodeError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BD@PEGECFKD@UnicodeEncodeError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:UnicodeError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:UnicodeEncodeError_str
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BI@BHCKDJLG@Unicode?5encoding?5error?4?$AA@
	DQ	FLAT:UnicodeError_traverse
	DQ	FLAT:UnicodeError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:UnicodeError_members
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_UnicodeError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:UnicodeEncodeError_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_UnicodeEncodeError DQ FLAT:_PyExc_UnicodeEncodeError
PyExc_UnicodeDecodeError DQ FLAT:_PyExc_UnicodeDecodeError
_PyExc_UnicodeDecodeError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BD@EMOAOOII@UnicodeDecodeError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:UnicodeError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:UnicodeDecodeError_str
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BI@GHLGAONJ@Unicode?5decoding?5error?4?$AA@
	DQ	FLAT:UnicodeError_traverse
	DQ	FLAT:UnicodeError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:UnicodeError_members
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_UnicodeError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:UnicodeDecodeError_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_UnicodeTranslateError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BG@MKGFNNGN@UnicodeTranslateError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:UnicodeError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:UnicodeTranslateError_str
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BL@BOAAJAHA@Unicode?5translation?5error?4?$AA@
	DQ	FLAT:UnicodeError_traverse
	DQ	FLAT:UnicodeError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:UnicodeError_members
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_UnicodeError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:UnicodeTranslateError_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_UnicodeTranslateError DQ FLAT:_PyExc_UnicodeTranslateError
PyExc_AssertionError DQ FLAT:_PyExc_AssertionError
_PyExc_AssertionError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0P@ECLAGKMP@AssertionError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BC@DHBLDLOI@Assertion?5failed?4?$AA@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_ArithmeticError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BA@HMBIHIEF@ArithmeticError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CC@PPOJNHHK@Base?5class?5for?5arithmetic?5errors@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_ArithmeticError DQ FLAT:_PyExc_ArithmeticError
PyExc_FloatingPointError DQ FLAT:_PyExc_FloatingPointError
_PyExc_FloatingPointError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BD@BMMMKAGK@FloatingPointError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CB@CNKBBAIB@Floating?5point?5operation?5failed?4@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_ArithmeticError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_OverflowError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0O@DAFOBLHH@OverflowError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CE@DNDJACFH@Result?5too?5large?5to?5be?5represent@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_ArithmeticError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_OverflowError DQ FLAT:_PyExc_OverflowError
PyExc_ZeroDivisionError DQ FLAT:_PyExc_ZeroDivisionError
_PyExc_ZeroDivisionError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BC@JKCGANPD@ZeroDivisionError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0DM@HNAOGMFP@Second?5argument?5to?5a?5division?5or@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_ArithmeticError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_SystemError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0M@MLMICFKM@SystemError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0LA@PADCOJHH@Internal?5error?5in?5the?5Python?5int@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_SystemError DQ FLAT:_PyExc_SystemError
PyExc_ReferenceError DQ FLAT:_PyExc_ReferenceError
_PyExc_ReferenceError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0P@NJFCDLEA@ReferenceError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CO@BODDBCMG@Weak?5ref?5proxy?5used?5after?5refere@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_ParallelError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0O@GFKDNBOD@ParallelError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CA@NKCFMBPJ@Base?5class?5for?5parallel?5errors?4?$AA@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_ParallelError DQ FLAT:_PyExc_ParallelError
PyExc_ParallelThreadInitializationError DQ FLAT:_PyExc_ParallelThreadInitializationError
_PyExc_ParallelThreadInitializationError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0CC@IAEHFMP@ParallelThreadInitializationErro@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CK@IKBKELBP@Failed?5to?5initialize?5new?5paralle@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_ParallelError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_ParallelContextInitializationError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0CD@MNHCHPAI@ParallelContextInitializationErr@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0DE@INBJNFAJ@Failed?5to?5initialize?5parallel?5co@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_ParallelError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_ParallelContextInitializationError DQ FLAT:_PyExc_ParallelContextInitializationError
PyExc_ParallelContextError DQ FLAT:_PyExc_ParallelContextError
_PyExc_ParallelContextError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BF@HFKFAIAA@ParallelContextError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0DG@NPBGBDKP@Operation?5not?5permitted?5from?5wit@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_ParallelError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_ParallelImportError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BE@FCGCAOGC@ParallelImportError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0DD@JGEGKCHH@Import?5not?5permitted?5from?5within@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_ParallelContextError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_ParallelImportError DQ FLAT:_PyExc_ParallelImportError
PyExc_ParallelGlobalVariableAccessError DQ FLAT:_PyExc_ParallelGlobalVariableAccessError
_PyExc_ParallelGlobalVariableAccessError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0CC@HPLHCPKN@ParallelGlobalVariableAccessErro@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0EL@PLHLDPCD@Implicit?5access?5to?5global?5variab@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_ParallelContextError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_ParallelNonlocalVariableAccessError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0CE@ONNHACJB@ParallelNonlocalVariableAccessEr@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0EN@KNPFPBJJ@Implicit?5access?5to?5nonlocal?5vari@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_ParallelContextError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_ParallelNonlocalVariableAccessError DQ FLAT:_PyExc_ParallelNonlocalVariableAccessError
PyExc_AsyncError DQ FLAT:_PyExc_AsyncError
_PyExc_AsyncError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0L@POMMPANG@AsyncError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BN@KHNEADKG@Base?5class?5for?5async?5errors?4?$AA@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_AsyncRunCalledWithoutEventsError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0CB@DHCJJACB@AsyncRunCalledWithoutEventsError@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CH@LDJJHMMC@Async?5run?$CI?$CJ?5called?5without?5any?5e@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_AsyncError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_AsyncRunCalledWithoutEventsError DQ FLAT:_PyExc_AsyncRunCalledWithoutEventsError
PyExc_AsyncRunNoActiveEventsError DQ FLAT:_PyExc_AsyncRunNoActiveEventsError
_PyExc_AsyncRunNoActiveEventsError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BM@GCGOLDFN@AsyncRunNoActiveEventsError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0DG@LICMCCGN@Async?5run?$CI?$CJ?5detected?5that?5there?5@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_AsyncError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_MemoryError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0M@HIBAKAFK@MemoryError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:MemoryError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0P@ILLCNIIE@Out?5of?5memory?4?$AA@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:MemoryError_new
	ORG $+72
PyExc_MemoryError DQ FLAT:_PyExc_MemoryError
PyExc_BufferError DQ FLAT:_PyExc_BufferError
_PyExc_BufferError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0M@IEEINKIE@BufferError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0O@GFOKIHDB@Buffer?5error?4?$AA@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_Warning DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_07KGMMFLDN@Warning?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CD@IHAAEPNP@Base?5class?5for?5warning?5categorie@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_Warning DQ FLAT:_PyExc_Warning
PyExc_UserWarning DQ FLAT:_PyExc_UserWarning
_PyExc_UserWarning DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0M@JCLIHPLC@UserWarning?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0DA@NAMNFIGL@Base?5class?5for?5warnings?5generate@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Warning
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_DeprecationWarning DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BD@GIDNBIPD@DeprecationWarning?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0DD@DDNMECFD@Base?5class?5for?5warnings?5about?5de@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Warning
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_DeprecationWarning DQ FLAT:_PyExc_DeprecationWarning
PyExc_PendingDeprecationWarning DQ FLAT:_PyExc_PendingDeprecationWarning
_PyExc_PendingDeprecationWarning DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BK@JDBEDOM@PendingDeprecationWarning?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0EP@NOKGBDGL@Base?5class?5for?5warnings?5about?5fe@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Warning
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_SyntaxWarning DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0O@IOJIPFFN@SyntaxWarning?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CO@JDKAKEOK@Base?5class?5for?5warnings?5about?5du@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Warning
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_SyntaxWarning DQ FLAT:_PyExc_SyntaxWarning
PyExc_RuntimeWarning DQ FLAT:_PyExc_RuntimeWarning
_PyExc_RuntimeWarning DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0P@JGMDIAML@RuntimeWarning?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0DI@FBPEMJEN@Base?5class?5for?5warnings?5about?5du@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Warning
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_FutureWarning DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0O@EAIEFLDH@FutureWarning?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0FG@MEHAINOE@Base?5class?5for?5warnings?5about?5co@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Warning
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_FutureWarning DQ FLAT:_PyExc_FutureWarning
PyExc_ImportWarning DQ FLAT:_PyExc_ImportWarning
_PyExc_ImportWarning DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0O@MPAGLHE@ImportWarning?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0EC@CFAJPLKK@Base?5class?5for?5warnings?5about?5pr@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Warning
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_UnicodeWarning DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0P@DFBLGLPC@UnicodeWarning?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0FP@BEMCLFNP@Base?5class?5for?5warnings?5about?5Un@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Warning
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_UnicodeWarning DQ FLAT:_PyExc_UnicodeWarning
PyExc_BytesWarning DQ FLAT:_PyExc_BytesWarning
_PyExc_BytesWarning DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0N@BILDEMAG@BytesWarning?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0HM@KBKMDMHM@Base?5class?5for?5warnings?5about?5by@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Warning
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_ResourceWarning DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BA@JIBLCGNF@ResourceWarning?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CO@HPEHEBLP@Base?5class?5for?5warnings?5about?5re@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Warning
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_ResourceWarning DQ FLAT:_PyExc_ResourceWarning
_DATA	ENDS
PUBLIC	??_C@_0L@DHGMCEID@_Py_IncRef?$AA@		; `string'
PUBLIC	??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@ ; `string'
PUBLIC	_Py_IncRef
EXTRN	_PyParallel_Guard:PROC
EXTRN	_Py_PXCTX:PROC
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$_Py_IncRef DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$_Py_IncRef
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_Py_IncRef DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT ??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
CONST	SEGMENT
??_C@_0L@DHGMCEID@_Py_IncRef?$AA@ DB '_Py_IncRef', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
CONST	SEGMENT
??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@ DB 'c:\src\pypa'
	DB	'rallel\include\object.h', 00H		; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT _Py_IncRef
_TEXT	SEGMENT
op$ = 64
_Py_IncRef PROC						; COMDAT

; 904  : {

$LN5:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8b d9	 mov	 rbx, rcx

; 905  :     if ((!Py_PXCTX && (Py_ISPY(op) || Px_PERSISTED(op)))) {

  00009	e8 00 00 00 00	 call	 _Py_PXCTX
  0000e	85 c0		 test	 eax, eax
  00010	75 32		 jne	 SHORT $LN2@Py_IncRef
  00012	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00020	4c 8b cb	 mov	 r9, rbx
  00023	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00029	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00031	e8 00 00 00 00	 call	 _PyParallel_Guard
  00036	85 c0		 test	 eax, eax
  00038	75 06		 jne	 SHORT $LN1@Py_IncRef
  0003a	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  0003e	74 04		 je	 SHORT $LN2@Py_IncRef
$LN1@Py_IncRef:

; 906  :         _Py_INC_REFTOTAL;
; 907  :         (((PyObject*)(op))->ob_refcnt++);

  00040	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN2@Py_IncRef:

; 908  :     }
; 909  : }

  00044	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00048	5b		 pop	 rbx
  00049	c3		 ret	 0
_Py_IncRef ENDP
_TEXT	ENDS
PUBLIC	??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@		; `string'
PUBLIC	_Py_DecRef
EXTRN	Px_DecRef:PROC
EXTRN	_Px_Dealloc:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$_Py_DecRef DD imagerel $LN12
	DD	imagerel $LN12+123
	DD	imagerel $unwind$_Py_DecRef
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_Py_DecRef DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT ??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
CONST	SEGMENT
??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@ DB '_Py_DecRef', 00H	; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT _Py_DecRef
_TEXT	SEGMENT
op$ = 64
_Py_DecRef PROC						; COMDAT

; 923  : {

$LN12:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8b d9	 mov	 rbx, rcx

; 924  :     if (!Py_PXCTX) {

  00009	e8 00 00 00 00	 call	 _Py_PXCTX
  0000e	85 c0		 test	 eax, eax
  00010	75 63		 jne	 SHORT $LN11@Py_DecRef

; 925  :         if (Px_PERSISTED(op) || Px_CLONED(op))

  00012	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  00016	a8 20		 test	 al, 32			; 00000020H
  00018	75 53		 jne	 SHORT $LN5@Py_DecRef
  0001a	84 c0		 test	 al, al
  0001c	78 4f		 js	 SHORT $LN5@Py_DecRef

; 927  :         else if (!Px_ISPX(op)) {

  0001e	a8 02		 test	 al, 2
  00020	75 53		 jne	 SHORT $LN11@Py_DecRef

; 928  :             _Py_DEC_REFTOTAL;
; 929  :             if ((--((PyObject *)(op))->ob_refcnt) != 0) {

  00022	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  00026	75 4d		 jne	 SHORT $LN11@Py_DecRef

; 930  :                 _Py_CHECK_REFCNT(op);
; 931  :             } else
; 932  :                 _Py_Dealloc((PyObject *)(op));

  00028	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  00036	4c 8b cb	 mov	 r9, rbx
  00039	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  0003f	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00047	e8 00 00 00 00	 call	 _PyParallel_Guard
  0004c	48 8b cb	 mov	 rcx, rbx
  0004f	85 c0		 test	 eax, eax
  00051	74 0a		 je	 SHORT $LN10@Py_DecRef

; 933  :         }
; 934  :     }
; 935  : }

  00053	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00057	5b		 pop	 rbx
  00058	e9 00 00 00 00	 jmp	 _Px_Dealloc
$LN10@Py_DecRef:

; 930  :                 _Py_CHECK_REFCNT(op);
; 931  :             } else
; 932  :                 _Py_Dealloc((PyObject *)(op));

  0005d	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]

; 933  :         }
; 934  :     }
; 935  : }

  00061	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00065	5b		 pop	 rbx
  00066	48 ff a0 88 00
	00 00		 rex_jmp QWORD PTR [rax+136]
$LN5@Py_DecRef:

; 926  :             Px_DECREF(op);

  0006d	48 8b cb	 mov	 rcx, rbx
  00070	e8 00 00 00 00	 call	 Px_DecRef
$LN11@Py_DecRef:

; 933  :         }
; 934  :     }
; 935  : }

  00075	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00079	5b		 pop	 rbx
  0007a	c3		 ret	 0
_Py_DecRef ENDP
_TEXT	ENDS
EXTRN	PyTuple_New:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$BaseException_new DD imagerel BaseException_new
	DD	imagerel BaseException_new+182
	DD	imagerel $unwind$BaseException_new
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_new DD 040a01H
	DD	08340aH
	DD	07006520aH
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
xdata	ENDS
;	COMDAT BaseException_new
_TEXT	SEGMENT
type$ = 64
args$ = 72
kwds$ = 80
BaseException_new PROC					; COMDAT

; 36   : {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b fa	 mov	 rdi, rdx
  0000d	48 8b c1	 mov	 rax, rcx

; 37   :     PyBaseExceptionObject *self;
; 38   : 
; 39   :     self = (PyBaseExceptionObject *)type->tp_alloc(type, 0);

  00010	33 d2		 xor	 edx, edx
  00012	ff 90 88 01 00
	00		 call	 QWORD PTR [rax+392]
  00018	48 8b d8	 mov	 rbx, rax

; 40   :     if (!self)

  0001b	48 85 c0	 test	 rax, rax

; 41   :         return NULL;

  0001e	0f 84 85 00 00
	00		 je	 $LN10@BaseExcept

; 42   :     /* the dict is created on the fly in PyObject_GenericSetAttr */
; 43   :     self->dict = NULL;

  00024	33 c0		 xor	 eax, eax
  00026	48 89 43 60	 mov	 QWORD PTR [rbx+96], rax

; 44   :     self->traceback = self->cause = self->context = NULL;

  0002a	48 89 43 78	 mov	 QWORD PTR [rbx+120], rax
  0002e	48 89 83 80 00
	00 00		 mov	 QWORD PTR [rbx+128], rax
  00035	48 89 43 70	 mov	 QWORD PTR [rbx+112], rax

; 45   :     self->suppress_context = 0;

  00039	88 83 88 00 00
	00		 mov	 BYTE PTR [rbx+136], al

; 46   : 
; 47   :     if (args) {

  0003f	48 85 ff	 test	 rdi, rdi
  00042	74 4d		 je	 SHORT $LN2@BaseExcept

; 48   :         self->args = args;

  00044	48 89 7b 68	 mov	 QWORD PTR [rbx+104], rdi

; 49   :         Py_INCREF(args);

  00048	e8 00 00 00 00	 call	 _Py_PXCTX
  0004d	85 c0		 test	 eax, eax
  0004f	75 32		 jne	 SHORT $LN1@BaseExcept
  00051	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00058	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  0005f	4c 8b cf	 mov	 r9, rdi
  00062	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00068	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00070	e8 00 00 00 00	 call	 _PyParallel_Guard
  00075	85 c0		 test	 eax, eax
  00077	75 06		 jne	 SHORT $LN6@BaseExcept
  00079	f6 47 20 20	 test	 BYTE PTR [rdi+32], 32	; 00000020H
  0007d	74 04		 je	 SHORT $LN1@BaseExcept
$LN6@BaseExcept:
  0007f	48 ff 47 50	 inc	 QWORD PTR [rdi+80]
$LN1@BaseExcept:

; 57   :     }
; 58   : 
; 59   :     return (PyObject *)self;

  00083	48 8b c3	 mov	 rax, rbx

; 60   : }

  00086	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  0008b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0008f	5f		 pop	 rdi
  00090	c3		 ret	 0
$LN2@BaseExcept:

; 50   :         return (PyObject *)self;
; 51   :     }
; 52   : 
; 53   :     self->args = PyTuple_New(0);

  00091	33 c9		 xor	 ecx, ecx
  00093	e8 00 00 00 00	 call	 PyTuple_New
  00098	48 89 43 68	 mov	 QWORD PTR [rbx+104], rax

; 54   :     if (!self->args) {

  0009c	48 85 c0	 test	 rax, rax
  0009f	75 e2		 jne	 SHORT $LN1@BaseExcept

; 55   :         Py_DECREF(self);

  000a1	48 8b cb	 mov	 rcx, rbx
  000a4	e8 00 00 00 00	 call	 _Py_DecRef
$LN10@BaseExcept:

; 56   :         return NULL;

  000a9	33 c0		 xor	 eax, eax

; 60   : }

  000ab	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  000b0	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000b4	5f		 pop	 rdi
  000b5	c3		 ret	 0
BaseException_new ENDP
_TEXT	ENDS
EXTRN	_PyArg_NoKeywords:PROC
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$BaseException_init DD imagerel BaseException_init
	DD	imagerel BaseException_init+50
	DD	imagerel $unwind$BaseException_init
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$BaseException_init DD imagerel BaseException_init+50
	DD	imagerel BaseException_init+228
	DD	imagerel $chain$0$BaseException_init
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$BaseException_init DD imagerel BaseException_init+228
	DD	imagerel BaseException_init+256
	DD	imagerel $chain$2$BaseException_init
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$BaseException_init DD imagerel BaseException_init+256
	DD	imagerel BaseException_init+282
	DD	imagerel $chain$4$BaseException_init
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$BaseException_init DD 020021H
	DD	083400H
	DD	imagerel BaseException_init
	DD	imagerel BaseException_init+50
	DD	imagerel $unwind$BaseException_init
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$BaseException_init DD 020021H
	DD	083400H
	DD	imagerel BaseException_init
	DD	imagerel BaseException_init+50
	DD	imagerel $unwind$BaseException_init
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$BaseException_init DD 020521H
	DD	083405H
	DD	imagerel BaseException_init
	DD	imagerel BaseException_init+50
	DD	imagerel $unwind$BaseException_init
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_init DD 040a01H
	DD	09640aH
	DD	07006520aH
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
xdata	ENDS
;	COMDAT BaseException_init
_TEXT	SEGMENT
self$ = 64
args$ = 72
kwds$ = 80
BaseException_init PROC					; COMDAT

; 64   : {

  00000	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b f1	 mov	 rsi, rcx

; 65   :     PyObject *tmp;
; 66   : 
; 67   :     if (!_PyArg_NoKeywords(Py_TYPE(self)->tp_name, kwds))

  0000d	48 8b 49 58	 mov	 rcx, QWORD PTR [rcx+88]
  00011	48 8b fa	 mov	 rdi, rdx
  00014	48 8b 49 70	 mov	 rcx, QWORD PTR [rcx+112]
  00018	49 8b d0	 mov	 rdx, r8
  0001b	e8 00 00 00 00	 call	 _PyArg_NoKeywords
  00020	85 c0		 test	 eax, eax
  00022	75 0e		 jne	 SHORT $LN5@BaseExcept@2

; 68   :         return -1;

  00024	83 c8 ff	 or	 eax, -1

; 76   : }

  00027	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  0002c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00030	5f		 pop	 rdi
  00031	c3		 ret	 0
$LN5@BaseExcept@2:
  00032	48 89 5c 24 40	 mov	 QWORD PTR [rsp+64], rbx

; 69   : 
; 70   :     tmp = self->args;

  00037	48 8b 5e 68	 mov	 rbx, QWORD PTR [rsi+104]

; 71   :     self->args = args;

  0003b	48 89 7e 68	 mov	 QWORD PTR [rsi+104], rdi

; 72   :     Py_INCREF(self->args);

  0003f	e8 00 00 00 00	 call	 _Py_PXCTX
  00044	85 c0		 test	 eax, eax
  00046	75 32		 jne	 SHORT $LN4@BaseExcept@2
  00048	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0004f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00056	4c 8b cf	 mov	 r9, rdi
  00059	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  0005f	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00067	e8 00 00 00 00	 call	 _PyParallel_Guard
  0006c	85 c0		 test	 eax, eax
  0006e	75 06		 jne	 SHORT $LN8@BaseExcept@2
  00070	f6 47 20 20	 test	 BYTE PTR [rdi+32], 32	; 00000020H
  00074	74 04		 je	 SHORT $LN4@BaseExcept@2
$LN8@BaseExcept@2:
  00076	48 ff 47 50	 inc	 QWORD PTR [rdi+80]
$LN4@BaseExcept@2:

; 73   :     Py_XDECREF(tmp);

  0007a	48 85 db	 test	 rbx, rbx
  0007d	0f 84 85 00 00
	00		 je	 $LN3@BaseExcept@2
  00083	e8 00 00 00 00	 call	 _Py_PXCTX
  00088	85 c0		 test	 eax, eax
  0008a	75 7c		 jne	 SHORT $LN3@BaseExcept@2
  0008c	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  00090	a8 20		 test	 al, 32			; 00000020H
  00092	75 6c		 jne	 SHORT $LN16@BaseExcept@2
  00094	84 c0		 test	 al, al
  00096	78 68		 js	 SHORT $LN16@BaseExcept@2
  00098	a8 02		 test	 al, 2
  0009a	75 6c		 jne	 SHORT $LN3@BaseExcept@2
  0009c	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  000a0	75 66		 jne	 SHORT $LN3@BaseExcept@2
  000a2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  000a9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  000b0	4c 8b cb	 mov	 r9, rbx
  000b3	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  000b9	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  000c1	e8 00 00 00 00	 call	 _PyParallel_Guard
  000c6	48 8b cb	 mov	 rcx, rbx
  000c9	85 c0		 test	 eax, eax
  000cb	74 17		 je	 SHORT $LN21@BaseExcept@2
  000cd	e8 00 00 00 00	 call	 _Px_Dealloc
  000d2	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]

; 74   : 
; 75   :     return 0;

  000d7	33 c0		 xor	 eax, eax

; 76   : }

  000d9	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  000de	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000e2	5f		 pop	 rdi
  000e3	c3		 ret	 0

; 73   :     Py_XDECREF(tmp);

$LN21@BaseExcept@2:
  000e4	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  000e8	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  000ee	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]

; 74   : 
; 75   :     return 0;

  000f3	33 c0		 xor	 eax, eax

; 76   : }

  000f5	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  000fa	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000fe	5f		 pop	 rdi
  000ff	c3		 ret	 0

; 73   :     Py_XDECREF(tmp);

$LN16@BaseExcept@2:
  00100	48 8b cb	 mov	 rcx, rbx
  00103	e8 00 00 00 00	 call	 Px_DecRef
$LN3@BaseExcept@2:

; 76   : }

  00108	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  0010d	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  00112	33 c0		 xor	 eax, eax
  00114	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00118	5f		 pop	 rdi
  00119	c3		 ret	 0
BaseException_init ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BE@DHGGBECL@BaseException_clear?$AA@	; `string'
PUBLIC	??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@ ; `string'
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$BaseException_clear DD imagerel BaseException_clear
	DD	imagerel BaseException_clear+876
	DD	imagerel $unwind$BaseException_clear
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_clear DD 060f01H
	DD	09640fH
	DD	08340fH
	DD	0700b520fH
xdata	ENDS
;	COMDAT ??_C@_0BE@DHGGBECL@BaseException_clear?$AA@
CONST	SEGMENT
??_C@_0BE@DHGGBECL@BaseException_clear?$AA@ DB 'BaseException_clear', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
CONST	SEGMENT
??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@ DB '..\Objects\except'
	DB	'ions.c', 00H				; `string'
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
CONST	ENDS
;	COMDAT BaseException_clear
_TEXT	SEGMENT
self$ = 64
BaseException_clear PROC				; COMDAT

; 80   : {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 81   :     Py_CLEAR(self->dict);

  0000f	4c 8b 49 60	 mov	 r9, QWORD PTR [rcx+96]
  00013	33 f6		 xor	 esi, esi
  00015	48 8b f9	 mov	 rdi, rcx
  00018	4d 85 c9	 test	 r9, r9
  0001b	0f 84 90 00 00
	00		 je	 $LN19@BaseExcept@3
  00021	44 8d 46 51	 lea	 r8d, QWORD PTR [rsi+81]
  00025	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0002c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BE@DHGGBECL@BaseException_clear?$AA@
  00033	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0003b	e8 00 00 00 00	 call	 _PyParallel_Guard
  00040	85 c0		 test	 eax, eax
  00042	75 6d		 jne	 SHORT $LN19@BaseExcept@3
  00044	48 8b 5f 60	 mov	 rbx, QWORD PTR [rdi+96]
  00048	48 89 77 60	 mov	 QWORD PTR [rdi+96], rsi
  0004c	e8 00 00 00 00	 call	 _Py_PXCTX
  00051	85 c0		 test	 eax, eax
  00053	75 5c		 jne	 SHORT $LN19@BaseExcept@3
  00055	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  00059	a8 20		 test	 al, 32			; 00000020H
  0005b	75 4c		 jne	 SHORT $LN27@BaseExcept@3
  0005d	84 c0		 test	 al, al
  0005f	78 48		 js	 SHORT $LN27@BaseExcept@3
  00061	a8 02		 test	 al, 2
  00063	75 4c		 jne	 SHORT $LN19@BaseExcept@3
  00065	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  00069	75 46		 jne	 SHORT $LN19@BaseExcept@3
  0006b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00072	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  00079	4c 8b cb	 mov	 r9, rbx
  0007c	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  00082	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0008a	e8 00 00 00 00	 call	 _PyParallel_Guard
  0008f	48 8b cb	 mov	 rcx, rbx
  00092	85 c0		 test	 eax, eax
  00094	74 07		 je	 SHORT $LN32@BaseExcept@3
  00096	e8 00 00 00 00	 call	 _Px_Dealloc
  0009b	eb 14		 jmp	 SHORT $LN19@BaseExcept@3
$LN32@BaseExcept@3:
  0009d	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  000a1	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  000a7	eb 08		 jmp	 SHORT $LN19@BaseExcept@3
$LN27@BaseExcept@3:
  000a9	48 8b cb	 mov	 rcx, rbx
  000ac	e8 00 00 00 00	 call	 Px_DecRef
$LN19@BaseExcept@3:

; 82   :     Py_CLEAR(self->args);

  000b1	4c 8b 4f 68	 mov	 r9, QWORD PTR [rdi+104]
  000b5	4d 85 c9	 test	 r9, r9
  000b8	0f 84 92 00 00
	00		 je	 $LN15@BaseExcept@3
  000be	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  000c5	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BE@DHGGBECL@BaseException_clear?$AA@
  000cc	41 b8 52 00 00
	00		 mov	 r8d, 82			; 00000052H
  000d2	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  000da	e8 00 00 00 00	 call	 _PyParallel_Guard
  000df	85 c0		 test	 eax, eax
  000e1	75 6d		 jne	 SHORT $LN15@BaseExcept@3
  000e3	48 8b 5f 68	 mov	 rbx, QWORD PTR [rdi+104]
  000e7	48 89 77 68	 mov	 QWORD PTR [rdi+104], rsi
  000eb	e8 00 00 00 00	 call	 _Py_PXCTX
  000f0	85 c0		 test	 eax, eax
  000f2	75 5c		 jne	 SHORT $LN15@BaseExcept@3
  000f4	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  000f8	a8 20		 test	 al, 32			; 00000020H
  000fa	75 4c		 jne	 SHORT $LN38@BaseExcept@3
  000fc	84 c0		 test	 al, al
  000fe	78 48		 js	 SHORT $LN38@BaseExcept@3
  00100	a8 02		 test	 al, 2
  00102	75 4c		 jne	 SHORT $LN15@BaseExcept@3
  00104	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  00108	75 46		 jne	 SHORT $LN15@BaseExcept@3
  0010a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00111	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  00118	4c 8b cb	 mov	 r9, rbx
  0011b	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  00121	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00129	e8 00 00 00 00	 call	 _PyParallel_Guard
  0012e	48 8b cb	 mov	 rcx, rbx
  00131	85 c0		 test	 eax, eax
  00133	74 07		 je	 SHORT $LN43@BaseExcept@3
  00135	e8 00 00 00 00	 call	 _Px_Dealloc
  0013a	eb 14		 jmp	 SHORT $LN15@BaseExcept@3
$LN43@BaseExcept@3:
  0013c	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  00140	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  00146	eb 08		 jmp	 SHORT $LN15@BaseExcept@3
$LN38@BaseExcept@3:
  00148	48 8b cb	 mov	 rcx, rbx
  0014b	e8 00 00 00 00	 call	 Px_DecRef
$LN15@BaseExcept@3:

; 83   :     Py_CLEAR(self->traceback);

  00150	4c 8b 4f 70	 mov	 r9, QWORD PTR [rdi+112]
  00154	4d 85 c9	 test	 r9, r9
  00157	0f 84 92 00 00
	00		 je	 $LN11@BaseExcept@3
  0015d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00164	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BE@DHGGBECL@BaseException_clear?$AA@
  0016b	41 b8 53 00 00
	00		 mov	 r8d, 83			; 00000053H
  00171	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00179	e8 00 00 00 00	 call	 _PyParallel_Guard
  0017e	85 c0		 test	 eax, eax
  00180	75 6d		 jne	 SHORT $LN11@BaseExcept@3
  00182	48 8b 5f 70	 mov	 rbx, QWORD PTR [rdi+112]
  00186	48 89 77 70	 mov	 QWORD PTR [rdi+112], rsi
  0018a	e8 00 00 00 00	 call	 _Py_PXCTX
  0018f	85 c0		 test	 eax, eax
  00191	75 5c		 jne	 SHORT $LN11@BaseExcept@3
  00193	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  00197	a8 20		 test	 al, 32			; 00000020H
  00199	75 4c		 jne	 SHORT $LN49@BaseExcept@3
  0019b	84 c0		 test	 al, al
  0019d	78 48		 js	 SHORT $LN49@BaseExcept@3
  0019f	a8 02		 test	 al, 2
  001a1	75 4c		 jne	 SHORT $LN11@BaseExcept@3
  001a3	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  001a7	75 46		 jne	 SHORT $LN11@BaseExcept@3
  001a9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  001b0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  001b7	4c 8b cb	 mov	 r9, rbx
  001ba	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  001c0	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  001c8	e8 00 00 00 00	 call	 _PyParallel_Guard
  001cd	48 8b cb	 mov	 rcx, rbx
  001d0	85 c0		 test	 eax, eax
  001d2	74 07		 je	 SHORT $LN54@BaseExcept@3
  001d4	e8 00 00 00 00	 call	 _Px_Dealloc
  001d9	eb 14		 jmp	 SHORT $LN11@BaseExcept@3
$LN54@BaseExcept@3:
  001db	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  001df	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  001e5	eb 08		 jmp	 SHORT $LN11@BaseExcept@3
$LN49@BaseExcept@3:
  001e7	48 8b cb	 mov	 rcx, rbx
  001ea	e8 00 00 00 00	 call	 Px_DecRef
$LN11@BaseExcept@3:

; 84   :     Py_CLEAR(self->cause);

  001ef	4c 8b 8f 80 00
	00 00		 mov	 r9, QWORD PTR [rdi+128]
  001f6	4d 85 c9	 test	 r9, r9
  001f9	0f 84 98 00 00
	00		 je	 $LN7@BaseExcept@3
  001ff	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00206	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BE@DHGGBECL@BaseException_clear?$AA@
  0020d	41 b8 54 00 00
	00		 mov	 r8d, 84			; 00000054H
  00213	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0021b	e8 00 00 00 00	 call	 _PyParallel_Guard
  00220	85 c0		 test	 eax, eax
  00222	75 73		 jne	 SHORT $LN7@BaseExcept@3
  00224	48 8b 9f 80 00
	00 00		 mov	 rbx, QWORD PTR [rdi+128]
  0022b	48 89 b7 80 00
	00 00		 mov	 QWORD PTR [rdi+128], rsi
  00232	e8 00 00 00 00	 call	 _Py_PXCTX
  00237	85 c0		 test	 eax, eax
  00239	75 5c		 jne	 SHORT $LN7@BaseExcept@3
  0023b	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  0023f	a8 20		 test	 al, 32			; 00000020H
  00241	75 4c		 jne	 SHORT $LN60@BaseExcept@3
  00243	84 c0		 test	 al, al
  00245	78 48		 js	 SHORT $LN60@BaseExcept@3
  00247	a8 02		 test	 al, 2
  00249	75 4c		 jne	 SHORT $LN7@BaseExcept@3
  0024b	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  0024f	75 46		 jne	 SHORT $LN7@BaseExcept@3
  00251	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00258	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  0025f	4c 8b cb	 mov	 r9, rbx
  00262	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  00268	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00270	e8 00 00 00 00	 call	 _PyParallel_Guard
  00275	48 8b cb	 mov	 rcx, rbx
  00278	85 c0		 test	 eax, eax
  0027a	74 07		 je	 SHORT $LN65@BaseExcept@3
  0027c	e8 00 00 00 00	 call	 _Px_Dealloc
  00281	eb 14		 jmp	 SHORT $LN7@BaseExcept@3
$LN65@BaseExcept@3:
  00283	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  00287	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  0028d	eb 08		 jmp	 SHORT $LN7@BaseExcept@3
$LN60@BaseExcept@3:
  0028f	48 8b cb	 mov	 rcx, rbx
  00292	e8 00 00 00 00	 call	 Px_DecRef
$LN7@BaseExcept@3:

; 85   :     Py_CLEAR(self->context);

  00297	4c 8b 4f 78	 mov	 r9, QWORD PTR [rdi+120]
  0029b	4d 85 c9	 test	 r9, r9
  0029e	0f 84 b6 00 00
	00		 je	 $LN80@BaseExcept@3
  002a4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  002ab	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BE@DHGGBECL@BaseException_clear?$AA@
  002b2	41 b8 55 00 00
	00		 mov	 r8d, 85			; 00000055H
  002b8	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  002c0	e8 00 00 00 00	 call	 _PyParallel_Guard
  002c5	85 c0		 test	 eax, eax
  002c7	0f 85 8d 00 00
	00		 jne	 $LN80@BaseExcept@3
  002cd	48 8b 5f 78	 mov	 rbx, QWORD PTR [rdi+120]
  002d1	48 89 77 78	 mov	 QWORD PTR [rdi+120], rsi
  002d5	e8 00 00 00 00	 call	 _Py_PXCTX
  002da	85 c0		 test	 eax, eax
  002dc	75 7c		 jne	 SHORT $LN80@BaseExcept@3
  002de	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  002e2	a8 20		 test	 al, 32			; 00000020H
  002e4	75 6c		 jne	 SHORT $LN71@BaseExcept@3
  002e6	84 c0		 test	 al, al
  002e8	78 68		 js	 SHORT $LN71@BaseExcept@3
  002ea	a8 02		 test	 al, 2
  002ec	75 6c		 jne	 SHORT $LN80@BaseExcept@3
  002ee	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  002f2	75 66		 jne	 SHORT $LN80@BaseExcept@3
  002f4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  002fb	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  00302	4c 8b cb	 mov	 r9, rbx
  00305	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  0030b	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00313	e8 00 00 00 00	 call	 _PyParallel_Guard
  00318	48 8b cb	 mov	 rcx, rbx
  0031b	85 c0		 test	 eax, eax
  0031d	74 17		 je	 SHORT $LN76@BaseExcept@3
  0031f	e8 00 00 00 00	 call	 _Px_Dealloc

; 86   :     return 0;

  00324	33 c0		 xor	 eax, eax

; 87   : }

  00326	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  0032b	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  00330	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00334	5f		 pop	 rdi
  00335	c3		 ret	 0

; 85   :     Py_CLEAR(self->context);

$LN76@BaseExcept@3:
  00336	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  0033a	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]

; 86   :     return 0;

  00340	33 c0		 xor	 eax, eax

; 87   : }

  00342	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00347	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  0034c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00350	5f		 pop	 rdi
  00351	c3		 ret	 0

; 85   :     Py_CLEAR(self->context);

$LN71@BaseExcept@3:
  00352	48 8b cb	 mov	 rcx, rbx
  00355	e8 00 00 00 00	 call	 Px_DecRef
$LN80@BaseExcept@3:

; 87   : }

  0035a	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  0035f	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  00364	33 c0		 xor	 eax, eax
  00366	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0036a	5f		 pop	 rdi
  0036b	c3		 ret	 0
BaseException_clear ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BG@CNGLEAMK@BaseException_dealloc?$AA@	; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$BaseException_dealloc DD imagerel BaseException_dealloc
	DD	imagerel BaseException_dealloc+158
	DD	imagerel $unwind$BaseException_dealloc
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_dealloc DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT ??_C@_0BG@CNGLEAMK@BaseException_dealloc?$AA@
CONST	SEGMENT
??_C@_0BG@CNGLEAMK@BaseException_dealloc?$AA@ DB 'BaseException_dealloc', 00H ; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT BaseException_dealloc
_TEXT	SEGMENT
self$ = 64
BaseException_dealloc PROC				; COMDAT

; 91   : {

  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8b d9	 mov	 rbx, rcx

; 92   :     _PyObject_GC_UNTRACK(self);

  00009	4c 8b c9	 mov	 r9, rcx
  0000c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BG@CNGLEAMK@BaseException_dealloc?$AA@
  0001a	41 b8 5c 00 00
	00		 mov	 r8d, 92			; 0000005cH
  00020	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00028	e8 00 00 00 00	 call	 _PyParallel_Guard
  0002d	85 c0		 test	 eax, eax
  0002f	75 52		 jne	 SHORT $LN1@BaseExcept@4
  00031	44 8d 40 5c	 lea	 r8d, QWORD PTR [rax+92]
  00035	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0003c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BG@CNGLEAMK@BaseException_dealloc?$AA@
  00043	4c 8b cb	 mov	 r9, rbx
  00046	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0004e	e8 00 00 00 00	 call	 _PyParallel_Guard
  00053	85 c0		 test	 eax, eax
  00055	74 04		 je	 SHORT $LN7@BaseExcept@4
  00057	33 d2		 xor	 edx, edx
  00059	eb 04		 jmp	 SHORT $LN8@BaseExcept@4
$LN7@BaseExcept@4:
  0005b	48 8d 53 e8	 lea	 rdx, QWORD PTR [rbx-24]
$LN8@BaseExcept@4:
  0005f	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00062	48 8b 4a 08	 mov	 rcx, QWORD PTR [rdx+8]
  00066	48 c7 42 10 fe
	ff ff ff	 mov	 QWORD PTR [rdx+16], -2
  0006e	48 89 01	 mov	 QWORD PTR [rcx], rax
  00071	48 8b 0a	 mov	 rcx, QWORD PTR [rdx]
  00074	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
  00078	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  0007c	48 c7 02 00 00
	00 00		 mov	 QWORD PTR [rdx], 0
$LN1@BaseExcept@4:

; 93   :     BaseException_clear(self);

  00083	48 8b cb	 mov	 rcx, rbx
  00086	e8 00 00 00 00	 call	 BaseException_clear

; 94   :     Py_TYPE(self)->tp_free((PyObject *)self);

  0008b	4c 8b 5b 58	 mov	 r11, QWORD PTR [rbx+88]
  0008f	48 8b cb	 mov	 rcx, rbx

; 95   : }

  00092	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00096	5b		 pop	 rbx
  00097	49 ff a3 98 01
	00 00		 rex_jmp QWORD PTR [r11+408]
BaseException_dealloc ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BH@KIKAMKPB@BaseException_traverse?$AA@	; `string'
EXTRN	_PyParallel_ContextGuardFailure:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$BaseException_traverse DD imagerel BaseException_traverse
	DD	imagerel BaseException_traverse+318
	DD	imagerel $unwind$BaseException_traverse
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_traverse DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT ??_C@_0BH@KIKAMKPB@BaseException_traverse?$AA@
CONST	SEGMENT
??_C@_0BH@KIKAMKPB@BaseException_traverse?$AA@ DB 'BaseException_traverse'
	DB	00H						; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT BaseException_traverse
_TEXT	SEGMENT
self$ = 48
visit$ = 56
arg$ = 64
BaseException_traverse PROC				; COMDAT

; 99   : {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	49 8b f8	 mov	 rdi, r8
  00012	48 8b f2	 mov	 rsi, rdx
  00015	48 8b d9	 mov	 rbx, rcx

; 100  :     Py_VISIT(self->dict);

  00018	e8 00 00 00 00	 call	 _Py_PXCTX
  0001d	85 c0		 test	 eax, eax
  0001f	74 1a		 je	 SHORT $LN27@BaseExcept@5
  00021	45 33 c9	 xor	 r9d, r9d
  00024	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0002b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BH@KIKAMKPB@BaseException_traverse?$AA@
  00032	45 8d 41 64	 lea	 r8d, QWORD PTR [r9+100]
  00036	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN27@BaseExcept@5:
  0003b	48 8b 4b 60	 mov	 rcx, QWORD PTR [rbx+96]
  0003f	48 85 c9	 test	 rcx, rcx
  00042	74 0d		 je	 SHORT $LN29@BaseExcept@5
  00044	48 8b d7	 mov	 rdx, rdi
  00047	ff d6		 call	 rsi
  00049	85 c0		 test	 eax, eax
  0004b	0f 85 dd 00 00
	00		 jne	 $LN31@BaseExcept@5
$LN29@BaseExcept@5:

; 101  :     Py_VISIT(self->args);

  00051	e8 00 00 00 00	 call	 _Py_PXCTX
  00056	85 c0		 test	 eax, eax
  00058	74 1a		 je	 SHORT $LN21@BaseExcept@5
  0005a	45 33 c9	 xor	 r9d, r9d
  0005d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00064	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BH@KIKAMKPB@BaseException_traverse?$AA@
  0006b	45 8d 41 65	 lea	 r8d, QWORD PTR [r9+101]
  0006f	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN21@BaseExcept@5:
  00074	48 8b 4b 68	 mov	 rcx, QWORD PTR [rbx+104]
  00078	48 85 c9	 test	 rcx, rcx
  0007b	74 0d		 je	 SHORT $LN23@BaseExcept@5
  0007d	48 8b d7	 mov	 rdx, rdi
  00080	ff d6		 call	 rsi
  00082	85 c0		 test	 eax, eax
  00084	0f 85 a4 00 00
	00		 jne	 $LN31@BaseExcept@5
$LN23@BaseExcept@5:

; 102  :     Py_VISIT(self->traceback);

  0008a	e8 00 00 00 00	 call	 _Py_PXCTX
  0008f	85 c0		 test	 eax, eax
  00091	74 1a		 je	 SHORT $LN15@BaseExcept@5
  00093	45 33 c9	 xor	 r9d, r9d
  00096	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0009d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BH@KIKAMKPB@BaseException_traverse?$AA@
  000a4	45 8d 41 66	 lea	 r8d, QWORD PTR [r9+102]
  000a8	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN15@BaseExcept@5:
  000ad	48 8b 4b 70	 mov	 rcx, QWORD PTR [rbx+112]
  000b1	48 85 c9	 test	 rcx, rcx
  000b4	74 09		 je	 SHORT $LN17@BaseExcept@5
  000b6	48 8b d7	 mov	 rdx, rdi
  000b9	ff d6		 call	 rsi
  000bb	85 c0		 test	 eax, eax
  000bd	75 6f		 jne	 SHORT $LN31@BaseExcept@5
$LN17@BaseExcept@5:

; 103  :     Py_VISIT(self->cause);

  000bf	e8 00 00 00 00	 call	 _Py_PXCTX
  000c4	85 c0		 test	 eax, eax
  000c6	74 1a		 je	 SHORT $LN9@BaseExcept@5
  000c8	45 33 c9	 xor	 r9d, r9d
  000cb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  000d2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BH@KIKAMKPB@BaseException_traverse?$AA@
  000d9	45 8d 41 67	 lea	 r8d, QWORD PTR [r9+103]
  000dd	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN9@BaseExcept@5:
  000e2	48 8b 8b 80 00
	00 00		 mov	 rcx, QWORD PTR [rbx+128]
  000e9	48 85 c9	 test	 rcx, rcx
  000ec	74 09		 je	 SHORT $LN11@BaseExcept@5
  000ee	48 8b d7	 mov	 rdx, rdi
  000f1	ff d6		 call	 rsi
  000f3	85 c0		 test	 eax, eax
  000f5	75 37		 jne	 SHORT $LN31@BaseExcept@5
$LN11@BaseExcept@5:

; 104  :     Py_VISIT(self->context);

  000f7	e8 00 00 00 00	 call	 _Py_PXCTX
  000fc	85 c0		 test	 eax, eax
  000fe	74 1a		 je	 SHORT $LN3@BaseExcept@5
  00100	45 33 c9	 xor	 r9d, r9d
  00103	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0010a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BH@KIKAMKPB@BaseException_traverse?$AA@
  00111	45 8d 41 68	 lea	 r8d, QWORD PTR [r9+104]
  00115	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN3@BaseExcept@5:
  0011a	48 8b 4b 78	 mov	 rcx, QWORD PTR [rbx+120]
  0011e	48 85 c9	 test	 rcx, rcx
  00121	74 09		 je	 SHORT $LN5@BaseExcept@5
  00123	48 8b d7	 mov	 rdx, rdi
  00126	ff d6		 call	 rsi
  00128	85 c0		 test	 eax, eax
  0012a	75 02		 jne	 SHORT $LN31@BaseExcept@5
$LN5@BaseExcept@5:

; 105  :     return 0;

  0012c	33 c0		 xor	 eax, eax
$LN31@BaseExcept@5:

; 106  : }

  0012e	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00133	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  00138	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0013c	5f		 pop	 rdi
  0013d	c3		 ret	 0
BaseException_traverse ENDP
_TEXT	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
EXTRN	PyUnicode_FromString:PROC
EXTRN	PyObject_Str:PROC
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT BaseException_str
_TEXT	SEGMENT
self$ = 8
BaseException_str PROC					; COMDAT

; 111  :     switch (PyTuple_GET_SIZE(self->args)) {

  00000	48 8b 49 68	 mov	 rcx, QWORD PTR [rcx+104]
  00004	48 8b 41 60	 mov	 rax, QWORD PTR [rcx+96]
  00008	48 85 c0	 test	 rax, rax
  0000b	74 0e		 je	 SHORT $LN3@BaseExcept@6
  0000d	48 ff c8	 dec	 rax

; 116  :     default:
; 117  :         return PyObject_Str(self->args);

  00010	75 04		 jne	 SHORT $LN8@BaseExcept@6

; 114  :     case 1:
; 115  :         return PyObject_Str(PyTuple_GET_ITEM(self->args, 0));

  00012	48 8b 49 70	 mov	 rcx, QWORD PTR [rcx+112]
$LN8@BaseExcept@6:

; 118  :     }
; 119  : }

  00016	e9 00 00 00 00	 jmp	 PyObject_Str
$LN3@BaseExcept@6:

; 112  :     case 0:
; 113  :         return PyUnicode_FromString("");

  0001b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@

; 118  :     }
; 119  : }

  00022	e9 00 00 00 00	 jmp	 PyUnicode_FromString
BaseException_str ENDP
_TEXT	ENDS
PUBLIC	??_C@_04PPHNBMDJ@?$CFs?$CFR?$AA@		; `string'
EXTRN	PyUnicode_FromFormat:PROC
EXTRN	__imp_strrchr:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$BaseException_repr DD imagerel BaseException_repr
	DD	imagerel BaseException_repr+73
	DD	imagerel $unwind$BaseException_repr
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_repr DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT ??_C@_04PPHNBMDJ@?$CFs?$CFR?$AA@
CONST	SEGMENT
??_C@_04PPHNBMDJ@?$CFs?$CFR?$AA@ DB '%s%R', 00H		; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT BaseException_repr
_TEXT	SEGMENT
self$ = 48
BaseException_repr PROC					; COMDAT

; 123  : {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 124  :     char *name;
; 125  :     char *dot;
; 126  : 
; 127  :     name = (char *)Py_TYPE(self)->tp_name;

  0000a	48 8b 41 58	 mov	 rax, QWORD PTR [rcx+88]
  0000e	48 8b f9	 mov	 rdi, rcx

; 128  :     dot = strrchr(name, '.');

  00011	ba 2e 00 00 00	 mov	 edx, 46			; 0000002eH
  00016	48 8b 58 70	 mov	 rbx, QWORD PTR [rax+112]
  0001a	48 8b cb	 mov	 rcx, rbx
  0001d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_strrchr

; 129  :     if (dot != NULL) name = dot+1;

  00023	48 85 c0	 test	 rax, rax
  00026	74 04		 je	 SHORT $LN1@BaseExcept@7
  00028	48 8d 58 01	 lea	 rbx, QWORD PTR [rax+1]
$LN1@BaseExcept@7:

; 130  : 
; 131  :     return PyUnicode_FromFormat("%s%R", name, self->args);

  0002c	4c 8b 47 68	 mov	 r8, QWORD PTR [rdi+104]
  00030	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_04PPHNBMDJ@?$CFs?$CFR?$AA@
  00037	48 8b d3	 mov	 rdx, rbx

; 132  : }

  0003a	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0003f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00043	5f		 pop	 rdi
  00044	e9 00 00 00 00	 jmp	 PyUnicode_FromFormat
BaseException_repr ENDP
_TEXT	ENDS
EXTRN	PyTuple_Pack:PROC
; Function compile flags: /Ogtpy
;	COMDAT BaseException_reduce
_TEXT	SEGMENT
self$ = 8
BaseException_reduce PROC				; COMDAT

; 138  :     if (self->args && self->dict)

  00000	4c 8b 41 68	 mov	 r8, QWORD PTR [rcx+104]
  00004	4d 85 c0	 test	 r8, r8
  00007	74 17		 je	 SHORT $LN2@BaseExcept@8
  00009	4c 8b 49 60	 mov	 r9, QWORD PTR [rcx+96]
  0000d	4d 85 c9	 test	 r9, r9
  00010	74 0e		 je	 SHORT $LN2@BaseExcept@8

; 139  :         return PyTuple_Pack(3, Py_TYPE(self), self->args, self->dict);

  00012	48 8b 51 58	 mov	 rdx, QWORD PTR [rcx+88]
  00016	b9 03 00 00 00	 mov	 ecx, 3

; 142  : }

  0001b	e9 00 00 00 00	 jmp	 PyTuple_Pack
$LN2@BaseExcept@8:

; 140  :     else
; 141  :         return PyTuple_Pack(2, Py_TYPE(self), self->args);

  00020	48 8b 51 58	 mov	 rdx, QWORD PTR [rcx+88]
  00024	b9 02 00 00 00	 mov	 ecx, 2

; 142  : }

  00029	e9 00 00 00 00	 jmp	 PyTuple_Pack
BaseException_reduce ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BK@BPIFALMC@state?5is?5not?5a?5dictionary?$AA@ ; `string'
EXTRN	PyObject_SetAttr:PROC
EXTRN	PyDict_Next:PROC
EXTRN	PyErr_SetString:PROC
EXTRN	_Py_NoneStruct:BYTE
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$BaseException_setstate DD imagerel BaseException_setstate
	DD	imagerel BaseException_setstate+237
	DD	imagerel $unwind$BaseException_setstate
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_setstate DD 040801H
	DD	070045208H
	DD	030026003H
xdata	ENDS
;	COMDAT ??_C@_0BK@BPIFALMC@state?5is?5not?5a?5dictionary?$AA@
CONST	SEGMENT
??_C@_0BK@BPIFALMC@state?5is?5not?5a?5dictionary?$AA@ DB 'state is not a '
	DB	'dictionary', 00H				; `string'
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
CONST	ENDS
;	COMDAT BaseException_setstate
_TEXT	SEGMENT
self$ = 80
d_value$ = 88
state$ = 88
d_key$ = 96
i$ = 104
BaseException_setstate PROC				; COMDAT

; 151  : {

  00000	40 53		 push	 rbx
  00002	56		 push	 rsi
  00003	57		 push	 rdi
  00004	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 152  :     PyObject *d_key, *d_value;
; 153  :     Py_ssize_t i = 0;
; 154  : 
; 155  :     if (state != Py_None) {

  00008	48 8d 35 00 00
	00 00		 lea	 rsi, OFFSET FLAT:_Py_NoneStruct
  0000f	48 8b da	 mov	 rbx, rdx
  00012	48 8b f9	 mov	 rdi, rcx
  00015	48 c7 44 24 68
	00 00 00 00	 mov	 QWORD PTR i$[rsp], 0
  0001e	48 3b d6	 cmp	 rdx, rsi
  00021	74 7e		 je	 SHORT $LN2@BaseExcept@9

; 156  :         if (!PyDict_Check(state)) {

  00023	48 8b 42 58	 mov	 rax, QWORD PTR [rdx+88]
  00027	f7 80 00 01 00
	00 00 00 00 20	 test	 DWORD PTR [rax+256], 536870912 ; 20000000H
  00031	75 1d		 jne	 SHORT $LN12@BaseExcept@9

; 157  :             PyErr_SetString(PyExc_TypeError, "state is not a dictionary");

  00033	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  0003a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BK@BPIFALMC@state?5is?5not?5a?5dictionary?$AA@
  00041	e8 00 00 00 00	 call	 PyErr_SetString
$LN13@BaseExcept@9:

; 158  :             return NULL;

  00046	33 c0		 xor	 eax, eax

; 166  : }

  00048	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004c	5f		 pop	 rdi
  0004d	5e		 pop	 rsi
  0004e	5b		 pop	 rbx
  0004f	c3		 ret	 0
$LN12@BaseExcept@9:

; 159  :         }
; 160  :         while (PyDict_Next(state, &i, &d_key, &d_value)) {

  00050	4c 8d 4c 24 58	 lea	 r9, QWORD PTR d_value$[rsp]
  00055	4c 8d 44 24 60	 lea	 r8, QWORD PTR d_key$[rsp]
  0005a	48 8d 54 24 68	 lea	 rdx, QWORD PTR i$[rsp]
  0005f	48 8b cb	 mov	 rcx, rbx
  00062	e8 00 00 00 00	 call	 PyDict_Next
  00067	85 c0		 test	 eax, eax
  00069	74 36		 je	 SHORT $LN2@BaseExcept@9
  0006b	0f 1f 44 00 00	 npad	 5
$LL3@BaseExcept@9:

; 161  :             if (PyObject_SetAttr(self, d_key, d_value) < 0)

  00070	4c 8b 44 24 58	 mov	 r8, QWORD PTR d_value$[rsp]
  00075	48 8b 54 24 60	 mov	 rdx, QWORD PTR d_key$[rsp]
  0007a	48 8b cf	 mov	 rcx, rdi
  0007d	e8 00 00 00 00	 call	 PyObject_SetAttr
  00082	85 c0		 test	 eax, eax
  00084	78 c0		 js	 SHORT $LN13@BaseExcept@9

; 159  :         }
; 160  :         while (PyDict_Next(state, &i, &d_key, &d_value)) {

  00086	4c 8d 4c 24 58	 lea	 r9, QWORD PTR d_value$[rsp]
  0008b	4c 8d 44 24 60	 lea	 r8, QWORD PTR d_key$[rsp]
  00090	48 8d 54 24 68	 lea	 rdx, QWORD PTR i$[rsp]
  00095	48 8b cb	 mov	 rcx, rbx
  00098	e8 00 00 00 00	 call	 PyDict_Next
  0009d	85 c0		 test	 eax, eax
  0009f	75 cf		 jne	 SHORT $LL3@BaseExcept@9
$LN2@BaseExcept@9:

; 162  :                 return NULL;
; 163  :         }
; 164  :     }
; 165  :     Py_RETURN_NONE;

  000a1	e8 00 00 00 00	 call	 _Py_PXCTX
  000a6	85 c0		 test	 eax, eax
  000a8	75 38		 jne	 SHORT $LN9@BaseExcept@9
  000aa	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  000b1	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  000b8	4c 8b ce	 mov	 r9, rsi
  000bb	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  000c1	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  000c9	e8 00 00 00 00	 call	 _PyParallel_Guard
  000ce	85 c0		 test	 eax, eax
  000d0	75 09		 jne	 SHORT $LN8@BaseExcept@9
  000d2	f6 05 20 00 00
	00 20		 test	 BYTE PTR _Py_NoneStruct+32, 32 ; 00000020H
  000d9	74 07		 je	 SHORT $LN9@BaseExcept@9
$LN8@BaseExcept@9:
  000db	48 ff 05 50 00
	00 00		 inc	 QWORD PTR _Py_NoneStruct+80
$LN9@BaseExcept@9:
  000e2	48 8b c6	 mov	 rax, rsi

; 166  : }

  000e5	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000e9	5f		 pop	 rdi
  000ea	5e		 pop	 rsi
  000eb	5b		 pop	 rbx
  000ec	c3		 ret	 0
BaseException_setstate ENDP
_TEXT	ENDS
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$BaseException_get_args DD imagerel BaseException_get_args
	DD	imagerel BaseException_get_args+178
	DD	imagerel $unwind$BaseException_get_args
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_get_args DD 040a01H
	DD	08340aH
	DD	07006520aH
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
xdata	ENDS
;	COMDAT BaseException_get_args
_TEXT	SEGMENT
self$ = 64
BaseException_get_args PROC				; COMDAT

; 192  : {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 193  :     if (self->args == NULL) {

  0000a	48 8b 59 68	 mov	 rbx, QWORD PTR [rcx+104]
  0000e	48 8b f9	 mov	 rdi, rcx

; 194  :         Py_INCREF(Py_None);

  00011	e8 00 00 00 00	 call	 _Py_PXCTX
  00016	48 85 db	 test	 rbx, rbx
  00019	75 52		 jne	 SHORT $LN1@BaseExcept@10
  0001b	85 c0		 test	 eax, eax
  0001d	75 3c		 jne	 SHORT $LN5@BaseExcept@10
  0001f	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:_Py_NoneStruct
  00026	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0002d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00034	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  0003a	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00042	e8 00 00 00 00	 call	 _PyParallel_Guard
  00047	85 c0		 test	 eax, eax
  00049	75 09		 jne	 SHORT $LN4@BaseExcept@10
  0004b	f6 05 20 00 00
	00 20		 test	 BYTE PTR _Py_NoneStruct+32, 32 ; 00000020H
  00052	74 07		 je	 SHORT $LN5@BaseExcept@10
$LN4@BaseExcept@10:
  00054	48 ff 05 50 00
	00 00		 inc	 QWORD PTR _Py_NoneStruct+80
$LN5@BaseExcept@10:

; 195  :         return Py_None;

  0005b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_NoneStruct

; 199  : }

  00062	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00067	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
$LN1@BaseExcept@10:

; 196  :     }
; 197  :     Py_INCREF(self->args);

  0006d	85 c0		 test	 eax, eax
  0006f	75 32		 jne	 SHORT $LN9@BaseExcept@10
  00071	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00078	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  0007f	4c 8b cb	 mov	 r9, rbx
  00082	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00088	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00090	e8 00 00 00 00	 call	 _PyParallel_Guard
  00095	85 c0		 test	 eax, eax
  00097	75 06		 jne	 SHORT $LN8@BaseExcept@10
  00099	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  0009d	74 04		 je	 SHORT $LN9@BaseExcept@10
$LN8@BaseExcept@10:
  0009f	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN9@BaseExcept@10:

; 198  :     return self->args;

  000a3	48 8b 47 68	 mov	 rax, QWORD PTR [rdi+104]

; 199  : }

  000a7	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  000ac	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000b0	5f		 pop	 rdi
  000b1	c3		 ret	 0
BaseException_get_args ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BH@FNMNGACG@BaseException_set_args?$AA@	; `string'
PUBLIC	??_C@_0BI@GEBKNFED@args?5may?5not?5be?5deleted?$AA@ ; `string'
EXTRN	PySequence_Tuple:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$BaseException_set_args DD imagerel BaseException_set_args
	DD	imagerel BaseException_set_args+45
	DD	imagerel $unwind$BaseException_set_args
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$BaseException_set_args DD imagerel BaseException_set_args+45
	DD	imagerel BaseException_set_args+77
	DD	imagerel $chain$0$BaseException_set_args
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$BaseException_set_args DD imagerel BaseException_set_args+77
	DD	imagerel BaseException_set_args+157
	DD	imagerel $chain$2$BaseException_set_args
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$BaseException_set_args DD 020021H
	DD	087400H
	DD	imagerel BaseException_set_args
	DD	imagerel BaseException_set_args+45
	DD	imagerel $unwind$BaseException_set_args
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$BaseException_set_args DD 020521H
	DD	087405H
	DD	imagerel BaseException_set_args
	DD	imagerel BaseException_set_args+45
	DD	imagerel $unwind$BaseException_set_args
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_set_args DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT ??_C@_0BH@FNMNGACG@BaseException_set_args?$AA@
CONST	SEGMENT
??_C@_0BH@FNMNGACG@BaseException_set_args?$AA@ DB 'BaseException_set_args'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GEBKNFED@args?5may?5not?5be?5deleted?$AA@
CONST	SEGMENT
??_C@_0BI@GEBKNFED@args?5may?5not?5be?5deleted?$AA@ DB 'args may not be d'
	DB	'eleted', 00H				; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT BaseException_set_args
_TEXT	SEGMENT
self$ = 64
val$ = 72
BaseException_set_args PROC				; COMDAT

; 203  : {

  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8b d9	 mov	 rbx, rcx

; 204  :     PyObject *seq;
; 205  :     if (val == NULL) {

  00009	48 85 d2	 test	 rdx, rdx
  0000c	75 1c		 jne	 SHORT $LN6@BaseExcept@11

; 206  :         PyErr_SetString(PyExc_TypeError, "args may not be deleted");

  0000e	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@GEBKNFED@args?5may?5not?5be?5deleted?$AA@
  0001c	e8 00 00 00 00	 call	 PyErr_SetString

; 207  :         return -1;

  00021	83 c8 ff	 or	 eax, -1

; 215  : }

  00024	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00028	5b		 pop	 rbx
  00029	c3		 ret	 0
$LN6@BaseExcept@11:

; 208  :     }
; 209  :     seq = PySequence_Tuple(val);

  0002a	48 8b ca	 mov	 rcx, rdx
  0002d	48 89 7c 24 40	 mov	 QWORD PTR [rsp+64], rdi
  00032	e8 00 00 00 00	 call	 PySequence_Tuple
  00037	48 8b f8	 mov	 rdi, rax

; 210  :     if (!seq)

  0003a	48 85 c0	 test	 rax, rax
  0003d	75 0e		 jne	 SHORT $LN4@BaseExcept@11

; 211  :         return -1;

  0003f	83 c8 ff	 or	 eax, -1
  00042	48 8b 7c 24 40	 mov	 rdi, QWORD PTR [rsp+64]

; 215  : }

  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5b		 pop	 rbx
  0004c	c3		 ret	 0
$LN4@BaseExcept@11:

; 212  :     Py_CLEAR(self->args);

  0004d	4c 8b 4b 68	 mov	 r9, QWORD PTR [rbx+104]
  00051	4d 85 c9	 test	 r9, r9
  00054	74 36		 je	 SHORT $LN3@BaseExcept@11
  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0005d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BH@FNMNGACG@BaseException_set_args?$AA@
  00064	41 b8 d4 00 00
	00		 mov	 r8d, 212		; 000000d4H
  0006a	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00072	e8 00 00 00 00	 call	 _PyParallel_Guard
  00077	85 c0		 test	 eax, eax
  00079	75 11		 jne	 SHORT $LN3@BaseExcept@11
  0007b	48 8b 4b 68	 mov	 rcx, QWORD PTR [rbx+104]
  0007f	48 c7 43 68 00
	00 00 00	 mov	 QWORD PTR [rbx+104], 0
  00087	e8 00 00 00 00	 call	 _Py_DecRef
$LN3@BaseExcept@11:

; 213  :     self->args = seq;

  0008c	48 89 7b 68	 mov	 QWORD PTR [rbx+104], rdi
  00090	48 8b 7c 24 40	 mov	 rdi, QWORD PTR [rsp+64]

; 214  :     return 0;

  00095	33 c0		 xor	 eax, eax

; 215  : }

  00097	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0009b	5b		 pop	 rbx
  0009c	c3		 ret	 0
BaseException_set_args ENDP
_TEXT	ENDS
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$BaseException_get_tb DD imagerel BaseException_get_tb
	DD	imagerel BaseException_get_tb+178
	DD	imagerel $unwind$BaseException_get_tb
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_get_tb DD 040a01H
	DD	08340aH
	DD	07006520aH
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
xdata	ENDS
;	COMDAT BaseException_get_tb
_TEXT	SEGMENT
self$ = 64
BaseException_get_tb PROC				; COMDAT

; 219  : {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 220  :     if (self->traceback == NULL) {

  0000a	48 8b 59 70	 mov	 rbx, QWORD PTR [rcx+112]
  0000e	48 8b f9	 mov	 rdi, rcx

; 221  :         Py_INCREF(Py_None);

  00011	e8 00 00 00 00	 call	 _Py_PXCTX
  00016	48 85 db	 test	 rbx, rbx
  00019	75 52		 jne	 SHORT $LN1@BaseExcept@12
  0001b	85 c0		 test	 eax, eax
  0001d	75 3c		 jne	 SHORT $LN5@BaseExcept@12
  0001f	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:_Py_NoneStruct
  00026	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0002d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00034	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  0003a	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00042	e8 00 00 00 00	 call	 _PyParallel_Guard
  00047	85 c0		 test	 eax, eax
  00049	75 09		 jne	 SHORT $LN4@BaseExcept@12
  0004b	f6 05 20 00 00
	00 20		 test	 BYTE PTR _Py_NoneStruct+32, 32 ; 00000020H
  00052	74 07		 je	 SHORT $LN5@BaseExcept@12
$LN4@BaseExcept@12:
  00054	48 ff 05 50 00
	00 00		 inc	 QWORD PTR _Py_NoneStruct+80
$LN5@BaseExcept@12:

; 222  :         return Py_None;

  0005b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_NoneStruct

; 226  : }

  00062	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00067	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006b	5f		 pop	 rdi
  0006c	c3		 ret	 0
$LN1@BaseExcept@12:

; 223  :     }
; 224  :     Py_INCREF(self->traceback);

  0006d	85 c0		 test	 eax, eax
  0006f	75 32		 jne	 SHORT $LN9@BaseExcept@12
  00071	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00078	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  0007f	4c 8b cb	 mov	 r9, rbx
  00082	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00088	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00090	e8 00 00 00 00	 call	 _PyParallel_Guard
  00095	85 c0		 test	 eax, eax
  00097	75 06		 jne	 SHORT $LN8@BaseExcept@12
  00099	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  0009d	74 04		 je	 SHORT $LN9@BaseExcept@12
$LN8@BaseExcept@12:
  0009f	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN9@BaseExcept@12:

; 225  :     return self->traceback;

  000a3	48 8b 47 70	 mov	 rax, QWORD PTR [rdi+112]

; 226  : }

  000a7	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  000ac	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000b0	5f		 pop	 rdi
  000b1	c3		 ret	 0
BaseException_get_tb ENDP
_TEXT	ENDS
PUBLIC	??_C@_0CK@DDGILAGJ@__traceback__?5must?5be?5a?5tracebac@ ; `string'
PUBLIC	??_C@_0CB@EGAPKDAG@__traceback__?5may?5not?5be?5deleted@ ; `string'
EXTRN	PyTraceBack_Type:BYTE
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$BaseException_set_tb DD imagerel BaseException_set_tb
	DD	imagerel BaseException_set_tb+202
	DD	imagerel $unwind$BaseException_set_tb
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_set_tb DD 040a01H
	DD	08340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT ??_C@_0CK@DDGILAGJ@__traceback__?5must?5be?5a?5tracebac@
CONST	SEGMENT
??_C@_0CK@DDGILAGJ@__traceback__?5must?5be?5a?5tracebac@ DB '__traceback_'
	DB	'_ must be a traceback or None', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@EGAPKDAG@__traceback__?5may?5not?5be?5deleted@
CONST	SEGMENT
??_C@_0CB@EGAPKDAG@__traceback__?5may?5not?5be?5deleted@ DB '__traceback_'
	DB	'_ may not be deleted', 00H			; `string'
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
CONST	ENDS
;	COMDAT BaseException_set_tb
_TEXT	SEGMENT
self$ = 64
tb$ = 72
BaseException_set_tb PROC				; COMDAT

; 230  : {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b da	 mov	 rbx, rdx
  0000d	48 8b f9	 mov	 rdi, rcx

; 231  :     if (tb == NULL) {

  00010	48 85 d2	 test	 rdx, rdx
  00013	75 21		 jne	 SHORT $LN11@BaseExcept@13

; 232  :         PyErr_SetString(PyExc_TypeError, "__traceback__ may not be deleted");

  00015	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  0001c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CB@EGAPKDAG@__traceback__?5may?5not?5be?5deleted@
  00023	e8 00 00 00 00	 call	 PyErr_SetString

; 233  :         return -1;

  00028	83 c8 ff	 or	 eax, -1

; 244  :     return 0;
; 245  : }

  0002b	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00030	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
$LN11@BaseExcept@13:

; 234  :     }
; 235  :     else if (!(tb == Py_None || PyTraceBack_Check(tb))) {

  00036	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_NoneStruct
  0003d	48 3b d0	 cmp	 rdx, rax
  00040	74 2e		 je	 SHORT $LN8@BaseExcept@13
  00042	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:PyTraceBack_Type
  00049	48 39 42 58	 cmp	 QWORD PTR [rdx+88], rax
  0004d	74 21		 je	 SHORT $LN8@BaseExcept@13

; 236  :         PyErr_SetString(PyExc_TypeError,
; 237  :                         "__traceback__ must be a traceback or None");

  0004f	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  00056	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CK@DDGILAGJ@__traceback__?5must?5be?5a?5tracebac@
  0005d	e8 00 00 00 00	 call	 PyErr_SetString

; 238  :         return -1;

  00062	83 c8 ff	 or	 eax, -1

; 244  :     return 0;
; 245  : }

  00065	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  0006a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006e	5f		 pop	 rdi
  0006f	c3		 ret	 0
$LN8@BaseExcept@13:

; 239  :     }
; 240  : 
; 241  :     Py_XINCREF(tb);

  00070	e8 00 00 00 00	 call	 _Py_PXCTX
  00075	85 c0		 test	 eax, eax
  00077	75 32		 jne	 SHORT $LN7@BaseExcept@13
  00079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00080	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00087	4c 8b cb	 mov	 r9, rbx
  0008a	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00090	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00098	e8 00 00 00 00	 call	 _PyParallel_Guard
  0009d	85 c0		 test	 eax, eax
  0009f	75 06		 jne	 SHORT $LN14@BaseExcept@13
  000a1	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  000a5	74 04		 je	 SHORT $LN7@BaseExcept@13
$LN14@BaseExcept@13:
  000a7	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN7@BaseExcept@13:

; 242  :     Py_XDECREF(self->traceback);

  000ab	48 8b 4f 70	 mov	 rcx, QWORD PTR [rdi+112]
  000af	48 85 c9	 test	 rcx, rcx
  000b2	74 05		 je	 SHORT $LN3@BaseExcept@13
  000b4	e8 00 00 00 00	 call	 _Py_DecRef
$LN3@BaseExcept@13:

; 243  :     self->traceback = tb;

  000b9	48 89 5f 70	 mov	 QWORD PTR [rdi+112], rbx

; 244  :     return 0;
; 245  : }

  000bd	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  000c2	33 c0		 xor	 eax, eax
  000c4	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000c8	5f		 pop	 rdi
  000c9	c3		 ret	 0
BaseException_set_tb ENDP
_TEXT	ENDS
PUBLIC	PyException_GetTraceback
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$PyException_GetTraceback DD imagerel $LN14
	DD	imagerel $LN14+110
	DD	imagerel $unwind$PyException_GetTraceback
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyException_GetTraceback DD 040a01H
	DD	08340aH
	DD	07006520aH
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
xdata	ENDS
;	COMDAT PyException_GetTraceback
_TEXT	SEGMENT
self$ = 64
PyException_GetTraceback PROC				; COMDAT

; 315  : PyException_GetTraceback(PyObject *self) {

$LN14:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 316  :     PyBaseExceptionObject *base_self = (PyBaseExceptionObject *)self;
; 317  :     Py_XINCREF(base_self->traceback);

  0000a	48 8b 79 70	 mov	 rdi, QWORD PTR [rcx+112]
  0000e	48 8b d9	 mov	 rbx, rcx
  00011	48 85 ff	 test	 rdi, rdi
  00014	74 4a		 je	 SHORT $LN13@PyExceptio
  00016	e8 00 00 00 00	 call	 _Py_PXCTX
  0001b	85 c0		 test	 eax, eax
  0001d	75 32		 jne	 SHORT $LN11@PyExceptio
  0001f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00026	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  0002d	4c 8b cf	 mov	 r9, rdi
  00030	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00036	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  0003e	e8 00 00 00 00	 call	 _PyParallel_Guard
  00043	85 c0		 test	 eax, eax
  00045	75 06		 jne	 SHORT $LN7@PyExceptio
  00047	f6 47 20 20	 test	 BYTE PTR [rdi+32], 32	; 00000020H
  0004b	74 04		 je	 SHORT $LN11@PyExceptio
$LN7@PyExceptio:
  0004d	48 ff 47 50	 inc	 QWORD PTR [rdi+80]
$LN11@PyExceptio:

; 318  :     return base_self->traceback;

  00051	48 8b 43 70	 mov	 rax, QWORD PTR [rbx+112]

; 319  : }

  00055	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  0005a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005e	5f		 pop	 rdi
  0005f	c3		 ret	 0
$LN13@PyExceptio:

; 318  :     return base_self->traceback;

  00060	48 8b c7	 mov	 rax, rdi

; 319  : }

  00063	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00068	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006c	5f		 pop	 rdi
  0006d	c3		 ret	 0
PyException_GetTraceback ENDP
_TEXT	ENDS
PUBLIC	PyException_SetTraceback
; Function compile flags: /Ogtpy
;	COMDAT PyException_SetTraceback
_TEXT	SEGMENT
self$ = 8
tb$ = 16
PyException_SetTraceback PROC				; COMDAT

; 324  :     return BaseException_set_tb((PyBaseExceptionObject *)self, tb);
; 325  : }

  00000	e9 00 00 00 00	 jmp	 BaseException_set_tb
PyException_SetTraceback ENDP
_TEXT	ENDS
PUBLIC	PyException_GetCause
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$PyException_GetCause DD imagerel $LN14
	DD	imagerel $LN14+86
	DD	imagerel $unwind$PyException_GetCause
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyException_GetCause DD 020601H
	DD	030025206H
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
xdata	ENDS
;	COMDAT PyException_GetCause
_TEXT	SEGMENT
self$ = 64
PyException_GetCause PROC				; COMDAT

; 328  : PyException_GetCause(PyObject *self) {

$LN14:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 329  :     PyObject *cause = ((PyBaseExceptionObject *)self)->cause;

  00006	48 8b 99 80 00
	00 00		 mov	 rbx, QWORD PTR [rcx+128]

; 330  :     Py_XINCREF(cause);

  0000d	48 85 db	 test	 rbx, rbx
  00010	74 3b		 je	 SHORT $LN13@PyExceptio@2
  00012	e8 00 00 00 00	 call	 _Py_PXCTX
  00017	85 c0		 test	 eax, eax
  00019	75 32		 jne	 SHORT $LN13@PyExceptio@2
  0001b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00022	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00029	4c 8b cb	 mov	 r9, rbx
  0002c	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00032	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  0003a	e8 00 00 00 00	 call	 _PyParallel_Guard
  0003f	85 c0		 test	 eax, eax
  00041	75 06		 jne	 SHORT $LN7@PyExceptio@2
  00043	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  00047	74 04		 je	 SHORT $LN13@PyExceptio@2
$LN7@PyExceptio@2:
  00049	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN13@PyExceptio@2:

; 331  :     return cause;

  0004d	48 8b c3	 mov	 rax, rbx

; 332  : }

  00050	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00054	5b		 pop	 rbx
  00055	c3		 ret	 0
PyException_GetCause ENDP
_TEXT	ENDS
PUBLIC	PyException_SetCause
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$PyException_SetCause DD imagerel $LN18
	DD	imagerel $LN18+146
	DD	imagerel $unwind$PyException_SetCause
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyException_SetCause DD 020601H
	DD	030025206H
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
xdata	ENDS
;	COMDAT PyException_SetCause
_TEXT	SEGMENT
self$ = 64
cause$ = 72
PyException_SetCause PROC				; COMDAT

; 336  : PyException_SetCause(PyObject *self, PyObject *cause) {

$LN18:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 337  :     PyObject *old_cause = ((PyBaseExceptionObject *)self)->cause;

  00006	48 8b 99 80 00
	00 00		 mov	 rbx, QWORD PTR [rcx+128]

; 338  :     ((PyBaseExceptionObject *)self)->cause = cause;
; 339  :     ((PyBaseExceptionObject *)self)->suppress_context = 1;

  0000d	c6 81 88 00 00
	00 01		 mov	 BYTE PTR [rcx+136], 1
  00014	48 89 91 80 00
	00 00		 mov	 QWORD PTR [rcx+128], rdx

; 340  :     Py_XDECREF(old_cause);

  0001b	48 85 db	 test	 rbx, rbx
  0001e	74 6c		 je	 SHORT $LN3@PyExceptio@3
  00020	e8 00 00 00 00	 call	 _Py_PXCTX
  00025	85 c0		 test	 eax, eax
  00027	75 63		 jne	 SHORT $LN3@PyExceptio@3
  00029	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  0002d	a8 20		 test	 al, 32			; 00000020H
  0002f	75 53		 jne	 SHORT $LN11@PyExceptio@3
  00031	84 c0		 test	 al, al
  00033	78 4f		 js	 SHORT $LN11@PyExceptio@3
  00035	a8 02		 test	 al, 2
  00037	75 53		 jne	 SHORT $LN3@PyExceptio@3
  00039	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  0003d	75 4d		 jne	 SHORT $LN3@PyExceptio@3
  0003f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00046	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  0004d	4c 8b cb	 mov	 r9, rbx
  00050	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  00056	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0005e	e8 00 00 00 00	 call	 _PyParallel_Guard
  00063	48 8b cb	 mov	 rcx, rbx
  00066	85 c0		 test	 eax, eax
  00068	74 0a		 je	 SHORT $LN16@PyExceptio@3

; 341  : }

  0006a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006e	5b		 pop	 rbx
  0006f	e9 00 00 00 00	 jmp	 _Px_Dealloc

; 340  :     Py_XDECREF(old_cause);

$LN16@PyExceptio@3:
  00074	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]

; 341  : }

  00078	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0007c	5b		 pop	 rbx
  0007d	48 ff a0 88 00
	00 00		 rex_jmp QWORD PTR [rax+136]

; 340  :     Py_XDECREF(old_cause);

$LN11@PyExceptio@3:
  00084	48 8b cb	 mov	 rcx, rbx
  00087	e8 00 00 00 00	 call	 Px_DecRef
$LN3@PyExceptio@3:

; 341  : }

  0008c	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00090	5b		 pop	 rbx
  00091	c3		 ret	 0
PyException_SetCause ENDP
_TEXT	ENDS
PUBLIC	PyException_GetContext
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$PyException_GetContext DD imagerel $LN14
	DD	imagerel $LN14+83
	DD	imagerel $unwind$PyException_GetContext
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyException_GetContext DD 020601H
	DD	030025206H
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
xdata	ENDS
;	COMDAT PyException_GetContext
_TEXT	SEGMENT
self$ = 64
PyException_GetContext PROC				; COMDAT

; 344  : PyException_GetContext(PyObject *self) {

$LN14:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 345  :     PyObject *context = ((PyBaseExceptionObject *)self)->context;

  00006	48 8b 59 78	 mov	 rbx, QWORD PTR [rcx+120]

; 346  :     Py_XINCREF(context);

  0000a	48 85 db	 test	 rbx, rbx
  0000d	74 3b		 je	 SHORT $LN13@PyExceptio@4
  0000f	e8 00 00 00 00	 call	 _Py_PXCTX
  00014	85 c0		 test	 eax, eax
  00016	75 32		 jne	 SHORT $LN13@PyExceptio@4
  00018	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0001f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00026	4c 8b cb	 mov	 r9, rbx
  00029	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  0002f	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00037	e8 00 00 00 00	 call	 _PyParallel_Guard
  0003c	85 c0		 test	 eax, eax
  0003e	75 06		 jne	 SHORT $LN7@PyExceptio@4
  00040	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  00044	74 04		 je	 SHORT $LN13@PyExceptio@4
$LN7@PyExceptio@4:
  00046	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN13@PyExceptio@4:

; 347  :     return context;

  0004a	48 8b c3	 mov	 rax, rbx

; 348  : }

  0004d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00051	5b		 pop	 rbx
  00052	c3		 ret	 0
PyException_GetContext ENDP
_TEXT	ENDS
PUBLIC	PyException_SetContext
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$PyException_SetContext DD imagerel $LN18
	DD	imagerel $LN18+133
	DD	imagerel $unwind$PyException_SetContext
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyException_SetContext DD 020601H
	DD	030025206H
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
xdata	ENDS
;	COMDAT PyException_SetContext
_TEXT	SEGMENT
self$ = 64
context$ = 72
PyException_SetContext PROC				; COMDAT

; 352  : PyException_SetContext(PyObject *self, PyObject *context) {

$LN18:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 353  :     PyObject *old_context = ((PyBaseExceptionObject *)self)->context;

  00006	48 8b 59 78	 mov	 rbx, QWORD PTR [rcx+120]

; 354  :     ((PyBaseExceptionObject *)self)->context = context;

  0000a	48 89 51 78	 mov	 QWORD PTR [rcx+120], rdx

; 355  :     Py_XDECREF(old_context);

  0000e	48 85 db	 test	 rbx, rbx
  00011	74 6c		 je	 SHORT $LN3@PyExceptio@5
  00013	e8 00 00 00 00	 call	 _Py_PXCTX
  00018	85 c0		 test	 eax, eax
  0001a	75 63		 jne	 SHORT $LN3@PyExceptio@5
  0001c	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  00020	a8 20		 test	 al, 32			; 00000020H
  00022	75 53		 jne	 SHORT $LN11@PyExceptio@5
  00024	84 c0		 test	 al, al
  00026	78 4f		 js	 SHORT $LN11@PyExceptio@5
  00028	a8 02		 test	 al, 2
  0002a	75 53		 jne	 SHORT $LN3@PyExceptio@5
  0002c	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  00030	75 4d		 jne	 SHORT $LN3@PyExceptio@5
  00032	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  00040	4c 8b cb	 mov	 r9, rbx
  00043	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  00049	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00051	e8 00 00 00 00	 call	 _PyParallel_Guard
  00056	48 8b cb	 mov	 rcx, rbx
  00059	85 c0		 test	 eax, eax
  0005b	74 0a		 je	 SHORT $LN16@PyExceptio@5

; 356  : }

  0005d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00061	5b		 pop	 rbx
  00062	e9 00 00 00 00	 jmp	 _Px_Dealloc

; 355  :     Py_XDECREF(old_context);

$LN16@PyExceptio@5:
  00067	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]

; 356  : }

  0006b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0006f	5b		 pop	 rbx
  00070	48 ff a0 88 00
	00 00		 rex_jmp QWORD PTR [rax+136]

; 355  :     Py_XDECREF(old_context);

$LN11@PyExceptio@5:
  00077	48 8b cb	 mov	 rcx, rbx
  0007a	e8 00 00 00 00	 call	 Px_DecRef
$LN3@PyExceptio@5:

; 356  : }

  0007f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00083	5b		 pop	 rbx
  00084	c3		 ret	 0
PyException_SetContext ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BD@BGOBGIME@StopIteration_init?$AA@	; `string'
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$StopIteration_init DD imagerel StopIteration_init
	DD	imagerel StopIteration_init+227
	DD	imagerel $unwind$StopIteration_init
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$StopIteration_init DD 060f01H
	DD	09640fH
	DD	08340fH
	DD	0700b520fH
xdata	ENDS
;	COMDAT ??_C@_0BD@BGOBGIME@StopIteration_init?$AA@
CONST	SEGMENT
??_C@_0BD@BGOBGIME@StopIteration_init?$AA@ DB 'StopIteration_init', 00H ; `string'
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
CONST	ENDS
;	COMDAT StopIteration_init
_TEXT	SEGMENT
self$ = 64
args$ = 72
kwds$ = 80
StopIteration_init PROC					; COMDAT

; 490  : {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 491  :     Py_ssize_t size = PyTuple_GET_SIZE(args);

  0000f	48 8b 72 60	 mov	 rsi, QWORD PTR [rdx+96]
  00013	48 8b da	 mov	 rbx, rdx
  00016	48 8b f9	 mov	 rdi, rcx

; 492  :     PyObject *value;
; 493  : 
; 494  :     if (BaseException_init((PyBaseExceptionObject *)self, args, kwds) == -1)

  00019	e8 00 00 00 00	 call	 BaseException_init
  0001e	83 f8 ff	 cmp	 eax, -1
  00021	75 12		 jne	 SHORT $LN6@StopIterat

; 495  :         return -1;

  00023	0b c0		 or	 eax, eax

; 502  :     self->value = value;
; 503  :     return 0;
; 504  : }

  00025	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  0002a	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  0002f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00033	5f		 pop	 rdi
  00034	c3		 ret	 0
$LN6@StopIterat:

; 496  :     Py_CLEAR(self->value);

  00035	4c 8b 8f 90 00
	00 00		 mov	 r9, QWORD PTR [rdi+144]
  0003c	4d 85 c9	 test	 r9, r9
  0003f	74 3c		 je	 SHORT $LN5@StopIterat
  00041	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00048	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@BGOBGIME@StopIteration_init?$AA@
  0004f	41 b8 f0 01 00
	00		 mov	 r8d, 496		; 000001f0H
  00055	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0005d	e8 00 00 00 00	 call	 _PyParallel_Guard
  00062	85 c0		 test	 eax, eax
  00064	75 17		 jne	 SHORT $LN5@StopIterat
  00066	48 8b 8f 90 00
	00 00		 mov	 rcx, QWORD PTR [rdi+144]
  0006d	48 c7 87 90 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rdi+144], 0
  00078	e8 00 00 00 00	 call	 _Py_DecRef
$LN5@StopIterat:

; 497  :     if (size > 0)

  0007d	48 85 f6	 test	 rsi, rsi
  00080	7e 06		 jle	 SHORT $LN2@StopIterat

; 498  :         value = PyTuple_GET_ITEM(args, 0);

  00082	48 8b 5b 70	 mov	 rbx, QWORD PTR [rbx+112]

; 499  :     else

  00086	eb 07		 jmp	 SHORT $LN1@StopIterat
$LN2@StopIterat:

; 500  :         value = Py_None;

  00088	48 8d 1d 00 00
	00 00		 lea	 rbx, OFFSET FLAT:_Py_NoneStruct
$LN1@StopIterat:

; 501  :     Py_INCREF(value);

  0008f	e8 00 00 00 00	 call	 _Py_PXCTX
  00094	85 c0		 test	 eax, eax
  00096	75 32		 jne	 SHORT $LN11@StopIterat
  00098	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0009f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  000a6	4c 8b cb	 mov	 r9, rbx
  000a9	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  000af	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  000b7	e8 00 00 00 00	 call	 _PyParallel_Guard
  000bc	85 c0		 test	 eax, eax
  000be	75 06		 jne	 SHORT $LN10@StopIterat
  000c0	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  000c4	74 04		 je	 SHORT $LN11@StopIterat
$LN10@StopIterat:
  000c6	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN11@StopIterat:

; 502  :     self->value = value;
; 503  :     return 0;
; 504  : }

  000ca	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  000cf	48 89 9f 90 00
	00 00		 mov	 QWORD PTR [rdi+144], rbx
  000d6	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  000db	33 c0		 xor	 eax, eax
  000dd	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000e1	5f		 pop	 rdi
  000e2	c3		 ret	 0
StopIteration_init ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BE@KHGFCJA@StopIteration_clear?$AA@	; `string'
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$StopIteration_clear DD imagerel StopIteration_clear
	DD	imagerel StopIteration_clear+66
	DD	imagerel $unwind$StopIteration_clear
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$StopIteration_clear DD imagerel StopIteration_clear+66
	DD	imagerel StopIteration_clear+186
	DD	imagerel $chain$0$StopIteration_clear
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$StopIteration_clear DD imagerel StopIteration_clear+186
	DD	imagerel StopIteration_clear+214
	DD	imagerel $chain$2$StopIteration_clear
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$StopIteration_clear DD imagerel StopIteration_clear+214
	DD	imagerel StopIteration_clear+227
	DD	imagerel $chain$4$StopIteration_clear
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$StopIteration_clear DD imagerel StopIteration_clear+227
	DD	imagerel StopIteration_clear+240
	DD	imagerel $chain$5$StopIteration_clear
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$StopIteration_clear DD 021H
	DD	imagerel StopIteration_clear
	DD	imagerel StopIteration_clear+66
	DD	imagerel $unwind$StopIteration_clear
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$StopIteration_clear DD 020021H
	DD	083400H
	DD	imagerel StopIteration_clear
	DD	imagerel StopIteration_clear+66
	DD	imagerel $unwind$StopIteration_clear
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$StopIteration_clear DD 020021H
	DD	083400H
	DD	imagerel StopIteration_clear
	DD	imagerel StopIteration_clear+66
	DD	imagerel $unwind$StopIteration_clear
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$StopIteration_clear DD 020521H
	DD	083405H
	DD	imagerel StopIteration_clear
	DD	imagerel StopIteration_clear+66
	DD	imagerel $unwind$StopIteration_clear
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$StopIteration_clear DD 020601H
	DD	070025206H
xdata	ENDS
;	COMDAT ??_C@_0BE@KHGFCJA@StopIteration_clear?$AA@
CONST	SEGMENT
??_C@_0BE@KHGFCJA@StopIteration_clear?$AA@ DB 'StopIteration_clear', 00H ; `string'
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
CONST	ENDS
;	COMDAT StopIteration_clear
_TEXT	SEGMENT
self$ = 64
StopIteration_clear PROC				; COMDAT

; 508  : {

  00000	40 57		 push	 rdi
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 509  :     Py_CLEAR(self->value);

  00006	4c 8b 89 90 00
	00 00		 mov	 r9, QWORD PTR [rcx+144]
  0000d	48 8b f9	 mov	 rdi, rcx
  00010	4d 85 c9	 test	 r9, r9
  00013	0f 84 ca 00 00
	00		 je	 $LN3@StopIterat@2
  00019	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00020	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BE@KHGFCJA@StopIteration_clear?$AA@
  00027	41 b8 fd 01 00
	00		 mov	 r8d, 509		; 000001fdH
  0002d	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00035	e8 00 00 00 00	 call	 _PyParallel_Guard
  0003a	85 c0		 test	 eax, eax
  0003c	0f 85 a1 00 00
	00		 jne	 $LN3@StopIterat@2
  00042	48 89 5c 24 40	 mov	 QWORD PTR [rsp+64], rbx
  00047	48 8b 9f 90 00
	00 00		 mov	 rbx, QWORD PTR [rdi+144]
  0004e	48 c7 87 90 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rdi+144], 0
  00059	e8 00 00 00 00	 call	 _Py_PXCTX
  0005e	85 c0		 test	 eax, eax
  00060	75 7c		 jne	 SHORT $LN18@StopIterat@2
  00062	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  00066	a8 20		 test	 al, 32			; 00000020H
  00068	75 6c		 jne	 SHORT $LN11@StopIterat@2
  0006a	84 c0		 test	 al, al
  0006c	78 68		 js	 SHORT $LN11@StopIterat@2
  0006e	a8 02		 test	 al, 2
  00070	75 6c		 jne	 SHORT $LN18@StopIterat@2
  00072	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  00076	75 66		 jne	 SHORT $LN18@StopIterat@2
  00078	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0007f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  00086	4c 8b cb	 mov	 r9, rbx
  00089	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  0008f	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00097	e8 00 00 00 00	 call	 _PyParallel_Guard
  0009c	48 8b cb	 mov	 rcx, rbx
  0009f	85 c0		 test	 eax, eax
  000a1	74 17		 je	 SHORT $LN16@StopIterat@2
  000a3	e8 00 00 00 00	 call	 _Px_Dealloc
  000a8	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]

; 510  :     return BaseException_clear((PyBaseExceptionObject *)self);

  000ad	48 8b cf	 mov	 rcx, rdi

; 511  : }

  000b0	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000b4	5f		 pop	 rdi
  000b5	e9 00 00 00 00	 jmp	 BaseException_clear

; 509  :     Py_CLEAR(self->value);

$LN16@StopIterat@2:
  000ba	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  000be	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  000c4	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]

; 510  :     return BaseException_clear((PyBaseExceptionObject *)self);

  000c9	48 8b cf	 mov	 rcx, rdi

; 511  : }

  000cc	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000d0	5f		 pop	 rdi
  000d1	e9 00 00 00 00	 jmp	 BaseException_clear

; 509  :     Py_CLEAR(self->value);

$LN11@StopIterat@2:
  000d6	48 8b cb	 mov	 rcx, rbx
  000d9	e8 00 00 00 00	 call	 Px_DecRef
$LN18@StopIterat@2:
  000de	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
$LN3@StopIterat@2:

; 510  :     return BaseException_clear((PyBaseExceptionObject *)self);

  000e3	48 8b cf	 mov	 rcx, rdi

; 511  : }

  000e6	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000ea	5f		 pop	 rdi
  000eb	e9 00 00 00 00	 jmp	 BaseException_clear
StopIteration_clear ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BG@LFOFOOAM@StopIteration_dealloc?$AA@	; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$StopIteration_dealloc DD imagerel StopIteration_dealloc
	DD	imagerel StopIteration_dealloc+160
	DD	imagerel $unwind$StopIteration_dealloc
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$StopIteration_dealloc DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT ??_C@_0BG@LFOFOOAM@StopIteration_dealloc?$AA@
CONST	SEGMENT
??_C@_0BG@LFOFOOAM@StopIteration_dealloc?$AA@ DB 'StopIteration_dealloc', 00H ; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT StopIteration_dealloc
_TEXT	SEGMENT
self$ = 64
StopIteration_dealloc PROC				; COMDAT

; 515  : {

  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8b d9	 mov	 rbx, rcx

; 516  :     _PyObject_GC_UNTRACK(self);

  00009	4c 8b c9	 mov	 r9, rcx
  0000c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BG@LFOFOOAM@StopIteration_dealloc?$AA@
  0001a	41 b8 04 02 00
	00		 mov	 r8d, 516		; 00000204H
  00020	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00028	e8 00 00 00 00	 call	 _PyParallel_Guard
  0002d	85 c0		 test	 eax, eax
  0002f	75 54		 jne	 SHORT $LN1@StopIterat@3
  00031	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BG@LFOFOOAM@StopIteration_dealloc?$AA@
  0003f	4c 8b cb	 mov	 r9, rbx
  00042	41 b8 04 02 00
	00		 mov	 r8d, 516		; 00000204H
  00048	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00050	e8 00 00 00 00	 call	 _PyParallel_Guard
  00055	85 c0		 test	 eax, eax
  00057	74 04		 je	 SHORT $LN7@StopIterat@3
  00059	33 d2		 xor	 edx, edx
  0005b	eb 04		 jmp	 SHORT $LN8@StopIterat@3
$LN7@StopIterat@3:
  0005d	48 8d 53 e8	 lea	 rdx, QWORD PTR [rbx-24]
$LN8@StopIterat@3:
  00061	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00064	48 8b 4a 08	 mov	 rcx, QWORD PTR [rdx+8]
  00068	48 c7 42 10 fe
	ff ff ff	 mov	 QWORD PTR [rdx+16], -2
  00070	48 89 01	 mov	 QWORD PTR [rcx], rax
  00073	48 8b 0a	 mov	 rcx, QWORD PTR [rdx]
  00076	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
  0007a	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  0007e	48 c7 02 00 00
	00 00		 mov	 QWORD PTR [rdx], 0
$LN1@StopIterat@3:

; 517  :     StopIteration_clear(self);

  00085	48 8b cb	 mov	 rcx, rbx
  00088	e8 00 00 00 00	 call	 StopIteration_clear

; 518  :     Py_TYPE(self)->tp_free((PyObject *)self);

  0008d	4c 8b 5b 58	 mov	 r11, QWORD PTR [rbx+88]
  00091	48 8b cb	 mov	 rcx, rbx

; 519  : }

  00094	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00098	5b		 pop	 rbx
  00099	49 ff a3 98 01
	00 00		 rex_jmp QWORD PTR [r11+408]
StopIteration_dealloc ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BH@NKDPCDNK@StopIteration_traverse?$AA@	; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$StopIteration_traverse DD imagerel StopIteration_traverse
	DD	imagerel StopIteration_traverse+112
	DD	imagerel $unwind$StopIteration_traverse
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$StopIteration_traverse DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT ??_C@_0BH@NKDPCDNK@StopIteration_traverse?$AA@
CONST	SEGMENT
??_C@_0BH@NKDPCDNK@StopIteration_traverse?$AA@ DB 'StopIteration_traverse'
	DB	00H						; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT StopIteration_traverse
_TEXT	SEGMENT
self$ = 48
visit$ = 56
arg$ = 64
StopIteration_traverse PROC				; COMDAT

; 523  : {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	49 8b f8	 mov	 rdi, r8
  00012	48 8b f2	 mov	 rsi, rdx
  00015	48 8b d9	 mov	 rbx, rcx

; 524  :     Py_VISIT(self->value);

  00018	e8 00 00 00 00	 call	 _Py_PXCTX
  0001d	85 c0		 test	 eax, eax
  0001f	74 1c		 je	 SHORT $LN3@StopIterat@4
  00021	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BH@NKDPCDNK@StopIteration_traverse?$AA@
  0002f	45 33 c9	 xor	 r9d, r9d
  00032	41 b8 0c 02 00
	00		 mov	 r8d, 524		; 0000020cH
  00038	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN3@StopIterat@4:
  0003d	48 8b 8b 90 00
	00 00		 mov	 rcx, QWORD PTR [rbx+144]
  00044	48 85 c9	 test	 rcx, rcx
  00047	74 09		 je	 SHORT $LN5@StopIterat@4
  00049	48 8b d7	 mov	 rdx, rdi
  0004c	ff d6		 call	 rsi
  0004e	85 c0		 test	 eax, eax
  00050	75 0e		 jne	 SHORT $LN7@StopIterat@4
$LN5@StopIterat@4:

; 525  :     return BaseException_traverse((PyBaseExceptionObject *)self, visit, arg);

  00052	4c 8b c7	 mov	 r8, rdi
  00055	48 8b d6	 mov	 rdx, rsi
  00058	48 8b cb	 mov	 rcx, rbx
  0005b	e8 00 00 00 00	 call	 BaseException_traverse
$LN7@StopIterat@4:

; 526  : }

  00060	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00065	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  0006a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006e	5f		 pop	 rdi
  0006f	c3		 ret	 0
StopIteration_traverse ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BA@BPDEMEKG@SystemExit_init?$AA@		; `string'
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$SystemExit_init DD imagerel SystemExit_init
	DD	imagerel SystemExit_init+244
	DD	imagerel $unwind$SystemExit_init
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SystemExit_init DD 060f01H
	DD	09640fH
	DD	08340fH
	DD	0700b520fH
xdata	ENDS
;	COMDAT ??_C@_0BA@BPDEMEKG@SystemExit_init?$AA@
CONST	SEGMENT
??_C@_0BA@BPDEMEKG@SystemExit_init?$AA@ DB 'SystemExit_init', 00H ; `string'
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
CONST	ENDS
;	COMDAT SystemExit_init
_TEXT	SEGMENT
self$ = 64
args$ = 72
kwds$ = 80
SystemExit_init PROC					; COMDAT

; 554  : {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 555  :     Py_ssize_t size = PyTuple_GET_SIZE(args);

  0000f	48 8b 72 60	 mov	 rsi, QWORD PTR [rdx+96]
  00013	48 8b fa	 mov	 rdi, rdx
  00016	48 8b d9	 mov	 rbx, rcx

; 556  : 
; 557  :     if (BaseException_init((PyBaseExceptionObject *)self, args, kwds) == -1)

  00019	e8 00 00 00 00	 call	 BaseException_init
  0001e	83 f8 ff	 cmp	 eax, -1
  00021	75 12		 jne	 SHORT $LN8@SystemExit

; 558  :         return -1;

  00023	0b c0		 or	 eax, eax

; 568  :     return 0;
; 569  : }

  00025	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  0002a	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  0002f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00033	5f		 pop	 rdi
  00034	c3		 ret	 0
$LN8@SystemExit:

; 559  : 
; 560  :     if (size == 0)

  00035	48 85 f6	 test	 rsi, rsi

; 561  :         return 0;

  00038	0f 84 a4 00 00
	00		 je	 $LN12@SystemExit

; 562  :     Py_CLEAR(self->code);

  0003e	4c 8b 8b 90 00
	00 00		 mov	 r9, QWORD PTR [rbx+144]
  00045	4d 85 c9	 test	 r9, r9
  00048	74 3c		 je	 SHORT $LN5@SystemExit
  0004a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00051	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@BPDEMEKG@SystemExit_init?$AA@
  00058	41 b8 32 02 00
	00		 mov	 r8d, 562		; 00000232H
  0005e	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00066	e8 00 00 00 00	 call	 _PyParallel_Guard
  0006b	85 c0		 test	 eax, eax
  0006d	75 17		 jne	 SHORT $LN5@SystemExit
  0006f	48 8b 8b 90 00
	00 00		 mov	 rcx, QWORD PTR [rbx+144]
  00076	48 c7 83 90 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rbx+144], 0
  00081	e8 00 00 00 00	 call	 _Py_DecRef
$LN5@SystemExit:

; 563  :     if (size == 1)

  00086	48 83 fe 01	 cmp	 rsi, 1
  0008a	75 0d		 jne	 SHORT $LN2@SystemExit

; 564  :         self->code = PyTuple_GET_ITEM(args, 0);

  0008c	48 8b 47 70	 mov	 rax, QWORD PTR [rdi+112]
  00090	48 89 83 90 00
	00 00		 mov	 QWORD PTR [rbx+144], rax

; 565  :     else /* size > 1 */

  00097	eb 07		 jmp	 SHORT $LN1@SystemExit
$LN2@SystemExit:

; 566  :         self->code = args;

  00099	48 89 bb 90 00
	00 00		 mov	 QWORD PTR [rbx+144], rdi
$LN1@SystemExit:

; 567  :     Py_INCREF(self->code);

  000a0	48 8b 9b 90 00
	00 00		 mov	 rbx, QWORD PTR [rbx+144]
  000a7	e8 00 00 00 00	 call	 _Py_PXCTX
  000ac	85 c0		 test	 eax, eax
  000ae	75 32		 jne	 SHORT $LN12@SystemExit
  000b0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  000b7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  000be	4c 8b cb	 mov	 r9, rbx
  000c1	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  000c7	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  000cf	e8 00 00 00 00	 call	 _PyParallel_Guard
  000d4	85 c0		 test	 eax, eax
  000d6	75 06		 jne	 SHORT $LN11@SystemExit
  000d8	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  000dc	74 04		 je	 SHORT $LN12@SystemExit
$LN11@SystemExit:
  000de	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN12@SystemExit:

; 568  :     return 0;
; 569  : }

  000e2	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  000e7	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  000ec	33 c0		 xor	 eax, eax
  000ee	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000f2	5f		 pop	 rdi
  000f3	c3		 ret	 0
SystemExit_init ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BB@KJMDIHEI@SystemExit_clear?$AA@	; `string'
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$SystemExit_clear DD imagerel SystemExit_clear
	DD	imagerel SystemExit_clear+66
	DD	imagerel $unwind$SystemExit_clear
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$SystemExit_clear DD imagerel SystemExit_clear+66
	DD	imagerel SystemExit_clear+186
	DD	imagerel $chain$0$SystemExit_clear
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$SystemExit_clear DD imagerel SystemExit_clear+186
	DD	imagerel SystemExit_clear+214
	DD	imagerel $chain$2$SystemExit_clear
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$4$SystemExit_clear DD imagerel SystemExit_clear+214
	DD	imagerel SystemExit_clear+227
	DD	imagerel $chain$4$SystemExit_clear
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$SystemExit_clear DD imagerel SystemExit_clear+227
	DD	imagerel SystemExit_clear+240
	DD	imagerel $chain$5$SystemExit_clear
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$SystemExit_clear DD 021H
	DD	imagerel SystemExit_clear
	DD	imagerel SystemExit_clear+66
	DD	imagerel $unwind$SystemExit_clear
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$4$SystemExit_clear DD 020021H
	DD	083400H
	DD	imagerel SystemExit_clear
	DD	imagerel SystemExit_clear+66
	DD	imagerel $unwind$SystemExit_clear
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$SystemExit_clear DD 020021H
	DD	083400H
	DD	imagerel SystemExit_clear
	DD	imagerel SystemExit_clear+66
	DD	imagerel $unwind$SystemExit_clear
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$SystemExit_clear DD 020521H
	DD	083405H
	DD	imagerel SystemExit_clear
	DD	imagerel SystemExit_clear+66
	DD	imagerel $unwind$SystemExit_clear
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SystemExit_clear DD 020601H
	DD	070025206H
xdata	ENDS
;	COMDAT ??_C@_0BB@KJMDIHEI@SystemExit_clear?$AA@
CONST	SEGMENT
??_C@_0BB@KJMDIHEI@SystemExit_clear?$AA@ DB 'SystemExit_clear', 00H ; `string'
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
CONST	ENDS
;	COMDAT SystemExit_clear
_TEXT	SEGMENT
self$ = 64
SystemExit_clear PROC					; COMDAT

; 573  : {

  00000	40 57		 push	 rdi
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 574  :     Py_CLEAR(self->code);

  00006	4c 8b 89 90 00
	00 00		 mov	 r9, QWORD PTR [rcx+144]
  0000d	48 8b f9	 mov	 rdi, rcx
  00010	4d 85 c9	 test	 r9, r9
  00013	0f 84 ca 00 00
	00		 je	 $LN3@SystemExit@2
  00019	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00020	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@KJMDIHEI@SystemExit_clear?$AA@
  00027	41 b8 3e 02 00
	00		 mov	 r8d, 574		; 0000023eH
  0002d	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00035	e8 00 00 00 00	 call	 _PyParallel_Guard
  0003a	85 c0		 test	 eax, eax
  0003c	0f 85 a1 00 00
	00		 jne	 $LN3@SystemExit@2
  00042	48 89 5c 24 40	 mov	 QWORD PTR [rsp+64], rbx
  00047	48 8b 9f 90 00
	00 00		 mov	 rbx, QWORD PTR [rdi+144]
  0004e	48 c7 87 90 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rdi+144], 0
  00059	e8 00 00 00 00	 call	 _Py_PXCTX
  0005e	85 c0		 test	 eax, eax
  00060	75 7c		 jne	 SHORT $LN18@SystemExit@2
  00062	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  00066	a8 20		 test	 al, 32			; 00000020H
  00068	75 6c		 jne	 SHORT $LN11@SystemExit@2
  0006a	84 c0		 test	 al, al
  0006c	78 68		 js	 SHORT $LN11@SystemExit@2
  0006e	a8 02		 test	 al, 2
  00070	75 6c		 jne	 SHORT $LN18@SystemExit@2
  00072	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  00076	75 66		 jne	 SHORT $LN18@SystemExit@2
  00078	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0007f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  00086	4c 8b cb	 mov	 r9, rbx
  00089	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  0008f	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00097	e8 00 00 00 00	 call	 _PyParallel_Guard
  0009c	48 8b cb	 mov	 rcx, rbx
  0009f	85 c0		 test	 eax, eax
  000a1	74 17		 je	 SHORT $LN16@SystemExit@2
  000a3	e8 00 00 00 00	 call	 _Px_Dealloc
  000a8	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]

; 575  :     return BaseException_clear((PyBaseExceptionObject *)self);

  000ad	48 8b cf	 mov	 rcx, rdi

; 576  : }

  000b0	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000b4	5f		 pop	 rdi
  000b5	e9 00 00 00 00	 jmp	 BaseException_clear

; 574  :     Py_CLEAR(self->code);

$LN16@SystemExit@2:
  000ba	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  000be	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  000c4	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]

; 575  :     return BaseException_clear((PyBaseExceptionObject *)self);

  000c9	48 8b cf	 mov	 rcx, rdi

; 576  : }

  000cc	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000d0	5f		 pop	 rdi
  000d1	e9 00 00 00 00	 jmp	 BaseException_clear

; 574  :     Py_CLEAR(self->code);

$LN11@SystemExit@2:
  000d6	48 8b cb	 mov	 rcx, rbx
  000d9	e8 00 00 00 00	 call	 Px_DecRef
$LN18@SystemExit@2:
  000de	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
$LN3@SystemExit@2:

; 575  :     return BaseException_clear((PyBaseExceptionObject *)self);

  000e3	48 8b cf	 mov	 rcx, rdi

; 576  : }

  000e6	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000ea	5f		 pop	 rdi
  000eb	e9 00 00 00 00	 jmp	 BaseException_clear
SystemExit_clear ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BD@KLNCEPF@SystemExit_dealloc?$AA@	; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$SystemExit_dealloc DD imagerel SystemExit_dealloc
	DD	imagerel SystemExit_dealloc+160
	DD	imagerel $unwind$SystemExit_dealloc
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SystemExit_dealloc DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT ??_C@_0BD@KLNCEPF@SystemExit_dealloc?$AA@
CONST	SEGMENT
??_C@_0BD@KLNCEPF@SystemExit_dealloc?$AA@ DB 'SystemExit_dealloc', 00H ; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT SystemExit_dealloc
_TEXT	SEGMENT
self$ = 64
SystemExit_dealloc PROC					; COMDAT

; 580  : {

  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8b d9	 mov	 rbx, rcx

; 581  :     _PyObject_GC_UNTRACK(self);

  00009	4c 8b c9	 mov	 r9, rcx
  0000c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@KLNCEPF@SystemExit_dealloc?$AA@
  0001a	41 b8 45 02 00
	00		 mov	 r8d, 581		; 00000245H
  00020	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00028	e8 00 00 00 00	 call	 _PyParallel_Guard
  0002d	85 c0		 test	 eax, eax
  0002f	75 54		 jne	 SHORT $LN1@SystemExit@3
  00031	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@KLNCEPF@SystemExit_dealloc?$AA@
  0003f	4c 8b cb	 mov	 r9, rbx
  00042	41 b8 45 02 00
	00		 mov	 r8d, 581		; 00000245H
  00048	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00050	e8 00 00 00 00	 call	 _PyParallel_Guard
  00055	85 c0		 test	 eax, eax
  00057	74 04		 je	 SHORT $LN7@SystemExit@3
  00059	33 d2		 xor	 edx, edx
  0005b	eb 04		 jmp	 SHORT $LN8@SystemExit@3
$LN7@SystemExit@3:
  0005d	48 8d 53 e8	 lea	 rdx, QWORD PTR [rbx-24]
$LN8@SystemExit@3:
  00061	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00064	48 8b 4a 08	 mov	 rcx, QWORD PTR [rdx+8]
  00068	48 c7 42 10 fe
	ff ff ff	 mov	 QWORD PTR [rdx+16], -2
  00070	48 89 01	 mov	 QWORD PTR [rcx], rax
  00073	48 8b 0a	 mov	 rcx, QWORD PTR [rdx]
  00076	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
  0007a	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  0007e	48 c7 02 00 00
	00 00		 mov	 QWORD PTR [rdx], 0
$LN1@SystemExit@3:

; 582  :     SystemExit_clear(self);

  00085	48 8b cb	 mov	 rcx, rbx
  00088	e8 00 00 00 00	 call	 SystemExit_clear

; 583  :     Py_TYPE(self)->tp_free((PyObject *)self);

  0008d	4c 8b 5b 58	 mov	 r11, QWORD PTR [rbx+88]
  00091	48 8b cb	 mov	 rcx, rbx

; 584  : }

  00094	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00098	5b		 pop	 rbx
  00099	49 ff a3 98 01
	00 00		 rex_jmp QWORD PTR [r11+408]
SystemExit_dealloc ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BE@BOOBDBKI@SystemExit_traverse?$AA@	; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$SystemExit_traverse DD imagerel SystemExit_traverse
	DD	imagerel SystemExit_traverse+112
	DD	imagerel $unwind$SystemExit_traverse
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SystemExit_traverse DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT ??_C@_0BE@BOOBDBKI@SystemExit_traverse?$AA@
CONST	SEGMENT
??_C@_0BE@BOOBDBKI@SystemExit_traverse?$AA@ DB 'SystemExit_traverse', 00H ; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT SystemExit_traverse
_TEXT	SEGMENT
self$ = 48
visit$ = 56
arg$ = 64
SystemExit_traverse PROC				; COMDAT

; 588  : {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	49 8b f8	 mov	 rdi, r8
  00012	48 8b f2	 mov	 rsi, rdx
  00015	48 8b d9	 mov	 rbx, rcx

; 589  :     Py_VISIT(self->code);

  00018	e8 00 00 00 00	 call	 _Py_PXCTX
  0001d	85 c0		 test	 eax, eax
  0001f	74 1c		 je	 SHORT $LN3@SystemExit@4
  00021	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BE@BOOBDBKI@SystemExit_traverse?$AA@
  0002f	45 33 c9	 xor	 r9d, r9d
  00032	41 b8 4d 02 00
	00		 mov	 r8d, 589		; 0000024dH
  00038	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN3@SystemExit@4:
  0003d	48 8b 8b 90 00
	00 00		 mov	 rcx, QWORD PTR [rbx+144]
  00044	48 85 c9	 test	 rcx, rcx
  00047	74 09		 je	 SHORT $LN5@SystemExit@4
  00049	48 8b d7	 mov	 rdx, rdi
  0004c	ff d6		 call	 rsi
  0004e	85 c0		 test	 eax, eax
  00050	75 0e		 jne	 SHORT $LN7@SystemExit@4
$LN5@SystemExit@4:

; 590  :     return BaseException_traverse((PyBaseExceptionObject *)self, visit, arg);

  00052	4c 8b c7	 mov	 r8, rdi
  00055	48 8b d6	 mov	 rdx, rsi
  00058	48 8b cb	 mov	 rcx, rbx
  0005b	e8 00 00 00 00	 call	 BaseException_traverse
$LN7@SystemExit@4:

; 591  : }

  00060	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00065	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  0006a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006e	5f		 pop	 rdi
  0006f	c3		 ret	 0
SystemExit_traverse ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BB@FMIGKJLP@ImportError_init?$AA@	; `string'
EXTRN	PyArg_UnpackTuple:PROC
EXTRN	PyDict_DelItemString:PROC
EXTRN	PyDict_GetItemString:PROC
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$ImportError_init DD imagerel ImportError_init
	DD	imagerel ImportError_init+539
	DD	imagerel $unwind$ImportError_init
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$ImportError_init DD 081201H
	DD	0b5412H
	DD	0a3412H
	DD	0c00e5212H
	DD	0600b700cH
xdata	ENDS
;	COMDAT ??_C@_0BB@FMIGKJLP@ImportError_init?$AA@
CONST	SEGMENT
??_C@_0BB@FMIGKJLP@ImportError_init?$AA@ DB 'ImportError_init', 00H ; `string'
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
CONST	ENDS
;	COMDAT ImportError_init
_TEXT	SEGMENT
self$ = 80
args$ = 88
msg$ = 96
kwds$ = 96
ImportError_init PROC					; COMDAT

; 616  : {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	41 54		 push	 r12
  0000e	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 617  :     PyObject *msg = NULL;

  00012	45 33 e4	 xor	 r12d, r12d
  00015	49 8b f0	 mov	 rsi, r8
  00018	48 8b ea	 mov	 rbp, rdx
  0001b	48 8b d9	 mov	 rbx, rcx
  0001e	4c 89 64 24 60	 mov	 QWORD PTR msg$[rsp], r12

; 618  :     PyObject *name = NULL;
; 619  :     PyObject *path = NULL;
; 620  : 
; 621  : /* Macro replacement doesn't allow ## to start the first line of a macro,
; 622  :    so we move the assignment and NULL check into the if-statement. */
; 623  : #define GET_KWD(kwd) { \
; 624  :     kwd = PyDict_GetItemString(kwds, #kwd); \
; 625  :     if (kwd) { \
; 626  :         Py_CLEAR(self->kwd); \
; 627  :         self->kwd = kwd;   \
; 628  :         Py_INCREF(self->kwd);\
; 629  :         if (PyDict_DelItemString(kwds, #kwd)) \
; 630  :             return -1; \
; 631  :     } \
; 632  :     }
; 633  : 
; 634  :     if (kwds) {

  00023	4d 85 c0	 test	 r8, r8
  00026	0f 84 3d 01 00
	00		 je	 $LN8@ImportErro

; 635  :         GET_KWD(name);

  0002c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_04MEMAJGDJ@name?$AA@
  00033	49 8b c8	 mov	 rcx, r8
  00036	e8 00 00 00 00	 call	 PyDict_GetItemString
  0003b	48 8b f8	 mov	 rdi, rax
  0003e	48 85 c0	 test	 rax, rax
  00041	0f 84 a1 00 00
	00		 je	 $LN14@ImportErro
  00047	4c 8b 8b 98 00
	00 00		 mov	 r9, QWORD PTR [rbx+152]
  0004e	4d 85 c9	 test	 r9, r9
  00051	74 38		 je	 SHORT $LN17@ImportErro
  00053	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0005a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@FMIGKJLP@ImportError_init?$AA@
  00061	41 b8 7b 02 00
	00		 mov	 r8d, 635		; 0000027bH
  00067	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0006f	e8 00 00 00 00	 call	 _PyParallel_Guard
  00074	85 c0		 test	 eax, eax
  00076	75 13		 jne	 SHORT $LN17@ImportErro
  00078	48 8b 8b 98 00
	00 00		 mov	 rcx, QWORD PTR [rbx+152]
  0007f	4c 89 a3 98 00
	00 00		 mov	 QWORD PTR [rbx+152], r12
  00086	e8 00 00 00 00	 call	 _Py_DecRef
$LN17@ImportErro:
  0008b	48 89 bb 98 00
	00 00		 mov	 QWORD PTR [rbx+152], rdi
  00092	e8 00 00 00 00	 call	 _Py_PXCTX
  00097	85 c0		 test	 eax, eax
  00099	75 32		 jne	 SHORT $LN24@ImportErro
  0009b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  000a2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  000a9	4c 8b cf	 mov	 r9, rdi
  000ac	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  000b2	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  000ba	e8 00 00 00 00	 call	 _PyParallel_Guard
  000bf	85 c0		 test	 eax, eax
  000c1	75 06		 jne	 SHORT $LN23@ImportErro
  000c3	f6 47 20 20	 test	 BYTE PTR [rdi+32], 32	; 00000020H
  000c7	74 04		 je	 SHORT $LN24@ImportErro
$LN23@ImportErro:
  000c9	48 ff 47 50	 inc	 QWORD PTR [rdi+80]
$LN24@ImportErro:
  000cd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_04MEMAJGDJ@name?$AA@
  000d4	48 8b ce	 mov	 rcx, rsi
  000d7	e8 00 00 00 00	 call	 PyDict_DelItemString
  000dc	85 c0		 test	 eax, eax
  000de	74 08		 je	 SHORT $LN14@ImportErro
$LN28@ImportErro:
  000e0	83 c8 ff	 or	 eax, -1
  000e3	e9 20 01 00 00	 jmp	 $LN21@ImportErro
$LN14@ImportErro:

; 636  :         GET_KWD(path);

  000e8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_04LNEJFJGI@path?$AA@
  000ef	48 8b ce	 mov	 rcx, rsi
  000f2	e8 00 00 00 00	 call	 PyDict_GetItemString
  000f7	48 8b f8	 mov	 rdi, rax
  000fa	48 85 c0	 test	 rax, rax
  000fd	74 6a		 je	 SHORT $LN8@ImportErro
  000ff	4c 8b 8b a0 00
	00 00		 mov	 r9, QWORD PTR [rbx+160]
  00106	4d 85 c9	 test	 r9, r9
  00109	74 38		 je	 SHORT $LN11@ImportErro
  0010b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00112	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@FMIGKJLP@ImportError_init?$AA@
  00119	41 b8 7c 02 00
	00		 mov	 r8d, 636		; 0000027cH
  0011f	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00127	e8 00 00 00 00	 call	 _PyParallel_Guard
  0012c	85 c0		 test	 eax, eax
  0012e	75 13		 jne	 SHORT $LN11@ImportErro
  00130	48 8b 8b a0 00
	00 00		 mov	 rcx, QWORD PTR [rbx+160]
  00137	4c 89 a3 a0 00
	00 00		 mov	 QWORD PTR [rbx+160], r12
  0013e	e8 00 00 00 00	 call	 _Py_DecRef
$LN11@ImportErro:
  00143	48 8b cf	 mov	 rcx, rdi
  00146	48 89 bb a0 00
	00 00		 mov	 QWORD PTR [rbx+160], rdi
  0014d	e8 00 00 00 00	 call	 _Py_IncRef
  00152	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_04LNEJFJGI@path?$AA@
  00159	48 8b ce	 mov	 rcx, rsi
  0015c	e8 00 00 00 00	 call	 PyDict_DelItemString
  00161	85 c0		 test	 eax, eax
  00163	0f 85 77 ff ff
	ff		 jne	 $LN28@ImportErro
$LN8@ImportErro:

; 637  :     }
; 638  : 
; 639  :     if (BaseException_init((PyBaseExceptionObject *)self, args, kwds) == -1)

  00169	4c 8b c6	 mov	 r8, rsi
  0016c	48 8b d5	 mov	 rdx, rbp
  0016f	48 8b cb	 mov	 rcx, rbx
  00172	e8 00 00 00 00	 call	 BaseException_init
  00177	83 f8 ff	 cmp	 eax, -1

; 640  :         return -1;

  0017a	0f 84 60 ff ff
	ff		 je	 $LN28@ImportErro

; 641  :     if (PyTuple_GET_SIZE(args) != 1)

  00180	48 83 7d 60 01	 cmp	 QWORD PTR [rbp+96], 1

; 642  :         return 0;

  00185	75 7f		 jne	 SHORT $LN27@ImportErro

; 643  :     if (!PyArg_UnpackTuple(args, "ImportError", 1, 1, &msg))

  00187	48 8d 44 24 60	 lea	 rax, QWORD PTR msg$[rsp]
  0018c	41 b9 01 00 00
	00		 mov	 r9d, 1
  00192	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0M@HCFCBBPI@ImportError?$AA@
  00199	45 8b c1	 mov	 r8d, r9d
  0019c	48 8b cd	 mov	 rcx, rbp
  0019f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  001a4	e8 00 00 00 00	 call	 PyArg_UnpackTuple
  001a9	85 c0		 test	 eax, eax

; 644  :         return -1;

  001ab	0f 84 2f ff ff
	ff		 je	 $LN28@ImportErro

; 645  : 
; 646  :     Py_CLEAR(self->msg);          /* replacing */

  001b1	4c 8b 8b 90 00
	00 00		 mov	 r9, QWORD PTR [rbx+144]
  001b8	4d 85 c9	 test	 r9, r9
  001bb	74 38		 je	 SHORT $LN3@ImportErro
  001bd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  001c4	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@FMIGKJLP@ImportError_init?$AA@
  001cb	41 b8 86 02 00
	00		 mov	 r8d, 646		; 00000286H
  001d1	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  001d9	e8 00 00 00 00	 call	 _PyParallel_Guard
  001de	85 c0		 test	 eax, eax
  001e0	75 13		 jne	 SHORT $LN3@ImportErro
  001e2	48 8b 8b 90 00
	00 00		 mov	 rcx, QWORD PTR [rbx+144]
  001e9	4c 89 a3 90 00
	00 00		 mov	 QWORD PTR [rbx+144], r12
  001f0	e8 00 00 00 00	 call	 _Py_DecRef
$LN3@ImportErro:

; 647  :     self->msg = msg;

  001f5	48 8b 4c 24 60	 mov	 rcx, QWORD PTR msg$[rsp]
  001fa	48 89 8b 90 00
	00 00		 mov	 QWORD PTR [rbx+144], rcx

; 648  :     Py_INCREF(self->msg);

  00201	e8 00 00 00 00	 call	 _Py_IncRef
$LN27@ImportErro:

; 649  : 
; 650  :     return 0;

  00206	33 c0		 xor	 eax, eax
$LN21@ImportErro:

; 651  : }

  00208	48 8b 5c 24 50	 mov	 rbx, QWORD PTR [rsp+80]
  0020d	48 8b 6c 24 58	 mov	 rbp, QWORD PTR [rsp+88]
  00212	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00216	41 5c		 pop	 r12
  00218	5f		 pop	 rdi
  00219	5e		 pop	 rsi
  0021a	c3		 ret	 0
ImportError_init ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BC@MNOLJNOF@ImportError_clear?$AA@	; `string'
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$ImportError_clear DD imagerel ImportError_clear
	DD	imagerel ImportError_clear+583
	DD	imagerel $unwind$ImportError_clear
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$ImportError_clear DD 040a01H
	DD	08340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT ??_C@_0BC@MNOLJNOF@ImportError_clear?$AA@
CONST	SEGMENT
??_C@_0BC@MNOLJNOF@ImportError_clear?$AA@ DB 'ImportError_clear', 00H ; `string'
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
CONST	ENDS
;	COMDAT ImportError_clear
_TEXT	SEGMENT
self$ = 64
ImportError_clear PROC					; COMDAT

; 655  : {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 656  :     Py_CLEAR(self->msg);

  0000a	4c 8b 89 90 00
	00 00		 mov	 r9, QWORD PTR [rcx+144]
  00011	48 8b f9	 mov	 rdi, rcx
  00014	4d 85 c9	 test	 r9, r9
  00017	0f 84 9c 00 00
	00		 je	 $LN11@ImportErro@2
  0001d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00024	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BC@MNOLJNOF@ImportError_clear?$AA@
  0002b	41 b8 90 02 00
	00		 mov	 r8d, 656		; 00000290H
  00031	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00039	e8 00 00 00 00	 call	 _PyParallel_Guard
  0003e	85 c0		 test	 eax, eax
  00040	75 77		 jne	 SHORT $LN11@ImportErro@2
  00042	48 8b 9f 90 00
	00 00		 mov	 rbx, QWORD PTR [rdi+144]
  00049	48 c7 87 90 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rdi+144], 0
  00054	e8 00 00 00 00	 call	 _Py_PXCTX
  00059	85 c0		 test	 eax, eax
  0005b	75 5c		 jne	 SHORT $LN11@ImportErro@2
  0005d	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  00061	a8 20		 test	 al, 32			; 00000020H
  00063	75 4c		 jne	 SHORT $LN19@ImportErro@2
  00065	84 c0		 test	 al, al
  00067	78 48		 js	 SHORT $LN19@ImportErro@2
  00069	a8 02		 test	 al, 2
  0006b	75 4c		 jne	 SHORT $LN11@ImportErro@2
  0006d	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  00071	75 46		 jne	 SHORT $LN11@ImportErro@2
  00073	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0007a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  00081	4c 8b cb	 mov	 r9, rbx
  00084	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  0008a	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00092	e8 00 00 00 00	 call	 _PyParallel_Guard
  00097	48 8b cb	 mov	 rcx, rbx
  0009a	85 c0		 test	 eax, eax
  0009c	74 07		 je	 SHORT $LN24@ImportErro@2
  0009e	e8 00 00 00 00	 call	 _Px_Dealloc
  000a3	eb 14		 jmp	 SHORT $LN11@ImportErro@2
$LN24@ImportErro@2:
  000a5	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  000a9	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  000af	eb 08		 jmp	 SHORT $LN11@ImportErro@2
$LN19@ImportErro@2:
  000b1	48 8b cb	 mov	 rcx, rbx
  000b4	e8 00 00 00 00	 call	 Px_DecRef
$LN11@ImportErro@2:

; 657  :     Py_CLEAR(self->name);

  000b9	4c 8b 8f 98 00
	00 00		 mov	 r9, QWORD PTR [rdi+152]
  000c0	4d 85 c9	 test	 r9, r9
  000c3	0f 84 9c 00 00
	00		 je	 $LN7@ImportErro@2
  000c9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  000d0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BC@MNOLJNOF@ImportError_clear?$AA@
  000d7	41 b8 91 02 00
	00		 mov	 r8d, 657		; 00000291H
  000dd	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  000e5	e8 00 00 00 00	 call	 _PyParallel_Guard
  000ea	85 c0		 test	 eax, eax
  000ec	75 77		 jne	 SHORT $LN7@ImportErro@2
  000ee	48 8b 9f 98 00
	00 00		 mov	 rbx, QWORD PTR [rdi+152]
  000f5	48 c7 87 98 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rdi+152], 0
  00100	e8 00 00 00 00	 call	 _Py_PXCTX
  00105	85 c0		 test	 eax, eax
  00107	75 5c		 jne	 SHORT $LN7@ImportErro@2
  00109	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  0010d	a8 20		 test	 al, 32			; 00000020H
  0010f	75 4c		 jne	 SHORT $LN30@ImportErro@2
  00111	84 c0		 test	 al, al
  00113	78 48		 js	 SHORT $LN30@ImportErro@2
  00115	a8 02		 test	 al, 2
  00117	75 4c		 jne	 SHORT $LN7@ImportErro@2
  00119	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  0011d	75 46		 jne	 SHORT $LN7@ImportErro@2
  0011f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00126	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  0012d	4c 8b cb	 mov	 r9, rbx
  00130	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  00136	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0013e	e8 00 00 00 00	 call	 _PyParallel_Guard
  00143	48 8b cb	 mov	 rcx, rbx
  00146	85 c0		 test	 eax, eax
  00148	74 07		 je	 SHORT $LN35@ImportErro@2
  0014a	e8 00 00 00 00	 call	 _Px_Dealloc
  0014f	eb 14		 jmp	 SHORT $LN7@ImportErro@2
$LN35@ImportErro@2:
  00151	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  00155	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  0015b	eb 08		 jmp	 SHORT $LN7@ImportErro@2
$LN30@ImportErro@2:
  0015d	48 8b cb	 mov	 rcx, rbx
  00160	e8 00 00 00 00	 call	 Px_DecRef
$LN7@ImportErro@2:

; 658  :     Py_CLEAR(self->path);

  00165	4c 8b 8f a0 00
	00 00		 mov	 r9, QWORD PTR [rdi+160]
  0016c	4d 85 c9	 test	 r9, r9
  0016f	0f 84 c0 00 00
	00		 je	 $LN3@ImportErro@2
  00175	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0017c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BC@MNOLJNOF@ImportError_clear?$AA@
  00183	41 b8 92 02 00
	00		 mov	 r8d, 658		; 00000292H
  00189	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00191	e8 00 00 00 00	 call	 _PyParallel_Guard
  00196	85 c0		 test	 eax, eax
  00198	0f 85 97 00 00
	00		 jne	 $LN3@ImportErro@2
  0019e	48 8b 9f a0 00
	00 00		 mov	 rbx, QWORD PTR [rdi+160]
  001a5	48 c7 87 a0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rdi+160], 0
  001b0	e8 00 00 00 00	 call	 _Py_PXCTX
  001b5	85 c0		 test	 eax, eax
  001b7	75 7c		 jne	 SHORT $LN3@ImportErro@2
  001b9	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  001bd	a8 20		 test	 al, 32			; 00000020H
  001bf	75 6c		 jne	 SHORT $LN41@ImportErro@2
  001c1	84 c0		 test	 al, al
  001c3	78 68		 js	 SHORT $LN41@ImportErro@2
  001c5	a8 02		 test	 al, 2
  001c7	75 6c		 jne	 SHORT $LN3@ImportErro@2
  001c9	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  001cd	75 66		 jne	 SHORT $LN3@ImportErro@2
  001cf	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  001d6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  001dd	4c 8b cb	 mov	 r9, rbx
  001e0	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  001e6	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  001ee	e8 00 00 00 00	 call	 _PyParallel_Guard
  001f3	48 8b cb	 mov	 rcx, rbx
  001f6	85 c0		 test	 eax, eax
  001f8	74 17		 je	 SHORT $LN46@ImportErro@2
  001fa	e8 00 00 00 00	 call	 _Px_Dealloc

; 659  :     return BaseException_clear((PyBaseExceptionObject *)self);

  001ff	48 8b cf	 mov	 rcx, rdi

; 660  : }

  00202	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00207	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0020b	5f		 pop	 rdi
  0020c	e9 00 00 00 00	 jmp	 BaseException_clear

; 658  :     Py_CLEAR(self->path);

$LN46@ImportErro@2:
  00211	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  00215	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]

; 659  :     return BaseException_clear((PyBaseExceptionObject *)self);

  0021b	48 8b cf	 mov	 rcx, rdi

; 660  : }

  0021e	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00223	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00227	5f		 pop	 rdi
  00228	e9 00 00 00 00	 jmp	 BaseException_clear

; 658  :     Py_CLEAR(self->path);

$LN41@ImportErro@2:
  0022d	48 8b cb	 mov	 rcx, rbx
  00230	e8 00 00 00 00	 call	 Px_DecRef
$LN3@ImportErro@2:

; 659  :     return BaseException_clear((PyBaseExceptionObject *)self);

  00235	48 8b cf	 mov	 rcx, rdi

; 660  : }

  00238	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  0023d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00241	5f		 pop	 rdi
  00242	e9 00 00 00 00	 jmp	 BaseException_clear
ImportError_clear ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BE@OMHGHLAD@ImportError_dealloc?$AA@	; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$ImportError_dealloc DD imagerel ImportError_dealloc
	DD	imagerel ImportError_dealloc+160
	DD	imagerel $unwind$ImportError_dealloc
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$ImportError_dealloc DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT ??_C@_0BE@OMHGHLAD@ImportError_dealloc?$AA@
CONST	SEGMENT
??_C@_0BE@OMHGHLAD@ImportError_dealloc?$AA@ DB 'ImportError_dealloc', 00H ; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ImportError_dealloc
_TEXT	SEGMENT
self$ = 64
ImportError_dealloc PROC				; COMDAT

; 664  : {

  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8b d9	 mov	 rbx, rcx

; 665  :     _PyObject_GC_UNTRACK(self);

  00009	4c 8b c9	 mov	 r9, rcx
  0000c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BE@OMHGHLAD@ImportError_dealloc?$AA@
  0001a	41 b8 99 02 00
	00		 mov	 r8d, 665		; 00000299H
  00020	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00028	e8 00 00 00 00	 call	 _PyParallel_Guard
  0002d	85 c0		 test	 eax, eax
  0002f	75 54		 jne	 SHORT $LN1@ImportErro@3
  00031	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BE@OMHGHLAD@ImportError_dealloc?$AA@
  0003f	4c 8b cb	 mov	 r9, rbx
  00042	41 b8 99 02 00
	00		 mov	 r8d, 665		; 00000299H
  00048	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00050	e8 00 00 00 00	 call	 _PyParallel_Guard
  00055	85 c0		 test	 eax, eax
  00057	74 04		 je	 SHORT $LN7@ImportErro@3
  00059	33 d2		 xor	 edx, edx
  0005b	eb 04		 jmp	 SHORT $LN8@ImportErro@3
$LN7@ImportErro@3:
  0005d	48 8d 53 e8	 lea	 rdx, QWORD PTR [rbx-24]
$LN8@ImportErro@3:
  00061	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00064	48 8b 4a 08	 mov	 rcx, QWORD PTR [rdx+8]
  00068	48 c7 42 10 fe
	ff ff ff	 mov	 QWORD PTR [rdx+16], -2
  00070	48 89 01	 mov	 QWORD PTR [rcx], rax
  00073	48 8b 0a	 mov	 rcx, QWORD PTR [rdx]
  00076	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
  0007a	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  0007e	48 c7 02 00 00
	00 00		 mov	 QWORD PTR [rdx], 0
$LN1@ImportErro@3:

; 666  :     ImportError_clear(self);

  00085	48 8b cb	 mov	 rcx, rbx
  00088	e8 00 00 00 00	 call	 ImportError_clear

; 667  :     Py_TYPE(self)->tp_free((PyObject *)self);

  0008d	4c 8b 5b 58	 mov	 r11, QWORD PTR [rbx+88]
  00091	48 8b cb	 mov	 rcx, rbx

; 668  : }

  00094	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00098	5b		 pop	 rbx
  00099	49 ff a3 98 01
	00 00		 rex_jmp QWORD PTR [r11+408]
ImportError_dealloc ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BF@EKNJKNNO@ImportError_traverse?$AA@	; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$ImportError_traverse DD imagerel ImportError_traverse
	DD	imagerel ImportError_traverse+232
	DD	imagerel $unwind$ImportError_traverse
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$ImportError_traverse DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT ??_C@_0BF@EKNJKNNO@ImportError_traverse?$AA@
CONST	SEGMENT
??_C@_0BF@EKNJKNNO@ImportError_traverse?$AA@ DB 'ImportError_traverse', 00H ; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT ImportError_traverse
_TEXT	SEGMENT
self$ = 48
visit$ = 56
arg$ = 64
ImportError_traverse PROC				; COMDAT

; 672  : {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	49 8b f8	 mov	 rdi, r8
  00012	48 8b f2	 mov	 rsi, rdx
  00015	48 8b d9	 mov	 rbx, rcx

; 673  :     Py_VISIT(self->msg);

  00018	e8 00 00 00 00	 call	 _Py_PXCTX
  0001d	85 c0		 test	 eax, eax
  0001f	74 1c		 je	 SHORT $LN15@ImportErro@4
  00021	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BF@EKNJKNNO@ImportError_traverse?$AA@
  0002f	45 33 c9	 xor	 r9d, r9d
  00032	41 b8 a1 02 00
	00		 mov	 r8d, 673		; 000002a1H
  00038	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN15@ImportErro@4:
  0003d	48 8b 8b 90 00
	00 00		 mov	 rcx, QWORD PTR [rbx+144]
  00044	48 85 c9	 test	 rcx, rcx
  00047	74 0d		 je	 SHORT $LN17@ImportErro@4
  00049	48 8b d7	 mov	 rdx, rdi
  0004c	ff d6		 call	 rsi
  0004e	85 c0		 test	 eax, eax
  00050	0f 85 82 00 00
	00		 jne	 $LN19@ImportErro@4
$LN17@ImportErro@4:

; 674  :     Py_VISIT(self->name);

  00056	e8 00 00 00 00	 call	 _Py_PXCTX
  0005b	85 c0		 test	 eax, eax
  0005d	74 1c		 je	 SHORT $LN9@ImportErro@4
  0005f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00066	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BF@EKNJKNNO@ImportError_traverse?$AA@
  0006d	45 33 c9	 xor	 r9d, r9d
  00070	41 b8 a2 02 00
	00		 mov	 r8d, 674		; 000002a2H
  00076	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN9@ImportErro@4:
  0007b	48 8b 8b 98 00
	00 00		 mov	 rcx, QWORD PTR [rbx+152]
  00082	48 85 c9	 test	 rcx, rcx
  00085	74 09		 je	 SHORT $LN11@ImportErro@4
  00087	48 8b d7	 mov	 rdx, rdi
  0008a	ff d6		 call	 rsi
  0008c	85 c0		 test	 eax, eax
  0008e	75 48		 jne	 SHORT $LN19@ImportErro@4
$LN11@ImportErro@4:

; 675  :     Py_VISIT(self->path);

  00090	e8 00 00 00 00	 call	 _Py_PXCTX
  00095	85 c0		 test	 eax, eax
  00097	74 1c		 je	 SHORT $LN3@ImportErro@4
  00099	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  000a0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BF@EKNJKNNO@ImportError_traverse?$AA@
  000a7	45 33 c9	 xor	 r9d, r9d
  000aa	41 b8 a3 02 00
	00		 mov	 r8d, 675		; 000002a3H
  000b0	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN3@ImportErro@4:
  000b5	48 8b 8b a0 00
	00 00		 mov	 rcx, QWORD PTR [rbx+160]
  000bc	48 85 c9	 test	 rcx, rcx
  000bf	74 09		 je	 SHORT $LN5@ImportErro@4
  000c1	48 8b d7	 mov	 rdx, rdi
  000c4	ff d6		 call	 rsi
  000c6	85 c0		 test	 eax, eax
  000c8	75 0e		 jne	 SHORT $LN19@ImportErro@4
$LN5@ImportErro@4:

; 676  :     return BaseException_traverse((PyBaseExceptionObject *)self, visit, arg);

  000ca	4c 8b c7	 mov	 r8, rdi
  000cd	48 8b d6	 mov	 rdx, rsi
  000d0	48 8b cb	 mov	 rcx, rbx
  000d3	e8 00 00 00 00	 call	 BaseException_traverse
$LN19@ImportErro@4:

; 677  : }

  000d8	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000dd	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  000e2	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000e6	5f		 pop	 rdi
  000e7	c3		 ret	 0
ImportError_traverse ENDP
_TEXT	ENDS
EXTRN	PyUnicode_Type:BYTE
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$ImportError_str DD imagerel ImportError_str
	DD	imagerel ImportError_str+130
	DD	imagerel $unwind$ImportError_str
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$ImportError_str DD 040a01H
	DD	08340aH
	DD	07006520aH
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
xdata	ENDS
;	COMDAT ImportError_str
_TEXT	SEGMENT
self$ = 64
ImportError_str PROC					; COMDAT

; 681  : {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 682  :     if (self->msg && PyUnicode_CheckExact(self->msg)) {

  0000a	48 8b 99 90 00
	00 00		 mov	 rbx, QWORD PTR [rcx+144]
  00011	48 8b f9	 mov	 rdi, rcx
  00014	48 85 db	 test	 rbx, rbx
  00017	74 5a		 je	 SHORT $LN2@ImportErro@5
  00019	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:PyUnicode_Type
  00020	48 39 43 58	 cmp	 QWORD PTR [rbx+88], rax
  00024	75 4d		 jne	 SHORT $LN2@ImportErro@5

; 683  :         Py_INCREF(self->msg);

  00026	e8 00 00 00 00	 call	 _Py_PXCTX
  0002b	85 c0		 test	 eax, eax
  0002d	75 32		 jne	 SHORT $LN6@ImportErro@5
  0002f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00036	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  0003d	4c 8b cb	 mov	 r9, rbx
  00040	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00046	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  0004e	e8 00 00 00 00	 call	 _PyParallel_Guard
  00053	85 c0		 test	 eax, eax
  00055	75 06		 jne	 SHORT $LN5@ImportErro@5
  00057	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  0005b	74 04		 je	 SHORT $LN6@ImportErro@5
$LN5@ImportErro@5:
  0005d	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN6@ImportErro@5:

; 684  :         return self->msg;

  00061	48 8b 87 90 00
	00 00		 mov	 rax, QWORD PTR [rdi+144]

; 685  :     }
; 686  :     else {
; 687  :         return BaseException_str((PyBaseExceptionObject *)self);
; 688  :     }
; 689  : }

  00068	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  0006d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00071	5f		 pop	 rdi
  00072	c3		 ret	 0
$LN2@ImportErro@5:
  00073	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00078	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0007c	5f		 pop	 rdi
  0007d	e9 00 00 00 00	 jmp	 BaseException_str
ImportError_str ENDP
_TEXT	ENDS
PUBLIC	winerror_to_errno
EXTRN	__ImageBase:BYTE
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\pc\errmap.h
;	COMDAT winerror_to_errno
_TEXT	SEGMENT
winerror$ = 8
winerror_to_errno PROC					; COMDAT

; 4    :     switch(winerror) {

  00000	81 f9 0b 01 00
	00		 cmp	 ecx, 267		; 0000010bH
  00006	7f 7f		 jg	 SHORT $LN79@winerror_t
  00008	74 77		 je	 SHORT $LN3@winerror_t
  0000a	83 c1 fe	 add	 ecx, -2
  0000d	81 f9 e6 00 00
	00		 cmp	 ecx, 230		; 000000e6H
  00013	77 7a		 ja	 SHORT $LN1@winerror_t
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:__ImageBase
  0001c	48 63 c1	 movsxd	 rax, ecx
  0001f	0f b6 84 02 00
	00 00 00	 movzx	 eax, BYTE PTR $LN80@winerror_t[rdx+rax]
  00027	8b 8c 82 00 00
	00 00		 mov	 ecx, DWORD PTR $LN81@winerror_t[rdx+rax*4]
  0002e	48 03 ca	 add	 rcx, rdx
  00031	ff e1		 jmp	 rcx
$LN74@winerror_t:

; 5    :         case 2: return 2;

  00033	b8 02 00 00 00	 mov	 eax, 2

; 79   :     }
; 80   : }

  00038	c3		 ret	 0
$LN72@winerror_t:

; 6    :         case 3: return 2;
; 7    :         case 4: return 24;

  00039	b8 18 00 00 00	 mov	 eax, 24

; 79   :     }
; 80   : }

  0003e	c3		 ret	 0
$LN71@winerror_t:

; 8    :         case 5: return 13;

  0003f	b8 0d 00 00 00	 mov	 eax, 13

; 79   :     }
; 80   : }

  00044	c3		 ret	 0
$LN66@winerror_t:

; 9    :         case 6: return 9;
; 10   :         case 7: return 12;
; 11   :         case 8: return 12;
; 12   :         case 9: return 12;
; 13   :         case 10: return 7;

  00045	b8 07 00 00 00	 mov	 eax, 7

; 79   :     }
; 80   : }

  0004a	c3		 ret	 0
$LN65@winerror_t:

; 14   :         case 11: return 8;

  0004b	b8 08 00 00 00	 mov	 eax, 8

; 79   :     }
; 80   : }

  00050	c3		 ret	 0
$LN62@winerror_t:

; 15   :         case 15: return 2;
; 16   :         case 16: return 13;
; 17   :         case 17: return 18;

  00051	b8 12 00 00 00	 mov	 eax, 18

; 79   :     }
; 80   : }

  00056	c3		 ret	 0
$LN39@winerror_t:

; 18   :         case 18: return 2;
; 19   :         case 19: return 13;
; 20   :         case 20: return 13;
; 21   :         case 21: return 13;
; 22   :         case 22: return 13;
; 23   :         case 23: return 13;
; 24   :         case 24: return 13;
; 25   :         case 25: return 13;
; 26   :         case 26: return 13;
; 27   :         case 27: return 13;
; 28   :         case 28: return 13;
; 29   :         case 29: return 13;
; 30   :         case 30: return 13;
; 31   :         case 31: return 13;
; 32   :         case 32: return 13;
; 33   :         case 33: return 13;
; 34   :         case 34: return 13;
; 35   :         case 35: return 13;
; 36   :         case 36: return 13;
; 37   :         case 53: return 2;
; 38   :         case 65: return 13;
; 39   :         case 67: return 2;
; 40   :         case 80: return 17;

  00057	b8 11 00 00 00	 mov	 eax, 17

; 79   :     }
; 80   : }

  0005c	c3		 ret	 0
$LN36@winerror_t:

; 41   :         case 82: return 13;
; 42   :         case 83: return 13;
; 43   :         case 89: return 11;

  0005d	b8 0b 00 00 00	 mov	 eax, 11

; 79   :     }
; 80   : }

  00062	c3		 ret	 0
$LN34@winerror_t:

; 44   :         case 108: return 13;
; 45   :         case 109: return 32;

  00063	b8 20 00 00 00	 mov	 eax, 32			; 00000020H

; 79   :     }
; 80   : }

  00068	c3		 ret	 0
$LN33@winerror_t:

; 46   :         case 112: return 28;

  00069	b8 1c 00 00 00	 mov	 eax, 28

; 79   :     }
; 80   : }

  0006e	c3		 ret	 0
$LN32@winerror_t:

; 47   :         case 114: return 9;

  0006f	b8 09 00 00 00	 mov	 eax, 9

; 79   :     }
; 80   : }

  00074	c3		 ret	 0
$LN31@winerror_t:

; 48   :         case 128: return 10;

  00075	b8 0a 00 00 00	 mov	 eax, 10

; 79   :     }
; 80   : }

  0007a	c3		 ret	 0
$LN27@winerror_t:

; 49   :         case 129: return 10;
; 50   :         case 130: return 9;
; 51   :         case 132: return 13;
; 52   :         case 145: return 41;

  0007b	b8 29 00 00 00	 mov	 eax, 41			; 00000029H

; 79   :     }
; 80   : }

  00080	c3		 ret	 0
$LN3@winerror_t:

; 53   :         case 158: return 13;
; 54   :         case 161: return 2;
; 55   :         case 164: return 11;
; 56   :         case 167: return 13;
; 57   :         case 183: return 17;
; 58   :         case 188: return 8;
; 59   :         case 189: return 8;
; 60   :         case 190: return 8;
; 61   :         case 191: return 8;
; 62   :         case 192: return 8;
; 63   :         case 193: return 8;
; 64   :         case 194: return 8;
; 65   :         case 195: return 8;
; 66   :         case 196: return 8;
; 67   :         case 197: return 8;
; 68   :         case 198: return 8;
; 69   :         case 199: return 8;
; 70   :         case 200: return 8;
; 71   :         case 201: return 8;
; 72   :         case 202: return 8;
; 73   :         case 206: return 2;
; 74   :         case 215: return 11;
; 75   :         case 232: return 32;
; 76   :         case 267: return 20;

  00081	b8 14 00 00 00	 mov	 eax, 20

; 79   :     }
; 80   : }

  00086	c3		 ret	 0
$LN79@winerror_t:

; 4    :     switch(winerror) {

  00087	81 f9 18 07 00
	00		 cmp	 ecx, 1816		; 00000718H
  0008d	74 06		 je	 SHORT $LN2@winerror_t
$LN1@winerror_t:

; 78   :         default: return EINVAL;

  0008f	b8 16 00 00 00	 mov	 eax, 22

; 79   :     }
; 80   : }

  00094	c3		 ret	 0
$LN2@winerror_t:

; 77   :         case 1816: return 12;

  00095	b8 0c 00 00 00	 mov	 eax, 12

; 79   :     }
; 80   : }

  0009a	c3		 ret	 0
  0009b	90		 npad	 1
$LN81@winerror_t:
  0009c	00 00 00 00	 DD	 $LN74@winerror_t
  000a0	00 00 00 00	 DD	 $LN72@winerror_t
  000a4	00 00 00 00	 DD	 $LN71@winerror_t
  000a8	00 00 00 00	 DD	 $LN32@winerror_t
  000ac	00 00 00 00	 DD	 $LN2@winerror_t
  000b0	00 00 00 00	 DD	 $LN66@winerror_t
  000b4	00 00 00 00	 DD	 $LN65@winerror_t
  000b8	00 00 00 00	 DD	 $LN62@winerror_t
  000bc	00 00 00 00	 DD	 $LN39@winerror_t
  000c0	00 00 00 00	 DD	 $LN36@winerror_t
  000c4	00 00 00 00	 DD	 $LN34@winerror_t
  000c8	00 00 00 00	 DD	 $LN33@winerror_t
  000cc	00 00 00 00	 DD	 $LN31@winerror_t
  000d0	00 00 00 00	 DD	 $LN27@winerror_t
  000d4	00 00 00 00	 DD	 $LN1@winerror_t
$LN80@winerror_t:
  000d8	00		 DB	 0
  000d9	00		 DB	 0
  000da	01		 DB	 1
  000db	02		 DB	 2
  000dc	03		 DB	 3
  000dd	04		 DB	 4
  000de	04		 DB	 4
  000df	04		 DB	 4
  000e0	05		 DB	 5
  000e1	06		 DB	 6
  000e2	0e		 DB	 14
  000e3	0e		 DB	 14
  000e4	0e		 DB	 14
  000e5	00		 DB	 0
  000e6	02		 DB	 2
  000e7	07		 DB	 7
  000e8	00		 DB	 0
  000e9	02		 DB	 2
  000ea	02		 DB	 2
  000eb	02		 DB	 2
  000ec	02		 DB	 2
  000ed	02		 DB	 2
  000ee	02		 DB	 2
  000ef	02		 DB	 2
  000f0	02		 DB	 2
  000f1	02		 DB	 2
  000f2	02		 DB	 2
  000f3	02		 DB	 2
  000f4	02		 DB	 2
  000f5	02		 DB	 2
  000f6	02		 DB	 2
  000f7	02		 DB	 2
  000f8	02		 DB	 2
  000f9	02		 DB	 2
  000fa	02		 DB	 2
  000fb	0e		 DB	 14
  000fc	0e		 DB	 14
  000fd	0e		 DB	 14
  000fe	0e		 DB	 14
  000ff	0e		 DB	 14
  00100	0e		 DB	 14
  00101	0e		 DB	 14
  00102	0e		 DB	 14
  00103	0e		 DB	 14
  00104	0e		 DB	 14
  00105	0e		 DB	 14
  00106	0e		 DB	 14
  00107	0e		 DB	 14
  00108	0e		 DB	 14
  00109	0e		 DB	 14
  0010a	0e		 DB	 14
  0010b	00		 DB	 0
  0010c	0e		 DB	 14
  0010d	0e		 DB	 14
  0010e	0e		 DB	 14
  0010f	0e		 DB	 14
  00110	0e		 DB	 14
  00111	0e		 DB	 14
  00112	0e		 DB	 14
  00113	0e		 DB	 14
  00114	0e		 DB	 14
  00115	0e		 DB	 14
  00116	0e		 DB	 14
  00117	02		 DB	 2
  00118	0e		 DB	 14
  00119	00		 DB	 0
  0011a	0e		 DB	 14
  0011b	0e		 DB	 14
  0011c	0e		 DB	 14
  0011d	0e		 DB	 14
  0011e	0e		 DB	 14
  0011f	0e		 DB	 14
  00120	0e		 DB	 14
  00121	0e		 DB	 14
  00122	0e		 DB	 14
  00123	0e		 DB	 14
  00124	0e		 DB	 14
  00125	0e		 DB	 14
  00126	08		 DB	 8
  00127	0e		 DB	 14
  00128	02		 DB	 2
  00129	02		 DB	 2
  0012a	0e		 DB	 14
  0012b	0e		 DB	 14
  0012c	0e		 DB	 14
  0012d	0e		 DB	 14
  0012e	0e		 DB	 14
  0012f	09		 DB	 9
  00130	0e		 DB	 14
  00131	0e		 DB	 14
  00132	0e		 DB	 14
  00133	0e		 DB	 14
  00134	0e		 DB	 14
  00135	0e		 DB	 14
  00136	0e		 DB	 14
  00137	0e		 DB	 14
  00138	0e		 DB	 14
  00139	0e		 DB	 14
  0013a	0e		 DB	 14
  0013b	0e		 DB	 14
  0013c	0e		 DB	 14
  0013d	0e		 DB	 14
  0013e	0e		 DB	 14
  0013f	0e		 DB	 14
  00140	0e		 DB	 14
  00141	0e		 DB	 14
  00142	02		 DB	 2
  00143	0a		 DB	 10
  00144	0e		 DB	 14
  00145	0e		 DB	 14
  00146	0b		 DB	 11
  00147	0e		 DB	 14
  00148	03		 DB	 3
  00149	0e		 DB	 14
  0014a	0e		 DB	 14
  0014b	0e		 DB	 14
  0014c	0e		 DB	 14
  0014d	0e		 DB	 14
  0014e	0e		 DB	 14
  0014f	0e		 DB	 14
  00150	0e		 DB	 14
  00151	0e		 DB	 14
  00152	0e		 DB	 14
  00153	0e		 DB	 14
  00154	0e		 DB	 14
  00155	0e		 DB	 14
  00156	0c		 DB	 12
  00157	0c		 DB	 12
  00158	03		 DB	 3
  00159	0e		 DB	 14
  0015a	02		 DB	 2
  0015b	0e		 DB	 14
  0015c	0e		 DB	 14
  0015d	0e		 DB	 14
  0015e	0e		 DB	 14
  0015f	0e		 DB	 14
  00160	0e		 DB	 14
  00161	0e		 DB	 14
  00162	0e		 DB	 14
  00163	0e		 DB	 14
  00164	0e		 DB	 14
  00165	0e		 DB	 14
  00166	0e		 DB	 14
  00167	0d		 DB	 13
  00168	0e		 DB	 14
  00169	0e		 DB	 14
  0016a	0e		 DB	 14
  0016b	0e		 DB	 14
  0016c	0e		 DB	 14
  0016d	0e		 DB	 14
  0016e	0e		 DB	 14
  0016f	0e		 DB	 14
  00170	0e		 DB	 14
  00171	0e		 DB	 14
  00172	0e		 DB	 14
  00173	0e		 DB	 14
  00174	02		 DB	 2
  00175	0e		 DB	 14
  00176	0e		 DB	 14
  00177	00		 DB	 0
  00178	0e		 DB	 14
  00179	0e		 DB	 14
  0017a	09		 DB	 9
  0017b	0e		 DB	 14
  0017c	0e		 DB	 14
  0017d	02		 DB	 2
  0017e	0e		 DB	 14
  0017f	0e		 DB	 14
  00180	0e		 DB	 14
  00181	0e		 DB	 14
  00182	0e		 DB	 14
  00183	0e		 DB	 14
  00184	0e		 DB	 14
  00185	0e		 DB	 14
  00186	0e		 DB	 14
  00187	0e		 DB	 14
  00188	0e		 DB	 14
  00189	0e		 DB	 14
  0018a	0e		 DB	 14
  0018b	0e		 DB	 14
  0018c	0e		 DB	 14
  0018d	08		 DB	 8
  0018e	0e		 DB	 14
  0018f	0e		 DB	 14
  00190	0e		 DB	 14
  00191	0e		 DB	 14
  00192	06		 DB	 6
  00193	06		 DB	 6
  00194	06		 DB	 6
  00195	06		 DB	 6
  00196	06		 DB	 6
  00197	06		 DB	 6
  00198	06		 DB	 6
  00199	06		 DB	 6
  0019a	06		 DB	 6
  0019b	06		 DB	 6
  0019c	06		 DB	 6
  0019d	06		 DB	 6
  0019e	06		 DB	 6
  0019f	06		 DB	 6
  001a0	06		 DB	 6
  001a1	0e		 DB	 14
  001a2	0e		 DB	 14
  001a3	0e		 DB	 14
  001a4	00		 DB	 0
  001a5	0e		 DB	 14
  001a6	0e		 DB	 14
  001a7	0e		 DB	 14
  001a8	0e		 DB	 14
  001a9	0e		 DB	 14
  001aa	0e		 DB	 14
  001ab	0e		 DB	 14
  001ac	0e		 DB	 14
  001ad	09		 DB	 9
  001ae	0e		 DB	 14
  001af	0e		 DB	 14
  001b0	0e		 DB	 14
  001b1	0e		 DB	 14
  001b2	0e		 DB	 14
  001b3	0e		 DB	 14
  001b4	0e		 DB	 14
  001b5	0e		 DB	 14
  001b6	0e		 DB	 14
  001b7	0e		 DB	 14
  001b8	0e		 DB	 14
  001b9	0e		 DB	 14
  001ba	0e		 DB	 14
  001bb	0e		 DB	 14
  001bc	0e		 DB	 14
  001bd	0e		 DB	 14
  001be	0a		 DB	 10
winerror_to_errno ENDP
_TEXT	ENDS
EXTRN	PyLong_FromLong:PROC
EXTRN	PyErr_Occurred:PROC
EXTRN	PyLong_AsLong:PROC
;	COMDAT pdata
; File c:\src\pyparallel\objects\exceptions.c
pdata	SEGMENT
$pdata$oserror_parse_args DD imagerel oserror_parse_args
	DD	imagerel oserror_parse_args+228
	DD	imagerel $unwind$oserror_parse_args
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$oserror_parse_args DD imagerel oserror_parse_args+228
	DD	imagerel oserror_parse_args+285
	DD	imagerel $chain$0$oserror_parse_args
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$oserror_parse_args DD imagerel oserror_parse_args+285
	DD	imagerel oserror_parse_args+324
	DD	imagerel $chain$1$oserror_parse_args
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$oserror_parse_args DD 021H
	DD	imagerel oserror_parse_args
	DD	imagerel oserror_parse_args+228
	DD	imagerel $unwind$oserror_parse_args
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$oserror_parse_args DD 020521H
	DD	0c5405H
	DD	imagerel oserror_parse_args
	DD	imagerel oserror_parse_args+228
	DD	imagerel $unwind$oserror_parse_args
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$oserror_parse_args DD 0a1901H
	DD	0f7419H
	DD	0e6419H
	DD	0d3419H
	DD	0e0157219H
	DD	0c011d013H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT oserror_parse_args
_TEXT	SEGMENT
p_args$ = 96
myerrno$ = 104
strerror$ = 112
filename$ = 120
winerror$ = 128
oserror_parse_args PROC					; COMDAT

; 741  : {

  00000	4c 8b dc	 mov	 r11, rsp
  00003	49 89 5b 10	 mov	 QWORD PTR [r11+16], rbx
  00007	49 89 73 18	 mov	 QWORD PTR [r11+24], rsi
  0000b	49 89 7b 20	 mov	 QWORD PTR [r11+32], rdi
  0000f	41 54		 push	 r12
  00011	41 55		 push	 r13
  00013	41 56		 push	 r14
  00015	48 83 ec 40	 sub	 rsp, 64			; 00000040H

; 742  :     Py_ssize_t nargs;
; 743  :     PyObject *args = *p_args;

  00019	4c 8b 29	 mov	 r13, QWORD PTR [rcx]
  0001c	48 8b fa	 mov	 rdi, rdx
  0001f	4c 8b f1	 mov	 r14, rcx

; 744  : 
; 745  :     nargs = PyTuple_GET_SIZE(args);

  00022	49 8b 75 60	 mov	 rsi, QWORD PTR [r13+96]

; 746  : 
; 747  : #ifdef MS_WINDOWS
; 748  :     if (nargs >= 2 && nargs <= 4) {

  00026	48 8d 46 fe	 lea	 rax, QWORD PTR [rsi-2]
  0002a	48 83 f8 02	 cmp	 rax, 2
  0002e	0f 87 f4 00 00
	00		 ja	 $LN9@oserror_pa

; 749  :         if (!PyArg_UnpackTuple(args, "OSError", 2, 4,
; 750  :                                myerrno, strerror, filename, winerror))

  00034	48 8b 9c 24 80
	00 00 00	 mov	 rbx, QWORD PTR winerror$[rsp]
  0003c	49 8b cd	 mov	 rcx, r13
  0003f	49 89 5b e0	 mov	 QWORD PTR [r11-32], rbx
  00043	4d 89 4b d8	 mov	 QWORD PTR [r11-40], r9
  00047	4d 89 43 d0	 mov	 QWORD PTR [r11-48], r8
  0004b	41 b9 04 00 00
	00		 mov	 r9d, 4
  00051	49 89 53 c8	 mov	 QWORD PTR [r11-56], rdx
  00055	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_07DLGONEPD@OSError?$AA@
  0005c	45 8d 41 fe	 lea	 r8d, QWORD PTR [r9-2]
  00060	e8 00 00 00 00	 call	 PyArg_UnpackTuple
  00065	85 c0		 test	 eax, eax

; 751  :             return -1;

  00067	74 36		 je	 SHORT $LN17@oserror_pa

; 752  :         if (*winerror && PyLong_Check(*winerror)) {

  00069	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  0006c	48 85 c9	 test	 rcx, rcx
  0006f	0f 84 b3 00 00
	00		 je	 $LN9@oserror_pa
  00075	48 8b 41 58	 mov	 rax, QWORD PTR [rcx+88]
  00079	f7 80 00 01 00
	00 00 00 00 01	 test	 DWORD PTR [rax+256], 16777216 ; 01000000H
  00083	0f 84 9f 00 00
	00		 je	 $LN9@oserror_pa

; 753  :             long errcode, winerrcode;
; 754  :             PyObject *newargs;
; 755  :             Py_ssize_t i;
; 756  : 
; 757  :             winerrcode = PyLong_AsLong(*winerror);

  00089	e8 00 00 00 00	 call	 PyLong_AsLong
  0008e	8b d8		 mov	 ebx, eax

; 758  :             if (winerrcode == -1 && PyErr_Occurred())

  00090	83 f8 ff	 cmp	 eax, -1
  00093	75 12		 jne	 SHORT $LN8@oserror_pa
  00095	e8 00 00 00 00	 call	 PyErr_Occurred
  0009a	48 85 c0	 test	 rax, rax
  0009d	74 0f		 je	 SHORT $LN16@oserror_pa
$LN17@oserror_pa:

; 759  :                 return -1;

  0009f	83 c8 ff	 or	 eax, -1
  000a2	e9 83 00 00 00	 jmp	 $LN12@oserror_pa
$LN8@oserror_pa:

; 760  :             /* Set errno to the corresponding POSIX errno (overriding
; 761  :                first argument).  Windows Socket error codes (>= 10000)
; 762  :                have the same value as their POSIX counterparts.
; 763  :             */
; 764  :             if (winerrcode < 10000)

  000a7	3d 10 27 00 00	 cmp	 eax, 10000		; 00002710H
  000ac	7d 09		 jge	 SHORT $LN7@oserror_pa
$LN16@oserror_pa:

; 765  :                 errcode = winerror_to_errno(winerrcode);

  000ae	8b cb		 mov	 ecx, ebx
  000b0	e8 00 00 00 00	 call	 winerror_to_errno
  000b5	8b d8		 mov	 ebx, eax
$LN7@oserror_pa:

; 766  :             else
; 767  :                 errcode = winerrcode;
; 768  :             *myerrno = PyLong_FromLong(errcode);

  000b7	8b cb		 mov	 ecx, ebx
  000b9	e8 00 00 00 00	 call	 PyLong_FromLong
  000be	48 89 07	 mov	 QWORD PTR [rdi], rax

; 769  :             if (!*myerrno)

  000c1	48 85 c0	 test	 rax, rax

; 770  :                 return -1;

  000c4	74 d9		 je	 SHORT $LN17@oserror_pa

; 771  :             newargs = PyTuple_New(nargs);

  000c6	48 8b ce	 mov	 rcx, rsi
  000c9	e8 00 00 00 00	 call	 PyTuple_New
  000ce	4c 8b e0	 mov	 r12, rax

; 772  :             if (!newargs)

  000d1	48 85 c0	 test	 rax, rax

; 773  :                 return -1;

  000d4	74 c9		 je	 SHORT $LN17@oserror_pa

; 774  :             PyTuple_SET_ITEM(newargs, 0, *myerrno);

  000d6	48 8b 07	 mov	 rax, QWORD PTR [rdi]
  000d9	49 89 44 24 70	 mov	 QWORD PTR [r12+112], rax

; 775  :             for (i = 1; i < nargs; i++) {

  000de	48 83 fe 01	 cmp	 rsi, 1
  000e2	7e 39		 jle	 SHORT $LN1@oserror_pa
  000e4	48 89 6c 24 60	 mov	 QWORD PTR [rsp+96], rbp
  000e9	49 8b ed	 mov	 rbp, r13
  000ec	49 8d 7c 24 78	 lea	 rdi, QWORD PTR [r12+120]
  000f1	49 2b ec	 sub	 rbp, r12
  000f4	48 ff ce	 dec	 rsi
  000f7	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL3@oserror_pa:

; 776  :                 PyObject *val = PyTuple_GET_ITEM(args, i);

  00100	48 8b 1c 2f	 mov	 rbx, QWORD PTR [rdi+rbp]

; 777  :                 Py_INCREF(val);

  00104	48 8b cb	 mov	 rcx, rbx
  00107	e8 00 00 00 00	 call	 _Py_IncRef

; 778  :                 PyTuple_SET_ITEM(newargs, i, val);

  0010c	48 89 1f	 mov	 QWORD PTR [rdi], rbx
  0010f	48 83 c7 08	 add	 rdi, 8
  00113	48 ff ce	 dec	 rsi
  00116	75 e8		 jne	 SHORT $LL3@oserror_pa
  00118	48 8b 6c 24 60	 mov	 rbp, QWORD PTR [rsp+96]
$LN1@oserror_pa:

; 779  :             }
; 780  :             Py_DECREF(args);

  0011d	49 8b cd	 mov	 rcx, r13
  00120	e8 00 00 00 00	 call	 _Py_DecRef

; 781  :             args = *p_args = newargs;

  00125	4d 89 26	 mov	 QWORD PTR [r14], r12
$LN9@oserror_pa:

; 782  :         }
; 783  :     }
; 784  : #else
; 785  :     if (nargs >= 2 && nargs <= 3) {
; 786  :         if (!PyArg_UnpackTuple(args, "OSError", 2, 3,
; 787  :                                myerrno, strerror, filename))
; 788  :             return -1;
; 789  :     }
; 790  : #endif
; 791  : 
; 792  :     return 0;

  00128	33 c0		 xor	 eax, eax
$LN12@oserror_pa:

; 793  : }

  0012a	48 8b 5c 24 68	 mov	 rbx, QWORD PTR [rsp+104]
  0012f	48 8b 74 24 70	 mov	 rsi, QWORD PTR [rsp+112]
  00134	48 8b 7c 24 78	 mov	 rdi, QWORD PTR [rsp+120]
  00139	48 83 c4 40	 add	 rsp, 64			; 00000040H
  0013d	41 5e		 pop	 r14
  0013f	41 5d		 pop	 r13
  00141	41 5c		 pop	 r12
  00143	c3		 ret	 0
oserror_parse_args ENDP
_TEXT	ENDS
PUBLIC	??_C@_0N@ELNMHBPI@oserror_init?$AA@		; `string'
EXTRN	PyTuple_GetSlice:PROC
EXTRN	PyNumber_AsSsize_t:PROC
EXTRN	PyNumber_Check:PROC
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$oserror_init DD imagerel oserror_init
	DD	imagerel oserror_init+630
	DD	imagerel $unwind$oserror_init
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$oserror_init DD 0c1e01H
	DD	0d741eH
	DD	0c641eH
	DD	0b541eH
	DD	0a341eH
	DD	0e01a521eH
	DD	0c016d018H
xdata	ENDS
;	COMDAT ??_C@_0N@ELNMHBPI@oserror_init?$AA@
CONST	SEGMENT
??_C@_0N@ELNMHBPI@oserror_init?$AA@ DB 'oserror_init', 00H ; `string'
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
CONST	ENDS
;	COMDAT oserror_init
_TEXT	SEGMENT
self$ = 80
p_args$ = 88
myerrno$ = 96
strerror$ = 104
filename$ = 112
winerror$ = 120
oserror_init PROC					; COMDAT

; 803  : {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  0000a	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000f	48 89 7c 24 20	 mov	 QWORD PTR [rsp+32], rdi
  00014	41 54		 push	 r12
  00016	41 55		 push	 r13
  00018	41 56		 push	 r14
  0001a	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 804  :     PyObject *args = *p_args;

  0001e	4c 8b 32	 mov	 r14, QWORD PTR [rdx]

; 805  :     Py_ssize_t nargs = PyTuple_GET_SIZE(args);
; 806  : 
; 807  :     /* self->filename will remain Py_None otherwise */
; 808  :     if (filename && filename != Py_None) {

  00021	48 8b 5c 24 70	 mov	 rbx, QWORD PTR filename$[rsp]
  00026	49 8b e9	 mov	 rbp, r9
  00029	4d 8b 6e 60	 mov	 r13, QWORD PTR [r14+96]
  0002d	49 8b f0	 mov	 rsi, r8
  00030	4c 8b e2	 mov	 r12, rdx
  00033	48 8b f9	 mov	 rdi, rcx
  00036	48 85 db	 test	 rbx, rbx
  00039	0f 84 95 00 00
	00		 je	 $LN16@oserror_in
  0003f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_NoneStruct
  00046	48 3b d8	 cmp	 rbx, rax
  00049	0f 84 85 00 00
	00		 je	 $LN16@oserror_in

; 809  :         if (Py_TYPE(self) == (PyTypeObject *) PyExc_BlockingIOError &&
; 810  :             PyNumber_Check(filename)) {

  0004f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR PyExc_BlockingIOError
  00056	48 39 41 58	 cmp	 QWORD PTR [rcx+88], rax
  0005a	75 3a		 jne	 SHORT $LN21@oserror_in
  0005c	48 8b cb	 mov	 rcx, rbx
  0005f	e8 00 00 00 00	 call	 PyNumber_Check
  00064	85 c0		 test	 eax, eax
  00066	74 2e		 je	 SHORT $LN21@oserror_in

; 811  :             /* BlockingIOError's 3rd argument can be the number of
; 812  :              * characters written.
; 813  :              */
; 814  :             self->written = PyNumber_AsSsize_t(filename, PyExc_ValueError);

  00068	48 8b 15 00 00
	00 00		 mov	 rdx, QWORD PTR PyExc_ValueError
  0006f	48 8b cb	 mov	 rcx, rbx
  00072	e8 00 00 00 00	 call	 PyNumber_AsSsize_t
  00077	48 89 87 b0 00
	00 00		 mov	 QWORD PTR [rdi+176], rax

; 815  :             if (self->written == -1 && PyErr_Occurred())

  0007e	48 83 f8 ff	 cmp	 rax, -1
  00082	75 50		 jne	 SHORT $LN16@oserror_in
  00084	e8 00 00 00 00	 call	 PyErr_Occurred
  00089	48 85 c0	 test	 rax, rax
  0008c	74 46		 je	 SHORT $LN16@oserror_in
$LN48@oserror_in:

; 816  :                 return -1;

  0008e	83 c8 ff	 or	 eax, -1
  00091	e9 c1 01 00 00	 jmp	 $LN23@oserror_in
$LN21@oserror_in:

; 817  :         }
; 818  :         else {
; 819  :             Py_INCREF(filename);

  00096	48 8b cb	 mov	 rcx, rbx
  00099	e8 00 00 00 00	 call	 _Py_IncRef

; 820  :             self->filename = filename;
; 821  : 
; 822  :             if (nargs >= 2 && nargs <= 3) {

  0009e	49 8d 45 fe	 lea	 rax, QWORD PTR [r13-2]
  000a2	48 89 9f a0 00
	00 00		 mov	 QWORD PTR [rdi+160], rbx
  000a9	48 83 f8 01	 cmp	 rax, 1
  000ad	77 25		 ja	 SHORT $LN16@oserror_in

; 823  :                 /* filename is removed from the args tuple (for compatibility
; 824  :                    purposes, see test_exceptions.py) */
; 825  :                 PyObject *subslice = PyTuple_GetSlice(args, 0, 2);

  000af	33 d2		 xor	 edx, edx
  000b1	49 8b ce	 mov	 rcx, r14
  000b4	44 8d 42 02	 lea	 r8d, QWORD PTR [rdx+2]
  000b8	e8 00 00 00 00	 call	 PyTuple_GetSlice
  000bd	48 8b d8	 mov	 rbx, rax

; 826  :                 if (!subslice)

  000c0	48 85 c0	 test	 rax, rax

; 827  :                     return -1;

  000c3	74 c9		 je	 SHORT $LN48@oserror_in

; 828  : 
; 829  :                 Py_DECREF(args);  /* replacing args */

  000c5	49 8b ce	 mov	 rcx, r14
  000c8	e8 00 00 00 00	 call	 _Py_DecRef

; 830  :                 *p_args = args = subslice;

  000cd	4c 8b f3	 mov	 r14, rbx
  000d0	49 89 1c 24	 mov	 QWORD PTR [r12], rbx
$LN16@oserror_in:

; 831  :             }
; 832  :         }
; 833  :     }
; 834  :     Py_XINCREF(myerrno);

  000d4	48 85 f6	 test	 rsi, rsi
  000d7	74 3b		 je	 SHORT $LN15@oserror_in
  000d9	e8 00 00 00 00	 call	 _Py_PXCTX
  000de	85 c0		 test	 eax, eax
  000e0	75 32		 jne	 SHORT $LN15@oserror_in
  000e2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  000e9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  000f0	4c 8b ce	 mov	 r9, rsi
  000f3	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  000f9	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00101	e8 00 00 00 00	 call	 _PyParallel_Guard
  00106	85 c0		 test	 eax, eax
  00108	75 06		 jne	 SHORT $LN25@oserror_in
  0010a	f6 46 20 20	 test	 BYTE PTR [rsi+32], 32	; 00000020H
  0010e	74 04		 je	 SHORT $LN15@oserror_in
$LN25@oserror_in:
  00110	48 ff 46 50	 inc	 QWORD PTR [rsi+80]
$LN15@oserror_in:

; 835  :     self->myerrno = myerrno;

  00114	48 89 b7 90 00
	00 00		 mov	 QWORD PTR [rdi+144], rsi

; 836  : 
; 837  :     Py_XINCREF(strerror);

  0011b	48 85 ed	 test	 rbp, rbp
  0011e	74 3b		 je	 SHORT $LN11@oserror_in
  00120	e8 00 00 00 00	 call	 _Py_PXCTX
  00125	85 c0		 test	 eax, eax
  00127	75 32		 jne	 SHORT $LN11@oserror_in
  00129	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00130	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00137	4c 8b cd	 mov	 r9, rbp
  0013a	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00140	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00148	e8 00 00 00 00	 call	 _PyParallel_Guard
  0014d	85 c0		 test	 eax, eax
  0014f	75 06		 jne	 SHORT $LN29@oserror_in
  00151	f6 45 20 20	 test	 BYTE PTR [rbp+32], 32	; 00000020H
  00155	74 04		 je	 SHORT $LN11@oserror_in
$LN29@oserror_in:
  00157	48 ff 45 50	 inc	 QWORD PTR [rbp+80]
$LN11@oserror_in:

; 838  :     self->strerror = strerror;
; 839  : 
; 840  : #ifdef MS_WINDOWS
; 841  :     Py_XINCREF(winerror);

  0015b	48 8b 5c 24 78	 mov	 rbx, QWORD PTR winerror$[rsp]
  00160	48 89 af 98 00
	00 00		 mov	 QWORD PTR [rdi+152], rbp
  00167	48 85 db	 test	 rbx, rbx
  0016a	74 3b		 je	 SHORT $LN7@oserror_in
  0016c	e8 00 00 00 00	 call	 _Py_PXCTX
  00171	85 c0		 test	 eax, eax
  00173	75 32		 jne	 SHORT $LN7@oserror_in
  00175	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0017c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00183	4c 8b cb	 mov	 r9, rbx
  00186	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  0018c	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00194	e8 00 00 00 00	 call	 _PyParallel_Guard
  00199	85 c0		 test	 eax, eax
  0019b	75 06		 jne	 SHORT $LN33@oserror_in
  0019d	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  001a1	74 04		 je	 SHORT $LN7@oserror_in
$LN33@oserror_in:
  001a3	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN7@oserror_in:

; 842  :     self->winerror = winerror;
; 843  : #endif
; 844  : 
; 845  :     /* Steals the reference to args */
; 846  :     Py_CLEAR(self->args);

  001a7	4c 8b 4f 68	 mov	 r9, QWORD PTR [rdi+104]
  001ab	48 89 9f a8 00
	00 00		 mov	 QWORD PTR [rdi+168], rbx
  001b2	4d 85 c9	 test	 r9, r9
  001b5	0f 84 96 00 00
	00		 je	 $LN3@oserror_in
  001bb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  001c2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0N@ELNMHBPI@oserror_init?$AA@
  001c9	41 b8 4e 03 00
	00		 mov	 r8d, 846		; 0000034eH
  001cf	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  001d7	e8 00 00 00 00	 call	 _PyParallel_Guard
  001dc	85 c0		 test	 eax, eax
  001de	75 71		 jne	 SHORT $LN3@oserror_in
  001e0	48 8b 5f 68	 mov	 rbx, QWORD PTR [rdi+104]
  001e4	48 c7 47 68 00
	00 00 00	 mov	 QWORD PTR [rdi+104], 0
  001ec	e8 00 00 00 00	 call	 _Py_PXCTX
  001f1	85 c0		 test	 eax, eax
  001f3	75 5c		 jne	 SHORT $LN3@oserror_in
  001f5	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  001f9	a8 20		 test	 al, 32			; 00000020H
  001fb	75 4c		 jne	 SHORT $LN41@oserror_in
  001fd	84 c0		 test	 al, al
  001ff	78 48		 js	 SHORT $LN41@oserror_in
  00201	a8 02		 test	 al, 2
  00203	75 4c		 jne	 SHORT $LN3@oserror_in
  00205	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  00209	75 46		 jne	 SHORT $LN3@oserror_in
  0020b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00212	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  00219	4c 8b cb	 mov	 r9, rbx
  0021c	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  00222	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0022a	e8 00 00 00 00	 call	 _PyParallel_Guard
  0022f	48 8b cb	 mov	 rcx, rbx
  00232	85 c0		 test	 eax, eax
  00234	74 07		 je	 SHORT $LN46@oserror_in
  00236	e8 00 00 00 00	 call	 _Px_Dealloc
  0023b	eb 14		 jmp	 SHORT $LN3@oserror_in
$LN46@oserror_in:
  0023d	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  00241	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  00247	eb 08		 jmp	 SHORT $LN3@oserror_in
$LN41@oserror_in:
  00249	48 8b cb	 mov	 rcx, rbx
  0024c	e8 00 00 00 00	 call	 Px_DecRef
$LN3@oserror_in:

; 847  :     self->args = args;

  00251	4c 89 77 68	 mov	 QWORD PTR [rdi+104], r14

; 848  :     args = NULL;
; 849  : 
; 850  :     return 0;

  00255	33 c0		 xor	 eax, eax
$LN23@oserror_in:

; 851  : }

  00257	48 8b 5c 24 50	 mov	 rbx, QWORD PTR [rsp+80]
  0025c	48 8b 6c 24 58	 mov	 rbp, QWORD PTR [rsp+88]
  00261	48 8b 74 24 60	 mov	 rsi, QWORD PTR [rsp+96]
  00266	48 8b 7c 24 68	 mov	 rdi, QWORD PTR [rsp+104]
  0026b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0026f	41 5e		 pop	 r14
  00271	41 5d		 pop	 r13
  00273	41 5c		 pop	 r12
  00275	c3		 ret	 0
oserror_init ENDP
_TEXT	ENDS
EXTRN	PyDict_GetItem:PROC
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$OSError_new DD imagerel OSError_new
	DD	imagerel OSError_new+652
	DD	imagerel $unwind$OSError_new
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$OSError_new DD 081701H
	DD	0105417H
	DD	0e3417H
	DD	0c0139217H
	DD	060107011H
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
xdata	ENDS
;	COMDAT OSError_new
_TEXT	SEGMENT
winerror$ = 48
filename$ = 56
strerror$ = 64
type$ = 112
args$ = 120
kwds$ = 128
myerrno$ = 136
OSError_new PROC					; COMDAT

; 881  : {

  00000	48 8b c4	 mov	 rax, rsp
  00003	48 89 58 08	 mov	 QWORD PTR [rax+8], rbx
  00007	48 89 68 18	 mov	 QWORD PTR [rax+24], rbp
  0000b	48 89 50 10	 mov	 QWORD PTR [rax+16], rdx
  0000f	56		 push	 rsi
  00010	57		 push	 rdi
  00011	41 54		 push	 r12
  00013	48 83 ec 50	 sub	 rsp, 80			; 00000050H

; 882  :     PyOSErrorObject *self = NULL;

  00017	45 33 e4	 xor	 r12d, r12d
  0001a	49 8b e8	 mov	 rbp, r8
  0001d	48 8b fa	 mov	 rdi, rdx
  00020	41 8b dc	 mov	 ebx, r12d

; 883  :     PyObject *myerrno = NULL, *strerror = NULL, *filename = NULL;

  00023	4c 89 60 20	 mov	 QWORD PTR [rax+32], r12
  00027	4c 89 60 d8	 mov	 QWORD PTR [rax-40], r12
  0002b	4c 89 60 d0	 mov	 QWORD PTR [rax-48], r12

; 884  : #ifdef MS_WINDOWS
; 885  :     PyObject *winerror = NULL;

  0002f	4c 89 60 c8	 mov	 QWORD PTR [rax-56], r12
  00033	48 8b f1	 mov	 rsi, rcx

; 886  : #endif
; 887  : 
; 888  :     if (!oserror_use_init(type)) {

  00036	e8 00 00 00 00	 call	 oserror_use_init
  0003b	85 c0		 test	 eax, eax
  0003d	0f 85 cd 00 00
	00		 jne	 $LN14@OSError_ne

; 889  :         if (!_PyArg_NoKeywords(type->tp_name, kwds))

  00043	48 8b 4e 70	 mov	 rcx, QWORD PTR [rsi+112]
  00047	48 8b d5	 mov	 rdx, rbp
  0004a	e8 00 00 00 00	 call	 _PyArg_NoKeywords
  0004f	85 c0		 test	 eax, eax

; 890  :             return NULL;

  00051	0f 84 1d 02 00
	00		 je	 $LN3@OSError_ne

; 891  : 
; 892  :         Py_INCREF(args);

  00057	e8 00 00 00 00	 call	 _Py_PXCTX
  0005c	85 c0		 test	 eax, eax
  0005e	75 32		 jne	 SHORT $LN24@OSError_ne
  00060	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00067	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  0006e	4c 8b cf	 mov	 r9, rdi
  00071	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00077	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  0007f	e8 00 00 00 00	 call	 _PyParallel_Guard
  00084	85 c0		 test	 eax, eax
  00086	75 06		 jne	 SHORT $LN23@OSError_ne
  00088	f6 47 20 20	 test	 BYTE PTR [rdi+32], 32	; 00000020H
  0008c	74 04		 je	 SHORT $LN24@OSError_ne
$LN23@OSError_ne:
  0008e	48 ff 47 50	 inc	 QWORD PTR [rdi+80]
$LN24@OSError_ne:

; 893  :         if (oserror_parse_args(&args, &myerrno, &strerror, &filename
; 894  : #ifdef MS_WINDOWS
; 895  :                                , &winerror
; 896  : #endif
; 897  :             ))

  00092	48 8d 44 24 30	 lea	 rax, QWORD PTR winerror$[rsp]
  00097	4c 8d 4c 24 38	 lea	 r9, QWORD PTR filename$[rsp]
  0009c	4c 8d 44 24 40	 lea	 r8, QWORD PTR strerror$[rsp]
  000a1	48 8d 94 24 88
	00 00 00	 lea	 rdx, QWORD PTR myerrno$[rsp]
  000a9	48 8d 4c 24 78	 lea	 rcx, QWORD PTR args$[rsp]
  000ae	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000b3	e8 00 00 00 00	 call	 oserror_parse_args
  000b8	85 c0		 test	 eax, eax
  000ba	0f 85 c3 00 00
	00		 jne	 $LN50@OSError_ne

; 898  :             goto error;
; 899  : 
; 900  :         if (myerrno && PyLong_Check(myerrno) &&
; 901  :             errnomap && (PyObject *) type == PyExc_OSError) {

  000c0	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR myerrno$[rsp]
  000c8	48 85 d2	 test	 rdx, rdx
  000cb	74 3e		 je	 SHORT $LN49@OSError_ne
  000cd	48 8b 42 58	 mov	 rax, QWORD PTR [rdx+88]
  000d1	f7 80 00 01 00
	00 00 00 00 01	 test	 DWORD PTR [rax+256], 16777216 ; 01000000H
  000db	74 2e		 je	 SHORT $LN49@OSError_ne
  000dd	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  000e4	48 85 c9	 test	 rcx, rcx
  000e7	74 22		 je	 SHORT $LN49@OSError_ne
  000e9	48 3b 35 00 00
	00 00		 cmp	 rsi, QWORD PTR PyExc_OSError
  000f0	75 19		 jne	 SHORT $LN49@OSError_ne

; 902  :             PyObject *newtype;
; 903  :             newtype = PyDict_GetItem(errnomap, myerrno);

  000f2	e8 00 00 00 00	 call	 PyDict_GetItem

; 904  :             if (newtype) {

  000f7	48 85 c0	 test	 rax, rax
  000fa	74 05		 je	 SHORT $LN16@OSError_ne

; 905  :                 assert(PyType_Check(newtype));
; 906  :                 type = (PyTypeObject *) newtype;

  000fc	48 8b f0	 mov	 rsi, rax
  000ff	eb 0a		 jmp	 SHORT $LN49@OSError_ne
$LN16@OSError_ne:

; 907  :             }
; 908  :             else if (PyErr_Occurred())

  00101	e8 00 00 00 00	 call	 PyErr_Occurred
  00106	48 85 c0	 test	 rax, rax
  00109	75 78		 jne	 SHORT $LN50@OSError_ne
$LN49@OSError_ne:

; 905  :                 assert(PyType_Check(newtype));
; 906  :                 type = (PyTypeObject *) newtype;

  0010b	48 8b 7c 24 78	 mov	 rdi, QWORD PTR args$[rsp]
$LN14@OSError_ne:

; 909  :                 goto error;
; 910  :         }
; 911  :     }
; 912  : 
; 913  :     self = (PyOSErrorObject *) type->tp_alloc(type, 0);

  00110	33 d2		 xor	 edx, edx
  00112	48 8b ce	 mov	 rcx, rsi
  00115	ff 96 88 01 00
	00		 call	 QWORD PTR [rsi+392]
  0011b	48 8b d8	 mov	 rbx, rax

; 914  :     if (!self)

  0011e	48 85 c0	 test	 rax, rax
  00121	74 65		 je	 SHORT $error$21396

; 915  :         goto error;
; 916  : 
; 917  :     self->dict = NULL;
; 918  :     self->traceback = self->cause = self->context = NULL;
; 919  :     self->written = -1;
; 920  : 
; 921  :     if (!oserror_use_init(type)) {

  00123	48 8b ce	 mov	 rcx, rsi
  00126	4c 89 60 60	 mov	 QWORD PTR [rax+96], r12
  0012a	4c 89 60 78	 mov	 QWORD PTR [rax+120], r12
  0012e	4c 89 a0 80 00
	00 00		 mov	 QWORD PTR [rax+128], r12
  00135	4c 89 60 70	 mov	 QWORD PTR [rax+112], r12
  00139	48 c7 80 b0 00
	00 00 ff ff ff
	ff		 mov	 QWORD PTR [rax+176], -1
  00144	e8 00 00 00 00	 call	 oserror_use_init
  00149	85 c0		 test	 eax, eax
  0014b	0f 85 8d 00 00
	00		 jne	 $LN12@OSError_ne

; 922  :         if (oserror_init(self, &args, myerrno, strerror, filename
; 923  : #ifdef MS_WINDOWS
; 924  :                          , winerror
; 925  : #endif
; 926  :             ))

  00151	48 8b 44 24 30	 mov	 rax, QWORD PTR winerror$[rsp]
  00156	4c 8b 4c 24 40	 mov	 r9, QWORD PTR strerror$[rsp]
  0015b	4c 8b 84 24 88
	00 00 00	 mov	 r8, QWORD PTR myerrno$[rsp]
  00163	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00168	48 8b 44 24 38	 mov	 rax, QWORD PTR filename$[rsp]
  0016d	48 8d 54 24 78	 lea	 rdx, QWORD PTR args$[rsp]
  00172	48 8b cb	 mov	 rcx, rbx
  00175	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0017a	e8 00 00 00 00	 call	 oserror_init
  0017f	85 c0		 test	 eax, eax
  00181	74 6b		 je	 SHORT $LN9@OSError_ne
$LN50@OSError_ne:

; 931  :         if (self->args == NULL)

  00183	48 8b 7c 24 78	 mov	 rdi, QWORD PTR args$[rsp]
$error$21396:

; 936  : 
; 937  : error:
; 938  :     Py_XDECREF(args);

  00188	48 85 ff	 test	 rdi, rdi
  0018b	74 7d		 je	 SHORT $LN7@OSError_ne
  0018d	e8 00 00 00 00	 call	 _Py_PXCTX
  00192	85 c0		 test	 eax, eax
  00194	75 74		 jne	 SHORT $LN7@OSError_ne
  00196	48 8b 47 20	 mov	 rax, QWORD PTR [rdi+32]
  0019a	a8 20		 test	 al, 32			; 00000020H
  0019c	75 64		 jne	 SHORT $LN31@OSError_ne
  0019e	84 c0		 test	 al, al
  001a0	78 60		 js	 SHORT $LN31@OSError_ne
  001a2	a8 02		 test	 al, 2
  001a4	75 64		 jne	 SHORT $LN7@OSError_ne
  001a6	48 ff 4f 50	 dec	 QWORD PTR [rdi+80]
  001aa	75 5e		 jne	 SHORT $LN7@OSError_ne
  001ac	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  001b3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  001ba	4c 8b cf	 mov	 r9, rdi
  001bd	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  001c3	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  001cb	e8 00 00 00 00	 call	 _PyParallel_Guard
  001d0	48 8b cf	 mov	 rcx, rdi
  001d3	85 c0		 test	 eax, eax
  001d5	74 1f		 je	 SHORT $LN36@OSError_ne
  001d7	e8 00 00 00 00	 call	 _Px_Dealloc
  001dc	eb 2c		 jmp	 SHORT $LN7@OSError_ne
$LN12@OSError_ne:

; 927  :             goto error;
; 928  :     }
; 929  :     else {
; 930  :         self->args = PyTuple_New(0);

  001de	33 c9		 xor	 ecx, ecx
  001e0	e8 00 00 00 00	 call	 PyTuple_New
  001e5	48 89 43 68	 mov	 QWORD PTR [rbx+104], rax

; 931  :         if (self->args == NULL)

  001e9	48 85 c0	 test	 rax, rax
  001ec	74 9a		 je	 SHORT $error$21396
$LN9@OSError_ne:

; 932  :             goto error;
; 933  :     }
; 934  : 
; 935  :     return (PyObject *) self;

  001ee	48 8b c3	 mov	 rax, rbx
  001f1	e9 80 00 00 00	 jmp	 $LN21@OSError_ne

; 936  : 
; 937  : error:
; 938  :     Py_XDECREF(args);

$LN36@OSError_ne:
  001f6	48 8b 47 58	 mov	 rax, QWORD PTR [rdi+88]
  001fa	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  00200	eb 08		 jmp	 SHORT $LN7@OSError_ne
$LN31@OSError_ne:
  00202	48 8b cf	 mov	 rcx, rdi
  00205	e8 00 00 00 00	 call	 Px_DecRef
$LN7@OSError_ne:

; 939  :     Py_XDECREF(self);

  0020a	48 85 db	 test	 rbx, rbx
  0020d	74 65		 je	 SHORT $LN3@OSError_ne
  0020f	e8 00 00 00 00	 call	 _Py_PXCTX
  00214	85 c0		 test	 eax, eax
  00216	75 5c		 jne	 SHORT $LN3@OSError_ne
  00218	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  0021c	a8 20		 test	 al, 32			; 00000020H
  0021e	75 4c		 jne	 SHORT $LN42@OSError_ne
  00220	84 c0		 test	 al, al
  00222	78 48		 js	 SHORT $LN42@OSError_ne
  00224	a8 02		 test	 al, 2
  00226	75 4c		 jne	 SHORT $LN3@OSError_ne
  00228	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  0022c	75 46		 jne	 SHORT $LN3@OSError_ne
  0022e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00235	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  0023c	4c 8b cb	 mov	 r9, rbx
  0023f	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  00245	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0024d	e8 00 00 00 00	 call	 _PyParallel_Guard
  00252	48 8b cb	 mov	 rcx, rbx
  00255	85 c0		 test	 eax, eax
  00257	74 07		 je	 SHORT $LN47@OSError_ne
  00259	e8 00 00 00 00	 call	 _Px_Dealloc
  0025e	eb 14		 jmp	 SHORT $LN3@OSError_ne
$LN47@OSError_ne:
  00260	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  00264	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  0026a	eb 08		 jmp	 SHORT $LN3@OSError_ne
$LN42@OSError_ne:
  0026c	48 8b cb	 mov	 rcx, rbx
  0026f	e8 00 00 00 00	 call	 Px_DecRef
$LN3@OSError_ne:

; 940  :     return NULL;

  00274	33 c0		 xor	 eax, eax
$LN21@OSError_ne:

; 941  : }

  00276	48 8b 5c 24 70	 mov	 rbx, QWORD PTR [rsp+112]
  0027b	48 8b ac 24 80
	00 00 00	 mov	 rbp, QWORD PTR [rsp+128]
  00283	48 83 c4 50	 add	 rsp, 80			; 00000050H
  00287	41 5c		 pop	 r12
  00289	5f		 pop	 rdi
  0028a	5e		 pop	 rsi
  0028b	c3		 ret	 0
OSError_new ENDP
_TEXT	ENDS
PUBLIC	??_C@_0O@EDGPPLNL@OSError_clear?$AA@		; `string'
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$OSError_clear DD imagerel OSError_clear
	DD	imagerel OSError_clear+715
	DD	imagerel $unwind$OSError_clear
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$OSError_clear DD 060f01H
	DD	09640fH
	DD	08340fH
	DD	0700b520fH
xdata	ENDS
;	COMDAT ??_C@_0O@EDGPPLNL@OSError_clear?$AA@
CONST	SEGMENT
??_C@_0O@EDGPPLNL@OSError_clear?$AA@ DB 'OSError_clear', 00H ; `string'
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
CONST	ENDS
;	COMDAT OSError_clear
_TEXT	SEGMENT
self$ = 64
OSError_clear PROC					; COMDAT

; 982  : {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 983  :     Py_CLEAR(self->myerrno);

  0000f	4c 8b 89 90 00
	00 00		 mov	 r9, QWORD PTR [rcx+144]
  00016	33 f6		 xor	 esi, esi
  00018	48 8b f9	 mov	 rdi, rcx
  0001b	4d 85 c9	 test	 r9, r9
  0001e	0f 84 98 00 00
	00		 je	 $LN15@OSError_cl
  00024	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0002b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0O@EDGPPLNL@OSError_clear?$AA@
  00032	41 b8 d7 03 00
	00		 mov	 r8d, 983		; 000003d7H
  00038	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00040	e8 00 00 00 00	 call	 _PyParallel_Guard
  00045	85 c0		 test	 eax, eax
  00047	75 73		 jne	 SHORT $LN15@OSError_cl
  00049	48 8b 9f 90 00
	00 00		 mov	 rbx, QWORD PTR [rdi+144]
  00050	48 89 b7 90 00
	00 00		 mov	 QWORD PTR [rdi+144], rsi
  00057	e8 00 00 00 00	 call	 _Py_PXCTX
  0005c	85 c0		 test	 eax, eax
  0005e	75 5c		 jne	 SHORT $LN15@OSError_cl
  00060	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  00064	a8 20		 test	 al, 32			; 00000020H
  00066	75 4c		 jne	 SHORT $LN23@OSError_cl
  00068	84 c0		 test	 al, al
  0006a	78 48		 js	 SHORT $LN23@OSError_cl
  0006c	a8 02		 test	 al, 2
  0006e	75 4c		 jne	 SHORT $LN15@OSError_cl
  00070	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  00074	75 46		 jne	 SHORT $LN15@OSError_cl
  00076	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0007d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  00084	4c 8b cb	 mov	 r9, rbx
  00087	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  0008d	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00095	e8 00 00 00 00	 call	 _PyParallel_Guard
  0009a	48 8b cb	 mov	 rcx, rbx
  0009d	85 c0		 test	 eax, eax
  0009f	74 07		 je	 SHORT $LN28@OSError_cl
  000a1	e8 00 00 00 00	 call	 _Px_Dealloc
  000a6	eb 14		 jmp	 SHORT $LN15@OSError_cl
$LN28@OSError_cl:
  000a8	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  000ac	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  000b2	eb 08		 jmp	 SHORT $LN15@OSError_cl
$LN23@OSError_cl:
  000b4	48 8b cb	 mov	 rcx, rbx
  000b7	e8 00 00 00 00	 call	 Px_DecRef
$LN15@OSError_cl:

; 984  :     Py_CLEAR(self->strerror);

  000bc	4c 8b 8f 98 00
	00 00		 mov	 r9, QWORD PTR [rdi+152]
  000c3	4d 85 c9	 test	 r9, r9
  000c6	0f 84 98 00 00
	00		 je	 $LN11@OSError_cl
  000cc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  000d3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0O@EDGPPLNL@OSError_clear?$AA@
  000da	41 b8 d8 03 00
	00		 mov	 r8d, 984		; 000003d8H
  000e0	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  000e8	e8 00 00 00 00	 call	 _PyParallel_Guard
  000ed	85 c0		 test	 eax, eax
  000ef	75 73		 jne	 SHORT $LN11@OSError_cl
  000f1	48 8b 9f 98 00
	00 00		 mov	 rbx, QWORD PTR [rdi+152]
  000f8	48 89 b7 98 00
	00 00		 mov	 QWORD PTR [rdi+152], rsi
  000ff	e8 00 00 00 00	 call	 _Py_PXCTX
  00104	85 c0		 test	 eax, eax
  00106	75 5c		 jne	 SHORT $LN11@OSError_cl
  00108	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  0010c	a8 20		 test	 al, 32			; 00000020H
  0010e	75 4c		 jne	 SHORT $LN34@OSError_cl
  00110	84 c0		 test	 al, al
  00112	78 48		 js	 SHORT $LN34@OSError_cl
  00114	a8 02		 test	 al, 2
  00116	75 4c		 jne	 SHORT $LN11@OSError_cl
  00118	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  0011c	75 46		 jne	 SHORT $LN11@OSError_cl
  0011e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00125	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  0012c	4c 8b cb	 mov	 r9, rbx
  0012f	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  00135	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0013d	e8 00 00 00 00	 call	 _PyParallel_Guard
  00142	48 8b cb	 mov	 rcx, rbx
  00145	85 c0		 test	 eax, eax
  00147	74 07		 je	 SHORT $LN39@OSError_cl
  00149	e8 00 00 00 00	 call	 _Px_Dealloc
  0014e	eb 14		 jmp	 SHORT $LN11@OSError_cl
$LN39@OSError_cl:
  00150	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  00154	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  0015a	eb 08		 jmp	 SHORT $LN11@OSError_cl
$LN34@OSError_cl:
  0015c	48 8b cb	 mov	 rcx, rbx
  0015f	e8 00 00 00 00	 call	 Px_DecRef
$LN11@OSError_cl:

; 985  :     Py_CLEAR(self->filename);

  00164	4c 8b 8f a0 00
	00 00		 mov	 r9, QWORD PTR [rdi+160]
  0016b	4d 85 c9	 test	 r9, r9
  0016e	0f 84 98 00 00
	00		 je	 $LN7@OSError_cl
  00174	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0017b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0O@EDGPPLNL@OSError_clear?$AA@
  00182	41 b8 d9 03 00
	00		 mov	 r8d, 985		; 000003d9H
  00188	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00190	e8 00 00 00 00	 call	 _PyParallel_Guard
  00195	85 c0		 test	 eax, eax
  00197	75 73		 jne	 SHORT $LN7@OSError_cl
  00199	48 8b 9f a0 00
	00 00		 mov	 rbx, QWORD PTR [rdi+160]
  001a0	48 89 b7 a0 00
	00 00		 mov	 QWORD PTR [rdi+160], rsi
  001a7	e8 00 00 00 00	 call	 _Py_PXCTX
  001ac	85 c0		 test	 eax, eax
  001ae	75 5c		 jne	 SHORT $LN7@OSError_cl
  001b0	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  001b4	a8 20		 test	 al, 32			; 00000020H
  001b6	75 4c		 jne	 SHORT $LN45@OSError_cl
  001b8	84 c0		 test	 al, al
  001ba	78 48		 js	 SHORT $LN45@OSError_cl
  001bc	a8 02		 test	 al, 2
  001be	75 4c		 jne	 SHORT $LN7@OSError_cl
  001c0	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  001c4	75 46		 jne	 SHORT $LN7@OSError_cl
  001c6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  001cd	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  001d4	4c 8b cb	 mov	 r9, rbx
  001d7	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  001dd	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  001e5	e8 00 00 00 00	 call	 _PyParallel_Guard
  001ea	48 8b cb	 mov	 rcx, rbx
  001ed	85 c0		 test	 eax, eax
  001ef	74 07		 je	 SHORT $LN50@OSError_cl
  001f1	e8 00 00 00 00	 call	 _Px_Dealloc
  001f6	eb 14		 jmp	 SHORT $LN7@OSError_cl
$LN50@OSError_cl:
  001f8	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  001fc	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  00202	eb 08		 jmp	 SHORT $LN7@OSError_cl
$LN45@OSError_cl:
  00204	48 8b cb	 mov	 rcx, rbx
  00207	e8 00 00 00 00	 call	 Px_DecRef
$LN7@OSError_cl:

; 986  : #ifdef MS_WINDOWS
; 987  :     Py_CLEAR(self->winerror);

  0020c	4c 8b 8f a8 00
	00 00		 mov	 r9, QWORD PTR [rdi+168]
  00213	4d 85 c9	 test	 r9, r9
  00216	0f 84 98 00 00
	00		 je	 $LN3@OSError_cl
  0021c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00223	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0O@EDGPPLNL@OSError_clear?$AA@
  0022a	41 b8 db 03 00
	00		 mov	 r8d, 987		; 000003dbH
  00230	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00238	e8 00 00 00 00	 call	 _PyParallel_Guard
  0023d	85 c0		 test	 eax, eax
  0023f	75 73		 jne	 SHORT $LN3@OSError_cl
  00241	48 8b 9f a8 00
	00 00		 mov	 rbx, QWORD PTR [rdi+168]
  00248	48 89 b7 a8 00
	00 00		 mov	 QWORD PTR [rdi+168], rsi
  0024f	e8 00 00 00 00	 call	 _Py_PXCTX
  00254	85 c0		 test	 eax, eax
  00256	75 5c		 jne	 SHORT $LN3@OSError_cl
  00258	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  0025c	a8 20		 test	 al, 32			; 00000020H
  0025e	75 4c		 jne	 SHORT $LN56@OSError_cl
  00260	84 c0		 test	 al, al
  00262	78 48		 js	 SHORT $LN56@OSError_cl
  00264	a8 02		 test	 al, 2
  00266	75 4c		 jne	 SHORT $LN3@OSError_cl
  00268	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  0026c	75 46		 jne	 SHORT $LN3@OSError_cl
  0026e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00275	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  0027c	4c 8b cb	 mov	 r9, rbx
  0027f	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  00285	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0028d	e8 00 00 00 00	 call	 _PyParallel_Guard
  00292	48 8b cb	 mov	 rcx, rbx
  00295	85 c0		 test	 eax, eax
  00297	74 07		 je	 SHORT $LN61@OSError_cl
  00299	e8 00 00 00 00	 call	 _Px_Dealloc
  0029e	eb 14		 jmp	 SHORT $LN3@OSError_cl
$LN61@OSError_cl:
  002a0	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  002a4	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  002aa	eb 08		 jmp	 SHORT $LN3@OSError_cl
$LN56@OSError_cl:
  002ac	48 8b cb	 mov	 rcx, rbx
  002af	e8 00 00 00 00	 call	 Px_DecRef
$LN3@OSError_cl:

; 988  : #endif
; 989  :     return BaseException_clear((PyBaseExceptionObject *)self);

  002b4	48 8b cf	 mov	 rcx, rdi

; 990  : }

  002b7	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  002bc	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  002c1	48 83 c4 30	 add	 rsp, 48			; 00000030H
  002c5	5f		 pop	 rdi
  002c6	e9 00 00 00 00	 jmp	 BaseException_clear
OSError_clear ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BA@JGCCKJH@OSError_dealloc?$AA@		; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$OSError_dealloc DD imagerel OSError_dealloc
	DD	imagerel OSError_dealloc+160
	DD	imagerel $unwind$OSError_dealloc
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$OSError_dealloc DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT ??_C@_0BA@JGCCKJH@OSError_dealloc?$AA@
CONST	SEGMENT
??_C@_0BA@JGCCKJH@OSError_dealloc?$AA@ DB 'OSError_dealloc', 00H ; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT OSError_dealloc
_TEXT	SEGMENT
self$ = 64
OSError_dealloc PROC					; COMDAT

; 994  : {

  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8b d9	 mov	 rbx, rcx

; 995  :     _PyObject_GC_UNTRACK(self);

  00009	4c 8b c9	 mov	 r9, rcx
  0000c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JGCCKJH@OSError_dealloc?$AA@
  0001a	41 b8 e3 03 00
	00		 mov	 r8d, 995		; 000003e3H
  00020	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00028	e8 00 00 00 00	 call	 _PyParallel_Guard
  0002d	85 c0		 test	 eax, eax
  0002f	75 54		 jne	 SHORT $LN1@OSError_de
  00031	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JGCCKJH@OSError_dealloc?$AA@
  0003f	4c 8b cb	 mov	 r9, rbx
  00042	41 b8 e3 03 00
	00		 mov	 r8d, 995		; 000003e3H
  00048	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00050	e8 00 00 00 00	 call	 _PyParallel_Guard
  00055	85 c0		 test	 eax, eax
  00057	74 04		 je	 SHORT $LN7@OSError_de
  00059	33 d2		 xor	 edx, edx
  0005b	eb 04		 jmp	 SHORT $LN8@OSError_de
$LN7@OSError_de:
  0005d	48 8d 53 e8	 lea	 rdx, QWORD PTR [rbx-24]
$LN8@OSError_de:
  00061	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00064	48 8b 4a 08	 mov	 rcx, QWORD PTR [rdx+8]
  00068	48 c7 42 10 fe
	ff ff ff	 mov	 QWORD PTR [rdx+16], -2
  00070	48 89 01	 mov	 QWORD PTR [rcx], rax
  00073	48 8b 0a	 mov	 rcx, QWORD PTR [rdx]
  00076	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
  0007a	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  0007e	48 c7 02 00 00
	00 00		 mov	 QWORD PTR [rdx], 0
$LN1@OSError_de:

; 996  :     OSError_clear(self);

  00085	48 8b cb	 mov	 rcx, rbx
  00088	e8 00 00 00 00	 call	 OSError_clear

; 997  :     Py_TYPE(self)->tp_free((PyObject *)self);

  0008d	4c 8b 5b 58	 mov	 r11, QWORD PTR [rbx+88]
  00091	48 8b cb	 mov	 rcx, rbx

; 998  : }

  00094	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00098	5b		 pop	 rbx
  00099	49 ff a3 98 01
	00 00		 rex_jmp QWORD PTR [r11+408]
OSError_dealloc ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BB@LNFOOONC@OSError_traverse?$AA@	; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$OSError_traverse DD imagerel OSError_traverse
	DD	imagerel OSError_traverse+294
	DD	imagerel $unwind$OSError_traverse
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$OSError_traverse DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT ??_C@_0BB@LNFOOONC@OSError_traverse?$AA@
CONST	SEGMENT
??_C@_0BB@LNFOOONC@OSError_traverse?$AA@ DB 'OSError_traverse', 00H ; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT OSError_traverse
_TEXT	SEGMENT
self$ = 48
visit$ = 56
arg$ = 64
OSError_traverse PROC					; COMDAT

; 1003 : {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	49 8b f8	 mov	 rdi, r8
  00012	48 8b f2	 mov	 rsi, rdx
  00015	48 8b d9	 mov	 rbx, rcx

; 1004 :     Py_VISIT(self->myerrno);

  00018	e8 00 00 00 00	 call	 _Py_PXCTX
  0001d	85 c0		 test	 eax, eax
  0001f	74 1c		 je	 SHORT $LN21@OSError_tr
  00021	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@LNFOOONC@OSError_traverse?$AA@
  0002f	45 33 c9	 xor	 r9d, r9d
  00032	41 b8 ec 03 00
	00		 mov	 r8d, 1004		; 000003ecH
  00038	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN21@OSError_tr:
  0003d	48 8b 8b 90 00
	00 00		 mov	 rcx, QWORD PTR [rbx+144]
  00044	48 85 c9	 test	 rcx, rcx
  00047	74 0d		 je	 SHORT $LN23@OSError_tr
  00049	48 8b d7	 mov	 rdx, rdi
  0004c	ff d6		 call	 rsi
  0004e	85 c0		 test	 eax, eax
  00050	0f 85 c0 00 00
	00		 jne	 $LN25@OSError_tr
$LN23@OSError_tr:

; 1005 :     Py_VISIT(self->strerror);

  00056	e8 00 00 00 00	 call	 _Py_PXCTX
  0005b	85 c0		 test	 eax, eax
  0005d	74 1c		 je	 SHORT $LN15@OSError_tr
  0005f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00066	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@LNFOOONC@OSError_traverse?$AA@
  0006d	45 33 c9	 xor	 r9d, r9d
  00070	41 b8 ed 03 00
	00		 mov	 r8d, 1005		; 000003edH
  00076	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN15@OSError_tr:
  0007b	48 8b 8b 98 00
	00 00		 mov	 rcx, QWORD PTR [rbx+152]
  00082	48 85 c9	 test	 rcx, rcx
  00085	74 0d		 je	 SHORT $LN17@OSError_tr
  00087	48 8b d7	 mov	 rdx, rdi
  0008a	ff d6		 call	 rsi
  0008c	85 c0		 test	 eax, eax
  0008e	0f 85 82 00 00
	00		 jne	 $LN25@OSError_tr
$LN17@OSError_tr:

; 1006 :     Py_VISIT(self->filename);

  00094	e8 00 00 00 00	 call	 _Py_PXCTX
  00099	85 c0		 test	 eax, eax
  0009b	74 1c		 je	 SHORT $LN9@OSError_tr
  0009d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  000a4	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@LNFOOONC@OSError_traverse?$AA@
  000ab	45 33 c9	 xor	 r9d, r9d
  000ae	41 b8 ee 03 00
	00		 mov	 r8d, 1006		; 000003eeH
  000b4	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN9@OSError_tr:
  000b9	48 8b 8b a0 00
	00 00		 mov	 rcx, QWORD PTR [rbx+160]
  000c0	48 85 c9	 test	 rcx, rcx
  000c3	74 09		 je	 SHORT $LN11@OSError_tr
  000c5	48 8b d7	 mov	 rdx, rdi
  000c8	ff d6		 call	 rsi
  000ca	85 c0		 test	 eax, eax
  000cc	75 48		 jne	 SHORT $LN25@OSError_tr
$LN11@OSError_tr:

; 1007 : #ifdef MS_WINDOWS
; 1008 :     Py_VISIT(self->winerror);

  000ce	e8 00 00 00 00	 call	 _Py_PXCTX
  000d3	85 c0		 test	 eax, eax
  000d5	74 1c		 je	 SHORT $LN3@OSError_tr
  000d7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  000de	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@LNFOOONC@OSError_traverse?$AA@
  000e5	45 33 c9	 xor	 r9d, r9d
  000e8	41 b8 f0 03 00
	00		 mov	 r8d, 1008		; 000003f0H
  000ee	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN3@OSError_tr:
  000f3	48 8b 8b a8 00
	00 00		 mov	 rcx, QWORD PTR [rbx+168]
  000fa	48 85 c9	 test	 rcx, rcx
  000fd	74 09		 je	 SHORT $LN5@OSError_tr
  000ff	48 8b d7	 mov	 rdx, rdi
  00102	ff d6		 call	 rsi
  00104	85 c0		 test	 eax, eax
  00106	75 0e		 jne	 SHORT $LN25@OSError_tr
$LN5@OSError_tr:

; 1009 : #endif
; 1010 :     return BaseException_traverse((PyBaseExceptionObject *)self, visit, arg);

  00108	4c 8b c7	 mov	 r8, rdi
  0010b	48 8b d6	 mov	 rdx, rsi
  0010e	48 8b cb	 mov	 rcx, rbx
  00111	e8 00 00 00 00	 call	 BaseException_traverse
$LN25@OSError_tr:

; 1011 : }

  00116	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0011b	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  00120	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00124	5f		 pop	 rdi
  00125	c3		 ret	 0
OSError_traverse ENDP
_TEXT	ENDS
PUBLIC	??_C@_0O@OFFGPKPD@?$FLErrno?5?$CFS?$FN?5?$CFS?$AA@ ; `string'
PUBLIC	??_C@_0BC@ONKJBHKO@?$FLErrno?5?$CFS?$FN?5?$CFS?3?5?$CFR?$AA@ ; `string'
PUBLIC	??_C@_0BB@JOELBMEG@?$FLWinError?5?$CFS?$FN?5?$CFS?$AA@ ; `string'
PUBLIC	??_C@_0BF@FCNBMBLM@?$FLWinError?5?$CFS?$FN?5?$CFS?3?5?$CFR?$AA@ ; `string'
;	COMDAT ??_C@_0O@OFFGPKPD@?$FLErrno?5?$CFS?$FN?5?$CFS?$AA@
CONST	SEGMENT
??_C@_0O@OFFGPKPD@?$FLErrno?5?$CFS?$FN?5?$CFS?$AA@ DB '[Errno %S] %S', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@ONKJBHKO@?$FLErrno?5?$CFS?$FN?5?$CFS?3?5?$CFR?$AA@
CONST	SEGMENT
??_C@_0BC@ONKJBHKO@?$FLErrno?5?$CFS?$FN?5?$CFS?3?5?$CFR?$AA@ DB '[Errno %'
	DB	'S] %S: %R', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JOELBMEG@?$FLWinError?5?$CFS?$FN?5?$CFS?$AA@
CONST	SEGMENT
??_C@_0BB@JOELBMEG@?$FLWinError?5?$CFS?$FN?5?$CFS?$AA@ DB '[WinError %S] '
	DB	'%S', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FCNBMBLM@?$FLWinError?5?$CFS?$FN?5?$CFS?3?5?$CFR?$AA@
CONST	SEGMENT
??_C@_0BF@FCNBMBLM@?$FLWinError?5?$CFS?$FN?5?$CFS?3?5?$CFR?$AA@ DB '[WinE'
	DB	'rror %S] %S: %R', 00H			; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT OSError_str
_TEXT	SEGMENT
self$ = 8
OSError_str PROC					; COMDAT

; 1016 : #ifdef MS_WINDOWS
; 1017 :     /* If available, winerror has the priority over myerrno */
; 1018 :     if (self->winerror && self->filename)

  00000	48 8b 91 a8 00
	00 00		 mov	 rdx, QWORD PTR [rcx+168]
  00007	48 85 d2	 test	 rdx, rdx
  0000a	74 4a		 je	 SHORT $LN3@OSError_st
  0000c	4c 8b 89 a0 00
	00 00		 mov	 r9, QWORD PTR [rcx+160]
  00013	4d 85 c9	 test	 r9, r9
  00016	74 21		 je	 SHORT $LN4@OSError_st

; 1019 :         return PyUnicode_FromFormat("[WinError %S] %S: %R",
; 1020 :                                     self->winerror ? self->winerror: Py_None,
; 1021 :                                     self->strerror ? self->strerror: Py_None,
; 1022 :                                     self->filename);

  00018	48 8b 81 98 00
	00 00		 mov	 rax, QWORD PTR [rcx+152]
  0001f	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:_Py_NoneStruct
  00026	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BF@FCNBMBLM@?$FLWinError?5?$CFS?$FN?5?$CFS?3?5?$CFR?$AA@
  0002d	48 85 c0	 test	 rax, rax
  00030	4c 0f 45 c0	 cmovne	 r8, rax

; 1037 :     return BaseException_str((PyBaseExceptionObject *)self);
; 1038 : }

  00034	e9 00 00 00 00	 jmp	 PyUnicode_FromFormat
$LN4@OSError_st:

; 1023 :     if (self->winerror && self->strerror)

  00039	48 85 d2	 test	 rdx, rdx
  0003c	74 18		 je	 SHORT $LN3@OSError_st
  0003e	4c 8b 81 98 00
	00 00		 mov	 r8, QWORD PTR [rcx+152]
  00045	4d 85 c0	 test	 r8, r8
  00048	74 0c		 je	 SHORT $LN3@OSError_st

; 1024 :         return PyUnicode_FromFormat("[WinError %S] %S",
; 1025 :                                     self->winerror ? self->winerror: Py_None,
; 1026 :                                     self->strerror ? self->strerror: Py_None);

  0004a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@JOELBMEG@?$FLWinError?5?$CFS?$FN?5?$CFS?$AA@

; 1037 :     return BaseException_str((PyBaseExceptionObject *)self);
; 1038 : }

  00051	e9 00 00 00 00	 jmp	 PyUnicode_FromFormat
$LN3@OSError_st:

; 1027 : #endif
; 1028 :     if (self->filename)

  00056	4c 8b 89 a0 00
	00 00		 mov	 r9, QWORD PTR [rcx+160]
  0005d	4d 85 c9	 test	 r9, r9
  00060	74 35		 je	 SHORT $LN2@OSError_st

; 1029 :         return PyUnicode_FromFormat("[Errno %S] %S: %R",
; 1030 :                                     self->myerrno ? self->myerrno: Py_None,
; 1031 :                                     self->strerror ? self->strerror: Py_None,
; 1032 :                                     self->filename);

  00062	48 8b 81 98 00
	00 00		 mov	 rax, QWORD PTR [rcx+152]
  00069	4c 8d 15 00 00
	00 00		 lea	 r10, OFFSET FLAT:_Py_NoneStruct
  00070	48 85 c0	 test	 rax, rax
  00073	4d 8b c2	 mov	 r8, r10
  00076	4c 0f 45 c0	 cmovne	 r8, rax
  0007a	48 8b 81 90 00
	00 00		 mov	 rax, QWORD PTR [rcx+144]
  00081	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BC@ONKJBHKO@?$FLErrno?5?$CFS?$FN?5?$CFS?3?5?$CFR?$AA@
  00088	48 85 c0	 test	 rax, rax
  0008b	4c 0f 45 d0	 cmovne	 r10, rax
  0008f	49 8b d2	 mov	 rdx, r10

; 1037 :     return BaseException_str((PyBaseExceptionObject *)self);
; 1038 : }

  00092	e9 00 00 00 00	 jmp	 PyUnicode_FromFormat
$LN2@OSError_st:

; 1033 :     if (self->myerrno && self->strerror)

  00097	48 8b 91 90 00
	00 00		 mov	 rdx, QWORD PTR [rcx+144]
  0009e	48 85 d2	 test	 rdx, rdx
  000a1	74 18		 je	 SHORT $LN1@OSError_st
  000a3	4c 8b 81 98 00
	00 00		 mov	 r8, QWORD PTR [rcx+152]
  000aa	4d 85 c0	 test	 r8, r8
  000ad	74 0c		 je	 SHORT $LN1@OSError_st

; 1034 :         return PyUnicode_FromFormat("[Errno %S] %S",
; 1035 :                                     self->myerrno ? self->myerrno: Py_None,
; 1036 :                                     self->strerror ? self->strerror: Py_None);

  000af	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0O@OFFGPKPD@?$FLErrno?5?$CFS?$FN?5?$CFS?$AA@

; 1037 :     return BaseException_str((PyBaseExceptionObject *)self);
; 1038 : }

  000b6	e9 00 00 00 00	 jmp	 PyUnicode_FromFormat
$LN1@OSError_st:
  000bb	e9 00 00 00 00	 jmp	 BaseException_str
OSError_str ENDP
_TEXT	ENDS
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$OSError_reduce DD imagerel OSError_reduce
	DD	imagerel OSError_reduce+268
	DD	imagerel $unwind$OSError_reduce
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$OSError_reduce DD 060f01H
	DD	09640fH
	DD	08340fH
	DD	0700b520fH
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
xdata	ENDS
;	COMDAT OSError_reduce
_TEXT	SEGMENT
self$ = 64
OSError_reduce PROC					; COMDAT

; 1042 : {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 1043 :     PyObject *args = self->args;

  0000f	48 8b 79 68	 mov	 rdi, QWORD PTR [rcx+104]
  00013	48 8b f1	 mov	 rsi, rcx

; 1044 :     PyObject *res = NULL, *tmp;
; 1045 : 
; 1046 :     /* self->args is only the first two real arguments if there was a
; 1047 :      * file name given to OSError. */
; 1048 :     if (PyTuple_GET_SIZE(args) == 2 && self->filename) {

  00016	48 83 7f 60 02	 cmp	 QWORD PTR [rdi+96], 2
  0001b	75 70		 jne	 SHORT $LN5@OSError_re
  0001d	48 83 b9 a0 00
	00 00 00	 cmp	 QWORD PTR [rcx+160], 0
  00025	74 66		 je	 SHORT $LN5@OSError_re

; 1049 :         args = PyTuple_New(3);

  00027	b9 03 00 00 00	 mov	 ecx, 3
  0002c	e8 00 00 00 00	 call	 PyTuple_New
  00031	48 8b f8	 mov	 rdi, rax

; 1050 :         if (!args)

  00034	48 85 c0	 test	 rax, rax
  00037	75 10		 jne	 SHORT $LN4@OSError_re

; 1071 :     return res;
; 1072 : }

  00039	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  0003e	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  00043	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00047	5f		 pop	 rdi
  00048	c3		 ret	 0
$LN4@OSError_re:

; 1051 :             return NULL;
; 1052 : 
; 1053 :         tmp = PyTuple_GET_ITEM(self->args, 0);

  00049	48 8b 46 68	 mov	 rax, QWORD PTR [rsi+104]
  0004d	48 8b 58 70	 mov	 rbx, QWORD PTR [rax+112]

; 1054 :         Py_INCREF(tmp);

  00051	48 8b cb	 mov	 rcx, rbx
  00054	e8 00 00 00 00	 call	 _Py_IncRef

; 1055 :         PyTuple_SET_ITEM(args, 0, tmp);

  00059	48 89 5f 70	 mov	 QWORD PTR [rdi+112], rbx

; 1056 : 
; 1057 :         tmp = PyTuple_GET_ITEM(self->args, 1);

  0005d	48 8b 46 68	 mov	 rax, QWORD PTR [rsi+104]
  00061	48 8b 58 78	 mov	 rbx, QWORD PTR [rax+120]

; 1058 :         Py_INCREF(tmp);

  00065	48 8b cb	 mov	 rcx, rbx
  00068	e8 00 00 00 00	 call	 _Py_IncRef

; 1059 :         PyTuple_SET_ITEM(args, 1, tmp);

  0006d	48 89 5f 78	 mov	 QWORD PTR [rdi+120], rbx

; 1060 : 
; 1061 :         Py_INCREF(self->filename);

  00071	48 8b 8e a0 00
	00 00		 mov	 rcx, QWORD PTR [rsi+160]
  00078	e8 00 00 00 00	 call	 _Py_IncRef

; 1062 :         PyTuple_SET_ITEM(args, 2, self->filename);

  0007d	4c 8b 9e a0 00
	00 00		 mov	 r11, QWORD PTR [rsi+160]
  00084	4c 89 9f 80 00
	00 00		 mov	 QWORD PTR [rdi+128], r11

; 1063 :     } else

  0008b	eb 3b		 jmp	 SHORT $LN9@OSError_re
$LN5@OSError_re:

; 1064 :         Py_INCREF(args);

  0008d	e8 00 00 00 00	 call	 _Py_PXCTX
  00092	85 c0		 test	 eax, eax
  00094	75 32		 jne	 SHORT $LN9@OSError_re
  00096	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0009d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  000a4	4c 8b cf	 mov	 r9, rdi
  000a7	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  000ad	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  000b5	e8 00 00 00 00	 call	 _PyParallel_Guard
  000ba	85 c0		 test	 eax, eax
  000bc	75 06		 jne	 SHORT $LN8@OSError_re
  000be	f6 47 20 20	 test	 BYTE PTR [rdi+32], 32	; 00000020H
  000c2	74 04		 je	 SHORT $LN9@OSError_re
$LN8@OSError_re:
  000c4	48 ff 47 50	 inc	 QWORD PTR [rdi+80]
$LN9@OSError_re:

; 1065 : 
; 1066 :     if (self->dict)

  000c8	4c 8b 4e 60	 mov	 r9, QWORD PTR [rsi+96]

; 1067 :         res = PyTuple_Pack(3, Py_TYPE(self), args, self->dict);

  000cc	48 8b 56 58	 mov	 rdx, QWORD PTR [rsi+88]
  000d0	4c 8b c7	 mov	 r8, rdi
  000d3	4d 85 c9	 test	 r9, r9
  000d6	74 0c		 je	 SHORT $LN2@OSError_re
  000d8	b9 03 00 00 00	 mov	 ecx, 3
  000dd	e8 00 00 00 00	 call	 PyTuple_Pack

; 1068 :     else

  000e2	eb 0a		 jmp	 SHORT $LN12@OSError_re
$LN2@OSError_re:

; 1069 :         res = PyTuple_Pack(2, Py_TYPE(self), args);

  000e4	b9 02 00 00 00	 mov	 ecx, 2
  000e9	e8 00 00 00 00	 call	 PyTuple_Pack
$LN12@OSError_re:

; 1070 :     Py_DECREF(args);

  000ee	48 8b cf	 mov	 rcx, rdi
  000f1	48 8b d8	 mov	 rbx, rax
  000f4	e8 00 00 00 00	 call	 _Py_DecRef

; 1071 :     return res;
; 1072 : }

  000f9	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  000fe	48 8b c3	 mov	 rax, rbx
  00101	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00106	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0010a	5f		 pop	 rdi
  0010b	c3		 ret	 0
OSError_reduce ENDP
_TEXT	ENDS
EXTRN	PyLong_FromSsize_t:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$OSError_written_get DD imagerel OSError_written_get
	DD	imagerel OSError_written_get+52
	DD	imagerel $unwind$OSError_written_get
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$OSError_written_get DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT OSError_written_get
_TEXT	SEGMENT
self$ = 48
context$ = 56
OSError_written_get PROC				; COMDAT

; 1076 : {

  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1077 :     if (self->written == -1) {

  00004	48 8b 89 b0 00
	00 00		 mov	 rcx, QWORD PTR [rcx+176]
  0000b	48 83 f9 ff	 cmp	 rcx, -1
  0000f	75 1a		 jne	 SHORT $LN1@OSError_wr

; 1078 :         PyErr_SetString(PyExc_AttributeError, "characters_written");

  00011	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_AttributeError
  00018	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BD@MJNIBNKM@characters_written?$AA@
  0001f	e8 00 00 00 00	 call	 PyErr_SetString

; 1079 :         return NULL;

  00024	33 c0		 xor	 eax, eax

; 1080 :     }
; 1081 :     return PyLong_FromSsize_t(self->written);
; 1082 : }

  00026	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002a	c3		 ret	 0
$LN1@OSError_wr:
  0002b	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002f	e9 00 00 00 00	 jmp	 PyLong_FromSsize_t
OSError_written_get ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$OSError_written_set DD imagerel OSError_written_set
	DD	imagerel OSError_written_set+83
	DD	imagerel $unwind$OSError_written_set
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$OSError_written_set DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT OSError_written_set
_TEXT	SEGMENT
self$ = 48
arg$ = 56
context$ = 64
OSError_written_set PROC				; COMDAT

; 1086 : {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b c2	 mov	 rax, rdx

; 1087 :     Py_ssize_t n;
; 1088 :     n = PyNumber_AsSsize_t(arg, PyExc_ValueError);

  0000d	48 8b 15 00 00
	00 00		 mov	 rdx, QWORD PTR PyExc_ValueError
  00014	48 8b f9	 mov	 rdi, rcx
  00017	48 8b c8	 mov	 rcx, rax
  0001a	e8 00 00 00 00	 call	 PyNumber_AsSsize_t
  0001f	48 8b d8	 mov	 rbx, rax

; 1089 :     if (n == -1 && PyErr_Occurred())

  00022	48 83 f8 ff	 cmp	 rax, -1
  00026	75 17		 jne	 SHORT $LN1@OSError_wr@2
  00028	e8 00 00 00 00	 call	 PyErr_Occurred
  0002d	48 85 c0	 test	 rax, rax
  00030	74 0d		 je	 SHORT $LN1@OSError_wr@2

; 1090 :         return -1;

  00032	0b c3		 or	 eax, ebx

; 1092 :     return 0;
; 1093 : }

  00034	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00039	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003d	5f		 pop	 rdi
  0003e	c3		 ret	 0
$LN1@OSError_wr@2:

; 1091 :     self->written = n;

  0003f	48 89 9f b0 00
	00 00		 mov	 QWORD PTR [rdi+176], rbx

; 1092 :     return 0;
; 1093 : }

  00046	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0004b	33 c0		 xor	 eax, eax
  0004d	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00051	5f		 pop	 rdi
  00052	c3		 ret	 0
OSError_written_set ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BJ@KFCEHIN@tuple?5index?5out?5of?5range?$AA@ ; `string'
PUBLIC	??_C@_0BB@MHLBJKKM@SyntaxError_init?$AA@	; `string'
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$SyntaxError_init DD imagerel SyntaxError_init
	DD	imagerel SyntaxError_init+661
	DD	imagerel $unwind$SyntaxError_init
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SyntaxError_init DD 0a3f01H
	DD	09c43fH
	DD	08743aH
	DD	0b540fH
	DD	0a340fH
	DD	0600b520fH
xdata	ENDS
;	COMDAT ??_C@_0BJ@KFCEHIN@tuple?5index?5out?5of?5range?$AA@
CONST	SEGMENT
??_C@_0BJ@KFCEHIN@tuple?5index?5out?5of?5range?$AA@ DB 'tuple index out o'
	DB	'f range', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MHLBJKKM@SyntaxError_init?$AA@
CONST	SEGMENT
??_C@_0BB@MHLBJKKM@SyntaxError_init?$AA@ DB 'SyntaxError_init', 00H ; `string'
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
CONST	ENDS
;	COMDAT SyntaxError_init
_TEXT	SEGMENT
self$ = 64
args$ = 72
kwds$ = 80
SyntaxError_init PROC					; COMDAT

; 1207 : {

  00000	48 89 5c 24 18	 mov	 QWORD PTR [rsp+24], rbx
  00005	48 89 6c 24 20	 mov	 QWORD PTR [rsp+32], rbp
  0000a	56		 push	 rsi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 1208 :     PyObject *info = NULL;
; 1209 :     Py_ssize_t lenargs = PyTuple_GET_SIZE(args);

  0000f	48 8b 72 60	 mov	 rsi, QWORD PTR [rdx+96]
  00013	48 8b ea	 mov	 rbp, rdx
  00016	48 8b d9	 mov	 rbx, rcx

; 1210 : 
; 1211 :     if (BaseException_init((PyBaseExceptionObject *)self, args, kwds) == -1)

  00019	e8 00 00 00 00	 call	 BaseException_init
  0001e	83 f8 ff	 cmp	 eax, -1
  00021	75 12		 jne	 SHORT $LN25@SyntaxErro

; 1212 :         return -1;

  00023	0b c0		 or	 eax, eax

; 1251 : }

  00025	48 8b 5c 24 50	 mov	 rbx, QWORD PTR [rsp+80]
  0002a	48 8b 6c 24 58	 mov	 rbp, QWORD PTR [rsp+88]
  0002f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00033	5e		 pop	 rsi
  00034	c3		 ret	 0
$LN25@SyntaxErro:
  00035	48 89 7c 24 40	 mov	 QWORD PTR [rsp+64], rdi
  0003a	4c 89 64 24 48	 mov	 QWORD PTR [rsp+72], r12

; 1213 : 
; 1214 :     if (lenargs >= 1) {

  0003f	45 33 e4	 xor	 r12d, r12d
  00042	48 83 fe 01	 cmp	 rsi, 1
  00046	0f 8c 8a 00 00
	00		 jl	 $LN29@SyntaxErro

; 1215 :         Py_CLEAR(self->msg);

  0004c	4c 8b 8b 90 00
	00 00		 mov	 r9, QWORD PTR [rbx+144]
  00053	4d 85 c9	 test	 r9, r9
  00056	74 38		 je	 SHORT $LN22@SyntaxErro
  00058	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0005f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@MHLBJKKM@SyntaxError_init?$AA@
  00066	41 b8 bf 04 00
	00		 mov	 r8d, 1215		; 000004bfH
  0006c	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00074	e8 00 00 00 00	 call	 _PyParallel_Guard
  00079	85 c0		 test	 eax, eax
  0007b	75 13		 jne	 SHORT $LN22@SyntaxErro
  0007d	48 8b 8b 90 00
	00 00		 mov	 rcx, QWORD PTR [rbx+144]
  00084	4c 89 a3 90 00
	00 00		 mov	 QWORD PTR [rbx+144], r12
  0008b	e8 00 00 00 00	 call	 _Py_DecRef
$LN22@SyntaxErro:

; 1216 :         self->msg = PyTuple_GET_ITEM(args, 0);

  00090	48 8b 7d 70	 mov	 rdi, QWORD PTR [rbp+112]
  00094	48 89 bb 90 00
	00 00		 mov	 QWORD PTR [rbx+144], rdi

; 1217 :         Py_INCREF(self->msg);

  0009b	e8 00 00 00 00	 call	 _Py_PXCTX
  000a0	85 c0		 test	 eax, eax
  000a2	75 32		 jne	 SHORT $LN29@SyntaxErro
  000a4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  000ab	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  000b2	4c 8b cf	 mov	 r9, rdi
  000b5	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  000bb	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  000c3	e8 00 00 00 00	 call	 _PyParallel_Guard
  000c8	85 c0		 test	 eax, eax
  000ca	75 06		 jne	 SHORT $LN28@SyntaxErro
  000cc	f6 47 20 20	 test	 BYTE PTR [rdi+32], 32	; 00000020H
  000d0	74 04		 je	 SHORT $LN29@SyntaxErro
$LN28@SyntaxErro:
  000d2	48 ff 47 50	 inc	 QWORD PTR [rdi+80]
$LN29@SyntaxErro:

; 1218 :     }
; 1219 :     if (lenargs == 2) {

  000d6	48 83 fe 02	 cmp	 rsi, 2
  000da	0f 85 99 01 00
	00		 jne	 $LN19@SyntaxErro

; 1220 :         info = PyTuple_GET_ITEM(args, 1);
; 1221 :         info = PySequence_Tuple(info);

  000e0	48 8b 4d 78	 mov	 rcx, QWORD PTR [rbp+120]
  000e4	e8 00 00 00 00	 call	 PySequence_Tuple
  000e9	48 8b f8	 mov	 rdi, rax

; 1222 :         if (!info)

  000ec	48 85 c0	 test	 rax, rax

; 1223 :             return -1;

  000ef	74 22		 je	 SHORT $LN34@SyntaxErro

; 1224 : 
; 1225 :         if (PyTuple_GET_SIZE(info) != 4) {

  000f1	48 83 78 60 04	 cmp	 QWORD PTR [rax+96], 4
  000f6	74 23		 je	 SHORT $LN16@SyntaxErro

; 1226 :             /* not a very good error message, but it's what Python 2.4 gives */
; 1227 :             PyErr_SetString(PyExc_IndexError, "tuple index out of range");

  000f8	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_IndexError
  000ff	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@KFCEHIN@tuple?5index?5out?5of?5range?$AA@
  00106	e8 00 00 00 00	 call	 PyErr_SetString

; 1228 :             Py_DECREF(info);

  0010b	48 8b cf	 mov	 rcx, rdi
  0010e	e8 00 00 00 00	 call	 _Py_DecRef
$LN34@SyntaxErro:

; 1229 :             return -1;

  00113	83 c8 ff	 or	 eax, -1
  00116	e9 60 01 00 00	 jmp	 $LN33@SyntaxErro
$LN16@SyntaxErro:

; 1230 :         }
; 1231 : 
; 1232 :         Py_CLEAR(self->filename);

  0011b	4c 8b 8b 98 00
	00 00		 mov	 r9, QWORD PTR [rbx+152]
  00122	4d 85 c9	 test	 r9, r9
  00125	74 38		 je	 SHORT $LN15@SyntaxErro
  00127	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0012e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@MHLBJKKM@SyntaxError_init?$AA@
  00135	41 b8 d0 04 00
	00		 mov	 r8d, 1232		; 000004d0H
  0013b	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00143	e8 00 00 00 00	 call	 _PyParallel_Guard
  00148	85 c0		 test	 eax, eax
  0014a	75 13		 jne	 SHORT $LN15@SyntaxErro
  0014c	48 8b 8b 98 00
	00 00		 mov	 rcx, QWORD PTR [rbx+152]
  00153	4c 89 a3 98 00
	00 00		 mov	 QWORD PTR [rbx+152], r12
  0015a	e8 00 00 00 00	 call	 _Py_DecRef
$LN15@SyntaxErro:

; 1233 :         self->filename = PyTuple_GET_ITEM(info, 0);

  0015f	48 8b 4f 70	 mov	 rcx, QWORD PTR [rdi+112]
  00163	48 89 8b 98 00
	00 00		 mov	 QWORD PTR [rbx+152], rcx

; 1234 :         Py_INCREF(self->filename);

  0016a	e8 00 00 00 00	 call	 _Py_IncRef

; 1235 : 
; 1236 :         Py_CLEAR(self->lineno);

  0016f	4c 8b 8b a0 00
	00 00		 mov	 r9, QWORD PTR [rbx+160]
  00176	4d 85 c9	 test	 r9, r9
  00179	74 38		 je	 SHORT $LN11@SyntaxErro
  0017b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00182	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@MHLBJKKM@SyntaxError_init?$AA@
  00189	41 b8 d4 04 00
	00		 mov	 r8d, 1236		; 000004d4H
  0018f	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00197	e8 00 00 00 00	 call	 _PyParallel_Guard
  0019c	85 c0		 test	 eax, eax
  0019e	75 13		 jne	 SHORT $LN11@SyntaxErro
  001a0	48 8b 8b a0 00
	00 00		 mov	 rcx, QWORD PTR [rbx+160]
  001a7	4c 89 a3 a0 00
	00 00		 mov	 QWORD PTR [rbx+160], r12
  001ae	e8 00 00 00 00	 call	 _Py_DecRef
$LN11@SyntaxErro:

; 1237 :         self->lineno = PyTuple_GET_ITEM(info, 1);

  001b3	48 8b 4f 78	 mov	 rcx, QWORD PTR [rdi+120]
  001b7	48 89 8b a0 00
	00 00		 mov	 QWORD PTR [rbx+160], rcx

; 1238 :         Py_INCREF(self->lineno);

  001be	e8 00 00 00 00	 call	 _Py_IncRef

; 1239 : 
; 1240 :         Py_CLEAR(self->offset);

  001c3	4c 8b 8b a8 00
	00 00		 mov	 r9, QWORD PTR [rbx+168]
  001ca	4d 85 c9	 test	 r9, r9
  001cd	74 38		 je	 SHORT $LN7@SyntaxErro
  001cf	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  001d6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@MHLBJKKM@SyntaxError_init?$AA@
  001dd	41 b8 d8 04 00
	00		 mov	 r8d, 1240		; 000004d8H
  001e3	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  001eb	e8 00 00 00 00	 call	 _PyParallel_Guard
  001f0	85 c0		 test	 eax, eax
  001f2	75 13		 jne	 SHORT $LN7@SyntaxErro
  001f4	48 8b 8b a8 00
	00 00		 mov	 rcx, QWORD PTR [rbx+168]
  001fb	4c 89 a3 a8 00
	00 00		 mov	 QWORD PTR [rbx+168], r12
  00202	e8 00 00 00 00	 call	 _Py_DecRef
$LN7@SyntaxErro:

; 1241 :         self->offset = PyTuple_GET_ITEM(info, 2);

  00207	48 8b 8f 80 00
	00 00		 mov	 rcx, QWORD PTR [rdi+128]
  0020e	48 89 8b a8 00
	00 00		 mov	 QWORD PTR [rbx+168], rcx

; 1242 :         Py_INCREF(self->offset);

  00215	e8 00 00 00 00	 call	 _Py_IncRef

; 1243 : 
; 1244 :         Py_CLEAR(self->text);

  0021a	4c 8b 8b b0 00
	00 00		 mov	 r9, QWORD PTR [rbx+176]
  00221	4d 85 c9	 test	 r9, r9
  00224	74 38		 je	 SHORT $LN3@SyntaxErro
  00226	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0022d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@MHLBJKKM@SyntaxError_init?$AA@
  00234	41 b8 dc 04 00
	00		 mov	 r8d, 1244		; 000004dcH
  0023a	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00242	e8 00 00 00 00	 call	 _PyParallel_Guard
  00247	85 c0		 test	 eax, eax
  00249	75 13		 jne	 SHORT $LN3@SyntaxErro
  0024b	48 8b 8b b0 00
	00 00		 mov	 rcx, QWORD PTR [rbx+176]
  00252	4c 89 a3 b0 00
	00 00		 mov	 QWORD PTR [rbx+176], r12
  00259	e8 00 00 00 00	 call	 _Py_DecRef
$LN3@SyntaxErro:

; 1245 :         self->text = PyTuple_GET_ITEM(info, 3);

  0025e	48 8b 8f 88 00
	00 00		 mov	 rcx, QWORD PTR [rdi+136]
  00265	48 89 8b b0 00
	00 00		 mov	 QWORD PTR [rbx+176], rcx

; 1246 :         Py_INCREF(self->text);

  0026c	e8 00 00 00 00	 call	 _Py_IncRef

; 1247 : 
; 1248 :         Py_DECREF(info);

  00271	48 8b cf	 mov	 rcx, rdi
  00274	e8 00 00 00 00	 call	 _Py_DecRef
$LN19@SyntaxErro:

; 1249 :     }
; 1250 :     return 0;

  00279	33 c0		 xor	 eax, eax
$LN33@SyntaxErro:
  0027b	48 8b 7c 24 40	 mov	 rdi, QWORD PTR [rsp+64]
  00280	4c 8b 64 24 48	 mov	 r12, QWORD PTR [rsp+72]

; 1251 : }

  00285	48 8b 5c 24 50	 mov	 rbx, QWORD PTR [rsp+80]
  0028a	48 8b 6c 24 58	 mov	 rbp, QWORD PTR [rsp+88]
  0028f	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00293	5e		 pop	 rsi
  00294	c3		 ret	 0
SyntaxError_init ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BC@EJMOOLAI@SyntaxError_clear?$AA@	; `string'
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$SyntaxError_clear DD imagerel SyntaxError_clear
	DD	imagerel SyntaxError_clear+1051
	DD	imagerel $unwind$SyntaxError_clear
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SyntaxError_clear DD 060f01H
	DD	09640fH
	DD	08340fH
	DD	0700b520fH
xdata	ENDS
;	COMDAT ??_C@_0BC@EJMOOLAI@SyntaxError_clear?$AA@
CONST	SEGMENT
??_C@_0BC@EJMOOLAI@SyntaxError_clear?$AA@ DB 'SyntaxError_clear', 00H ; `string'
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
CONST	ENDS
;	COMDAT SyntaxError_clear
_TEXT	SEGMENT
self$ = 64
SyntaxError_clear PROC					; COMDAT

; 1255 : {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 1256 :     Py_CLEAR(self->msg);

  0000f	4c 8b 89 90 00
	00 00		 mov	 r9, QWORD PTR [rcx+144]
  00016	33 f6		 xor	 esi, esi
  00018	48 8b f9	 mov	 rdi, rcx
  0001b	4d 85 c9	 test	 r9, r9
  0001e	0f 84 98 00 00
	00		 je	 $LN23@SyntaxErro@2
  00024	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0002b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BC@EJMOOLAI@SyntaxError_clear?$AA@
  00032	41 b8 e8 04 00
	00		 mov	 r8d, 1256		; 000004e8H
  00038	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00040	e8 00 00 00 00	 call	 _PyParallel_Guard
  00045	85 c0		 test	 eax, eax
  00047	75 73		 jne	 SHORT $LN23@SyntaxErro@2
  00049	48 8b 9f 90 00
	00 00		 mov	 rbx, QWORD PTR [rdi+144]
  00050	48 89 b7 90 00
	00 00		 mov	 QWORD PTR [rdi+144], rsi
  00057	e8 00 00 00 00	 call	 _Py_PXCTX
  0005c	85 c0		 test	 eax, eax
  0005e	75 5c		 jne	 SHORT $LN23@SyntaxErro@2
  00060	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  00064	a8 20		 test	 al, 32			; 00000020H
  00066	75 4c		 jne	 SHORT $LN31@SyntaxErro@2
  00068	84 c0		 test	 al, al
  0006a	78 48		 js	 SHORT $LN31@SyntaxErro@2
  0006c	a8 02		 test	 al, 2
  0006e	75 4c		 jne	 SHORT $LN23@SyntaxErro@2
  00070	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  00074	75 46		 jne	 SHORT $LN23@SyntaxErro@2
  00076	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0007d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  00084	4c 8b cb	 mov	 r9, rbx
  00087	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  0008d	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00095	e8 00 00 00 00	 call	 _PyParallel_Guard
  0009a	48 8b cb	 mov	 rcx, rbx
  0009d	85 c0		 test	 eax, eax
  0009f	74 07		 je	 SHORT $LN36@SyntaxErro@2
  000a1	e8 00 00 00 00	 call	 _Px_Dealloc
  000a6	eb 14		 jmp	 SHORT $LN23@SyntaxErro@2
$LN36@SyntaxErro@2:
  000a8	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  000ac	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  000b2	eb 08		 jmp	 SHORT $LN23@SyntaxErro@2
$LN31@SyntaxErro@2:
  000b4	48 8b cb	 mov	 rcx, rbx
  000b7	e8 00 00 00 00	 call	 Px_DecRef
$LN23@SyntaxErro@2:

; 1257 :     Py_CLEAR(self->filename);

  000bc	4c 8b 8f 98 00
	00 00		 mov	 r9, QWORD PTR [rdi+152]
  000c3	4d 85 c9	 test	 r9, r9
  000c6	0f 84 98 00 00
	00		 je	 $LN19@SyntaxErro@2
  000cc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  000d3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BC@EJMOOLAI@SyntaxError_clear?$AA@
  000da	41 b8 e9 04 00
	00		 mov	 r8d, 1257		; 000004e9H
  000e0	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  000e8	e8 00 00 00 00	 call	 _PyParallel_Guard
  000ed	85 c0		 test	 eax, eax
  000ef	75 73		 jne	 SHORT $LN19@SyntaxErro@2
  000f1	48 8b 9f 98 00
	00 00		 mov	 rbx, QWORD PTR [rdi+152]
  000f8	48 89 b7 98 00
	00 00		 mov	 QWORD PTR [rdi+152], rsi
  000ff	e8 00 00 00 00	 call	 _Py_PXCTX
  00104	85 c0		 test	 eax, eax
  00106	75 5c		 jne	 SHORT $LN19@SyntaxErro@2
  00108	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  0010c	a8 20		 test	 al, 32			; 00000020H
  0010e	75 4c		 jne	 SHORT $LN42@SyntaxErro@2
  00110	84 c0		 test	 al, al
  00112	78 48		 js	 SHORT $LN42@SyntaxErro@2
  00114	a8 02		 test	 al, 2
  00116	75 4c		 jne	 SHORT $LN19@SyntaxErro@2
  00118	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  0011c	75 46		 jne	 SHORT $LN19@SyntaxErro@2
  0011e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00125	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  0012c	4c 8b cb	 mov	 r9, rbx
  0012f	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  00135	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0013d	e8 00 00 00 00	 call	 _PyParallel_Guard
  00142	48 8b cb	 mov	 rcx, rbx
  00145	85 c0		 test	 eax, eax
  00147	74 07		 je	 SHORT $LN47@SyntaxErro@2
  00149	e8 00 00 00 00	 call	 _Px_Dealloc
  0014e	eb 14		 jmp	 SHORT $LN19@SyntaxErro@2
$LN47@SyntaxErro@2:
  00150	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  00154	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  0015a	eb 08		 jmp	 SHORT $LN19@SyntaxErro@2
$LN42@SyntaxErro@2:
  0015c	48 8b cb	 mov	 rcx, rbx
  0015f	e8 00 00 00 00	 call	 Px_DecRef
$LN19@SyntaxErro@2:

; 1258 :     Py_CLEAR(self->lineno);

  00164	4c 8b 8f a0 00
	00 00		 mov	 r9, QWORD PTR [rdi+160]
  0016b	4d 85 c9	 test	 r9, r9
  0016e	0f 84 98 00 00
	00		 je	 $LN15@SyntaxErro@2
  00174	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0017b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BC@EJMOOLAI@SyntaxError_clear?$AA@
  00182	41 b8 ea 04 00
	00		 mov	 r8d, 1258		; 000004eaH
  00188	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00190	e8 00 00 00 00	 call	 _PyParallel_Guard
  00195	85 c0		 test	 eax, eax
  00197	75 73		 jne	 SHORT $LN15@SyntaxErro@2
  00199	48 8b 9f a0 00
	00 00		 mov	 rbx, QWORD PTR [rdi+160]
  001a0	48 89 b7 a0 00
	00 00		 mov	 QWORD PTR [rdi+160], rsi
  001a7	e8 00 00 00 00	 call	 _Py_PXCTX
  001ac	85 c0		 test	 eax, eax
  001ae	75 5c		 jne	 SHORT $LN15@SyntaxErro@2
  001b0	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  001b4	a8 20		 test	 al, 32			; 00000020H
  001b6	75 4c		 jne	 SHORT $LN53@SyntaxErro@2
  001b8	84 c0		 test	 al, al
  001ba	78 48		 js	 SHORT $LN53@SyntaxErro@2
  001bc	a8 02		 test	 al, 2
  001be	75 4c		 jne	 SHORT $LN15@SyntaxErro@2
  001c0	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  001c4	75 46		 jne	 SHORT $LN15@SyntaxErro@2
  001c6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  001cd	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  001d4	4c 8b cb	 mov	 r9, rbx
  001d7	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  001dd	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  001e5	e8 00 00 00 00	 call	 _PyParallel_Guard
  001ea	48 8b cb	 mov	 rcx, rbx
  001ed	85 c0		 test	 eax, eax
  001ef	74 07		 je	 SHORT $LN58@SyntaxErro@2
  001f1	e8 00 00 00 00	 call	 _Px_Dealloc
  001f6	eb 14		 jmp	 SHORT $LN15@SyntaxErro@2
$LN58@SyntaxErro@2:
  001f8	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  001fc	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  00202	eb 08		 jmp	 SHORT $LN15@SyntaxErro@2
$LN53@SyntaxErro@2:
  00204	48 8b cb	 mov	 rcx, rbx
  00207	e8 00 00 00 00	 call	 Px_DecRef
$LN15@SyntaxErro@2:

; 1259 :     Py_CLEAR(self->offset);

  0020c	4c 8b 8f a8 00
	00 00		 mov	 r9, QWORD PTR [rdi+168]
  00213	4d 85 c9	 test	 r9, r9
  00216	0f 84 98 00 00
	00		 je	 $LN11@SyntaxErro@2
  0021c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00223	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BC@EJMOOLAI@SyntaxError_clear?$AA@
  0022a	41 b8 eb 04 00
	00		 mov	 r8d, 1259		; 000004ebH
  00230	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00238	e8 00 00 00 00	 call	 _PyParallel_Guard
  0023d	85 c0		 test	 eax, eax
  0023f	75 73		 jne	 SHORT $LN11@SyntaxErro@2
  00241	48 8b 9f a8 00
	00 00		 mov	 rbx, QWORD PTR [rdi+168]
  00248	48 89 b7 a8 00
	00 00		 mov	 QWORD PTR [rdi+168], rsi
  0024f	e8 00 00 00 00	 call	 _Py_PXCTX
  00254	85 c0		 test	 eax, eax
  00256	75 5c		 jne	 SHORT $LN11@SyntaxErro@2
  00258	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  0025c	a8 20		 test	 al, 32			; 00000020H
  0025e	75 4c		 jne	 SHORT $LN64@SyntaxErro@2
  00260	84 c0		 test	 al, al
  00262	78 48		 js	 SHORT $LN64@SyntaxErro@2
  00264	a8 02		 test	 al, 2
  00266	75 4c		 jne	 SHORT $LN11@SyntaxErro@2
  00268	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  0026c	75 46		 jne	 SHORT $LN11@SyntaxErro@2
  0026e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00275	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  0027c	4c 8b cb	 mov	 r9, rbx
  0027f	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  00285	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0028d	e8 00 00 00 00	 call	 _PyParallel_Guard
  00292	48 8b cb	 mov	 rcx, rbx
  00295	85 c0		 test	 eax, eax
  00297	74 07		 je	 SHORT $LN69@SyntaxErro@2
  00299	e8 00 00 00 00	 call	 _Px_Dealloc
  0029e	eb 14		 jmp	 SHORT $LN11@SyntaxErro@2
$LN69@SyntaxErro@2:
  002a0	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  002a4	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  002aa	eb 08		 jmp	 SHORT $LN11@SyntaxErro@2
$LN64@SyntaxErro@2:
  002ac	48 8b cb	 mov	 rcx, rbx
  002af	e8 00 00 00 00	 call	 Px_DecRef
$LN11@SyntaxErro@2:

; 1260 :     Py_CLEAR(self->text);

  002b4	4c 8b 8f b0 00
	00 00		 mov	 r9, QWORD PTR [rdi+176]
  002bb	4d 85 c9	 test	 r9, r9
  002be	0f 84 98 00 00
	00		 je	 $LN7@SyntaxErro@2
  002c4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  002cb	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BC@EJMOOLAI@SyntaxError_clear?$AA@
  002d2	41 b8 ec 04 00
	00		 mov	 r8d, 1260		; 000004ecH
  002d8	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  002e0	e8 00 00 00 00	 call	 _PyParallel_Guard
  002e5	85 c0		 test	 eax, eax
  002e7	75 73		 jne	 SHORT $LN7@SyntaxErro@2
  002e9	48 8b 9f b0 00
	00 00		 mov	 rbx, QWORD PTR [rdi+176]
  002f0	48 89 b7 b0 00
	00 00		 mov	 QWORD PTR [rdi+176], rsi
  002f7	e8 00 00 00 00	 call	 _Py_PXCTX
  002fc	85 c0		 test	 eax, eax
  002fe	75 5c		 jne	 SHORT $LN7@SyntaxErro@2
  00300	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  00304	a8 20		 test	 al, 32			; 00000020H
  00306	75 4c		 jne	 SHORT $LN75@SyntaxErro@2
  00308	84 c0		 test	 al, al
  0030a	78 48		 js	 SHORT $LN75@SyntaxErro@2
  0030c	a8 02		 test	 al, 2
  0030e	75 4c		 jne	 SHORT $LN7@SyntaxErro@2
  00310	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  00314	75 46		 jne	 SHORT $LN7@SyntaxErro@2
  00316	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0031d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  00324	4c 8b cb	 mov	 r9, rbx
  00327	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  0032d	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00335	e8 00 00 00 00	 call	 _PyParallel_Guard
  0033a	48 8b cb	 mov	 rcx, rbx
  0033d	85 c0		 test	 eax, eax
  0033f	74 07		 je	 SHORT $LN80@SyntaxErro@2
  00341	e8 00 00 00 00	 call	 _Px_Dealloc
  00346	eb 14		 jmp	 SHORT $LN7@SyntaxErro@2
$LN80@SyntaxErro@2:
  00348	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  0034c	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  00352	eb 08		 jmp	 SHORT $LN7@SyntaxErro@2
$LN75@SyntaxErro@2:
  00354	48 8b cb	 mov	 rcx, rbx
  00357	e8 00 00 00 00	 call	 Px_DecRef
$LN7@SyntaxErro@2:

; 1261 :     Py_CLEAR(self->print_file_and_line);

  0035c	4c 8b 8f b8 00
	00 00		 mov	 r9, QWORD PTR [rdi+184]
  00363	4d 85 c9	 test	 r9, r9
  00366	0f 84 98 00 00
	00		 je	 $LN3@SyntaxErro@2
  0036c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00373	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BC@EJMOOLAI@SyntaxError_clear?$AA@
  0037a	41 b8 ed 04 00
	00		 mov	 r8d, 1261		; 000004edH
  00380	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00388	e8 00 00 00 00	 call	 _PyParallel_Guard
  0038d	85 c0		 test	 eax, eax
  0038f	75 73		 jne	 SHORT $LN3@SyntaxErro@2
  00391	48 8b 9f b8 00
	00 00		 mov	 rbx, QWORD PTR [rdi+184]
  00398	48 89 b7 b8 00
	00 00		 mov	 QWORD PTR [rdi+184], rsi
  0039f	e8 00 00 00 00	 call	 _Py_PXCTX
  003a4	85 c0		 test	 eax, eax
  003a6	75 5c		 jne	 SHORT $LN3@SyntaxErro@2
  003a8	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  003ac	a8 20		 test	 al, 32			; 00000020H
  003ae	75 4c		 jne	 SHORT $LN86@SyntaxErro@2
  003b0	84 c0		 test	 al, al
  003b2	78 48		 js	 SHORT $LN86@SyntaxErro@2
  003b4	a8 02		 test	 al, 2
  003b6	75 4c		 jne	 SHORT $LN3@SyntaxErro@2
  003b8	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  003bc	75 46		 jne	 SHORT $LN3@SyntaxErro@2
  003be	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  003c5	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  003cc	4c 8b cb	 mov	 r9, rbx
  003cf	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  003d5	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  003dd	e8 00 00 00 00	 call	 _PyParallel_Guard
  003e2	48 8b cb	 mov	 rcx, rbx
  003e5	85 c0		 test	 eax, eax
  003e7	74 07		 je	 SHORT $LN91@SyntaxErro@2
  003e9	e8 00 00 00 00	 call	 _Px_Dealloc
  003ee	eb 14		 jmp	 SHORT $LN3@SyntaxErro@2
$LN91@SyntaxErro@2:
  003f0	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  003f4	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  003fa	eb 08		 jmp	 SHORT $LN3@SyntaxErro@2
$LN86@SyntaxErro@2:
  003fc	48 8b cb	 mov	 rcx, rbx
  003ff	e8 00 00 00 00	 call	 Px_DecRef
$LN3@SyntaxErro@2:

; 1262 :     return BaseException_clear((PyBaseExceptionObject *)self);

  00404	48 8b cf	 mov	 rcx, rdi

; 1263 : }

  00407	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  0040c	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  00411	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00415	5f		 pop	 rdi
  00416	e9 00 00 00 00	 jmp	 BaseException_clear
SyntaxError_clear ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BE@LOMAKGIO@SyntaxError_dealloc?$AA@	; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$SyntaxError_dealloc DD imagerel SyntaxError_dealloc
	DD	imagerel SyntaxError_dealloc+160
	DD	imagerel $unwind$SyntaxError_dealloc
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SyntaxError_dealloc DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT ??_C@_0BE@LOMAKGIO@SyntaxError_dealloc?$AA@
CONST	SEGMENT
??_C@_0BE@LOMAKGIO@SyntaxError_dealloc?$AA@ DB 'SyntaxError_dealloc', 00H ; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT SyntaxError_dealloc
_TEXT	SEGMENT
self$ = 64
SyntaxError_dealloc PROC				; COMDAT

; 1267 : {

  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8b d9	 mov	 rbx, rcx

; 1268 :     _PyObject_GC_UNTRACK(self);

  00009	4c 8b c9	 mov	 r9, rcx
  0000c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BE@LOMAKGIO@SyntaxError_dealloc?$AA@
  0001a	41 b8 f4 04 00
	00		 mov	 r8d, 1268		; 000004f4H
  00020	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00028	e8 00 00 00 00	 call	 _PyParallel_Guard
  0002d	85 c0		 test	 eax, eax
  0002f	75 54		 jne	 SHORT $LN1@SyntaxErro@3
  00031	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BE@LOMAKGIO@SyntaxError_dealloc?$AA@
  0003f	4c 8b cb	 mov	 r9, rbx
  00042	41 b8 f4 04 00
	00		 mov	 r8d, 1268		; 000004f4H
  00048	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00050	e8 00 00 00 00	 call	 _PyParallel_Guard
  00055	85 c0		 test	 eax, eax
  00057	74 04		 je	 SHORT $LN7@SyntaxErro@3
  00059	33 d2		 xor	 edx, edx
  0005b	eb 04		 jmp	 SHORT $LN8@SyntaxErro@3
$LN7@SyntaxErro@3:
  0005d	48 8d 53 e8	 lea	 rdx, QWORD PTR [rbx-24]
$LN8@SyntaxErro@3:
  00061	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00064	48 8b 4a 08	 mov	 rcx, QWORD PTR [rdx+8]
  00068	48 c7 42 10 fe
	ff ff ff	 mov	 QWORD PTR [rdx+16], -2
  00070	48 89 01	 mov	 QWORD PTR [rcx], rax
  00073	48 8b 0a	 mov	 rcx, QWORD PTR [rdx]
  00076	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
  0007a	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  0007e	48 c7 02 00 00
	00 00		 mov	 QWORD PTR [rdx], 0
$LN1@SyntaxErro@3:

; 1269 :     SyntaxError_clear(self);

  00085	48 8b cb	 mov	 rcx, rbx
  00088	e8 00 00 00 00	 call	 SyntaxError_clear

; 1270 :     Py_TYPE(self)->tp_free((PyObject *)self);

  0008d	4c 8b 5b 58	 mov	 r11, QWORD PTR [rbx+88]
  00091	48 8b cb	 mov	 rcx, rbx

; 1271 : }

  00094	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00098	5b		 pop	 rbx
  00099	49 ff a3 98 01
	00 00		 rex_jmp QWORD PTR [r11+408]
SyntaxError_dealloc ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BF@NJICOEJO@SyntaxError_traverse?$AA@	; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$SyntaxError_traverse DD imagerel SyntaxError_traverse
	DD	imagerel SyntaxError_traverse+418
	DD	imagerel $unwind$SyntaxError_traverse
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SyntaxError_traverse DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT ??_C@_0BF@NJICOEJO@SyntaxError_traverse?$AA@
CONST	SEGMENT
??_C@_0BF@NJICOEJO@SyntaxError_traverse?$AA@ DB 'SyntaxError_traverse', 00H ; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT SyntaxError_traverse
_TEXT	SEGMENT
self$ = 48
visit$ = 56
arg$ = 64
SyntaxError_traverse PROC				; COMDAT

; 1275 : {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	49 8b f8	 mov	 rdi, r8
  00012	48 8b f2	 mov	 rsi, rdx
  00015	48 8b d9	 mov	 rbx, rcx

; 1276 :     Py_VISIT(self->msg);

  00018	e8 00 00 00 00	 call	 _Py_PXCTX
  0001d	85 c0		 test	 eax, eax
  0001f	74 1c		 je	 SHORT $LN33@SyntaxErro@4
  00021	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BF@NJICOEJO@SyntaxError_traverse?$AA@
  0002f	45 33 c9	 xor	 r9d, r9d
  00032	41 b8 fc 04 00
	00		 mov	 r8d, 1276		; 000004fcH
  00038	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN33@SyntaxErro@4:
  0003d	48 8b 8b 90 00
	00 00		 mov	 rcx, QWORD PTR [rbx+144]
  00044	48 85 c9	 test	 rcx, rcx
  00047	74 0d		 je	 SHORT $LN35@SyntaxErro@4
  00049	48 8b d7	 mov	 rdx, rdi
  0004c	ff d6		 call	 rsi
  0004e	85 c0		 test	 eax, eax
  00050	0f 85 3c 01 00
	00		 jne	 $LN37@SyntaxErro@4
$LN35@SyntaxErro@4:

; 1277 :     Py_VISIT(self->filename);

  00056	e8 00 00 00 00	 call	 _Py_PXCTX
  0005b	85 c0		 test	 eax, eax
  0005d	74 1c		 je	 SHORT $LN27@SyntaxErro@4
  0005f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00066	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BF@NJICOEJO@SyntaxError_traverse?$AA@
  0006d	45 33 c9	 xor	 r9d, r9d
  00070	41 b8 fd 04 00
	00		 mov	 r8d, 1277		; 000004fdH
  00076	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN27@SyntaxErro@4:
  0007b	48 8b 8b 98 00
	00 00		 mov	 rcx, QWORD PTR [rbx+152]
  00082	48 85 c9	 test	 rcx, rcx
  00085	74 0d		 je	 SHORT $LN29@SyntaxErro@4
  00087	48 8b d7	 mov	 rdx, rdi
  0008a	ff d6		 call	 rsi
  0008c	85 c0		 test	 eax, eax
  0008e	0f 85 fe 00 00
	00		 jne	 $LN37@SyntaxErro@4
$LN29@SyntaxErro@4:

; 1278 :     Py_VISIT(self->lineno);

  00094	e8 00 00 00 00	 call	 _Py_PXCTX
  00099	85 c0		 test	 eax, eax
  0009b	74 1c		 je	 SHORT $LN21@SyntaxErro@4
  0009d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  000a4	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BF@NJICOEJO@SyntaxError_traverse?$AA@
  000ab	45 33 c9	 xor	 r9d, r9d
  000ae	41 b8 fe 04 00
	00		 mov	 r8d, 1278		; 000004feH
  000b4	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN21@SyntaxErro@4:
  000b9	48 8b 8b a0 00
	00 00		 mov	 rcx, QWORD PTR [rbx+160]
  000c0	48 85 c9	 test	 rcx, rcx
  000c3	74 0d		 je	 SHORT $LN23@SyntaxErro@4
  000c5	48 8b d7	 mov	 rdx, rdi
  000c8	ff d6		 call	 rsi
  000ca	85 c0		 test	 eax, eax
  000cc	0f 85 c0 00 00
	00		 jne	 $LN37@SyntaxErro@4
$LN23@SyntaxErro@4:

; 1279 :     Py_VISIT(self->offset);

  000d2	e8 00 00 00 00	 call	 _Py_PXCTX
  000d7	85 c0		 test	 eax, eax
  000d9	74 1c		 je	 SHORT $LN15@SyntaxErro@4
  000db	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  000e2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BF@NJICOEJO@SyntaxError_traverse?$AA@
  000e9	45 33 c9	 xor	 r9d, r9d
  000ec	41 b8 ff 04 00
	00		 mov	 r8d, 1279		; 000004ffH
  000f2	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN15@SyntaxErro@4:
  000f7	48 8b 8b a8 00
	00 00		 mov	 rcx, QWORD PTR [rbx+168]
  000fe	48 85 c9	 test	 rcx, rcx
  00101	74 0d		 je	 SHORT $LN17@SyntaxErro@4
  00103	48 8b d7	 mov	 rdx, rdi
  00106	ff d6		 call	 rsi
  00108	85 c0		 test	 eax, eax
  0010a	0f 85 82 00 00
	00		 jne	 $LN37@SyntaxErro@4
$LN17@SyntaxErro@4:

; 1280 :     Py_VISIT(self->text);

  00110	e8 00 00 00 00	 call	 _Py_PXCTX
  00115	85 c0		 test	 eax, eax
  00117	74 1c		 je	 SHORT $LN9@SyntaxErro@4
  00119	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00120	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BF@NJICOEJO@SyntaxError_traverse?$AA@
  00127	45 33 c9	 xor	 r9d, r9d
  0012a	41 b8 00 05 00
	00		 mov	 r8d, 1280		; 00000500H
  00130	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN9@SyntaxErro@4:
  00135	48 8b 8b b0 00
	00 00		 mov	 rcx, QWORD PTR [rbx+176]
  0013c	48 85 c9	 test	 rcx, rcx
  0013f	74 09		 je	 SHORT $LN11@SyntaxErro@4
  00141	48 8b d7	 mov	 rdx, rdi
  00144	ff d6		 call	 rsi
  00146	85 c0		 test	 eax, eax
  00148	75 48		 jne	 SHORT $LN37@SyntaxErro@4
$LN11@SyntaxErro@4:

; 1281 :     Py_VISIT(self->print_file_and_line);

  0014a	e8 00 00 00 00	 call	 _Py_PXCTX
  0014f	85 c0		 test	 eax, eax
  00151	74 1c		 je	 SHORT $LN3@SyntaxErro@4
  00153	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0015a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BF@NJICOEJO@SyntaxError_traverse?$AA@
  00161	45 33 c9	 xor	 r9d, r9d
  00164	41 b8 01 05 00
	00		 mov	 r8d, 1281		; 00000501H
  0016a	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN3@SyntaxErro@4:
  0016f	48 8b 8b b8 00
	00 00		 mov	 rcx, QWORD PTR [rbx+184]
  00176	48 85 c9	 test	 rcx, rcx
  00179	74 09		 je	 SHORT $LN5@SyntaxErro@4
  0017b	48 8b d7	 mov	 rdx, rdi
  0017e	ff d6		 call	 rsi
  00180	85 c0		 test	 eax, eax
  00182	75 0e		 jne	 SHORT $LN37@SyntaxErro@4
$LN5@SyntaxErro@4:

; 1282 :     return BaseException_traverse((PyBaseExceptionObject *)self, visit, arg);

  00184	4c 8b c7	 mov	 r8, rdi
  00187	48 8b d6	 mov	 rdx, rsi
  0018a	48 8b cb	 mov	 rcx, rbx
  0018d	e8 00 00 00 00	 call	 BaseException_traverse
$LN37@SyntaxErro@4:

; 1283 : }

  00192	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00197	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  0019c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  001a0	5f		 pop	 rdi
  001a1	c3		 ret	 0
SyntaxError_traverse ENDP
_TEXT	ENDS
EXTRN	PyUnicode_Substring:PROC
EXTRN	_PyUnicode_Ready:PROC
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$my_basename DD imagerel my_basename
	DD	imagerel my_basename+93
	DD	imagerel $unwind$my_basename
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$my_basename DD imagerel my_basename+93
	DD	imagerel my_basename+182
	DD	imagerel $chain$1$my_basename
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$my_basename DD imagerel my_basename+182
	DD	imagerel my_basename+269
	DD	imagerel $chain$2$my_basename
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$my_basename DD 021H
	DD	imagerel my_basename
	DD	imagerel my_basename+93
	DD	imagerel $unwind$my_basename
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$my_basename DD 040a21H
	DD	09740aH
	DD	086405H
	DD	imagerel my_basename
	DD	imagerel my_basename+93
	DD	imagerel $unwind$my_basename
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$my_basename DD 020601H
	DD	030025206H
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
xdata	ENDS
;	COMDAT my_basename
_TEXT	SEGMENT
name$ = 64
my_basename PROC					; COMDAT

; 1290 : {

  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 1291 :     Py_ssize_t i, size, offset;
; 1292 :     int kind;
; 1293 :     void *data;
; 1294 : 
; 1295 :     if (PyUnicode_READY(name))

  00006	f6 41 70 80	 test	 BYTE PTR [rcx+112], 128	; 00000080H
  0000a	48 8b d9	 mov	 rbx, rcx
  0000d	75 11		 jne	 SHORT $LN7@my_basenam
  0000f	e8 00 00 00 00	 call	 _PyUnicode_Ready
  00014	85 c0		 test	 eax, eax
  00016	74 08		 je	 SHORT $LN7@my_basenam

; 1296 :         return NULL;

  00018	33 c0		 xor	 eax, eax

; 1310 :     }
; 1311 : }

  0001a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0001e	5b		 pop	 rbx
  0001f	c3		 ret	 0
$LN7@my_basenam:

; 1297 :     kind = PyUnicode_KIND(name);

  00020	8b 4b 70	 mov	 ecx, DWORD PTR [rbx+112]
  00023	8b c1		 mov	 eax, ecx
  00025	c1 e8 02	 shr	 eax, 2
  00028	83 e0 07	 and	 eax, 7

; 1298 :     data = PyUnicode_DATA(name);

  0002b	f6 c1 20	 test	 cl, 32			; 00000020H
  0002e	74 17		 je	 SHORT $LN14@my_basenam
  00030	f6 c1 40	 test	 cl, 64			; 00000040H
  00033	74 09		 je	 SHORT $LN12@my_basenam
  00035	48 8d 8b 80 00
	00 00		 lea	 rcx, QWORD PTR [rbx+128]
  0003c	eb 10		 jmp	 SHORT $LN15@my_basenam
$LN12@my_basenam:
  0003e	48 8d 8b a0 00
	00 00		 lea	 rcx, QWORD PTR [rbx+160]
  00045	eb 07		 jmp	 SHORT $LN15@my_basenam
$LN14@my_basenam:
  00047	48 8b 8b a0 00
	00 00		 mov	 rcx, QWORD PTR [rbx+160]
$LN15@my_basenam:

; 1299 :     size = PyUnicode_GET_LENGTH(name);

  0004e	4c 8b 5b 60	 mov	 r11, QWORD PTR [rbx+96]

; 1300 :     offset = 0;

  00052	45 33 c9	 xor	 r9d, r9d

; 1302 :         if (PyUnicode_READ(kind, data, i) == SEP)

  00055	48 63 d0	 movsxd	 rdx, eax
  00058	4d 85 db	 test	 r11, r11
  0005b	7e 6c		 jle	 SHORT $LN2@my_basenam

; 1299 :     size = PyUnicode_GET_LENGTH(name);

  0005d	48 89 74 24 40	 mov	 QWORD PTR [rsp+64], rsi
  00062	48 89 7c 24 48	 mov	 QWORD PTR [rsp+72], rdi
  00067	45 8d 41 01	 lea	 r8d, QWORD PTR [r9+1]

; 1301 :     for(i=0; i < size; i++) {

  0006b	48 8d 79 ff	 lea	 rdi, QWORD PTR [rcx-1]
  0006f	4c 8b d1	 mov	 r10, rcx
  00072	49 8b f3	 mov	 rsi, r11
$LL6@my_basenam:

; 1302 :         if (PyUnicode_READ(kind, data, i) == SEP)

  00075	48 83 fa 01	 cmp	 rdx, 1
  00079	75 07		 jne	 SHORT $LN18@my_basenam
  0007b	42 0f b6 04 07	 movzx	 eax, BYTE PTR [rdi+r8]
  00080	eb 0e		 jmp	 SHORT $LN17@my_basenam
$LN18@my_basenam:
  00082	48 83 fa 02	 cmp	 rdx, 2
  00086	75 06		 jne	 SHORT $LN16@my_basenam
  00088	41 0f b7 02	 movzx	 eax, WORD PTR [r10]
  0008c	eb 02		 jmp	 SHORT $LN17@my_basenam
$LN16@my_basenam:
  0008e	8b 01		 mov	 eax, DWORD PTR [rcx]
$LN17@my_basenam:
  00090	83 f8 5c	 cmp	 eax, 92			; 0000005cH
  00093	4d 0f 44 c8	 cmove	 r9, r8
  00097	49 83 c2 02	 add	 r10, 2
  0009b	48 83 c1 04	 add	 rcx, 4
  0009f	49 ff c0	 inc	 r8
  000a2	48 ff ce	 dec	 rsi
  000a5	75 ce		 jne	 SHORT $LL6@my_basenam

; 1303 :             offset = i + 1;
; 1304 :     }
; 1305 :     if (offset != 0)

  000a7	48 8b 7c 24 48	 mov	 rdi, QWORD PTR [rsp+72]
  000ac	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
  000b1	4d 85 c9	 test	 r9, r9
  000b4	74 13		 je	 SHORT $LN2@my_basenam

; 1306 :         return PyUnicode_Substring(name, offset, size);

  000b6	4d 8b c3	 mov	 r8, r11
  000b9	49 8b d1	 mov	 rdx, r9
  000bc	48 8b cb	 mov	 rcx, rbx

; 1310 :     }
; 1311 : }

  000bf	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000c3	5b		 pop	 rbx
  000c4	e9 00 00 00 00	 jmp	 PyUnicode_Substring
$LN2@my_basenam:

; 1307 :     else {
; 1308 :         Py_INCREF(name);

  000c9	e8 00 00 00 00	 call	 _Py_PXCTX
  000ce	85 c0		 test	 eax, eax
  000d0	75 32		 jne	 SHORT $LN21@my_basenam
  000d2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  000d9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  000e0	4c 8b cb	 mov	 r9, rbx
  000e3	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  000e9	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  000f1	e8 00 00 00 00	 call	 _PyParallel_Guard
  000f6	85 c0		 test	 eax, eax
  000f8	75 06		 jne	 SHORT $LN20@my_basenam
  000fa	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  000fe	74 04		 je	 SHORT $LN21@my_basenam
$LN20@my_basenam:
  00100	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN21@my_basenam:

; 1309 :         return name;

  00104	48 8b c3	 mov	 rax, rbx

; 1310 :     }
; 1311 : }

  00107	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0010b	5b		 pop	 rbx
  0010c	c3		 ret	 0
my_basename ENDP
_TEXT	ENDS
PUBLIC	??_C@_07HGLGPCMB@?$CFS?5?$CI?$CFU?$CJ?$AA@	; `string'
PUBLIC	??_C@_0BC@PNHCFPFB@?$CFS?5?$CI?$CFU?0?5line?5?$CFld?$CJ?$AA@ ; `string'
PUBLIC	??_C@_0O@KELMGNHM@?$CFS?5?$CIline?5?$CFld?$CJ?$AA@ ; `string'
EXTRN	PyLong_AsLongAndOverflow:PROC
EXTRN	PyLong_Type:BYTE
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$SyntaxError_str DD imagerel SyntaxError_str
	DD	imagerel SyntaxError_str+459
	DD	imagerel $unwind$SyntaxError_str
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SyntaxError_str DD 060f01H
	DD	0a640fH
	DD	09340fH
	DD	0700b520fH
xdata	ENDS
;	COMDAT ??_C@_07HGLGPCMB@?$CFS?5?$CI?$CFU?$CJ?$AA@
CONST	SEGMENT
??_C@_07HGLGPCMB@?$CFS?5?$CI?$CFU?$CJ?$AA@ DB '%S (%U)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PNHCFPFB@?$CFS?5?$CI?$CFU?0?5line?5?$CFld?$CJ?$AA@
CONST	SEGMENT
??_C@_0BC@PNHCFPFB@?$CFS?5?$CI?$CFU?0?5line?5?$CFld?$CJ?$AA@ DB '%S (%U, '
	DB	'line %ld)', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@KELMGNHM@?$CFS?5?$CIline?5?$CFld?$CJ?$AA@
CONST	SEGMENT
??_C@_0O@KELMGNHM@?$CFS?5?$CIline?5?$CFld?$CJ?$AA@ DB '%S (line %ld)', 00H ; `string'
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
CONST	ENDS
;	COMDAT SyntaxError_str
_TEXT	SEGMENT
overflow$ = 64
self$ = 64
SyntaxError_str PROC					; COMDAT

; 1316 : {

  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b f1	 mov	 rsi, rcx

; 1317 :     int have_lineno = 0;
; 1318 :     PyObject *filename;
; 1319 :     PyObject *result;
; 1320 :     /* Below, we always ignore overflow errors, just printing -1.
; 1321 :        Still, we cannot allow an OverflowError to be raised, so
; 1322 :        we need to call PyLong_AsLongAndOverflow. */
; 1323 :     int overflow;
; 1324 : 
; 1325 :     /* XXX -- do all the additional formatting with filename and
; 1326 :        lineno here */
; 1327 : 
; 1328 :     if (self->filename && PyUnicode_Check(self->filename)) {

  00012	48 8b 89 98 00
	00 00		 mov	 rcx, QWORD PTR [rcx+152]
  00019	33 ff		 xor	 edi, edi
  0001b	48 85 c9	 test	 rcx, rcx
  0001e	74 2d		 je	 SHORT $LN12@SyntaxErro@5
  00020	48 8b 41 58	 mov	 rax, QWORD PTR [rcx+88]
  00024	f7 80 00 01 00
	00 00 00 00 10	 test	 DWORD PTR [rax+256], 268435456 ; 10000000H
  0002e	74 1d		 je	 SHORT $LN12@SyntaxErro@5

; 1329 :         filename = my_basename(self->filename);

  00030	e8 00 00 00 00	 call	 my_basename
  00035	48 8b d8	 mov	 rbx, rax

; 1330 :         if (filename == NULL)

  00038	48 85 c0	 test	 rax, rax
  0003b	75 13		 jne	 SHORT $LN10@SyntaxErro@5

; 1355 : }

  0003d	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  00042	48 8b 74 24 50	 mov	 rsi, QWORD PTR [rsp+80]
  00047	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0004b	5f		 pop	 rdi
  0004c	c3		 ret	 0
$LN12@SyntaxErro@5:

; 1331 :             return NULL;
; 1332 :     } else {
; 1333 :         filename = NULL;

  0004d	48 8b df	 mov	 rbx, rdi
$LN10@SyntaxErro@5:

; 1334 :     }
; 1335 :     have_lineno = (self->lineno != NULL) && PyLong_CheckExact(self->lineno);

  00050	48 8b 8e a0 00
	00 00		 mov	 rcx, QWORD PTR [rsi+160]
  00057	48 85 c9	 test	 rcx, rcx
  0005a	74 12		 je	 SHORT $LN15@SyntaxErro@5
  0005c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:PyLong_Type
  00063	48 39 41 58	 cmp	 QWORD PTR [rcx+88], rax
  00067	75 05		 jne	 SHORT $LN15@SyntaxErro@5
  00069	bf 01 00 00 00	 mov	 edi, 1
$LN15@SyntaxErro@5:

; 1338 :         return PyObject_Str(self->msg ? self->msg : Py_None);

  0006e	48 8b 86 90 00
	00 00		 mov	 rax, QWORD PTR [rsi+144]
  00075	48 85 db	 test	 rbx, rbx
  00078	75 64		 jne	 SHORT $LN36@SyntaxErro@5

; 1336 : 
; 1337 :     if (!filename && !have_lineno)

  0007a	85 ff		 test	 edi, edi
  0007c	75 23		 jne	 SHORT $LN6@SyntaxErro@5

; 1338 :         return PyObject_Str(self->msg ? self->msg : Py_None);

  0007e	48 85 c0	 test	 rax, rax
  00081	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_Py_NoneStruct
  00088	48 0f 45 c8	 cmovne	 rcx, rax
  0008c	e8 00 00 00 00	 call	 PyObject_Str

; 1355 : }

  00091	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  00096	48 8b 74 24 50	 mov	 rsi, QWORD PTR [rsp+80]
  0009b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0009f	5f		 pop	 rdi
  000a0	c3		 ret	 0
$LN6@SyntaxErro@5:

; 1349 :     else /* only have_lineno */
; 1350 :         result = PyUnicode_FromFormat("%S (line %ld)",
; 1351 :                    self->msg ? self->msg : Py_None,
; 1352 :                    PyLong_AsLongAndOverflow(self->lineno, &overflow));

  000a1	48 85 c0	 test	 rax, rax
  000a4	48 8d 3d 00 00
	00 00		 lea	 rdi, OFFSET FLAT:_Py_NoneStruct
  000ab	48 8d 54 24 40	 lea	 rdx, QWORD PTR overflow$[rsp]
  000b0	48 0f 45 f8	 cmovne	 rdi, rax
  000b4	e8 00 00 00 00	 call	 PyLong_AsLongAndOverflow
  000b9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0O@KELMGNHM@?$CFS?5?$CIline?5?$CFld?$CJ?$AA@
  000c0	44 8b c0	 mov	 r8d, eax
  000c3	48 8b d7	 mov	 rdx, rdi
  000c6	e8 00 00 00 00	 call	 PyUnicode_FromFormat
  000cb	48 8b f8	 mov	 rdi, rax

; 1355 : }

  000ce	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  000d3	48 8b 74 24 50	 mov	 rsi, QWORD PTR [rsp+80]
  000d8	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000dc	5f		 pop	 rdi
  000dd	c3		 ret	 0
$LN36@SyntaxErro@5:

; 1339 : 
; 1340 :     if (filename && have_lineno)

  000de	85 ff		 test	 edi, edi
  000e0	74 2f		 je	 SHORT $LN8@SyntaxErro@5

; 1341 :         result = PyUnicode_FromFormat("%S (%U, line %ld)",
; 1342 :                    self->msg ? self->msg : Py_None,
; 1343 :                    filename,
; 1344 :                    PyLong_AsLongAndOverflow(self->lineno, &overflow));

  000e2	48 85 c0	 test	 rax, rax
  000e5	48 8d 3d 00 00
	00 00		 lea	 rdi, OFFSET FLAT:_Py_NoneStruct
  000ec	48 8d 54 24 40	 lea	 rdx, QWORD PTR overflow$[rsp]
  000f1	48 0f 45 f8	 cmovne	 rdi, rax
  000f5	e8 00 00 00 00	 call	 PyLong_AsLongAndOverflow
  000fa	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BC@PNHCFPFB@?$CFS?5?$CI?$CFU?0?5line?5?$CFld?$CJ?$AA@
  00101	4c 8b c3	 mov	 r8, rbx
  00104	48 8b d7	 mov	 rdx, rdi
  00107	44 8b c8	 mov	 r9d, eax
  0010a	e8 00 00 00 00	 call	 PyUnicode_FromFormat
  0010f	eb 1d		 jmp	 SHORT $LN37@SyntaxErro@5
$LN8@SyntaxErro@5:

; 1345 :     else if (filename)
; 1346 :         result = PyUnicode_FromFormat("%S (%U)",
; 1347 :                    self->msg ? self->msg : Py_None,
; 1348 :                    filename);

  00111	48 85 c0	 test	 rax, rax
  00114	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_Py_NoneStruct
  0011b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_07HGLGPCMB@?$CFS?5?$CI?$CFU?$CJ?$AA@
  00122	48 0f 45 d0	 cmovne	 rdx, rax
  00126	4c 8b c3	 mov	 r8, rbx
  00129	e8 00 00 00 00	 call	 PyUnicode_FromFormat
$LN37@SyntaxErro@5:
  0012e	48 8b f8	 mov	 rdi, rax

; 1353 :     Py_XDECREF(filename);

  00131	e8 00 00 00 00	 call	 _Py_PXCTX
  00136	85 c0		 test	 eax, eax
  00138	75 7e		 jne	 SHORT $LN3@SyntaxErro@5
  0013a	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  0013e	a8 20		 test	 al, 32			; 00000020H
  00140	75 6e		 jne	 SHORT $LN29@SyntaxErro@5
  00142	84 c0		 test	 al, al
  00144	78 6a		 js	 SHORT $LN29@SyntaxErro@5
  00146	a8 02		 test	 al, 2
  00148	75 6e		 jne	 SHORT $LN3@SyntaxErro@5
  0014a	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  0014e	75 68		 jne	 SHORT $LN3@SyntaxErro@5
  00150	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00157	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  0015e	4c 8b cb	 mov	 r9, rbx
  00161	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  00167	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0016f	e8 00 00 00 00	 call	 _PyParallel_Guard
  00174	48 8b cb	 mov	 rcx, rbx
  00177	85 c0		 test	 eax, eax
  00179	74 18		 je	 SHORT $LN34@SyntaxErro@5
  0017b	e8 00 00 00 00	 call	 _Px_Dealloc

; 1354 :     return result;

  00180	48 8b c7	 mov	 rax, rdi

; 1355 : }

  00183	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  00188	48 8b 74 24 50	 mov	 rsi, QWORD PTR [rsp+80]
  0018d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00191	5f		 pop	 rdi
  00192	c3		 ret	 0

; 1353 :     Py_XDECREF(filename);

$LN34@SyntaxErro@5:
  00193	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  00197	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]

; 1354 :     return result;

  0019d	48 8b c7	 mov	 rax, rdi

; 1355 : }

  001a0	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  001a5	48 8b 74 24 50	 mov	 rsi, QWORD PTR [rsp+80]
  001aa	48 83 c4 30	 add	 rsp, 48			; 00000030H
  001ae	5f		 pop	 rdi
  001af	c3		 ret	 0

; 1353 :     Py_XDECREF(filename);

$LN29@SyntaxErro@5:
  001b0	48 8b cb	 mov	 rcx, rbx
  001b3	e8 00 00 00 00	 call	 Px_DecRef
$LN3@SyntaxErro@5:

; 1355 : }

  001b8	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  001bd	48 8b 74 24 50	 mov	 rsi, QWORD PTR [rsp+80]
  001c2	48 8b c7	 mov	 rax, rdi
  001c5	48 83 c4 30	 add	 rsp, 48			; 00000030H
  001c9	5f		 pop	 rdi
  001ca	c3		 ret	 0
SyntaxError_str ENDP
_TEXT	ENDS
EXTRN	PyObject_Repr:PROC
; Function compile flags: /Ogtpy
;	COMDAT KeyError_str
_TEXT	SEGMENT
self$ = 8
KeyError_str PROC					; COMDAT

; 1413 :     /* If args is a tuple of exactly one item, apply repr to args[0].
; 1414 :        This is done so that e.g. the exception raised by {}[''] prints
; 1415 :          KeyError: ''
; 1416 :        rather than the confusing
; 1417 :          KeyError
; 1418 :        alone.  The downside is that if KeyError is raised with an explanatory
; 1419 :        string, that string will be displayed in quotes.  Too bad.
; 1420 :        If args is anything else, use the default BaseException__str__().
; 1421 :     */
; 1422 :     if (PyTuple_GET_SIZE(self->args) == 1) {

  00000	48 8b 41 68	 mov	 rax, QWORD PTR [rcx+104]
  00004	48 83 78 60 01	 cmp	 QWORD PTR [rax+96], 1
  00009	75 09		 jne	 SHORT $LN1@KeyError_s

; 1423 :         return PyObject_Repr(PyTuple_GET_ITEM(self->args, 0));

  0000b	48 8b 48 70	 mov	 rcx, QWORD PTR [rax+112]

; 1424 :     }
; 1425 :     return BaseException_str(self);
; 1426 : }

  0000f	e9 00 00 00 00	 jmp	 PyObject_Repr
$LN1@KeyError_s:
  00014	e9 00 00 00 00	 jmp	 BaseException_str
KeyError_str ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BP@OHEDFPGI@?$CF?4200s?5attribute?5must?5be?5bytes?$AA@ ; `string'
PUBLIC	??_C@_0BJ@BFONPBGN@?$CF?4200s?5attribute?5not?5set?$AA@ ; `string'
EXTRN	PyErr_Format:PROC
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$get_string DD imagerel get_string
	DD	imagerel get_string+158
	DD	imagerel $unwind$get_string
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$get_string DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT ??_C@_0BP@OHEDFPGI@?$CF?4200s?5attribute?5must?5be?5bytes?$AA@
CONST	SEGMENT
??_C@_0BP@OHEDFPGI@?$CF?4200s?5attribute?5must?5be?5bytes?$AA@ DB '%.200s'
	DB	' attribute must be bytes', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@BFONPBGN@?$CF?4200s?5attribute?5not?5set?$AA@
CONST	SEGMENT
??_C@_0BJ@BFONPBGN@?$CF?4200s?5attribute?5not?5set?$AA@ DB '%.200s attrib'
	DB	'ute not set', 00H				; `string'
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
CONST	ENDS
;	COMDAT get_string
_TEXT	SEGMENT
attr$ = 64
name$ = 72
get_string PROC						; COMDAT

; 1447 : {

  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8b d9	 mov	 rbx, rcx

; 1448 :     if (!attr) {

  00009	48 85 c9	 test	 rcx, rcx
  0000c	75 1e		 jne	 SHORT $LN2@get_string

; 1449 :         PyErr_Format(PyExc_TypeError, "%.200s attribute not set", name);

  0000e	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  00015	4c 8b c2	 mov	 r8, rdx
  00018	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@BFONPBGN@?$CF?4200s?5attribute?5not?5set?$AA@
  0001f	e8 00 00 00 00	 call	 PyErr_Format

; 1450 :         return NULL;

  00024	33 c0		 xor	 eax, eax

; 1459 : }

  00026	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0002a	5b		 pop	 rbx
  0002b	c3		 ret	 0
$LN2@get_string:

; 1451 :     }
; 1452 : 
; 1453 :     if (!PyBytes_Check(attr)) {

  0002c	48 8b 41 58	 mov	 rax, QWORD PTR [rcx+88]
  00030	f7 80 00 01 00
	00 00 00 00 08	 test	 DWORD PTR [rax+256], 134217728 ; 08000000H
  0003a	75 1e		 jne	 SHORT $LN1@get_string

; 1454 :         PyErr_Format(PyExc_TypeError, "%.200s attribute must be bytes", name);

  0003c	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  00043	4c 8b c2	 mov	 r8, rdx
  00046	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BP@OHEDFPGI@?$CF?4200s?5attribute?5must?5be?5bytes?$AA@
  0004d	e8 00 00 00 00	 call	 PyErr_Format

; 1455 :         return NULL;

  00052	33 c0		 xor	 eax, eax

; 1459 : }

  00054	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00058	5b		 pop	 rbx
  00059	c3		 ret	 0
$LN1@get_string:

; 1456 :     }
; 1457 :     Py_INCREF(attr);

  0005a	e8 00 00 00 00	 call	 _Py_PXCTX
  0005f	85 c0		 test	 eax, eax
  00061	75 32		 jne	 SHORT $LN6@get_string
  00063	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0006a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00071	4c 8b cb	 mov	 r9, rbx
  00074	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  0007a	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00082	e8 00 00 00 00	 call	 _PyParallel_Guard
  00087	85 c0		 test	 eax, eax
  00089	75 06		 jne	 SHORT $LN5@get_string
  0008b	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  0008f	74 04		 je	 SHORT $LN6@get_string
$LN5@get_string:
  00091	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN6@get_string:

; 1458 :     return attr;

  00095	48 8b c3	 mov	 rax, rbx

; 1459 : }

  00098	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0009c	5b		 pop	 rbx
  0009d	c3		 ret	 0
get_string ENDP
_TEXT	ENDS
PUBLIC	??_C@_0CB@PPGECACH@?$CF?4200s?5attribute?5must?5be?5unicode@ ; `string'
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$get_unicode DD imagerel get_unicode
	DD	imagerel get_unicode+158
	DD	imagerel $unwind$get_unicode
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$get_unicode DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT ??_C@_0CB@PPGECACH@?$CF?4200s?5attribute?5must?5be?5unicode@
CONST	SEGMENT
??_C@_0CB@PPGECACH@?$CF?4200s?5attribute?5must?5be?5unicode@ DB '%.200s a'
	DB	'ttribute must be unicode', 00H		; `string'
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
CONST	ENDS
;	COMDAT get_unicode
_TEXT	SEGMENT
attr$ = 64
name$ = 72
get_unicode PROC					; COMDAT

; 1463 : {

  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8b d9	 mov	 rbx, rcx

; 1464 :     if (!attr) {

  00009	48 85 c9	 test	 rcx, rcx
  0000c	75 1e		 jne	 SHORT $LN2@get_unicod

; 1465 :         PyErr_Format(PyExc_TypeError, "%.200s attribute not set", name);

  0000e	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  00015	4c 8b c2	 mov	 r8, rdx
  00018	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@BFONPBGN@?$CF?4200s?5attribute?5not?5set?$AA@
  0001f	e8 00 00 00 00	 call	 PyErr_Format

; 1466 :         return NULL;

  00024	33 c0		 xor	 eax, eax

; 1476 : }

  00026	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0002a	5b		 pop	 rbx
  0002b	c3		 ret	 0
$LN2@get_unicod:

; 1467 :     }
; 1468 : 
; 1469 :     if (!PyUnicode_Check(attr)) {

  0002c	48 8b 41 58	 mov	 rax, QWORD PTR [rcx+88]
  00030	f7 80 00 01 00
	00 00 00 00 10	 test	 DWORD PTR [rax+256], 268435456 ; 10000000H
  0003a	75 1e		 jne	 SHORT $LN1@get_unicod

; 1470 :         PyErr_Format(PyExc_TypeError,
; 1471 :                      "%.200s attribute must be unicode", name);

  0003c	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  00043	4c 8b c2	 mov	 r8, rdx
  00046	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CB@PPGECACH@?$CF?4200s?5attribute?5must?5be?5unicode@
  0004d	e8 00 00 00 00	 call	 PyErr_Format

; 1472 :         return NULL;

  00052	33 c0		 xor	 eax, eax

; 1476 : }

  00054	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00058	5b		 pop	 rbx
  00059	c3		 ret	 0
$LN1@get_unicod:

; 1473 :     }
; 1474 :     Py_INCREF(attr);

  0005a	e8 00 00 00 00	 call	 _Py_PXCTX
  0005f	85 c0		 test	 eax, eax
  00061	75 32		 jne	 SHORT $LN6@get_unicod
  00063	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0006a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00071	4c 8b cb	 mov	 r9, rbx
  00074	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  0007a	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00082	e8 00 00 00 00	 call	 _PyParallel_Guard
  00087	85 c0		 test	 eax, eax
  00089	75 06		 jne	 SHORT $LN5@get_unicod
  0008b	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  0008f	74 04		 je	 SHORT $LN6@get_unicod
$LN5@get_unicod:
  00091	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN6@get_unicod:

; 1475 :     return attr;

  00095	48 8b c3	 mov	 rax, rbx

; 1476 : }

  00098	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0009c	5b		 pop	 rbx
  0009d	c3		 ret	 0
get_unicode ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BG@JJLDAHKM@set_unicodefromstring?$AA@	; `string'
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$set_unicodefromstring DD imagerel set_unicodefromstring
	DD	imagerel set_unicodefromstring+92
	DD	imagerel $unwind$set_unicodefromstring
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$set_unicodefromstring DD imagerel set_unicodefromstring+92
	DD	imagerel set_unicodefromstring+213
	DD	imagerel $chain$0$set_unicodefromstring
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$set_unicodefromstring DD imagerel set_unicodefromstring+213
	DD	imagerel set_unicodefromstring+229
	DD	imagerel $chain$1$set_unicodefromstring
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$set_unicodefromstring DD 021H
	DD	imagerel set_unicodefromstring
	DD	imagerel set_unicodefromstring+92
	DD	imagerel $unwind$set_unicodefromstring
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$set_unicodefromstring DD 020521H
	DD	083405H
	DD	imagerel set_unicodefromstring
	DD	imagerel set_unicodefromstring+92
	DD	imagerel $unwind$set_unicodefromstring
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$set_unicodefromstring DD 040a01H
	DD	09640aH
	DD	07006520aH
xdata	ENDS
;	COMDAT ??_C@_0BG@JJLDAHKM@set_unicodefromstring?$AA@
CONST	SEGMENT
??_C@_0BG@JJLDAHKM@set_unicodefromstring?$AA@ DB 'set_unicodefromstring', 00H ; `string'
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
CONST	ENDS
;	COMDAT set_unicodefromstring
_TEXT	SEGMENT
attr$ = 64
value$ = 72
set_unicodefromstring PROC				; COMDAT

; 1480 : {

  00000	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b f9	 mov	 rdi, rcx

; 1481 :     PyObject *obj = PyUnicode_FromString(value);

  0000d	48 8b ca	 mov	 rcx, rdx
  00010	e8 00 00 00 00	 call	 PyUnicode_FromString
  00015	48 8b f0	 mov	 rsi, rax

; 1482 :     if (!obj)

  00018	48 85 c0	 test	 rax, rax
  0001b	75 0e		 jne	 SHORT $LN4@set_unicod

; 1483 :         return -1;

  0001d	83 c8 ff	 or	 eax, -1

; 1486 :     return 0;
; 1487 : }

  00020	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  00025	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00029	5f		 pop	 rdi
  0002a	c3		 ret	 0
$LN4@set_unicod:

; 1484 :     Py_CLEAR(*attr);

  0002b	4c 8b 0f	 mov	 r9, QWORD PTR [rdi]
  0002e	4d 85 c9	 test	 r9, r9
  00031	0f 84 9e 00 00
	00		 je	 $LN3@set_unicod
  00037	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0003e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BG@JJLDAHKM@set_unicodefromstring?$AA@
  00045	41 b8 cc 05 00
	00		 mov	 r8d, 1484		; 000005ccH
  0004b	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00053	e8 00 00 00 00	 call	 _PyParallel_Guard
  00058	85 c0		 test	 eax, eax
  0005a	75 79		 jne	 SHORT $LN3@set_unicod
  0005c	48 89 5c 24 40	 mov	 QWORD PTR [rsp+64], rbx
  00061	48 8b 1f	 mov	 rbx, QWORD PTR [rdi]
  00064	48 c7 07 00 00
	00 00		 mov	 QWORD PTR [rdi], 0
  0006b	e8 00 00 00 00	 call	 _Py_PXCTX
  00070	85 c0		 test	 eax, eax
  00072	75 5c		 jne	 SHORT $LN19@set_unicod
  00074	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  00078	a8 20		 test	 al, 32			; 00000020H
  0007a	75 4c		 jne	 SHORT $LN12@set_unicod
  0007c	84 c0		 test	 al, al
  0007e	78 48		 js	 SHORT $LN12@set_unicod
  00080	a8 02		 test	 al, 2
  00082	75 4c		 jne	 SHORT $LN19@set_unicod
  00084	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  00088	75 46		 jne	 SHORT $LN19@set_unicod
  0008a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00091	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  00098	4c 8b cb	 mov	 r9, rbx
  0009b	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  000a1	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  000a9	e8 00 00 00 00	 call	 _PyParallel_Guard
  000ae	48 8b cb	 mov	 rcx, rbx
  000b1	85 c0		 test	 eax, eax
  000b3	74 07		 je	 SHORT $LN17@set_unicod
  000b5	e8 00 00 00 00	 call	 _Px_Dealloc
  000ba	eb 14		 jmp	 SHORT $LN19@set_unicod
$LN17@set_unicod:
  000bc	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  000c0	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  000c6	eb 08		 jmp	 SHORT $LN19@set_unicod
$LN12@set_unicod:
  000c8	48 8b cb	 mov	 rcx, rbx
  000cb	e8 00 00 00 00	 call	 Px_DecRef
$LN19@set_unicod:
  000d0	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
$LN3@set_unicod:

; 1485 :     *attr = obj;

  000d5	48 89 37	 mov	 QWORD PTR [rdi], rsi

; 1486 :     return 0;
; 1487 : }

  000d8	48 8b 74 24 48	 mov	 rsi, QWORD PTR [rsp+72]
  000dd	33 c0		 xor	 eax, eax
  000df	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000e3	5f		 pop	 rdi
  000e4	c3		 ret	 0
set_unicodefromstring ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeEncodeError_GetEncoding
; Function compile flags: /Ogtpy
;	COMDAT PyUnicodeEncodeError_GetEncoding
_TEXT	SEGMENT
exc$ = 8
PyUnicodeEncodeError_GetEncoding PROC			; COMDAT

; 1492 :     return get_unicode(((PyUnicodeErrorObject *)exc)->encoding, "encoding");

  00000	48 8b 89 90 00
	00 00		 mov	 rcx, QWORD PTR [rcx+144]
  00007	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_08MLPGAEIK@encoding?$AA@

; 1493 : }

  0000e	e9 00 00 00 00	 jmp	 get_unicode
PyUnicodeEncodeError_GetEncoding ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeDecodeError_GetEncoding
; Function compile flags: /Ogtpy
;	COMDAT PyUnicodeDecodeError_GetEncoding
_TEXT	SEGMENT
exc$ = 8
PyUnicodeDecodeError_GetEncoding PROC			; COMDAT

; 1498 :     return get_unicode(((PyUnicodeErrorObject *)exc)->encoding, "encoding");

  00000	48 8b 89 90 00
	00 00		 mov	 rcx, QWORD PTR [rcx+144]
  00007	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_08MLPGAEIK@encoding?$AA@

; 1499 : }

  0000e	e9 00 00 00 00	 jmp	 get_unicode
PyUnicodeDecodeError_GetEncoding ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeEncodeError_GetObject
; Function compile flags: /Ogtpy
;	COMDAT PyUnicodeEncodeError_GetObject
_TEXT	SEGMENT
exc$ = 8
PyUnicodeEncodeError_GetObject PROC			; COMDAT

; 1504 :     return get_unicode(((PyUnicodeErrorObject *)exc)->object, "object");

  00000	48 8b 89 98 00
	00 00		 mov	 rcx, QWORD PTR [rcx+152]
  00007	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06IEOJBDIK@object?$AA@

; 1505 : }

  0000e	e9 00 00 00 00	 jmp	 get_unicode
PyUnicodeEncodeError_GetObject ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeDecodeError_GetObject
; Function compile flags: /Ogtpy
;	COMDAT PyUnicodeDecodeError_GetObject
_TEXT	SEGMENT
exc$ = 8
PyUnicodeDecodeError_GetObject PROC			; COMDAT

; 1510 :     return get_string(((PyUnicodeErrorObject *)exc)->object, "object");

  00000	48 8b 89 98 00
	00 00		 mov	 rcx, QWORD PTR [rcx+152]
  00007	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06IEOJBDIK@object?$AA@

; 1511 : }

  0000e	e9 00 00 00 00	 jmp	 get_string
PyUnicodeDecodeError_GetObject ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeTranslateError_GetObject
; Function compile flags: /Ogtpy
;	COMDAT PyUnicodeTranslateError_GetObject
_TEXT	SEGMENT
exc$ = 8
PyUnicodeTranslateError_GetObject PROC			; COMDAT

; 1516 :     return get_unicode(((PyUnicodeErrorObject *)exc)->object, "object");

  00000	48 8b 89 98 00
	00 00		 mov	 rcx, QWORD PTR [rcx+152]
  00007	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06IEOJBDIK@object?$AA@

; 1517 : }

  0000e	e9 00 00 00 00	 jmp	 get_unicode
PyUnicodeTranslateError_GetObject ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeEncodeError_GetStart
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyUnicodeEncodeError_GetStart DD imagerel $LN6
	DD	imagerel $LN6+114
	DD	imagerel $unwind$PyUnicodeEncodeError_GetStart
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyUnicodeEncodeError_GetStart DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT PyUnicodeEncodeError_GetStart
_TEXT	SEGMENT
exc$ = 48
start$ = 56
PyUnicodeEncodeError_GetStart PROC			; COMDAT

; 1521 : {

$LN6:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b f9	 mov	 rdi, rcx

; 1522 :     Py_ssize_t size;
; 1523 :     PyObject *obj = get_unicode(((PyUnicodeErrorObject *)exc)->object,
; 1524 :                                 "object");

  0000d	48 8b 89 98 00
	00 00		 mov	 rcx, QWORD PTR [rcx+152]
  00014	48 8b da	 mov	 rbx, rdx
  00017	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06IEOJBDIK@object?$AA@
  0001e	e8 00 00 00 00	 call	 get_unicode
  00023	48 8b c8	 mov	 rcx, rax

; 1525 :     if (!obj)

  00026	48 85 c0	 test	 rax, rax
  00029	75 0e		 jne	 SHORT $LN3@PyUnicodeE

; 1526 :         return -1;

  0002b	83 c8 ff	 or	 eax, -1

; 1534 :     return 0;
; 1535 : }

  0002e	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00033	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00037	5f		 pop	 rdi
  00038	c3		 ret	 0
$LN3@PyUnicodeE:

; 1527 :     *start = ((PyUnicodeErrorObject *)exc)->start;

  00039	48 8b 87 a0 00
	00 00		 mov	 rax, QWORD PTR [rdi+160]

; 1528 :     size = PyUnicode_GET_LENGTH(obj);
; 1529 :     if (*start<0)

  00040	45 33 c0	 xor	 r8d, r8d
  00043	48 89 03	 mov	 QWORD PTR [rbx], rax
  00046	48 8b 51 60	 mov	 rdx, QWORD PTR [rcx+96]
  0004a	48 85 c0	 test	 rax, rax
  0004d	49 0f 48 c0	 cmovs	 rax, r8
  00051	48 89 03	 mov	 QWORD PTR [rbx], rax

; 1530 :         *start = 0; /*XXX check for values <0*/
; 1531 :     if (*start>=size)

  00054	48 3b c2	 cmp	 rax, rdx
  00057	7c 07		 jl	 SHORT $LN1@PyUnicodeE

; 1532 :         *start = size-1;

  00059	48 8d 42 ff	 lea	 rax, QWORD PTR [rdx-1]
  0005d	48 89 03	 mov	 QWORD PTR [rbx], rax
$LN1@PyUnicodeE:

; 1533 :     Py_DECREF(obj);

  00060	e8 00 00 00 00	 call	 _Py_DecRef

; 1534 :     return 0;
; 1535 : }

  00065	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0006a	33 c0		 xor	 eax, eax
  0006c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00070	5f		 pop	 rdi
  00071	c3		 ret	 0
PyUnicodeEncodeError_GetStart ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeDecodeError_GetStart
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyUnicodeDecodeError_GetStart DD imagerel $LN6
	DD	imagerel $LN6+111
	DD	imagerel $unwind$PyUnicodeDecodeError_GetStart
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyUnicodeDecodeError_GetStart DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT PyUnicodeDecodeError_GetStart
_TEXT	SEGMENT
exc$ = 48
start$ = 56
PyUnicodeDecodeError_GetStart PROC			; COMDAT

; 1540 : {

$LN6:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b f9	 mov	 rdi, rcx

; 1541 :     Py_ssize_t size;
; 1542 :     PyObject *obj = get_string(((PyUnicodeErrorObject *)exc)->object, "object");

  0000d	48 8b 89 98 00
	00 00		 mov	 rcx, QWORD PTR [rcx+152]
  00014	48 8b da	 mov	 rbx, rdx
  00017	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06IEOJBDIK@object?$AA@
  0001e	e8 00 00 00 00	 call	 get_string
  00023	48 8b c8	 mov	 rcx, rax

; 1543 :     if (!obj)

  00026	48 85 c0	 test	 rax, rax
  00029	75 0e		 jne	 SHORT $LN3@PyUnicodeD

; 1544 :         return -1;

  0002b	83 c8 ff	 or	 eax, -1

; 1552 :     return 0;
; 1553 : }

  0002e	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00033	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00037	5f		 pop	 rdi
  00038	c3		 ret	 0
$LN3@PyUnicodeD:

; 1545 :     size = PyBytes_GET_SIZE(obj);

  00039	48 8b 50 60	 mov	 rdx, QWORD PTR [rax+96]

; 1546 :     *start = ((PyUnicodeErrorObject *)exc)->start;

  0003d	48 8b 87 a0 00
	00 00		 mov	 rax, QWORD PTR [rdi+160]

; 1547 :     if (*start<0)

  00044	45 33 c0	 xor	 r8d, r8d
  00047	48 85 c0	 test	 rax, rax
  0004a	49 0f 48 c0	 cmovs	 rax, r8
  0004e	48 89 03	 mov	 QWORD PTR [rbx], rax

; 1548 :         *start = 0;
; 1549 :     if (*start>=size)

  00051	48 3b c2	 cmp	 rax, rdx
  00054	7c 07		 jl	 SHORT $LN1@PyUnicodeD

; 1550 :         *start = size-1;

  00056	48 8d 42 ff	 lea	 rax, QWORD PTR [rdx-1]
  0005a	48 89 03	 mov	 QWORD PTR [rbx], rax
$LN1@PyUnicodeD:

; 1551 :     Py_DECREF(obj);

  0005d	e8 00 00 00 00	 call	 _Py_DecRef

; 1552 :     return 0;
; 1553 : }

  00062	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00067	33 c0		 xor	 eax, eax
  00069	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0006d	5f		 pop	 rdi
  0006e	c3		 ret	 0
PyUnicodeDecodeError_GetStart ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeTranslateError_GetStart
; Function compile flags: /Ogtpy
;	COMDAT PyUnicodeTranslateError_GetStart
_TEXT	SEGMENT
exc$ = 8
start$ = 16
PyUnicodeTranslateError_GetStart PROC			; COMDAT

; 1559 :     return PyUnicodeEncodeError_GetStart(exc, start);
; 1560 : }

  00000	e9 00 00 00 00	 jmp	 PyUnicodeEncodeError_GetStart
PyUnicodeTranslateError_GetStart ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeEncodeError_SetStart
; Function compile flags: /Ogtpy
;	COMDAT PyUnicodeEncodeError_SetStart
_TEXT	SEGMENT
exc$ = 8
start$ = 16
PyUnicodeEncodeError_SetStart PROC			; COMDAT

; 1566 :     ((PyUnicodeErrorObject *)exc)->start = start;

  00000	48 89 91 a0 00
	00 00		 mov	 QWORD PTR [rcx+160], rdx

; 1567 :     return 0;

  00007	33 c0		 xor	 eax, eax

; 1568 : }

  00009	c3		 ret	 0
PyUnicodeEncodeError_SetStart ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeDecodeError_SetStart
; Function compile flags: /Ogtpy
;	COMDAT PyUnicodeDecodeError_SetStart
_TEXT	SEGMENT
exc$ = 8
start$ = 16
PyUnicodeDecodeError_SetStart PROC			; COMDAT

; 1574 :     ((PyUnicodeErrorObject *)exc)->start = start;

  00000	48 89 91 a0 00
	00 00		 mov	 QWORD PTR [rcx+160], rdx

; 1575 :     return 0;

  00007	33 c0		 xor	 eax, eax

; 1576 : }

  00009	c3		 ret	 0
PyUnicodeDecodeError_SetStart ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeTranslateError_SetStart
; Function compile flags: /Ogtpy
;	COMDAT PyUnicodeTranslateError_SetStart
_TEXT	SEGMENT
exc$ = 8
start$ = 16
PyUnicodeTranslateError_SetStart PROC			; COMDAT

; 1582 :     ((PyUnicodeErrorObject *)exc)->start = start;

  00000	48 89 91 a0 00
	00 00		 mov	 QWORD PTR [rcx+160], rdx

; 1583 :     return 0;

  00007	33 c0		 xor	 eax, eax

; 1584 : }

  00009	c3		 ret	 0
PyUnicodeTranslateError_SetStart ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeEncodeError_GetEnd
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyUnicodeEncodeError_GetEnd DD imagerel $LN6
	DD	imagerel $LN6+117
	DD	imagerel $unwind$PyUnicodeEncodeError_GetEnd
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyUnicodeEncodeError_GetEnd DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT PyUnicodeEncodeError_GetEnd
_TEXT	SEGMENT
exc$ = 48
end$ = 56
PyUnicodeEncodeError_GetEnd PROC			; COMDAT

; 1589 : {

$LN6:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b f9	 mov	 rdi, rcx

; 1590 :     Py_ssize_t size;
; 1591 :     PyObject *obj = get_unicode(((PyUnicodeErrorObject *)exc)->object,
; 1592 :                                 "object");

  0000d	48 8b 89 98 00
	00 00		 mov	 rcx, QWORD PTR [rcx+152]
  00014	48 8b da	 mov	 rbx, rdx
  00017	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06IEOJBDIK@object?$AA@
  0001e	e8 00 00 00 00	 call	 get_unicode
  00023	4c 8b d8	 mov	 r11, rax

; 1593 :     if (!obj)

  00026	48 85 c0	 test	 rax, rax
  00029	75 0e		 jne	 SHORT $LN3@PyUnicodeE@2

; 1594 :         return -1;

  0002b	83 c8 ff	 or	 eax, -1

; 1602 :     return 0;
; 1603 : }

  0002e	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00033	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00037	5f		 pop	 rdi
  00038	c3		 ret	 0
$LN3@PyUnicodeE@2:

; 1595 :     *end = ((PyUnicodeErrorObject *)exc)->end;

  00039	48 8b 87 a8 00
	00 00		 mov	 rax, QWORD PTR [rdi+168]

; 1596 :     size = PyUnicode_GET_LENGTH(obj);
; 1597 :     if (*end<1)

  00040	ba 01 00 00 00	 mov	 edx, 1
  00045	48 89 03	 mov	 QWORD PTR [rbx], rax
  00048	49 8b 4b 60	 mov	 rcx, QWORD PTR [r11+96]
  0004c	48 3b c2	 cmp	 rax, rdx
  0004f	48 0f 4c c2	 cmovl	 rax, rdx

; 1598 :         *end = 1;
; 1599 :     if (*end>size)

  00053	48 3b c1	 cmp	 rax, rcx
  00056	48 89 03	 mov	 QWORD PTR [rbx], rax
  00059	48 0f 4f c1	 cmovg	 rax, rcx

; 1600 :         *end = size;
; 1601 :     Py_DECREF(obj);

  0005d	49 8b cb	 mov	 rcx, r11
  00060	48 89 03	 mov	 QWORD PTR [rbx], rax
  00063	e8 00 00 00 00	 call	 _Py_DecRef

; 1602 :     return 0;
; 1603 : }

  00068	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0006d	33 c0		 xor	 eax, eax
  0006f	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00073	5f		 pop	 rdi
  00074	c3		 ret	 0
PyUnicodeEncodeError_GetEnd ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeDecodeError_GetEnd
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyUnicodeDecodeError_GetEnd DD imagerel $LN6
	DD	imagerel $LN6+114
	DD	imagerel $unwind$PyUnicodeDecodeError_GetEnd
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyUnicodeDecodeError_GetEnd DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT PyUnicodeDecodeError_GetEnd
_TEXT	SEGMENT
exc$ = 48
end$ = 56
PyUnicodeDecodeError_GetEnd PROC			; COMDAT

; 1608 : {

$LN6:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b f9	 mov	 rdi, rcx

; 1609 :     Py_ssize_t size;
; 1610 :     PyObject *obj = get_string(((PyUnicodeErrorObject *)exc)->object, "object");

  0000d	48 8b 89 98 00
	00 00		 mov	 rcx, QWORD PTR [rcx+152]
  00014	48 8b da	 mov	 rbx, rdx
  00017	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06IEOJBDIK@object?$AA@
  0001e	e8 00 00 00 00	 call	 get_string
  00023	4c 8b d8	 mov	 r11, rax

; 1611 :     if (!obj)

  00026	48 85 c0	 test	 rax, rax
  00029	75 0e		 jne	 SHORT $LN3@PyUnicodeD@2

; 1612 :         return -1;

  0002b	83 c8 ff	 or	 eax, -1

; 1620 :     return 0;
; 1621 : }

  0002e	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00033	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00037	5f		 pop	 rdi
  00038	c3		 ret	 0
$LN3@PyUnicodeD@2:

; 1613 :     size = PyBytes_GET_SIZE(obj);

  00039	48 8b 48 60	 mov	 rcx, QWORD PTR [rax+96]

; 1614 :     *end = ((PyUnicodeErrorObject *)exc)->end;

  0003d	48 8b 87 a8 00
	00 00		 mov	 rax, QWORD PTR [rdi+168]

; 1615 :     if (*end<1)

  00044	ba 01 00 00 00	 mov	 edx, 1
  00049	48 3b c2	 cmp	 rax, rdx
  0004c	48 0f 4c c2	 cmovl	 rax, rdx

; 1616 :         *end = 1;
; 1617 :     if (*end>size)

  00050	48 3b c1	 cmp	 rax, rcx
  00053	48 89 03	 mov	 QWORD PTR [rbx], rax
  00056	48 0f 4f c1	 cmovg	 rax, rcx

; 1618 :         *end = size;
; 1619 :     Py_DECREF(obj);

  0005a	49 8b cb	 mov	 rcx, r11
  0005d	48 89 03	 mov	 QWORD PTR [rbx], rax
  00060	e8 00 00 00 00	 call	 _Py_DecRef

; 1620 :     return 0;
; 1621 : }

  00065	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0006a	33 c0		 xor	 eax, eax
  0006c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00070	5f		 pop	 rdi
  00071	c3		 ret	 0
PyUnicodeDecodeError_GetEnd ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeTranslateError_GetEnd
; Function compile flags: /Ogtpy
;	COMDAT PyUnicodeTranslateError_GetEnd
_TEXT	SEGMENT
exc$ = 8
start$ = 16
PyUnicodeTranslateError_GetEnd PROC			; COMDAT

; 1627 :     return PyUnicodeEncodeError_GetEnd(exc, start);
; 1628 : }

  00000	e9 00 00 00 00	 jmp	 PyUnicodeEncodeError_GetEnd
PyUnicodeTranslateError_GetEnd ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeEncodeError_SetEnd
; Function compile flags: /Ogtpy
;	COMDAT PyUnicodeEncodeError_SetEnd
_TEXT	SEGMENT
exc$ = 8
end$ = 16
PyUnicodeEncodeError_SetEnd PROC			; COMDAT

; 1634 :     ((PyUnicodeErrorObject *)exc)->end = end;

  00000	48 89 91 a8 00
	00 00		 mov	 QWORD PTR [rcx+168], rdx

; 1635 :     return 0;

  00007	33 c0		 xor	 eax, eax

; 1636 : }

  00009	c3		 ret	 0
PyUnicodeEncodeError_SetEnd ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeDecodeError_SetEnd
; Function compile flags: /Ogtpy
;	COMDAT PyUnicodeDecodeError_SetEnd
_TEXT	SEGMENT
exc$ = 8
end$ = 16
PyUnicodeDecodeError_SetEnd PROC			; COMDAT

; 1642 :     ((PyUnicodeErrorObject *)exc)->end = end;

  00000	48 89 91 a8 00
	00 00		 mov	 QWORD PTR [rcx+168], rdx

; 1643 :     return 0;

  00007	33 c0		 xor	 eax, eax

; 1644 : }

  00009	c3		 ret	 0
PyUnicodeDecodeError_SetEnd ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeTranslateError_SetEnd
; Function compile flags: /Ogtpy
;	COMDAT PyUnicodeTranslateError_SetEnd
_TEXT	SEGMENT
exc$ = 8
end$ = 16
PyUnicodeTranslateError_SetEnd PROC			; COMDAT

; 1650 :     ((PyUnicodeErrorObject *)exc)->end = end;

  00000	48 89 91 a8 00
	00 00		 mov	 QWORD PTR [rcx+168], rdx

; 1651 :     return 0;

  00007	33 c0		 xor	 eax, eax

; 1652 : }

  00009	c3		 ret	 0
PyUnicodeTranslateError_SetEnd ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeEncodeError_GetReason
; Function compile flags: /Ogtpy
;	COMDAT PyUnicodeEncodeError_GetReason
_TEXT	SEGMENT
exc$ = 8
PyUnicodeEncodeError_GetReason PROC			; COMDAT

; 1657 :     return get_unicode(((PyUnicodeErrorObject *)exc)->reason, "reason");

  00000	48 8b 89 b0 00
	00 00		 mov	 rcx, QWORD PTR [rcx+176]
  00007	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06CEHAOENB@reason?$AA@

; 1658 : }

  0000e	e9 00 00 00 00	 jmp	 get_unicode
PyUnicodeEncodeError_GetReason ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeDecodeError_GetReason
; Function compile flags: /Ogtpy
;	COMDAT PyUnicodeDecodeError_GetReason
_TEXT	SEGMENT
exc$ = 8
PyUnicodeDecodeError_GetReason PROC			; COMDAT

; 1664 :     return get_unicode(((PyUnicodeErrorObject *)exc)->reason, "reason");

  00000	48 8b 89 b0 00
	00 00		 mov	 rcx, QWORD PTR [rcx+176]
  00007	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06CEHAOENB@reason?$AA@

; 1665 : }

  0000e	e9 00 00 00 00	 jmp	 get_unicode
PyUnicodeDecodeError_GetReason ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeTranslateError_GetReason
; Function compile flags: /Ogtpy
;	COMDAT PyUnicodeTranslateError_GetReason
_TEXT	SEGMENT
exc$ = 8
PyUnicodeTranslateError_GetReason PROC			; COMDAT

; 1671 :     return get_unicode(((PyUnicodeErrorObject *)exc)->reason, "reason");

  00000	48 8b 89 b0 00
	00 00		 mov	 rcx, QWORD PTR [rcx+176]
  00007	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06CEHAOENB@reason?$AA@

; 1672 : }

  0000e	e9 00 00 00 00	 jmp	 get_unicode
PyUnicodeTranslateError_GetReason ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeEncodeError_SetReason
; Function compile flags: /Ogtpy
;	COMDAT PyUnicodeEncodeError_SetReason
_TEXT	SEGMENT
exc$ = 8
reason$ = 16
PyUnicodeEncodeError_SetReason PROC			; COMDAT

; 1678 :     return set_unicodefromstring(&((PyUnicodeErrorObject *)exc)->reason,
; 1679 :                                  reason);

  00000	48 81 c1 b0 00
	00 00		 add	 rcx, 176		; 000000b0H

; 1680 : }

  00007	e9 00 00 00 00	 jmp	 set_unicodefromstring
PyUnicodeEncodeError_SetReason ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeDecodeError_SetReason
; Function compile flags: /Ogtpy
;	COMDAT PyUnicodeDecodeError_SetReason
_TEXT	SEGMENT
exc$ = 8
reason$ = 16
PyUnicodeDecodeError_SetReason PROC			; COMDAT

; 1686 :     return set_unicodefromstring(&((PyUnicodeErrorObject *)exc)->reason,
; 1687 :                                  reason);

  00000	48 81 c1 b0 00
	00 00		 add	 rcx, 176		; 000000b0H

; 1688 : }

  00007	e9 00 00 00 00	 jmp	 set_unicodefromstring
PyUnicodeDecodeError_SetReason ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeTranslateError_SetReason
; Function compile flags: /Ogtpy
;	COMDAT PyUnicodeTranslateError_SetReason
_TEXT	SEGMENT
exc$ = 8
reason$ = 16
PyUnicodeTranslateError_SetReason PROC			; COMDAT

; 1694 :     return set_unicodefromstring(&((PyUnicodeErrorObject *)exc)->reason,
; 1695 :                                  reason);

  00000	48 81 c1 b0 00
	00 00		 add	 rcx, 176		; 000000b0H

; 1696 : }

  00007	e9 00 00 00 00	 jmp	 set_unicodefromstring
PyUnicodeTranslateError_SetReason ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BD@OHFGNGCN@UnicodeError_clear?$AA@	; `string'
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$UnicodeError_clear DD imagerel UnicodeError_clear
	DD	imagerel UnicodeError_clear+583
	DD	imagerel $unwind$UnicodeError_clear
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$UnicodeError_clear DD 040a01H
	DD	08340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT ??_C@_0BD@OHFGNGCN@UnicodeError_clear?$AA@
CONST	SEGMENT
??_C@_0BD@OHFGNGCN@UnicodeError_clear?$AA@ DB 'UnicodeError_clear', 00H ; `string'
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
CONST	ENDS
;	COMDAT UnicodeError_clear
_TEXT	SEGMENT
self$ = 64
UnicodeError_clear PROC					; COMDAT

; 1701 : {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 1702 :     Py_CLEAR(self->encoding);

  0000a	4c 8b 89 90 00
	00 00		 mov	 r9, QWORD PTR [rcx+144]
  00011	48 8b f9	 mov	 rdi, rcx
  00014	4d 85 c9	 test	 r9, r9
  00017	0f 84 9c 00 00
	00		 je	 $LN11@UnicodeErr
  0001d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00024	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OHFGNGCN@UnicodeError_clear?$AA@
  0002b	41 b8 a6 06 00
	00		 mov	 r8d, 1702		; 000006a6H
  00031	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00039	e8 00 00 00 00	 call	 _PyParallel_Guard
  0003e	85 c0		 test	 eax, eax
  00040	75 77		 jne	 SHORT $LN11@UnicodeErr
  00042	48 8b 9f 90 00
	00 00		 mov	 rbx, QWORD PTR [rdi+144]
  00049	48 c7 87 90 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rdi+144], 0
  00054	e8 00 00 00 00	 call	 _Py_PXCTX
  00059	85 c0		 test	 eax, eax
  0005b	75 5c		 jne	 SHORT $LN11@UnicodeErr
  0005d	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  00061	a8 20		 test	 al, 32			; 00000020H
  00063	75 4c		 jne	 SHORT $LN19@UnicodeErr
  00065	84 c0		 test	 al, al
  00067	78 48		 js	 SHORT $LN19@UnicodeErr
  00069	a8 02		 test	 al, 2
  0006b	75 4c		 jne	 SHORT $LN11@UnicodeErr
  0006d	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  00071	75 46		 jne	 SHORT $LN11@UnicodeErr
  00073	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0007a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  00081	4c 8b cb	 mov	 r9, rbx
  00084	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  0008a	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00092	e8 00 00 00 00	 call	 _PyParallel_Guard
  00097	48 8b cb	 mov	 rcx, rbx
  0009a	85 c0		 test	 eax, eax
  0009c	74 07		 je	 SHORT $LN24@UnicodeErr
  0009e	e8 00 00 00 00	 call	 _Px_Dealloc
  000a3	eb 14		 jmp	 SHORT $LN11@UnicodeErr
$LN24@UnicodeErr:
  000a5	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  000a9	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  000af	eb 08		 jmp	 SHORT $LN11@UnicodeErr
$LN19@UnicodeErr:
  000b1	48 8b cb	 mov	 rcx, rbx
  000b4	e8 00 00 00 00	 call	 Px_DecRef
$LN11@UnicodeErr:

; 1703 :     Py_CLEAR(self->object);

  000b9	4c 8b 8f 98 00
	00 00		 mov	 r9, QWORD PTR [rdi+152]
  000c0	4d 85 c9	 test	 r9, r9
  000c3	0f 84 9c 00 00
	00		 je	 $LN7@UnicodeErr
  000c9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  000d0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OHFGNGCN@UnicodeError_clear?$AA@
  000d7	41 b8 a7 06 00
	00		 mov	 r8d, 1703		; 000006a7H
  000dd	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  000e5	e8 00 00 00 00	 call	 _PyParallel_Guard
  000ea	85 c0		 test	 eax, eax
  000ec	75 77		 jne	 SHORT $LN7@UnicodeErr
  000ee	48 8b 9f 98 00
	00 00		 mov	 rbx, QWORD PTR [rdi+152]
  000f5	48 c7 87 98 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rdi+152], 0
  00100	e8 00 00 00 00	 call	 _Py_PXCTX
  00105	85 c0		 test	 eax, eax
  00107	75 5c		 jne	 SHORT $LN7@UnicodeErr
  00109	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  0010d	a8 20		 test	 al, 32			; 00000020H
  0010f	75 4c		 jne	 SHORT $LN30@UnicodeErr
  00111	84 c0		 test	 al, al
  00113	78 48		 js	 SHORT $LN30@UnicodeErr
  00115	a8 02		 test	 al, 2
  00117	75 4c		 jne	 SHORT $LN7@UnicodeErr
  00119	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  0011d	75 46		 jne	 SHORT $LN7@UnicodeErr
  0011f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00126	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  0012d	4c 8b cb	 mov	 r9, rbx
  00130	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  00136	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0013e	e8 00 00 00 00	 call	 _PyParallel_Guard
  00143	48 8b cb	 mov	 rcx, rbx
  00146	85 c0		 test	 eax, eax
  00148	74 07		 je	 SHORT $LN35@UnicodeErr
  0014a	e8 00 00 00 00	 call	 _Px_Dealloc
  0014f	eb 14		 jmp	 SHORT $LN7@UnicodeErr
$LN35@UnicodeErr:
  00151	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  00155	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  0015b	eb 08		 jmp	 SHORT $LN7@UnicodeErr
$LN30@UnicodeErr:
  0015d	48 8b cb	 mov	 rcx, rbx
  00160	e8 00 00 00 00	 call	 Px_DecRef
$LN7@UnicodeErr:

; 1704 :     Py_CLEAR(self->reason);

  00165	4c 8b 8f b0 00
	00 00		 mov	 r9, QWORD PTR [rdi+176]
  0016c	4d 85 c9	 test	 r9, r9
  0016f	0f 84 c0 00 00
	00		 je	 $LN3@UnicodeErr
  00175	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0017c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OHFGNGCN@UnicodeError_clear?$AA@
  00183	41 b8 a8 06 00
	00		 mov	 r8d, 1704		; 000006a8H
  00189	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00191	e8 00 00 00 00	 call	 _PyParallel_Guard
  00196	85 c0		 test	 eax, eax
  00198	0f 85 97 00 00
	00		 jne	 $LN3@UnicodeErr
  0019e	48 8b 9f b0 00
	00 00		 mov	 rbx, QWORD PTR [rdi+176]
  001a5	48 c7 87 b0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rdi+176], 0
  001b0	e8 00 00 00 00	 call	 _Py_PXCTX
  001b5	85 c0		 test	 eax, eax
  001b7	75 7c		 jne	 SHORT $LN3@UnicodeErr
  001b9	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  001bd	a8 20		 test	 al, 32			; 00000020H
  001bf	75 6c		 jne	 SHORT $LN41@UnicodeErr
  001c1	84 c0		 test	 al, al
  001c3	78 68		 js	 SHORT $LN41@UnicodeErr
  001c5	a8 02		 test	 al, 2
  001c7	75 6c		 jne	 SHORT $LN3@UnicodeErr
  001c9	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  001cd	75 66		 jne	 SHORT $LN3@UnicodeErr
  001cf	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  001d6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  001dd	4c 8b cb	 mov	 r9, rbx
  001e0	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  001e6	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  001ee	e8 00 00 00 00	 call	 _PyParallel_Guard
  001f3	48 8b cb	 mov	 rcx, rbx
  001f6	85 c0		 test	 eax, eax
  001f8	74 17		 je	 SHORT $LN46@UnicodeErr
  001fa	e8 00 00 00 00	 call	 _Px_Dealloc

; 1705 :     return BaseException_clear((PyBaseExceptionObject *)self);

  001ff	48 8b cf	 mov	 rcx, rdi

; 1706 : }

  00202	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00207	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0020b	5f		 pop	 rdi
  0020c	e9 00 00 00 00	 jmp	 BaseException_clear

; 1704 :     Py_CLEAR(self->reason);

$LN46@UnicodeErr:
  00211	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  00215	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]

; 1705 :     return BaseException_clear((PyBaseExceptionObject *)self);

  0021b	48 8b cf	 mov	 rcx, rdi

; 1706 : }

  0021e	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00223	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00227	5f		 pop	 rdi
  00228	e9 00 00 00 00	 jmp	 BaseException_clear

; 1704 :     Py_CLEAR(self->reason);

$LN41@UnicodeErr:
  0022d	48 8b cb	 mov	 rcx, rbx
  00230	e8 00 00 00 00	 call	 Px_DecRef
$LN3@UnicodeErr:

; 1705 :     return BaseException_clear((PyBaseExceptionObject *)self);

  00235	48 8b cf	 mov	 rcx, rdi

; 1706 : }

  00238	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  0023d	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00241	5f		 pop	 rdi
  00242	e9 00 00 00 00	 jmp	 BaseException_clear
UnicodeError_clear ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BF@OFLJEOA@UnicodeError_dealloc?$AA@	; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$UnicodeError_dealloc DD imagerel UnicodeError_dealloc
	DD	imagerel UnicodeError_dealloc+160
	DD	imagerel $unwind$UnicodeError_dealloc
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$UnicodeError_dealloc DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT ??_C@_0BF@OFLJEOA@UnicodeError_dealloc?$AA@
CONST	SEGMENT
??_C@_0BF@OFLJEOA@UnicodeError_dealloc?$AA@ DB 'UnicodeError_dealloc', 00H ; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT UnicodeError_dealloc
_TEXT	SEGMENT
self$ = 64
UnicodeError_dealloc PROC				; COMDAT

; 1710 : {

  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8b d9	 mov	 rbx, rcx

; 1711 :     _PyObject_GC_UNTRACK(self);

  00009	4c 8b c9	 mov	 r9, rcx
  0000c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BF@OFLJEOA@UnicodeError_dealloc?$AA@
  0001a	41 b8 af 06 00
	00		 mov	 r8d, 1711		; 000006afH
  00020	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00028	e8 00 00 00 00	 call	 _PyParallel_Guard
  0002d	85 c0		 test	 eax, eax
  0002f	75 54		 jne	 SHORT $LN1@UnicodeErr@2
  00031	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BF@OFLJEOA@UnicodeError_dealloc?$AA@
  0003f	4c 8b cb	 mov	 r9, rbx
  00042	41 b8 af 06 00
	00		 mov	 r8d, 1711		; 000006afH
  00048	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00050	e8 00 00 00 00	 call	 _PyParallel_Guard
  00055	85 c0		 test	 eax, eax
  00057	74 04		 je	 SHORT $LN7@UnicodeErr@2
  00059	33 d2		 xor	 edx, edx
  0005b	eb 04		 jmp	 SHORT $LN8@UnicodeErr@2
$LN7@UnicodeErr@2:
  0005d	48 8d 53 e8	 lea	 rdx, QWORD PTR [rbx-24]
$LN8@UnicodeErr@2:
  00061	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00064	48 8b 4a 08	 mov	 rcx, QWORD PTR [rdx+8]
  00068	48 c7 42 10 fe
	ff ff ff	 mov	 QWORD PTR [rdx+16], -2
  00070	48 89 01	 mov	 QWORD PTR [rcx], rax
  00073	48 8b 0a	 mov	 rcx, QWORD PTR [rdx]
  00076	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
  0007a	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  0007e	48 c7 02 00 00
	00 00		 mov	 QWORD PTR [rdx], 0
$LN1@UnicodeErr@2:

; 1712 :     UnicodeError_clear(self);

  00085	48 8b cb	 mov	 rcx, rbx
  00088	e8 00 00 00 00	 call	 UnicodeError_clear

; 1713 :     Py_TYPE(self)->tp_free((PyObject *)self);

  0008d	4c 8b 5b 58	 mov	 r11, QWORD PTR [rbx+88]
  00091	48 8b cb	 mov	 rcx, rbx

; 1714 : }

  00094	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00098	5b		 pop	 rbx
  00099	49 ff a3 98 01
	00 00		 rex_jmp QWORD PTR [r11+408]
UnicodeError_dealloc ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BG@HDDIDDPD@UnicodeError_traverse?$AA@	; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$UnicodeError_traverse DD imagerel UnicodeError_traverse
	DD	imagerel UnicodeError_traverse+232
	DD	imagerel $unwind$UnicodeError_traverse
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$UnicodeError_traverse DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT ??_C@_0BG@HDDIDDPD@UnicodeError_traverse?$AA@
CONST	SEGMENT
??_C@_0BG@HDDIDDPD@UnicodeError_traverse?$AA@ DB 'UnicodeError_traverse', 00H ; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT UnicodeError_traverse
_TEXT	SEGMENT
self$ = 48
visit$ = 56
arg$ = 64
UnicodeError_traverse PROC				; COMDAT

; 1718 : {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	49 8b f8	 mov	 rdi, r8
  00012	48 8b f2	 mov	 rsi, rdx
  00015	48 8b d9	 mov	 rbx, rcx

; 1719 :     Py_VISIT(self->encoding);

  00018	e8 00 00 00 00	 call	 _Py_PXCTX
  0001d	85 c0		 test	 eax, eax
  0001f	74 1c		 je	 SHORT $LN15@UnicodeErr@3
  00021	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BG@HDDIDDPD@UnicodeError_traverse?$AA@
  0002f	45 33 c9	 xor	 r9d, r9d
  00032	41 b8 b7 06 00
	00		 mov	 r8d, 1719		; 000006b7H
  00038	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN15@UnicodeErr@3:
  0003d	48 8b 8b 90 00
	00 00		 mov	 rcx, QWORD PTR [rbx+144]
  00044	48 85 c9	 test	 rcx, rcx
  00047	74 0d		 je	 SHORT $LN17@UnicodeErr@3
  00049	48 8b d7	 mov	 rdx, rdi
  0004c	ff d6		 call	 rsi
  0004e	85 c0		 test	 eax, eax
  00050	0f 85 82 00 00
	00		 jne	 $LN19@UnicodeErr@3
$LN17@UnicodeErr@3:

; 1720 :     Py_VISIT(self->object);

  00056	e8 00 00 00 00	 call	 _Py_PXCTX
  0005b	85 c0		 test	 eax, eax
  0005d	74 1c		 je	 SHORT $LN9@UnicodeErr@3
  0005f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00066	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BG@HDDIDDPD@UnicodeError_traverse?$AA@
  0006d	45 33 c9	 xor	 r9d, r9d
  00070	41 b8 b8 06 00
	00		 mov	 r8d, 1720		; 000006b8H
  00076	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN9@UnicodeErr@3:
  0007b	48 8b 8b 98 00
	00 00		 mov	 rcx, QWORD PTR [rbx+152]
  00082	48 85 c9	 test	 rcx, rcx
  00085	74 09		 je	 SHORT $LN11@UnicodeErr@3
  00087	48 8b d7	 mov	 rdx, rdi
  0008a	ff d6		 call	 rsi
  0008c	85 c0		 test	 eax, eax
  0008e	75 48		 jne	 SHORT $LN19@UnicodeErr@3
$LN11@UnicodeErr@3:

; 1721 :     Py_VISIT(self->reason);

  00090	e8 00 00 00 00	 call	 _Py_PXCTX
  00095	85 c0		 test	 eax, eax
  00097	74 1c		 je	 SHORT $LN3@UnicodeErr@3
  00099	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  000a0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BG@HDDIDDPD@UnicodeError_traverse?$AA@
  000a7	45 33 c9	 xor	 r9d, r9d
  000aa	41 b8 b9 06 00
	00		 mov	 r8d, 1721		; 000006b9H
  000b0	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN3@UnicodeErr@3:
  000b5	48 8b 8b b0 00
	00 00		 mov	 rcx, QWORD PTR [rbx+176]
  000bc	48 85 c9	 test	 rcx, rcx
  000bf	74 09		 je	 SHORT $LN5@UnicodeErr@3
  000c1	48 8b d7	 mov	 rdx, rdi
  000c4	ff d6		 call	 rsi
  000c6	85 c0		 test	 eax, eax
  000c8	75 0e		 jne	 SHORT $LN19@UnicodeErr@3
$LN5@UnicodeErr@3:

; 1722 :     return BaseException_traverse((PyBaseExceptionObject *)self, visit, arg);

  000ca	4c 8b c7	 mov	 r8, rdi
  000cd	48 8b d6	 mov	 rdx, rsi
  000d0	48 8b cb	 mov	 rcx, rbx
  000d3	e8 00 00 00 00	 call	 BaseException_traverse
$LN19@UnicodeErr@3:

; 1723 : }

  000d8	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  000dd	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  000e2	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000e6	5f		 pop	 rdi
  000e7	c3		 ret	 0
UnicodeError_traverse ENDP
_TEXT	ENDS
PUBLIC	??_C@_08FJBAAAEO@O?$CBO?$CBnnO?$CB?$AA@		; `string'
PUBLIC	??_C@_0BI@CBDDJOHM@UnicodeEncodeError_init?$AA@	; `string'
EXTRN	_PyArg_ParseTuple_SizeT:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$UnicodeEncodeError_init DD imagerel UnicodeEncodeError_init
	DD	imagerel UnicodeEncodeError_init+429
	DD	imagerel $unwind$UnicodeEncodeError_init
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$UnicodeEncodeError_init DD 0b4001H
	DD	0ad440H
	DD	010743bH
	DD	0f6433H
	DD	0e342eH
	DD	0c004a208H
	DD	05002H
xdata	ENDS
;	COMDAT ??_C@_08FJBAAAEO@O?$CBO?$CBnnO?$CB?$AA@
CONST	SEGMENT
??_C@_08FJBAAAEO@O?$CBO?$CBnnO?$CB?$AA@ DB 'O!O!nnO!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CBDDJOHM@UnicodeEncodeError_init?$AA@
CONST	SEGMENT
??_C@_0BI@CBDDJOHM@UnicodeEncodeError_init?$AA@ DB 'UnicodeEncodeError_in'
	DB	'it', 00H					; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT UnicodeEncodeError_init
_TEXT	SEGMENT
self$ = 112
args$ = 120
kwds$ = 128
UnicodeEncodeError_init PROC				; COMDAT

; 1746 : {

  00000	40 55		 push	 rbp
  00002	41 54		 push	 r12
  00004	48 83 ec 58	 sub	 rsp, 88			; 00000058H
  00008	4c 8b e2	 mov	 r12, rdx
  0000b	48 8b e9	 mov	 rbp, rcx

; 1747 :     PyUnicodeErrorObject *err;
; 1748 : 
; 1749 :     if (BaseException_init((PyBaseExceptionObject *)self, args, kwds) == -1)

  0000e	e8 00 00 00 00	 call	 BaseException_init
  00013	83 f8 ff	 cmp	 eax, -1
  00016	75 0a		 jne	 SHORT $LN15@UnicodeEnc

; 1750 :         return -1;

  00018	0b c0		 or	 eax, eax

; 1778 : }

  0001a	48 83 c4 58	 add	 rsp, 88			; 00000058H
  0001e	41 5c		 pop	 r12
  00020	5d		 pop	 rbp
  00021	c3		 ret	 0
$LN15@UnicodeEnc:

; 1751 : 
; 1752 :     err = (PyUnicodeErrorObject *)self;
; 1753 : 
; 1754 :     Py_CLEAR(err->encoding);

  00022	4c 8b 8d 90 00
	00 00		 mov	 r9, QWORD PTR [rbp+144]
  00029	48 89 5c 24 70	 mov	 QWORD PTR [rsp+112], rbx
  0002e	48 89 74 24 78	 mov	 QWORD PTR [rsp+120], rsi
  00033	48 89 bc 24 80
	00 00 00	 mov	 QWORD PTR [rsp+128], rdi
  0003b	4c 89 6c 24 50	 mov	 QWORD PTR [rsp+80], r13
  00040	45 33 ed	 xor	 r13d, r13d
  00043	4d 85 c9	 test	 r9, r9
  00046	74 38		 je	 SHORT $LN13@UnicodeEnc
  00048	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0004f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CBDDJOHM@UnicodeEncodeError_init?$AA@
  00056	41 b8 da 06 00
	00		 mov	 r8d, 1754		; 000006daH
  0005c	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00064	e8 00 00 00 00	 call	 _PyParallel_Guard
  00069	85 c0		 test	 eax, eax
  0006b	75 13		 jne	 SHORT $LN13@UnicodeEnc
  0006d	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR [rbp+144]
  00074	4c 89 ad 90 00
	00 00		 mov	 QWORD PTR [rbp+144], r13
  0007b	e8 00 00 00 00	 call	 _Py_DecRef
$LN13@UnicodeEnc:

; 1755 :     Py_CLEAR(err->object);

  00080	48 8d bd 98 00
	00 00		 lea	 rdi, QWORD PTR [rbp+152]
  00087	4c 8b 0f	 mov	 r9, QWORD PTR [rdi]
  0008a	4d 85 c9	 test	 r9, r9
  0008d	74 30		 je	 SHORT $LN9@UnicodeEnc
  0008f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00096	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CBDDJOHM@UnicodeEncodeError_init?$AA@
  0009d	41 b8 db 06 00
	00		 mov	 r8d, 1755		; 000006dbH
  000a3	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  000ab	e8 00 00 00 00	 call	 _PyParallel_Guard
  000b0	85 c0		 test	 eax, eax
  000b2	75 0b		 jne	 SHORT $LN9@UnicodeEnc
  000b4	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  000b7	4c 89 2f	 mov	 QWORD PTR [rdi], r13
  000ba	e8 00 00 00 00	 call	 _Py_DecRef
$LN9@UnicodeEnc:

; 1756 :     Py_CLEAR(err->reason);

  000bf	48 8d b5 b0 00
	00 00		 lea	 rsi, QWORD PTR [rbp+176]
  000c6	4c 8b 0e	 mov	 r9, QWORD PTR [rsi]
  000c9	4d 85 c9	 test	 r9, r9
  000cc	74 30		 je	 SHORT $LN5@UnicodeEnc
  000ce	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  000d5	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CBDDJOHM@UnicodeEncodeError_init?$AA@
  000dc	41 b8 dc 06 00
	00		 mov	 r8d, 1756		; 000006dcH
  000e2	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  000ea	e8 00 00 00 00	 call	 _PyParallel_Guard
  000ef	85 c0		 test	 eax, eax
  000f1	75 0b		 jne	 SHORT $LN5@UnicodeEnc
  000f3	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  000f6	4c 89 2e	 mov	 QWORD PTR [rsi], r13
  000f9	e8 00 00 00 00	 call	 _Py_DecRef
$LN5@UnicodeEnc:

; 1757 : 
; 1758 :     if (!PyArg_ParseTuple(args, "O!O!nnO!",
; 1759 :         &PyUnicode_Type, &err->encoding,
; 1760 :         &PyUnicode_Type, &err->object,
; 1761 :         &err->start,
; 1762 :         &err->end,
; 1763 :         &PyUnicode_Type, &err->reason)) {

  000fe	48 89 74 24 48	 mov	 QWORD PTR [rsp+72], rsi
  00103	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:PyUnicode_Type
  0010a	48 8d 85 a8 00
	00 00		 lea	 rax, QWORD PTR [rbp+168]
  00111	4c 89 44 24 40	 mov	 QWORD PTR [rsp+64], r8
  00116	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  0011b	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR [rbp+160]
  00122	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  00127	4c 8d 8d 90 00
	00 00		 lea	 r9, QWORD PTR [rbp+144]
  0012e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_08FJBAAAEO@O?$CBO?$CBnnO?$CB?$AA@
  00135	49 8b cc	 mov	 rcx, r12
  00138	48 89 7c 24 28	 mov	 QWORD PTR [rsp+40], rdi
  0013d	4c 89 44 24 20	 mov	 QWORD PTR [rsp+32], r8
  00142	e8 00 00 00 00	 call	 _PyArg_ParseTuple_SizeT
  00147	85 c0		 test	 eax, eax
  00149	75 12		 jne	 SHORT $LN2@UnicodeEnc

; 1764 :           err->encoding = err->object = err->reason = NULL;

  0014b	4c 89 2e	 mov	 QWORD PTR [rsi], r13
  0014e	4c 89 2f	 mov	 QWORD PTR [rdi], r13
$LN24@UnicodeEnc:
  00151	4c 89 ad 90 00
	00 00		 mov	 QWORD PTR [rbp+144], r13

; 1765 :           return -1;

  00158	83 c8 ff	 or	 eax, -1
  0015b	eb 31		 jmp	 SHORT $LN23@UnicodeEnc
$LN2@UnicodeEnc:

; 1766 :     }
; 1767 : 
; 1768 :     if (PyUnicode_READY(err->object) < -1) {

  0015d	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  00160	f6 41 70 80	 test	 BYTE PTR [rcx+112], 128	; 00000080H
  00164	75 0a		 jne	 SHORT $LN1@UnicodeEnc
  00166	e8 00 00 00 00	 call	 _PyUnicode_Ready
  0016b	83 f8 ff	 cmp	 eax, -1

; 1769 :         err->encoding = NULL;
; 1770 :         return -1;

  0016e	7c e1		 jl	 SHORT $LN24@UnicodeEnc
$LN1@UnicodeEnc:

; 1771 :     }
; 1772 : 
; 1773 :     Py_INCREF(err->encoding);

  00170	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR [rbp+144]
  00177	e8 00 00 00 00	 call	 _Py_IncRef

; 1774 :     Py_INCREF(err->object);

  0017c	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  0017f	e8 00 00 00 00	 call	 _Py_IncRef

; 1775 :     Py_INCREF(err->reason);

  00184	48 8b 0e	 mov	 rcx, QWORD PTR [rsi]
  00187	e8 00 00 00 00	 call	 _Py_IncRef

; 1776 : 
; 1777 :     return 0;

  0018c	33 c0		 xor	 eax, eax
$LN23@UnicodeEnc:
  0018e	48 8b bc 24 80
	00 00 00	 mov	 rdi, QWORD PTR [rsp+128]
  00196	48 8b 74 24 78	 mov	 rsi, QWORD PTR [rsp+120]
  0019b	48 8b 5c 24 70	 mov	 rbx, QWORD PTR [rsp+112]
  001a0	4c 8b 6c 24 50	 mov	 r13, QWORD PTR [rsp+80]

; 1778 : }

  001a5	48 83 c4 58	 add	 rsp, 88			; 00000058H
  001a9	41 5c		 pop	 r12
  001ab	5d		 pop	 rbp
  001ac	c3		 ret	 0
UnicodeEncodeError_init ENDP
_TEXT	ENDS
PUBLIC	??_C@_0DL@BEIEHOJG@?8?$CFU?8?5codec?5can?8t?5encode?5characte@ ; `string'
PUBLIC	??_C@_0DP@KPHMCNEI@?8?$CFU?8?5codec?5can?8t?5encode?5characte@ ; `string'
PUBLIC	??_C@_0DP@KIJONJAD@?8?$CFU?8?5codec?5can?8t?5encode?5characte@ ; `string'
PUBLIC	??_C@_0DP@NFOMCNNN@?8?$CFU?8?5codec?5can?8t?5encode?5characte@ ; `string'
EXTRN	PyUnicode_ReadChar:PROC
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$UnicodeEncodeError_str DD imagerel UnicodeEncodeError_str
	DD	imagerel UnicodeEncodeError_str+51
	DD	imagerel $unwind$UnicodeEncodeError_str
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$UnicodeEncodeError_str DD imagerel UnicodeEncodeError_str+51
	DD	imagerel UnicodeEncodeError_str+423
	DD	imagerel $chain$0$UnicodeEncodeError_str
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$UnicodeEncodeError_str DD imagerel UnicodeEncodeError_str+423
	DD	imagerel UnicodeEncodeError_str+442
	DD	imagerel $chain$1$UnicodeEncodeError_str
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$UnicodeEncodeError_str DD 021H
	DD	imagerel UnicodeEncodeError_str
	DD	imagerel UnicodeEncodeError_str+51
	DD	imagerel $unwind$UnicodeEncodeError_str
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$UnicodeEncodeError_str DD 020521H
	DD	087405H
	DD	imagerel UnicodeEncodeError_str
	DD	imagerel UnicodeEncodeError_str+51
	DD	imagerel $unwind$UnicodeEncodeError_str
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$UnicodeEncodeError_str DD 060f01H
	DD	0a540fH
	DD	09340fH
	DD	0600b520fH
xdata	ENDS
;	COMDAT ??_C@_0DL@BEIEHOJG@?8?$CFU?8?5codec?5can?8t?5encode?5characte@
CONST	SEGMENT
??_C@_0DL@BEIEHOJG@?8?$CFU?8?5codec?5can?8t?5encode?5characte@ DB '''%U'''
	DB	' codec can''t encode characters in position %zd-%zd: %U', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@KPHMCNEI@?8?$CFU?8?5codec?5can?8t?5encode?5characte@
CONST	SEGMENT
??_C@_0DP@KPHMCNEI@?8?$CFU?8?5codec?5can?8t?5encode?5characte@ DB '''%U'''
	DB	' codec can''t encode character ''\U%08x'' in position %zd: %U'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@KIJONJAD@?8?$CFU?8?5codec?5can?8t?5encode?5characte@
CONST	SEGMENT
??_C@_0DP@KIJONJAD@?8?$CFU?8?5codec?5can?8t?5encode?5characte@ DB '''%U'''
	DB	' codec can''t encode character ''\u%04x'' in position %zd: %U'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@NFOMCNNN@?8?$CFU?8?5codec?5can?8t?5encode?5characte@
CONST	SEGMENT
??_C@_0DP@NFOMCNNN@?8?$CFU?8?5codec?5can?8t?5encode?5characte@ DB '''%U'''
	DB	' codec can''t encode character ''\x%02x'' in position %zd: %U'
	DB	00H						; `string'
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
CONST	ENDS
;	COMDAT UnicodeEncodeError_str
_TEXT	SEGMENT
self$ = 64
UnicodeEncodeError_str PROC				; COMDAT

; 1782 : {

  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	56		 push	 rsi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b e9	 mov	 rbp, rcx

; 1783 :     PyUnicodeErrorObject *uself = (PyUnicodeErrorObject *)self;
; 1784 :     PyObject *result = NULL;
; 1785 :     PyObject *reason_str = NULL;
; 1786 :     PyObject *encoding_str = NULL;
; 1787 : 
; 1788 :     /* Get reason and encoding as strings, which they might not be if
; 1789 :        they've been modified after we were contructed. */
; 1790 :     reason_str = PyObject_Str(uself->reason);

  00012	48 8b 89 b0 00
	00 00		 mov	 rcx, QWORD PTR [rcx+176]
  00019	33 db		 xor	 ebx, ebx
  0001b	e8 00 00 00 00	 call	 PyObject_Str
  00020	48 8b f0	 mov	 rsi, rax

; 1791 :     if (reason_str == NULL)

  00023	48 85 c0	 test	 rax, rax
  00026	0f 84 7b 01 00
	00		 je	 $LN45@UnicodeEnc@2

; 1792 :         goto done;
; 1793 :     encoding_str = PyObject_Str(uself->encoding);

  0002c	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR [rbp+144]
  00033	48 89 7c 24 40	 mov	 QWORD PTR [rsp+64], rdi
  00038	e8 00 00 00 00	 call	 PyObject_Str
  0003d	48 8b f8	 mov	 rdi, rax

; 1794 :     if (encoding_str == NULL)

  00040	48 85 c0	 test	 rax, rax
  00043	0f 84 8a 00 00
	00		 je	 $done$23073

; 1795 :         goto done;
; 1796 : 
; 1797 :     if (uself->start < PyUnicode_GET_LENGTH(uself->object) && uself->end == uself->start+1) {

  00049	48 8b 8d 98 00
	00 00		 mov	 rcx, QWORD PTR [rbp+152]
  00050	4c 8b 85 a0 00
	00 00		 mov	 r8, QWORD PTR [rbp+160]
  00057	4c 3b 41 60	 cmp	 r8, QWORD PTR [rcx+96]
  0005b	7d 55		 jge	 SHORT $LN14@UnicodeEnc@2
  0005d	49 8d 40 01	 lea	 rax, QWORD PTR [r8+1]
  00061	48 39 85 a8 00
	00 00		 cmp	 QWORD PTR [rbp+168], rax
  00068	75 48		 jne	 SHORT $LN14@UnicodeEnc@2

; 1798 :         Py_UCS4 badchar = PyUnicode_ReadChar(uself->object, uself->start);

  0006a	49 8b d0	 mov	 rdx, r8
  0006d	e8 00 00 00 00	 call	 PyUnicode_ReadChar

; 1799 :         const char *fmt;
; 1800 :         if (badchar <= 0xff)

  00072	3d ff 00 00 00	 cmp	 eax, 255		; 000000ffH
  00077	77 09		 ja	 SHORT $LN13@UnicodeEnc@2

; 1801 :             fmt = "'%U' codec can't encode character '\\x%02x' in position %zd: %U";

  00079	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0DP@NFOMCNNN@?8?$CFU?8?5codec?5can?8t?5encode?5characte@
  00080	eb 17		 jmp	 SHORT $LN11@UnicodeEnc@2
$LN13@UnicodeEnc@2:

; 1802 :         else if (badchar <= 0xffff)

  00082	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0DP@KIJONJAD@?8?$CFU?8?5codec?5can?8t?5encode?5characte@
  00089	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0DP@KPHMCNEI@?8?$CFU?8?5codec?5can?8t?5encode?5characte@
  00090	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  00095	48 0f 47 ca	 cmova	 rcx, rdx
$LN11@UnicodeEnc@2:

; 1803 :             fmt = "'%U' codec can't encode character '\\u%04x' in position %zd: %U";
; 1804 :         else
; 1805 :             fmt = "'%U' codec can't encode character '\\U%08x' in position %zd: %U";
; 1806 :         result = PyUnicode_FromFormat(
; 1807 :             fmt,
; 1808 :             encoding_str,
; 1809 :             (int)badchar,
; 1810 :             uself->start,
; 1811 :             reason_str);

  00099	4c 8b 8d a0 00
	00 00		 mov	 r9, QWORD PTR [rbp+160]
  000a0	44 8b c0	 mov	 r8d, eax
  000a3	48 8b d7	 mov	 rdx, rdi
  000a6	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  000ab	e8 00 00 00 00	 call	 PyUnicode_FromFormat

; 1812 :     }
; 1813 :     else {

  000b0	eb 1e		 jmp	 SHORT $LN47@UnicodeEnc@2
$LN14@UnicodeEnc@2:

; 1814 :         result = PyUnicode_FromFormat(
; 1815 :             "'%U' codec can't encode characters in position %zd-%zd: %U",
; 1816 :             encoding_str,
; 1817 :             uself->start,
; 1818 :             uself->end-1,
; 1819 :             reason_str);

  000b2	4c 8b 8d a8 00
	00 00		 mov	 r9, QWORD PTR [rbp+168]
  000b9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0DL@BEIEHOJG@?8?$CFU?8?5codec?5can?8t?5encode?5characte@
  000c0	48 8b d7	 mov	 rdx, rdi
  000c3	49 ff c9	 dec	 r9
  000c6	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  000cb	e8 00 00 00 00	 call	 PyUnicode_FromFormat
$LN47@UnicodeEnc@2:
  000d0	48 8b d8	 mov	 rbx, rax
$done$23073:

; 1820 :     }
; 1821 : done:
; 1822 :     Py_XDECREF(reason_str);

  000d3	e8 00 00 00 00	 call	 _Py_PXCTX
  000d8	85 c0		 test	 eax, eax
  000da	75 5c		 jne	 SHORT $LN7@UnicodeEnc@2
  000dc	48 8b 46 20	 mov	 rax, QWORD PTR [rsi+32]
  000e0	a8 20		 test	 al, 32			; 00000020H
  000e2	75 4c		 jne	 SHORT $LN23@UnicodeEnc@2
  000e4	84 c0		 test	 al, al
  000e6	78 48		 js	 SHORT $LN23@UnicodeEnc@2
  000e8	a8 02		 test	 al, 2
  000ea	75 4c		 jne	 SHORT $LN7@UnicodeEnc@2
  000ec	48 ff 4e 50	 dec	 QWORD PTR [rsi+80]
  000f0	75 46		 jne	 SHORT $LN7@UnicodeEnc@2
  000f2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  000f9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  00100	4c 8b ce	 mov	 r9, rsi
  00103	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  00109	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00111	e8 00 00 00 00	 call	 _PyParallel_Guard
  00116	48 8b ce	 mov	 rcx, rsi
  00119	85 c0		 test	 eax, eax
  0011b	74 07		 je	 SHORT $LN28@UnicodeEnc@2
  0011d	e8 00 00 00 00	 call	 _Px_Dealloc
  00122	eb 14		 jmp	 SHORT $LN7@UnicodeEnc@2
$LN28@UnicodeEnc@2:
  00124	48 8b 46 58	 mov	 rax, QWORD PTR [rsi+88]
  00128	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  0012e	eb 08		 jmp	 SHORT $LN7@UnicodeEnc@2
$LN23@UnicodeEnc@2:
  00130	48 8b ce	 mov	 rcx, rsi
  00133	e8 00 00 00 00	 call	 Px_DecRef
$LN7@UnicodeEnc@2:

; 1823 :     Py_XDECREF(encoding_str);

  00138	48 85 ff	 test	 rdi, rdi
  0013b	74 65		 je	 SHORT $LN44@UnicodeEnc@2
  0013d	e8 00 00 00 00	 call	 _Py_PXCTX
  00142	85 c0		 test	 eax, eax
  00144	75 5c		 jne	 SHORT $LN44@UnicodeEnc@2
  00146	48 8b 47 20	 mov	 rax, QWORD PTR [rdi+32]
  0014a	a8 20		 test	 al, 32			; 00000020H
  0014c	75 4c		 jne	 SHORT $LN34@UnicodeEnc@2
  0014e	84 c0		 test	 al, al
  00150	78 48		 js	 SHORT $LN34@UnicodeEnc@2
  00152	a8 02		 test	 al, 2
  00154	75 4c		 jne	 SHORT $LN44@UnicodeEnc@2
  00156	48 ff 4f 50	 dec	 QWORD PTR [rdi+80]
  0015a	75 46		 jne	 SHORT $LN44@UnicodeEnc@2
  0015c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00163	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  0016a	4c 8b cf	 mov	 r9, rdi
  0016d	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  00173	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0017b	e8 00 00 00 00	 call	 _PyParallel_Guard
  00180	48 8b cf	 mov	 rcx, rdi
  00183	85 c0		 test	 eax, eax
  00185	74 07		 je	 SHORT $LN39@UnicodeEnc@2
  00187	e8 00 00 00 00	 call	 _Px_Dealloc
  0018c	eb 14		 jmp	 SHORT $LN44@UnicodeEnc@2
$LN39@UnicodeEnc@2:
  0018e	48 8b 47 58	 mov	 rax, QWORD PTR [rdi+88]
  00192	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  00198	eb 08		 jmp	 SHORT $LN44@UnicodeEnc@2
$LN34@UnicodeEnc@2:
  0019a	48 8b cf	 mov	 rcx, rdi
  0019d	e8 00 00 00 00	 call	 Px_DecRef
$LN44@UnicodeEnc@2:
  001a2	48 8b 7c 24 40	 mov	 rdi, QWORD PTR [rsp+64]
$LN45@UnicodeEnc@2:

; 1824 :     return result;
; 1825 : }

  001a7	48 8b 6c 24 50	 mov	 rbp, QWORD PTR [rsp+80]
  001ac	48 8b c3	 mov	 rax, rbx
  001af	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  001b4	48 83 c4 30	 add	 rsp, 48			; 00000030H
  001b8	5e		 pop	 rsi
  001b9	c3		 ret	 0
UnicodeEncodeError_str ENDP
_TEXT	ENDS
PUBLIC	??_C@_06PPDPGPLO@su?$CDnns?$AA@			; `string'
PUBLIC	PyUnicodeEncodeError_Create
EXTRN	_PyObject_CallFunction_SizeT:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyUnicodeEncodeError_Create DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$PyUnicodeEncodeError_Create
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyUnicodeEncodeError_Create DD 010401H
	DD	08204H
xdata	ENDS
;	COMDAT ??_C@_06PPDPGPLO@su?$CDnns?$AA@
CONST	SEGMENT
??_C@_06PPDPGPLO@su?$CDnns?$AA@ DB 'su#nns', 00H	; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT PyUnicodeEncodeError_Create
_TEXT	SEGMENT
encoding$ = 80
object$ = 88
length$ = 96
start$ = 104
end$ = 112
reason$ = 120
PyUnicodeEncodeError_Create PROC			; COMDAT

; 1845 : {

$LN3:
  00000	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 1846 :     return PyObject_CallFunction(PyExc_UnicodeEncodeError, "su#nns",
; 1847 :                                  encoding, object, length, start, end, reason);

  00004	48 8b 44 24 78	 mov	 rax, QWORD PTR reason$[rsp]
  00009	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  0000e	48 8b 44 24 70	 mov	 rax, QWORD PTR end$[rsp]
  00013	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  00018	4c 89 4c 24 28	 mov	 QWORD PTR [rsp+40], r9
  0001d	4c 89 44 24 20	 mov	 QWORD PTR [rsp+32], r8
  00022	4c 8b c1	 mov	 r8, rcx
  00025	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_UnicodeEncodeError
  0002c	4c 8b ca	 mov	 r9, rdx
  0002f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06PPDPGPLO@su?$CDnns?$AA@
  00036	e8 00 00 00 00	 call	 _PyObject_CallFunction_SizeT

; 1848 : }

  0003b	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0003f	c3		 ret	 0
PyUnicodeEncodeError_Create ENDP
_TEXT	ENDS
PUBLIC	??_C@_07PHAGOMEE@O?$CBOnnO?$CB?$AA@		; `string'
PUBLIC	??_C@_0BI@PMEOHOIC@UnicodeDecodeError_init?$AA@	; `string'
EXTRN	PyBytes_FromStringAndSize:PROC
EXTRN	PyObject_AsReadBuffer:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$UnicodeDecodeError_init DD imagerel UnicodeDecodeError_init
	DD	imagerel UnicodeDecodeError_init+478
	DD	imagerel $unwind$UnicodeDecodeError_init
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$UnicodeDecodeError_init DD 0b4601H
	DD	0cd446H
	DD	0127441H
	DD	0116439H
	DD	0103431H
	DD	0c004c208H
	DD	05002H
xdata	ENDS
;	COMDAT ??_C@_07PHAGOMEE@O?$CBOnnO?$CB?$AA@
CONST	SEGMENT
??_C@_07PHAGOMEE@O?$CBOnnO?$CB?$AA@ DB 'O!OnnO!', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@PMEOHOIC@UnicodeDecodeError_init?$AA@
CONST	SEGMENT
??_C@_0BI@PMEOHOIC@UnicodeDecodeError_init?$AA@ DB 'UnicodeDecodeError_in'
	DB	'it', 00H					; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT UnicodeDecodeError_init
_TEXT	SEGMENT
data$ = 80
self$ = 128
args$ = 136
kwds$ = 144
size$ = 152
UnicodeDecodeError_init PROC				; COMDAT

; 1857 : {

  00000	40 55		 push	 rbp
  00002	41 54		 push	 r12
  00004	48 83 ec 68	 sub	 rsp, 104		; 00000068H
  00008	4c 8b e2	 mov	 r12, rdx
  0000b	48 8b e9	 mov	 rbp, rcx

; 1858 :     PyUnicodeErrorObject *ude;
; 1859 :     const char *data;
; 1860 :     Py_ssize_t size;
; 1861 : 
; 1862 :     if (BaseException_init((PyBaseExceptionObject *)self, args, kwds) == -1)

  0000e	e8 00 00 00 00	 call	 BaseException_init
  00013	83 f8 ff	 cmp	 eax, -1
  00016	75 0a		 jne	 SHORT $LN17@UnicodeDec

; 1863 :         return -1;

  00018	0b c0		 or	 eax, eax

; 1896 : }

  0001a	48 83 c4 68	 add	 rsp, 104		; 00000068H
  0001e	41 5c		 pop	 r12
  00020	5d		 pop	 rbp
  00021	c3		 ret	 0
$LN17@UnicodeDec:

; 1864 : 
; 1865 :     ude = (PyUnicodeErrorObject *)self;
; 1866 : 
; 1867 :     Py_CLEAR(ude->encoding);

  00022	4c 8b 8d 90 00
	00 00		 mov	 r9, QWORD PTR [rbp+144]
  00029	48 89 9c 24 80
	00 00 00	 mov	 QWORD PTR [rsp+128], rbx
  00031	48 89 b4 24 88
	00 00 00	 mov	 QWORD PTR [rsp+136], rsi
  00039	48 89 bc 24 90
	00 00 00	 mov	 QWORD PTR [rsp+144], rdi
  00041	4c 89 6c 24 60	 mov	 QWORD PTR [rsp+96], r13
  00046	45 33 ed	 xor	 r13d, r13d
  00049	4d 85 c9	 test	 r9, r9
  0004c	74 38		 je	 SHORT $LN15@UnicodeDec
  0004e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00055	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@PMEOHOIC@UnicodeDecodeError_init?$AA@
  0005c	41 b8 4b 07 00
	00		 mov	 r8d, 1867		; 0000074bH
  00062	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0006a	e8 00 00 00 00	 call	 _PyParallel_Guard
  0006f	85 c0		 test	 eax, eax
  00071	75 13		 jne	 SHORT $LN15@UnicodeDec
  00073	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR [rbp+144]
  0007a	4c 89 ad 90 00
	00 00		 mov	 QWORD PTR [rbp+144], r13
  00081	e8 00 00 00 00	 call	 _Py_DecRef
$LN15@UnicodeDec:

; 1868 :     Py_CLEAR(ude->object);

  00086	48 8d 9d 98 00
	00 00		 lea	 rbx, QWORD PTR [rbp+152]
  0008d	4c 8b 0b	 mov	 r9, QWORD PTR [rbx]
  00090	4d 85 c9	 test	 r9, r9
  00093	74 30		 je	 SHORT $LN11@UnicodeDec
  00095	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0009c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@PMEOHOIC@UnicodeDecodeError_init?$AA@
  000a3	41 b8 4c 07 00
	00		 mov	 r8d, 1868		; 0000074cH
  000a9	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  000b1	e8 00 00 00 00	 call	 _PyParallel_Guard
  000b6	85 c0		 test	 eax, eax
  000b8	75 0b		 jne	 SHORT $LN11@UnicodeDec
  000ba	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  000bd	4c 89 2b	 mov	 QWORD PTR [rbx], r13
  000c0	e8 00 00 00 00	 call	 _Py_DecRef
$LN11@UnicodeDec:

; 1869 :     Py_CLEAR(ude->reason);

  000c5	48 8d bd b0 00
	00 00		 lea	 rdi, QWORD PTR [rbp+176]
  000cc	4c 8b 0f	 mov	 r9, QWORD PTR [rdi]
  000cf	4d 85 c9	 test	 r9, r9
  000d2	74 30		 je	 SHORT $LN7@UnicodeDec
  000d4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  000db	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@PMEOHOIC@UnicodeDecodeError_init?$AA@
  000e2	41 b8 4d 07 00
	00		 mov	 r8d, 1869		; 0000074dH
  000e8	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  000f0	e8 00 00 00 00	 call	 _PyParallel_Guard
  000f5	85 c0		 test	 eax, eax
  000f7	75 0b		 jne	 SHORT $LN7@UnicodeDec
  000f9	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  000fc	4c 89 2f	 mov	 QWORD PTR [rdi], r13
  000ff	e8 00 00 00 00	 call	 _Py_DecRef
$LN7@UnicodeDec:

; 1870 : 
; 1871 :     if (!PyArg_ParseTuple(args, "O!OnnO!",
; 1872 :          &PyUnicode_Type, &ude->encoding,
; 1873 :          &ude->object,
; 1874 :          &ude->start,
; 1875 :          &ude->end,
; 1876 :          &PyUnicode_Type, &ude->reason)) {

  00104	48 89 7c 24 40	 mov	 QWORD PTR [rsp+64], rdi
  00109	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:PyUnicode_Type
  00110	48 8d 85 a8 00
	00 00		 lea	 rax, QWORD PTR [rbp+168]
  00117	4c 89 44 24 38	 mov	 QWORD PTR [rsp+56], r8
  0011c	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  00121	48 8d 8d a0 00
	00 00		 lea	 rcx, QWORD PTR [rbp+160]
  00128	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  0012d	4c 8d 8d 90 00
	00 00		 lea	 r9, QWORD PTR [rbp+144]
  00134	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_07PHAGOMEE@O?$CBOnnO?$CB?$AA@
  0013b	49 8b cc	 mov	 rcx, r12
  0013e	48 89 5c 24 20	 mov	 QWORD PTR [rsp+32], rbx
  00143	e8 00 00 00 00	 call	 _PyArg_ParseTuple_SizeT
  00148	85 c0		 test	 eax, eax

; 1877 :              ude->encoding = ude->object = ude->reason = NULL;
; 1878 :              return -1;

  0014a	74 29		 je	 SHORT $LN24@UnicodeDec

; 1879 :     }
; 1880 : 
; 1881 :     if (!PyBytes_Check(ude->object)) {

  0014c	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  0014f	48 8b 41 58	 mov	 rax, QWORD PTR [rcx+88]
  00153	f7 80 00 01 00
	00 00 00 00 08	 test	 DWORD PTR [rax+256], 134217728 ; 08000000H
  0015d	75 3f		 jne	 SHORT $LN3@UnicodeDec

; 1882 :         if (PyObject_AsReadBuffer(ude->object, (const void **)&data, &size)) {

  0015f	4c 8d 84 24 98
	00 00 00	 lea	 r8, QWORD PTR size$[rsp]
  00167	48 8d 54 24 50	 lea	 rdx, QWORD PTR data$[rsp]
  0016c	e8 00 00 00 00	 call	 PyObject_AsReadBuffer
  00171	85 c0		 test	 eax, eax
  00173	74 12		 je	 SHORT $LN2@UnicodeDec
$LN24@UnicodeDec:

; 1883 :             ude->encoding = ude->object = ude->reason = NULL;

  00175	4c 89 2f	 mov	 QWORD PTR [rdi], r13
  00178	4c 89 2b	 mov	 QWORD PTR [rbx], r13
  0017b	4c 89 ad 90 00
	00 00		 mov	 QWORD PTR [rbp+144], r13

; 1884 :             return -1;

  00182	83 c8 ff	 or	 eax, -1
  00185	eb 32		 jmp	 SHORT $LN23@UnicodeDec
$LN2@UnicodeDec:

; 1885 :         }
; 1886 :         ude->object = PyBytes_FromStringAndSize(data, size);

  00187	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR size$[rsp]
  0018f	48 8b 4c 24 50	 mov	 rcx, QWORD PTR data$[rsp]
  00194	e8 00 00 00 00	 call	 PyBytes_FromStringAndSize
  00199	48 89 03	 mov	 QWORD PTR [rbx], rax

; 1887 :     }
; 1888 :     else {

  0019c	eb 05		 jmp	 SHORT $LN1@UnicodeDec
$LN3@UnicodeDec:

; 1889 :         Py_INCREF(ude->object);

  0019e	e8 00 00 00 00	 call	 _Py_IncRef
$LN1@UnicodeDec:

; 1890 :     }
; 1891 : 
; 1892 :     Py_INCREF(ude->encoding);

  001a3	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR [rbp+144]
  001aa	e8 00 00 00 00	 call	 _Py_IncRef

; 1893 :     Py_INCREF(ude->reason);

  001af	48 8b 0f	 mov	 rcx, QWORD PTR [rdi]
  001b2	e8 00 00 00 00	 call	 _Py_IncRef

; 1894 : 
; 1895 :     return 0;

  001b7	33 c0		 xor	 eax, eax
$LN23@UnicodeDec:
  001b9	48 8b bc 24 90
	00 00 00	 mov	 rdi, QWORD PTR [rsp+144]
  001c1	48 8b b4 24 88
	00 00 00	 mov	 rsi, QWORD PTR [rsp+136]
  001c9	48 8b 9c 24 80
	00 00 00	 mov	 rbx, QWORD PTR [rsp+128]
  001d1	4c 8b 6c 24 60	 mov	 r13, QWORD PTR [rsp+96]

; 1896 : }

  001d6	48 83 c4 68	 add	 rsp, 104		; 00000068H
  001da	41 5c		 pop	 r12
  001dc	5d		 pop	 rbp
  001dd	c3		 ret	 0
UnicodeDecodeError_init ENDP
_TEXT	ENDS
PUBLIC	??_C@_0DG@HGDBIPGF@?8?$CFU?8?5codec?5can?8t?5decode?5bytes?5in@ ; `string'
PUBLIC	??_C@_0DI@IBOOJBGM@?8?$CFU?8?5codec?5can?8t?5decode?5byte?50x?$CF@ ; `string'
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$UnicodeDecodeError_str DD imagerel UnicodeDecodeError_str
	DD	imagerel UnicodeDecodeError_str+51
	DD	imagerel $unwind$UnicodeDecodeError_str
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$UnicodeDecodeError_str DD imagerel UnicodeDecodeError_str+51
	DD	imagerel UnicodeDecodeError_str+378
	DD	imagerel $chain$0$UnicodeDecodeError_str
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$UnicodeDecodeError_str DD imagerel UnicodeDecodeError_str+378
	DD	imagerel UnicodeDecodeError_str+397
	DD	imagerel $chain$1$UnicodeDecodeError_str
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$UnicodeDecodeError_str DD 021H
	DD	imagerel UnicodeDecodeError_str
	DD	imagerel UnicodeDecodeError_str+51
	DD	imagerel $unwind$UnicodeDecodeError_str
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$UnicodeDecodeError_str DD 020521H
	DD	087405H
	DD	imagerel UnicodeDecodeError_str
	DD	imagerel UnicodeDecodeError_str+51
	DD	imagerel $unwind$UnicodeDecodeError_str
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$UnicodeDecodeError_str DD 060f01H
	DD	0a540fH
	DD	09340fH
	DD	0600b520fH
xdata	ENDS
;	COMDAT ??_C@_0DG@HGDBIPGF@?8?$CFU?8?5codec?5can?8t?5decode?5bytes?5in@
CONST	SEGMENT
??_C@_0DG@HGDBIPGF@?8?$CFU?8?5codec?5can?8t?5decode?5bytes?5in@ DB '''%U'''
	DB	' codec can''t decode bytes in position %zd-%zd: %U', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@IBOOJBGM@?8?$CFU?8?5codec?5can?8t?5decode?5byte?50x?$CF@
CONST	SEGMENT
??_C@_0DI@IBOOJBGM@?8?$CFU?8?5codec?5can?8t?5decode?5byte?50x?$CF@ DB ''''
	DB	'%U'' codec can''t decode byte 0x%02x in position %zd: %U', 00H ; `string'
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
CONST	ENDS
;	COMDAT UnicodeDecodeError_str
_TEXT	SEGMENT
self$ = 64
UnicodeDecodeError_str PROC				; COMDAT

; 1900 : {

  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	56		 push	 rsi
  0000b	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000f	48 8b e9	 mov	 rbp, rcx

; 1901 :     PyUnicodeErrorObject *uself = (PyUnicodeErrorObject *)self;
; 1902 :     PyObject *result = NULL;
; 1903 :     PyObject *reason_str = NULL;
; 1904 :     PyObject *encoding_str = NULL;
; 1905 : 
; 1906 :     /* Get reason and encoding as strings, which they might not be if
; 1907 :        they've been modified after we were contructed. */
; 1908 :     reason_str = PyObject_Str(uself->reason);

  00012	48 8b 89 b0 00
	00 00		 mov	 rcx, QWORD PTR [rcx+176]
  00019	33 db		 xor	 ebx, ebx
  0001b	e8 00 00 00 00	 call	 PyObject_Str
  00020	48 8b f0	 mov	 rsi, rax

; 1909 :     if (reason_str == NULL)

  00023	48 85 c0	 test	 rax, rax
  00026	0f 84 4e 01 00
	00		 je	 $LN41@UnicodeDec@2

; 1910 :         goto done;
; 1911 :     encoding_str = PyObject_Str(uself->encoding);

  0002c	48 8b 8d 90 00
	00 00		 mov	 rcx, QWORD PTR [rbp+144]
  00033	48 89 7c 24 40	 mov	 QWORD PTR [rsp+64], rdi
  00038	e8 00 00 00 00	 call	 PyObject_Str
  0003d	48 8b f8	 mov	 rdi, rax

; 1912 :     if (encoding_str == NULL)

  00040	48 85 c0	 test	 rax, rax
  00043	74 61		 je	 SHORT $done$23207

; 1913 :         goto done;
; 1914 : 
; 1915 :     if (uself->start < PyBytes_GET_SIZE(uself->object) && uself->end == uself->start+1) {

  00045	48 8b 8d 98 00
	00 00		 mov	 rcx, QWORD PTR [rbp+152]
  0004c	4c 8b 85 a0 00
	00 00		 mov	 r8, QWORD PTR [rbp+160]
  00053	4c 3b 41 60	 cmp	 r8, QWORD PTR [rcx+96]
  00057	7d 2c		 jge	 SHORT $LN10@UnicodeDec@2
  00059	49 8d 40 01	 lea	 rax, QWORD PTR [r8+1]
  0005d	48 39 85 a8 00
	00 00		 cmp	 QWORD PTR [rbp+168], rax
  00064	75 1f		 jne	 SHORT $LN10@UnicodeDec@2

; 1916 :         int byte = (int)(PyBytes_AS_STRING(((PyUnicodeErrorObject *)self)->object)[uself->start]&0xff);

  00066	4d 8b c8	 mov	 r9, r8
  00069	45 0f b6 44 08
	78		 movzx	 r8d, BYTE PTR [r8+rcx+120]

; 1917 :         result = PyUnicode_FromFormat(
; 1918 :             "'%U' codec can't decode byte 0x%02x in position %zd: %U",
; 1919 :             encoding_str,
; 1920 :             byte,
; 1921 :             uself->start,
; 1922 :             reason_str);

  0006f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0DI@IBOOJBGM@?8?$CFU?8?5codec?5can?8t?5decode?5byte?50x?$CF@
  00076	48 8b d7	 mov	 rdx, rdi
  00079	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  0007e	e8 00 00 00 00	 call	 PyUnicode_FromFormat

; 1923 :     }
; 1924 :     else {

  00083	eb 1e		 jmp	 SHORT $LN43@UnicodeDec@2
$LN10@UnicodeDec@2:

; 1925 :         result = PyUnicode_FromFormat(
; 1926 :             "'%U' codec can't decode bytes in position %zd-%zd: %U",
; 1927 :             encoding_str,
; 1928 :             uself->start,
; 1929 :             uself->end-1,
; 1930 :             reason_str
; 1931 :             );

  00085	4c 8b 8d a8 00
	00 00		 mov	 r9, QWORD PTR [rbp+168]
  0008c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0DG@HGDBIPGF@?8?$CFU?8?5codec?5can?8t?5decode?5bytes?5in@
  00093	48 8b d7	 mov	 rdx, rdi
  00096	49 ff c9	 dec	 r9
  00099	48 89 74 24 20	 mov	 QWORD PTR [rsp+32], rsi
  0009e	e8 00 00 00 00	 call	 PyUnicode_FromFormat
$LN43@UnicodeDec@2:
  000a3	48 8b d8	 mov	 rbx, rax
$done$23207:

; 1932 :     }
; 1933 : done:
; 1934 :     Py_XDECREF(reason_str);

  000a6	e8 00 00 00 00	 call	 _Py_PXCTX
  000ab	85 c0		 test	 eax, eax
  000ad	75 5c		 jne	 SHORT $LN7@UnicodeDec@2
  000af	48 8b 46 20	 mov	 rax, QWORD PTR [rsi+32]
  000b3	a8 20		 test	 al, 32			; 00000020H
  000b5	75 4c		 jne	 SHORT $LN19@UnicodeDec@2
  000b7	84 c0		 test	 al, al
  000b9	78 48		 js	 SHORT $LN19@UnicodeDec@2
  000bb	a8 02		 test	 al, 2
  000bd	75 4c		 jne	 SHORT $LN7@UnicodeDec@2
  000bf	48 ff 4e 50	 dec	 QWORD PTR [rsi+80]
  000c3	75 46		 jne	 SHORT $LN7@UnicodeDec@2
  000c5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  000cc	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  000d3	4c 8b ce	 mov	 r9, rsi
  000d6	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  000dc	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  000e4	e8 00 00 00 00	 call	 _PyParallel_Guard
  000e9	48 8b ce	 mov	 rcx, rsi
  000ec	85 c0		 test	 eax, eax
  000ee	74 07		 je	 SHORT $LN24@UnicodeDec@2
  000f0	e8 00 00 00 00	 call	 _Px_Dealloc
  000f5	eb 14		 jmp	 SHORT $LN7@UnicodeDec@2
$LN24@UnicodeDec@2:
  000f7	48 8b 46 58	 mov	 rax, QWORD PTR [rsi+88]
  000fb	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  00101	eb 08		 jmp	 SHORT $LN7@UnicodeDec@2
$LN19@UnicodeDec@2:
  00103	48 8b ce	 mov	 rcx, rsi
  00106	e8 00 00 00 00	 call	 Px_DecRef
$LN7@UnicodeDec@2:

; 1935 :     Py_XDECREF(encoding_str);

  0010b	48 85 ff	 test	 rdi, rdi
  0010e	74 65		 je	 SHORT $LN40@UnicodeDec@2
  00110	e8 00 00 00 00	 call	 _Py_PXCTX
  00115	85 c0		 test	 eax, eax
  00117	75 5c		 jne	 SHORT $LN40@UnicodeDec@2
  00119	48 8b 47 20	 mov	 rax, QWORD PTR [rdi+32]
  0011d	a8 20		 test	 al, 32			; 00000020H
  0011f	75 4c		 jne	 SHORT $LN30@UnicodeDec@2
  00121	84 c0		 test	 al, al
  00123	78 48		 js	 SHORT $LN30@UnicodeDec@2
  00125	a8 02		 test	 al, 2
  00127	75 4c		 jne	 SHORT $LN40@UnicodeDec@2
  00129	48 ff 4f 50	 dec	 QWORD PTR [rdi+80]
  0012d	75 46		 jne	 SHORT $LN40@UnicodeDec@2
  0012f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00136	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  0013d	4c 8b cf	 mov	 r9, rdi
  00140	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  00146	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0014e	e8 00 00 00 00	 call	 _PyParallel_Guard
  00153	48 8b cf	 mov	 rcx, rdi
  00156	85 c0		 test	 eax, eax
  00158	74 07		 je	 SHORT $LN35@UnicodeDec@2
  0015a	e8 00 00 00 00	 call	 _Px_Dealloc
  0015f	eb 14		 jmp	 SHORT $LN40@UnicodeDec@2
$LN35@UnicodeDec@2:
  00161	48 8b 47 58	 mov	 rax, QWORD PTR [rdi+88]
  00165	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  0016b	eb 08		 jmp	 SHORT $LN40@UnicodeDec@2
$LN30@UnicodeDec@2:
  0016d	48 8b cf	 mov	 rcx, rdi
  00170	e8 00 00 00 00	 call	 Px_DecRef
$LN40@UnicodeDec@2:
  00175	48 8b 7c 24 40	 mov	 rdi, QWORD PTR [rsp+64]
$LN41@UnicodeDec@2:

; 1936 :     return result;
; 1937 : }

  0017a	48 8b 6c 24 50	 mov	 rbp, QWORD PTR [rsp+80]
  0017f	48 8b c3	 mov	 rax, rbx
  00182	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  00187	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0018b	5e		 pop	 rsi
  0018c	c3		 ret	 0
UnicodeDecodeError_str ENDP
_TEXT	ENDS
PUBLIC	??_C@_06IIPNKPMF@sy?$CDnns?$AA@			; `string'
PUBLIC	PyUnicodeDecodeError_Create
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyUnicodeDecodeError_Create DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$PyUnicodeDecodeError_Create
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyUnicodeDecodeError_Create DD 010401H
	DD	08204H
xdata	ENDS
;	COMDAT ??_C@_06IIPNKPMF@sy?$CDnns?$AA@
CONST	SEGMENT
??_C@_06IIPNKPMF@sy?$CDnns?$AA@ DB 'sy#nns', 00H	; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT PyUnicodeDecodeError_Create
_TEXT	SEGMENT
encoding$ = 80
object$ = 88
length$ = 96
start$ = 104
end$ = 112
reason$ = 120
PyUnicodeDecodeError_Create PROC			; COMDAT

; 1957 : {

$LN3:
  00000	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 1958 :     return PyObject_CallFunction(PyExc_UnicodeDecodeError, "sy#nns",
; 1959 :                                  encoding, object, length, start, end, reason);

  00004	48 8b 44 24 78	 mov	 rax, QWORD PTR reason$[rsp]
  00009	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  0000e	48 8b 44 24 70	 mov	 rax, QWORD PTR end$[rsp]
  00013	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  00018	4c 89 4c 24 28	 mov	 QWORD PTR [rsp+40], r9
  0001d	4c 89 44 24 20	 mov	 QWORD PTR [rsp+32], r8
  00022	4c 8b c1	 mov	 r8, rcx
  00025	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_UnicodeDecodeError
  0002c	4c 8b ca	 mov	 r9, rdx
  0002f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06IIPNKPMF@sy?$CDnns?$AA@
  00036	e8 00 00 00 00	 call	 _PyObject_CallFunction_SizeT

; 1960 : }

  0003b	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0003f	c3		 ret	 0
PyUnicodeDecodeError_Create ENDP
_TEXT	ENDS
PUBLIC	??_C@_06BGICGFIA@O?$CBnnO?$CB?$AA@		; `string'
PUBLIC	??_C@_0BL@HEMDIHME@UnicodeTranslateError_init?$AA@ ; `string'
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$UnicodeTranslateError_init DD imagerel UnicodeTranslateError_init
	DD	imagerel UnicodeTranslateError_init+429
	DD	imagerel $unwind$UnicodeTranslateError_init
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$UnicodeTranslateError_init DD 0a3d01H
	DD	0cc43dH
	DD	0b7438H
	DD	0a3433H
	DD	0d540aH
	DD	06006720aH
xdata	ENDS
;	COMDAT ??_C@_06BGICGFIA@O?$CBnnO?$CB?$AA@
CONST	SEGMENT
??_C@_06BGICGFIA@O?$CBnnO?$CB?$AA@ DB 'O!nnO!', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@HEMDIHME@UnicodeTranslateError_init?$AA@
CONST	SEGMENT
??_C@_0BL@HEMDIHME@UnicodeTranslateError_init?$AA@ DB 'UnicodeTranslateEr'
	DB	'ror_init', 00H				; `string'
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
CONST	ENDS
;	COMDAT UnicodeTranslateError_init
_TEXT	SEGMENT
self$ = 80
args$ = 88
kwds$ = 96
UnicodeTranslateError_init PROC				; COMDAT

; 1970 : {

  00000	48 89 6c 24 20	 mov	 QWORD PTR [rsp+32], rbp
  00005	56		 push	 rsi
  00006	48 83 ec 40	 sub	 rsp, 64			; 00000040H
  0000a	48 8b ea	 mov	 rbp, rdx
  0000d	48 8b f1	 mov	 rsi, rcx

; 1971 :     if (BaseException_init((PyBaseExceptionObject *)self, args, kwds) == -1)

  00010	e8 00 00 00 00	 call	 BaseException_init
  00015	83 f8 ff	 cmp	 eax, -1
  00018	75 0d		 jne	 SHORT $LN9@UnicodeTra

; 1972 :         return -1;

  0001a	0b c0		 or	 eax, eax

; 1990 : }

  0001c	48 8b 6c 24 68	 mov	 rbp, QWORD PTR [rsp+104]
  00021	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00025	5e		 pop	 rsi
  00026	c3		 ret	 0
$LN9@UnicodeTra:

; 1973 : 
; 1974 :     Py_CLEAR(self->object);

  00027	4c 8b 8e 98 00
	00 00		 mov	 r9, QWORD PTR [rsi+152]
  0002e	48 89 5c 24 50	 mov	 QWORD PTR [rsp+80], rbx
  00033	48 89 7c 24 58	 mov	 QWORD PTR [rsp+88], rdi
  00038	4c 89 64 24 60	 mov	 QWORD PTR [rsp+96], r12
  0003d	45 33 e4	 xor	 r12d, r12d
  00040	4d 85 c9	 test	 r9, r9
  00043	74 38		 je	 SHORT $LN8@UnicodeTra
  00045	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0004c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BL@HEMDIHME@UnicodeTranslateError_init?$AA@
  00053	41 b8 b6 07 00
	00		 mov	 r8d, 1974		; 000007b6H
  00059	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00061	e8 00 00 00 00	 call	 _PyParallel_Guard
  00066	85 c0		 test	 eax, eax
  00068	75 13		 jne	 SHORT $LN8@UnicodeTra
  0006a	48 8b 8e 98 00
	00 00		 mov	 rcx, QWORD PTR [rsi+152]
  00071	4c 89 a6 98 00
	00 00		 mov	 QWORD PTR [rsi+152], r12
  00078	e8 00 00 00 00	 call	 _Py_DecRef
$LN8@UnicodeTra:

; 1975 :     Py_CLEAR(self->reason);

  0007d	48 8d 9e b0 00
	00 00		 lea	 rbx, QWORD PTR [rsi+176]
  00084	4c 8b 0b	 mov	 r9, QWORD PTR [rbx]
  00087	4d 85 c9	 test	 r9, r9
  0008a	74 30		 je	 SHORT $LN4@UnicodeTra
  0008c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00093	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BL@HEMDIHME@UnicodeTranslateError_init?$AA@
  0009a	41 b8 b7 07 00
	00		 mov	 r8d, 1975		; 000007b7H
  000a0	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  000a8	e8 00 00 00 00	 call	 _PyParallel_Guard
  000ad	85 c0		 test	 eax, eax
  000af	75 0b		 jne	 SHORT $LN4@UnicodeTra
  000b1	48 8b 0b	 mov	 rcx, QWORD PTR [rbx]
  000b4	4c 89 23	 mov	 QWORD PTR [rbx], r12
  000b7	e8 00 00 00 00	 call	 _Py_DecRef
$LN4@UnicodeTra:

; 1976 : 
; 1977 :     if (!PyArg_ParseTuple(args, "O!nnO!",
; 1978 :         &PyUnicode_Type, &self->object,
; 1979 :         &self->start,
; 1980 :         &self->end,
; 1981 :         &PyUnicode_Type, &self->reason)) {

  000bc	48 89 5c 24 38	 mov	 QWORD PTR [rsp+56], rbx
  000c1	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:PyUnicode_Type
  000c8	48 8d 86 a8 00
	00 00		 lea	 rax, QWORD PTR [rsi+168]
  000cf	4c 89 44 24 30	 mov	 QWORD PTR [rsp+48], r8
  000d4	48 8d 8e a0 00
	00 00		 lea	 rcx, QWORD PTR [rsi+160]
  000db	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000e0	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  000e5	4c 8d 8e 98 00
	00 00		 lea	 r9, QWORD PTR [rsi+152]
  000ec	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06BGICGFIA@O?$CBnnO?$CB?$AA@
  000f3	48 8b cd	 mov	 rcx, rbp
  000f6	e8 00 00 00 00	 call	 _PyArg_ParseTuple_SizeT
  000fb	85 c0		 test	 eax, eax
  000fd	75 12		 jne	 SHORT $LN1@UnicodeTra

; 1982 :         self->object = self->reason = NULL;

  000ff	4c 89 23	 mov	 QWORD PTR [rbx], r12
  00102	4c 89 a6 98 00
	00 00		 mov	 QWORD PTR [rsi+152], r12

; 1983 :         return -1;

  00109	83 c8 ff	 or	 eax, -1
  0010c	e9 82 00 00 00	 jmp	 $LN23@UnicodeTra
$LN1@UnicodeTra:

; 1984 :     }
; 1985 : 
; 1986 :     Py_INCREF(self->object);

  00111	48 8b be 98 00
	00 00		 mov	 rdi, QWORD PTR [rsi+152]
  00118	e8 00 00 00 00	 call	 _Py_PXCTX
  0011d	85 c0		 test	 eax, eax
  0011f	75 32		 jne	 SHORT $LN14@UnicodeTra
  00121	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00128	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  0012f	4c 8b cf	 mov	 r9, rdi
  00132	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00138	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00140	e8 00 00 00 00	 call	 _PyParallel_Guard
  00145	85 c0		 test	 eax, eax
  00147	75 06		 jne	 SHORT $LN13@UnicodeTra
  00149	f6 47 20 20	 test	 BYTE PTR [rdi+32], 32	; 00000020H
  0014d	74 04		 je	 SHORT $LN14@UnicodeTra
$LN13@UnicodeTra:
  0014f	48 ff 47 50	 inc	 QWORD PTR [rdi+80]
$LN14@UnicodeTra:

; 1987 :     Py_INCREF(self->reason);

  00153	48 8b 1b	 mov	 rbx, QWORD PTR [rbx]
  00156	e8 00 00 00 00	 call	 _Py_PXCTX
  0015b	85 c0		 test	 eax, eax
  0015d	75 32		 jne	 SHORT $LN18@UnicodeTra
  0015f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00166	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  0016d	4c 8b cb	 mov	 r9, rbx
  00170	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00176	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  0017e	e8 00 00 00 00	 call	 _PyParallel_Guard
  00183	85 c0		 test	 eax, eax
  00185	75 06		 jne	 SHORT $LN17@UnicodeTra
  00187	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  0018b	74 04		 je	 SHORT $LN18@UnicodeTra
$LN17@UnicodeTra:
  0018d	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN18@UnicodeTra:

; 1988 : 
; 1989 :     return 0;

  00191	33 c0		 xor	 eax, eax
$LN23@UnicodeTra:
  00193	48 8b 7c 24 58	 mov	 rdi, QWORD PTR [rsp+88]
  00198	48 8b 5c 24 50	 mov	 rbx, QWORD PTR [rsp+80]
  0019d	4c 8b 64 24 60	 mov	 r12, QWORD PTR [rsp+96]

; 1990 : }

  001a2	48 8b 6c 24 68	 mov	 rbp, QWORD PTR [rsp+104]
  001a7	48 83 c4 40	 add	 rsp, 64			; 00000040H
  001ab	5e		 pop	 rsi
  001ac	c3		 ret	 0
UnicodeTranslateError_init ENDP
_TEXT	ENDS
PUBLIC	??_C@_0DD@IEACBGMI@can?8t?5translate?5characters?5in?5po@ ; `string'
PUBLIC	??_C@_0DH@FPLMGDMI@can?8t?5translate?5character?5?8?2U?$CF08@ ; `string'
PUBLIC	??_C@_0DH@FIFOJHID@can?8t?5translate?5character?5?8?2u?$CF04@ ; `string'
PUBLIC	??_C@_0DH@CFCMGDFN@can?8t?5translate?5character?5?8?2x?$CF02@ ; `string'
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$UnicodeTranslateError_str DD imagerel UnicodeTranslateError_str
	DD	imagerel UnicodeTranslateError_str+311
	DD	imagerel $unwind$UnicodeTranslateError_str
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$UnicodeTranslateError_str DD 040a01H
	DD	08340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT ??_C@_0DD@IEACBGMI@can?8t?5translate?5characters?5in?5po@
CONST	SEGMENT
??_C@_0DD@IEACBGMI@can?8t?5translate?5characters?5in?5po@ DB 'can''t tran'
	DB	'slate characters in position %zd-%zd: %U', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@FPLMGDMI@can?8t?5translate?5character?5?8?2U?$CF08@
CONST	SEGMENT
??_C@_0DH@FPLMGDMI@can?8t?5translate?5character?5?8?2U?$CF08@ DB 'can''t '
	DB	'translate character ''\U%08x'' in position %zd: %U', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@FIFOJHID@can?8t?5translate?5character?5?8?2u?$CF04@
CONST	SEGMENT
??_C@_0DH@FIFOJHID@can?8t?5translate?5character?5?8?2u?$CF04@ DB 'can''t '
	DB	'translate character ''\u%04x'' in position %zd: %U', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@CFCMGDFN@can?8t?5translate?5character?5?8?2x?$CF02@
CONST	SEGMENT
??_C@_0DH@CFCMGDFN@can?8t?5translate?5character?5?8?2x?$CF02@ DB 'can''t '
	DB	'translate character ''\x%02x'' in position %zd: %U', 00H ; `string'
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
CONST	ENDS
;	COMDAT UnicodeTranslateError_str
_TEXT	SEGMENT
self$ = 64
UnicodeTranslateError_str PROC				; COMDAT

; 1995 : {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  0000a	48 8b f9	 mov	 rdi, rcx

; 1996 :     PyUnicodeErrorObject *uself = (PyUnicodeErrorObject *)self;
; 1997 :     PyObject *result = NULL;
; 1998 :     PyObject *reason_str = NULL;
; 1999 : 
; 2000 :     /* Get reason as a string, which it might not be if it's been
; 2001 :        modified after we were contructed. */
; 2002 :     reason_str = PyObject_Str(uself->reason);

  0000d	48 8b 89 b0 00
	00 00		 mov	 rcx, QWORD PTR [rcx+176]
  00014	e8 00 00 00 00	 call	 PyObject_Str
  00019	48 8b d8	 mov	 rbx, rax

; 2003 :     if (reason_str == NULL)

  0001c	48 85 c0	 test	 rax, rax
  0001f	0f 84 07 01 00
	00		 je	 $LN28@UnicodeTra@2

; 2004 :         goto done;
; 2005 : 
; 2006 :     if (uself->start < PyUnicode_GET_LENGTH(uself->object) && uself->end == uself->start+1) {

  00025	48 8b 8f 98 00
	00 00		 mov	 rcx, QWORD PTR [rdi+152]
  0002c	48 8b 97 a0 00
	00 00		 mov	 rdx, QWORD PTR [rdi+160]
  00033	48 3b 51 60	 cmp	 rdx, QWORD PTR [rcx+96]
  00037	7d 4c		 jge	 SHORT $LN10@UnicodeTra@2
  00039	48 8d 42 01	 lea	 rax, QWORD PTR [rdx+1]
  0003d	48 39 87 a8 00
	00 00		 cmp	 QWORD PTR [rdi+168], rax
  00044	75 3f		 jne	 SHORT $LN10@UnicodeTra@2

; 2007 :         Py_UCS4 badchar = PyUnicode_ReadChar(uself->object, uself->start);

  00046	e8 00 00 00 00	 call	 PyUnicode_ReadChar

; 2008 :         const char *fmt;
; 2009 :         if (badchar <= 0xff)

  0004b	3d ff 00 00 00	 cmp	 eax, 255		; 000000ffH
  00050	77 09		 ja	 SHORT $LN9@UnicodeTra@2

; 2010 :             fmt = "can't translate character '\\x%02x' in position %zd: %U";

  00052	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0DH@CFCMGDFN@can?8t?5translate?5character?5?8?2x?$CF02@
  00059	eb 17		 jmp	 SHORT $LN7@UnicodeTra@2
$LN9@UnicodeTra@2:

; 2011 :         else if (badchar <= 0xffff)

  0005b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0DH@FIFOJHID@can?8t?5translate?5character?5?8?2u?$CF04@
  00062	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0DH@FPLMGDMI@can?8t?5translate?5character?5?8?2U?$CF08@
  00069	3d ff ff 00 00	 cmp	 eax, 65535		; 0000ffffH
  0006e	48 0f 47 ca	 cmova	 rcx, rdx
$LN7@UnicodeTra@2:

; 2012 :             fmt = "can't translate character '\\u%04x' in position %zd: %U";
; 2013 :         else
; 2014 :             fmt = "can't translate character '\\U%08x' in position %zd: %U";
; 2015 :         result = PyUnicode_FromFormat(
; 2016 :             fmt,
; 2017 :             (int)badchar,
; 2018 :             uself->start,
; 2019 :             reason_str
; 2020 :         );

  00072	4c 8b 87 a0 00
	00 00		 mov	 r8, QWORD PTR [rdi+160]
  00079	4c 8b cb	 mov	 r9, rbx
  0007c	8b d0		 mov	 edx, eax
  0007e	e8 00 00 00 00	 call	 PyUnicode_FromFormat

; 2021 :     } else {

  00083	eb 19		 jmp	 SHORT $LN29@UnicodeTra@2
$LN10@UnicodeTra@2:

; 2022 :         result = PyUnicode_FromFormat(
; 2023 :             "can't translate characters in position %zd-%zd: %U",
; 2024 :             uself->start,
; 2025 :             uself->end-1,
; 2026 :             reason_str
; 2027 :             );

  00085	4c 8b 87 a8 00
	00 00		 mov	 r8, QWORD PTR [rdi+168]
  0008c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0DD@IEACBGMI@can?8t?5translate?5characters?5in?5po@
  00093	4c 8b cb	 mov	 r9, rbx
  00096	49 ff c8	 dec	 r8
  00099	e8 00 00 00 00	 call	 PyUnicode_FromFormat
$LN29@UnicodeTra@2:
  0009e	48 8b f8	 mov	 rdi, rax
$done$23315:

; 2028 :     }
; 2029 : done:
; 2030 :     Py_XDECREF(reason_str);

  000a1	e8 00 00 00 00	 call	 _Py_PXCTX
  000a6	85 c0		 test	 eax, eax
  000a8	75 46		 jne	 SHORT $LN25@UnicodeTra@2
  000aa	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  000ae	a8 20		 test	 al, 32			; 00000020H
  000b0	75 64		 jne	 SHORT $LN18@UnicodeTra@2
  000b2	84 c0		 test	 al, al
  000b4	78 60		 js	 SHORT $LN18@UnicodeTra@2
  000b6	a8 02		 test	 al, 2
  000b8	75 36		 jne	 SHORT $LN25@UnicodeTra@2
  000ba	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  000be	75 30		 jne	 SHORT $LN25@UnicodeTra@2
  000c0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  000c7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  000ce	4c 8b cb	 mov	 r9, rbx
  000d1	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  000d7	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  000df	e8 00 00 00 00	 call	 _PyParallel_Guard
  000e4	48 8b cb	 mov	 rcx, rbx
  000e7	85 c0		 test	 eax, eax
  000e9	74 13		 je	 SHORT $LN23@UnicodeTra@2
  000eb	e8 00 00 00 00	 call	 _Px_Dealloc
$LN25@UnicodeTra@2:

; 2031 :     return result;

  000f0	48 8b c7	 mov	 rax, rdi

; 2032 : }

  000f3	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  000f8	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000fc	5f		 pop	 rdi
  000fd	c3		 ret	 0

; 2028 :     }
; 2029 : done:
; 2030 :     Py_XDECREF(reason_str);

$LN23@UnicodeTra@2:
  000fe	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  00102	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]

; 2031 :     return result;

  00108	48 8b c7	 mov	 rax, rdi

; 2032 : }

  0010b	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00110	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00114	5f		 pop	 rdi
  00115	c3		 ret	 0

; 2028 :     }
; 2029 : done:
; 2030 :     Py_XDECREF(reason_str);

$LN18@UnicodeTra@2:
  00116	48 8b cb	 mov	 rcx, rbx
  00119	e8 00 00 00 00	 call	 Px_DecRef

; 2031 :     return result;

  0011e	48 8b c7	 mov	 rax, rdi

; 2032 : }

  00121	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00126	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0012a	5f		 pop	 rdi
  0012b	c3		 ret	 0
$LN28@UnicodeTra@2:
  0012c	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]
  00131	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00135	5f		 pop	 rdi
  00136	c3		 ret	 0
UnicodeTranslateError_str ENDP
_TEXT	ENDS
PUBLIC	??_C@_05OBBNLNF@u?$CDnns?$AA@			; `string'
PUBLIC	PyUnicodeTranslateError_Create
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyUnicodeTranslateError_Create DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$PyUnicodeTranslateError_Create
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyUnicodeTranslateError_Create DD 010401H
	DD	08204H
xdata	ENDS
;	COMDAT ??_C@_05OBBNLNF@u?$CDnns?$AA@
CONST	SEGMENT
??_C@_05OBBNLNF@u?$CDnns?$AA@ DB 'u#nns', 00H		; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT PyUnicodeTranslateError_Create
_TEXT	SEGMENT
object$ = 80
length$ = 88
start$ = 96
end$ = 104
reason$ = 112
PyUnicodeTranslateError_Create PROC			; COMDAT

; 2053 : {

$LN3:
  00000	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 2054 :     return PyObject_CallFunction(PyExc_UnicodeTranslateError, "u#nns",
; 2055 :                                  object, length, start, end, reason);

  00004	48 8b 44 24 70	 mov	 rax, QWORD PTR reason$[rsp]
  00009	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0000e	4c 89 4c 24 28	 mov	 QWORD PTR [rsp+40], r9
  00013	4c 89 44 24 20	 mov	 QWORD PTR [rsp+32], r8
  00018	4c 8b c1	 mov	 r8, rcx
  0001b	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_UnicodeTranslateError
  00022	4c 8b ca	 mov	 r9, rdx
  00025	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_05OBBNLNF@u?$CDnns?$AA@
  0002c	e8 00 00 00 00	 call	 _PyObject_CallFunction_SizeT

; 2056 : }

  00031	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00035	c3		 ret	 0
PyUnicodeTranslateError_Create ENDP
_TEXT	ENDS
PUBLIC	??_C@_03FLJHKEJH@Ons?$AA@			; `string'
PUBLIC	_PyUnicodeTranslateError_Create
;	COMDAT pdata
pdata	SEGMENT
$pdata$_PyUnicodeTranslateError_Create DD imagerel $LN3
	DD	imagerel $LN3+44
	DD	imagerel $unwind$_PyUnicodeTranslateError_Create
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_PyUnicodeTranslateError_Create DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT ??_C@_03FLJHKEJH@Ons?$AA@
CONST	SEGMENT
??_C@_03FLJHKEJH@Ons?$AA@ DB 'Ons', 00H			; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT _PyUnicodeTranslateError_Create
_TEXT	SEGMENT
object$ = 64
start$ = 72
end$ = 80
reason$ = 88
_PyUnicodeTranslateError_Create PROC			; COMDAT

; 2062 : {

$LN3:
  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 2063 :     return PyObject_CallFunction(PyExc_UnicodeTranslateError, "Ons",
; 2064 :                                  object, start, end, reason);

  00004	4c 89 4c 24 28	 mov	 QWORD PTR [rsp+40], r9
  00009	4c 89 44 24 20	 mov	 QWORD PTR [rsp+32], r8
  0000e	4c 8b c1	 mov	 r8, rcx
  00011	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_UnicodeTranslateError
  00018	4c 8b ca	 mov	 r9, rdx
  0001b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_03FLJHKEJH@Ons?$AA@
  00022	e8 00 00 00 00	 call	 _PyObject_CallFunction_SizeT

; 2065 : }

  00027	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0002b	c3		 ret	 0
_PyUnicodeTranslateError_Create ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BK@BNIPEKEF@GC?5object?5already?5tracked?$AA@ ; `string'
PUBLIC	??_C@_0BA@CGAMGHCJ@MemoryError_new?$AA@		; `string'
EXTRN	_PyGC_generation0:QWORD
EXTRN	Py_FatalError:PROC
EXTRN	_Px_NewReference:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$MemoryError_new DD imagerel MemoryError_new
	DD	imagerel MemoryError_new+22
	DD	imagerel $unwind$MemoryError_new
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$MemoryError_new DD imagerel MemoryError_new+22
	DD	imagerel MemoryError_new+53
	DD	imagerel $chain$0$MemoryError_new
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$MemoryError_new DD imagerel MemoryError_new+53
	DD	imagerel MemoryError_new+79
	DD	imagerel $chain$2$MemoryError_new
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$5$MemoryError_new DD imagerel MemoryError_new+79
	DD	imagerel MemoryError_new+333
	DD	imagerel $chain$5$MemoryError_new
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$5$MemoryError_new DD 040f21H
	DD	06740fH
	DD	083400H
	DD	imagerel MemoryError_new
	DD	imagerel MemoryError_new+22
	DD	imagerel $unwind$MemoryError_new
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$MemoryError_new DD 020021H
	DD	083400H
	DD	imagerel MemoryError_new
	DD	imagerel MemoryError_new+22
	DD	imagerel $unwind$MemoryError_new
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$MemoryError_new DD 020521H
	DD	083405H
	DD	imagerel MemoryError_new
	DD	imagerel MemoryError_new+22
	DD	imagerel $unwind$MemoryError_new
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$MemoryError_new DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT ??_C@_0BK@BNIPEKEF@GC?5object?5already?5tracked?$AA@
CONST	SEGMENT
??_C@_0BK@BNIPEKEF@GC?5object?5already?5tracked?$AA@ DB 'GC object alread'
	DB	'y tracked', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CGAMGHCJ@MemoryError_new?$AA@
CONST	SEGMENT
??_C@_0BA@CGAMGHCJ@MemoryError_new?$AA@ DB 'MemoryError_new', 00H ; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT MemoryError_new
_TEXT	SEGMENT
type$ = 64
args$ = 72
kwds$ = 80
MemoryError_new PROC					; COMDAT

; 2197 : {

  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 2198 :     PyBaseExceptionObject *self;
; 2199 : 
; 2200 :     if (type != (PyTypeObject *) PyExc_MemoryError)

  00004	48 3b 0d 00 00
	00 00		 cmp	 rcx, QWORD PTR PyExc_MemoryError
  0000b	74 09		 je	 SHORT $LN8@MemoryErro

; 2216 : }

  0000d	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00011	e9 00 00 00 00	 jmp	 BaseException_new
$LN8@MemoryErro:
  00016	48 89 5c 24 40	 mov	 QWORD PTR [rsp+64], rbx

; 2201 :         return BaseException_new(type, args, kwds);
; 2202 :     if (memerrors_freelist == NULL)

  0001b	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR memerrors_freelist
  00022	48 85 db	 test	 rbx, rbx
  00025	75 0e		 jne	 SHORT $LN7@MemoryErro
  00027	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]

; 2216 : }

  0002c	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00030	e9 00 00 00 00	 jmp	 BaseException_new
$LN7@MemoryErro:

; 2203 :         return BaseException_new(type, args, kwds);
; 2204 :     /* Fetch object from freelist and revive it */
; 2205 :     self = memerrors_freelist;
; 2206 :     self->args = PyTuple_New(0);

  00035	33 c9		 xor	 ecx, ecx
  00037	e8 00 00 00 00	 call	 PyTuple_New
  0003c	48 89 43 68	 mov	 QWORD PTR [rbx+104], rax

; 2207 :     /* This shouldn't happen since the empty tuple is persistent */
; 2208 :     if (self->args == NULL)

  00040	48 85 c0	 test	 rax, rax
  00043	75 0a		 jne	 SHORT $LN6@MemoryErro
  00045	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]

; 2216 : }

  0004a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0004e	c3		 ret	 0
$LN6@MemoryErro:

; 2209 :         return NULL;
; 2210 :     memerrors_freelist = (PyBaseExceptionObject *) self->dict;

  0004f	48 8b 43 60	 mov	 rax, QWORD PTR [rbx+96]

; 2211 :     memerrors_numfree--;

  00053	ff 0d 00 00 00
	00		 dec	 DWORD PTR memerrors_numfree
  00059	48 89 7c 24 30	 mov	 QWORD PTR [rsp+48], rdi

; 2212 :     self->dict = NULL;
; 2213 :     _Py_NewReference((PyObject *)self);

  0005e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00065	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@CGAMGHCJ@MemoryError_new?$AA@
  0006c	33 ff		 xor	 edi, edi
  0006e	4c 8b cb	 mov	 r9, rbx
  00071	41 b8 a5 08 00
	00		 mov	 r8d, 2213		; 000008a5H
  00077	48 89 05 00 00
	00 00		 mov	 QWORD PTR memerrors_freelist, rax
  0007e	48 89 7b 60	 mov	 QWORD PTR [rbx+96], rdi
  00082	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0008a	e8 00 00 00 00	 call	 _PyParallel_Guard
  0008f	85 c0		 test	 eax, eax
  00091	74 0a		 je	 SHORT $LN11@MemoryErro
  00093	48 8b cb	 mov	 rcx, rbx
  00096	e8 00 00 00 00	 call	 _Px_NewReference
  0009b	eb 08		 jmp	 SHORT $LN12@MemoryErro
$LN11@MemoryErro:
  0009d	48 c7 43 50 01
	00 00 00	 mov	 QWORD PTR [rbx+80], 1
$LN12@MemoryErro:

; 2214 :     _PyObject_GC_TRACK(self);

  000a5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  000ac	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@CGAMGHCJ@MemoryError_new?$AA@
  000b3	4c 8b cb	 mov	 r9, rbx
  000b6	41 b8 a6 08 00
	00		 mov	 r8d, 2214		; 000008a6H
  000bc	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  000c4	e8 00 00 00 00	 call	 _PyParallel_Guard
  000c9	85 c0		 test	 eax, eax
  000cb	75 6e		 jne	 SHORT $LN2@MemoryErro
  000cd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  000d4	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@CGAMGHCJ@MemoryError_new?$AA@
  000db	4c 8b cb	 mov	 r9, rbx
  000de	41 b8 a6 08 00
	00		 mov	 r8d, 2214		; 000008a6H
  000e4	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  000ec	e8 00 00 00 00	 call	 _PyParallel_Guard
  000f1	85 c0		 test	 eax, eax
  000f3	75 04		 jne	 SHORT $LN14@MemoryErro
  000f5	48 8d 7b e8	 lea	 rdi, QWORD PTR [rbx-24]
$LN14@MemoryErro:
  000f9	48 83 7f 10 fe	 cmp	 QWORD PTR [rdi+16], -2
  000fe	74 0c		 je	 SHORT $LN1@MemoryErro
  00100	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@BNIPEKEF@GC?5object?5already?5tracked?$AA@
  00107	e8 00 00 00 00	 call	 Py_FatalError
$LN1@MemoryErro:
  0010c	48 c7 47 10 fd
	ff ff ff	 mov	 QWORD PTR [rdi+16], -3
  00114	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR _PyGC_generation0
  0011b	48 89 0f	 mov	 QWORD PTR [rdi], rcx
  0011e	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR _PyGC_generation0
  00125	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00129	48 89 57 08	 mov	 QWORD PTR [rdi+8], rdx
  0012d	48 89 3a	 mov	 QWORD PTR [rdx], rdi
  00130	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR _PyGC_generation0
  00137	48 89 79 08	 mov	 QWORD PTR [rcx+8], rdi
$LN2@MemoryErro:

; 2215 :     return (PyObject *)self;

  0013b	48 8b 7c 24 30	 mov	 rdi, QWORD PTR [rsp+48]
  00140	48 8b c3	 mov	 rax, rbx
  00143	48 8b 5c 24 40	 mov	 rbx, QWORD PTR [rsp+64]

; 2216 : }

  00148	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0014c	c3		 ret	 0
MemoryError_new ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BE@IKDMGMCA@MemoryError_dealloc?$AA@	; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$MemoryError_dealloc DD imagerel MemoryError_dealloc
	DD	imagerel MemoryError_dealloc+207
	DD	imagerel $unwind$MemoryError_dealloc
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$MemoryError_dealloc DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT ??_C@_0BE@IKDMGMCA@MemoryError_dealloc?$AA@
CONST	SEGMENT
??_C@_0BE@IKDMGMCA@MemoryError_dealloc?$AA@ DB 'MemoryError_dealloc', 00H ; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT MemoryError_dealloc
_TEXT	SEGMENT
self$ = 64
MemoryError_dealloc PROC				; COMDAT

; 2220 : {

  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8b d9	 mov	 rbx, rcx

; 2221 :     _PyObject_GC_UNTRACK(self);

  00009	4c 8b c9	 mov	 r9, rcx
  0000c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BE@IKDMGMCA@MemoryError_dealloc?$AA@
  0001a	41 b8 ad 08 00
	00		 mov	 r8d, 2221		; 000008adH
  00020	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00028	e8 00 00 00 00	 call	 _PyParallel_Guard
  0002d	85 c0		 test	 eax, eax
  0002f	75 54		 jne	 SHORT $LN3@MemoryErro@2
  00031	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BE@IKDMGMCA@MemoryError_dealloc?$AA@
  0003f	4c 8b cb	 mov	 r9, rbx
  00042	41 b8 ad 08 00
	00		 mov	 r8d, 2221		; 000008adH
  00048	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00050	e8 00 00 00 00	 call	 _PyParallel_Guard
  00055	85 c0		 test	 eax, eax
  00057	74 04		 je	 SHORT $LN9@MemoryErro@2
  00059	33 d2		 xor	 edx, edx
  0005b	eb 04		 jmp	 SHORT $LN10@MemoryErro@2
$LN9@MemoryErro@2:
  0005d	48 8d 53 e8	 lea	 rdx, QWORD PTR [rbx-24]
$LN10@MemoryErro@2:
  00061	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00064	48 8b 4a 08	 mov	 rcx, QWORD PTR [rdx+8]
  00068	48 c7 42 10 fe
	ff ff ff	 mov	 QWORD PTR [rdx+16], -2
  00070	48 89 01	 mov	 QWORD PTR [rcx], rax
  00073	48 8b 0a	 mov	 rcx, QWORD PTR [rdx]
  00076	48 8b 42 08	 mov	 rax, QWORD PTR [rdx+8]
  0007a	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  0007e	48 c7 02 00 00
	00 00		 mov	 QWORD PTR [rdx], 0
$LN3@MemoryErro@2:

; 2222 :     BaseException_clear(self);

  00085	48 8b cb	 mov	 rcx, rbx
  00088	e8 00 00 00 00	 call	 BaseException_clear

; 2223 :     if (memerrors_numfree >= MEMERRORS_SAVE)

  0008d	44 8b 1d 00 00
	00 00		 mov	 r11d, DWORD PTR memerrors_numfree
  00094	41 83 fb 10	 cmp	 r11d, 16
  00098	7c 13		 jl	 SHORT $LN2@MemoryErro@2

; 2224 :         Py_TYPE(self)->tp_free((PyObject *)self);

  0009a	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  0009e	48 8b cb	 mov	 rcx, rbx

; 2229 :     }
; 2230 : }

  000a1	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000a5	5b		 pop	 rbx
  000a6	48 ff a0 98 01
	00 00		 rex_jmp QWORD PTR [rax+408]
$LN2@MemoryErro@2:

; 2225 :     else {
; 2226 :         self->dict = (PyObject *) memerrors_freelist;

  000ad	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR memerrors_freelist

; 2227 :         memerrors_freelist = self;
; 2228 :         memerrors_numfree++;

  000b4	41 ff c3	 inc	 r11d
  000b7	48 89 1d 00 00
	00 00		 mov	 QWORD PTR memerrors_freelist, rbx
  000be	48 89 43 60	 mov	 QWORD PTR [rbx+96], rax
  000c2	44 89 1d 00 00
	00 00		 mov	 DWORD PTR memerrors_numfree, r11d

; 2229 :     }
; 2230 : }

  000c9	48 83 c4 30	 add	 rsp, 48			; 00000030H
  000cd	5b		 pop	 rbx
  000ce	c3		 ret	 0
MemoryError_dealloc ENDP
_TEXT	ENDS
PUBLIC	??_C@_0CJ@IKMFGPOI@Could?5not?5preallocate?5MemoryErro@ ; `string'
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$preallocate_memerrors DD imagerel preallocate_memerrors
	DD	imagerel preallocate_memerrors+212
	DD	imagerel $unwind$preallocate_memerrors
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$preallocate_memerrors DD 050d01H
	DD	018340dH
	DD	016010dH
	DD	07006H
xdata	ENDS
;	COMDAT ??_C@_0CJ@IKMFGPOI@Could?5not?5preallocate?5MemoryErro@
CONST	SEGMENT
??_C@_0CJ@IKMFGPOI@Could?5not?5preallocate?5MemoryErro@ DB 'Could not pre'
	DB	'allocate MemoryError object', 00H		; `string'
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
CONST	ENDS
;	COMDAT preallocate_memerrors
_TEXT	SEGMENT
errors$ = 48
preallocate_memerrors PROC				; COMDAT

; 2234 : {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 81 ec b0 00
	00 00		 sub	 rsp, 176		; 000000b0H

; 2235 :     /* We create enough MemoryErrors and then decref them, which will fill
; 2236 :        up the freelist. */
; 2237 :     int i;
; 2238 :     PyObject *errors[MEMERRORS_SAVE];
; 2239 :     for (i = 0; i < MEMERRORS_SAVE; i++) {

  0000d	48 8d 5c 24 30	 lea	 rbx, QWORD PTR errors$[rsp]
  00012	bf 10 00 00 00	 mov	 edi, 16
  00017	66 0f 1f 84 00
	00 00 00 00	 npad	 9
$LL7@preallocat:

; 2240 :         errors[i] = MemoryError_new((PyTypeObject *) PyExc_MemoryError,
; 2241 :                                     NULL, NULL);

  00020	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_MemoryError
  00027	45 33 c0	 xor	 r8d, r8d
  0002a	33 d2		 xor	 edx, edx
  0002c	e8 00 00 00 00	 call	 MemoryError_new
  00031	48 89 03	 mov	 QWORD PTR [rbx], rax

; 2242 :         if (!errors[i])

  00034	48 85 c0	 test	 rax, rax
  00037	75 0c		 jne	 SHORT $LN6@preallocat

; 2243 :             Py_FatalError("Could not preallocate MemoryError object");

  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CJ@IKMFGPOI@Could?5not?5preallocate?5MemoryErro@
  00040	e8 00 00 00 00	 call	 Py_FatalError
$LN6@preallocat:

; 2235 :     /* We create enough MemoryErrors and then decref them, which will fill
; 2236 :        up the freelist. */
; 2237 :     int i;
; 2238 :     PyObject *errors[MEMERRORS_SAVE];
; 2239 :     for (i = 0; i < MEMERRORS_SAVE; i++) {

  00045	48 83 c3 08	 add	 rbx, 8
  00049	48 ff cf	 dec	 rdi
  0004c	75 d2		 jne	 SHORT $LL7@preallocat
  0004e	66 90		 npad	 2
$LL3@preallocat:

; 2246 :         Py_DECREF(errors[i]);

  00050	48 8b 5c fc 30	 mov	 rbx, QWORD PTR errors$[rsp+rdi*8]
  00055	e8 00 00 00 00	 call	 _Py_PXCTX
  0005a	85 c0		 test	 eax, eax
  0005c	75 5c		 jne	 SHORT $LN2@preallocat
  0005e	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  00062	a8 20		 test	 al, 32			; 00000020H
  00064	75 4c		 jne	 SHORT $LN14@preallocat
  00066	84 c0		 test	 al, al
  00068	78 48		 js	 SHORT $LN14@preallocat
  0006a	a8 02		 test	 al, 2
  0006c	75 4c		 jne	 SHORT $LN2@preallocat
  0006e	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  00072	75 46		 jne	 SHORT $LN2@preallocat
  00074	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0007b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  00082	4c 8b cb	 mov	 r9, rbx
  00085	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  0008b	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00093	e8 00 00 00 00	 call	 _PyParallel_Guard
  00098	48 8b cb	 mov	 rcx, rbx
  0009b	85 c0		 test	 eax, eax
  0009d	74 07		 je	 SHORT $LN19@preallocat
  0009f	e8 00 00 00 00	 call	 _Px_Dealloc
  000a4	eb 14		 jmp	 SHORT $LN2@preallocat
$LN19@preallocat:
  000a6	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  000aa	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  000b0	eb 08		 jmp	 SHORT $LN2@preallocat
$LN14@preallocat:
  000b2	48 8b cb	 mov	 rcx, rbx
  000b5	e8 00 00 00 00	 call	 Px_DecRef
$LN2@preallocat:

; 2244 :     }
; 2245 :     for (i = 0; i < MEMERRORS_SAVE; i++) {

  000ba	48 ff c7	 inc	 rdi
  000bd	48 83 ff 10	 cmp	 rdi, 16
  000c1	7c 8d		 jl	 SHORT $LL3@preallocat

; 2247 :     }
; 2248 : }

  000c3	48 8b 9c 24 c0
	00 00 00	 mov	 rbx, QWORD PTR [rsp+192]
  000cb	48 81 c4 b0 00
	00 00		 add	 rsp, 176		; 000000b0H
  000d2	5f		 pop	 rdi
  000d3	c3		 ret	 0
preallocate_memerrors ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$free_preallocated_memerrors DD imagerel free_preallocated_memerrors
	DD	imagerel free_preallocated_memerrors+54
	DD	imagerel $unwind$free_preallocated_memerrors
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$free_preallocated_memerrors DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT free_preallocated_memerrors
_TEXT	SEGMENT
free_preallocated_memerrors PROC			; COMDAT

; 2252 : {

  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 2253 :     while (memerrors_freelist != NULL) {

  00004	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR memerrors_freelist
  0000b	48 85 c9	 test	 rcx, rcx
  0000e	74 21		 je	 SHORT $LN1@free_preal
$LL2@free_preal:

; 2254 :         PyObject *self = (PyObject *) memerrors_freelist;
; 2255 :         memerrors_freelist = (PyBaseExceptionObject *) memerrors_freelist->dict;

  00010	48 8b 41 60	 mov	 rax, QWORD PTR [rcx+96]
  00014	48 89 05 00 00
	00 00		 mov	 QWORD PTR memerrors_freelist, rax

; 2256 :         Py_TYPE(self)->tp_free((PyObject *)self);

  0001b	48 8b 41 58	 mov	 rax, QWORD PTR [rcx+88]
  0001f	ff 90 98 01 00
	00		 call	 QWORD PTR [rax+408]
  00025	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR memerrors_freelist
  0002c	48 85 c9	 test	 rcx, rcx
  0002f	75 df		 jne	 SHORT $LL2@free_preal
$LN1@free_preal:

; 2257 :     }
; 2258 : }

  00031	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00035	c3		 ret	 0
free_preallocated_memerrors ENDP
_TEXT	ENDS
PUBLIC	??_C@_0CK@HNJAAFFN@init?5of?5pre?9allocated?5RuntimeErr@ ; `string'
PUBLIC	??_C@_0DG@DCAIDKJK@cannot?5allocate?5tuple?5for?5Runtim@ ; `string'
PUBLIC	??_C@_0DJ@IIJEFPMJ@cannot?5allocate?5argument?5for?5Run@ ; `string'
PUBLIC	??_C@_0CB@JIEDPDLF@maximum?5recursion?5depth?5exceeded@ ; `string'
PUBLIC	??_C@_0DP@ICIAEEBH@Cannot?5pre?9allocate?5RuntimeError@ ; `string'
PUBLIC	??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@ ; `string'
PUBLIC	??_C@_0DG@OANAGHEJ@Cannot?5allocate?5map?5from?5errnos?5@ ; `string'
PUBLIC	??_C@_0N@FANLAMLN@WindowsError?$AA@		; `string'
PUBLIC	??_C@_07FNHPCLMO@IOError?$AA@			; `string'
PUBLIC	??_C@_0BB@KOECNPDN@EnvironmentError?$AA@	; `string'
PUBLIC	??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@ ; `string'
PUBLIC	??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@ ; `string'
PUBLIC	_PyExc_Init
EXTRN	PyDict_SetItem:PROC
EXTRN	PyDict_New:PROC
EXTRN	PyDict_SetItemString:PROC
EXTRN	PyModule_GetDict:PROC
EXTRN	PyType_Ready:PROC
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$_PyExc_Init DD imagerel $LN617
	DD	imagerel $LN617+12367
	DD	imagerel $unwind$_PyExc_Init
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$_PyExc_Init DD imagerel $LN617+12367
	DD	imagerel $LN617+12419
	DD	imagerel $chain$0$_PyExc_Init
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$_PyExc_Init DD imagerel $LN617+12419
	DD	imagerel $LN617+12535
	DD	imagerel $chain$2$_PyExc_Init
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$_PyExc_Init DD imagerel $LN617+12535
	DD	imagerel $LN617+12546
	DD	imagerel $chain$3$_PyExc_Init
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$_PyExc_Init DD 021H
	DD	imagerel $LN617
	DD	imagerel $LN617+12367
	DD	imagerel $unwind$_PyExc_Init
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$_PyExc_Init DD 020021H
	DD	086400H
	DD	imagerel $LN617
	DD	imagerel $LN617+12367
	DD	imagerel $unwind$_PyExc_Init
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$_PyExc_Init DD 020521H
	DD	086405H
	DD	imagerel $LN617
	DD	imagerel $LN617+12367
	DD	imagerel $unwind$_PyExc_Init
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_PyExc_Init DD 040a01H
	DD	09340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT ??_C@_0CK@HNJAAFFN@init?5of?5pre?9allocated?5RuntimeErr@
CONST	SEGMENT
??_C@_0CK@HNJAAFFN@init?5of?5pre?9allocated?5RuntimeErr@ DB 'init of pre-'
	DB	'allocated RuntimeError failed', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@DCAIDKJK@cannot?5allocate?5tuple?5for?5Runtim@
CONST	SEGMENT
??_C@_0DG@DCAIDKJK@cannot?5allocate?5tuple?5for?5Runtim@ DB 'cannot alloc'
	DB	'ate tuple for RuntimeError pre-allocation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@IIJEFPMJ@cannot?5allocate?5argument?5for?5Run@
CONST	SEGMENT
??_C@_0DJ@IIJEFPMJ@cannot?5allocate?5argument?5for?5Run@ DB 'cannot alloc'
	DB	'ate argument for RuntimeError pre-allocation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@JIEDPDLF@maximum?5recursion?5depth?5exceeded@
CONST	SEGMENT
??_C@_0CB@JIEDPDLF@maximum?5recursion?5depth?5exceeded@ DB 'maximum recur'
	DB	'sion depth exceeded', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@ICIAEEBH@Cannot?5pre?9allocate?5RuntimeError@
CONST	SEGMENT
??_C@_0DP@ICIAEEBH@Cannot?5pre?9allocate?5RuntimeError@ DB 'Cannot pre-al'
	DB	'locate RuntimeError instance for recursion errors', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
CONST	SEGMENT
??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@ DB 'errmap insertion'
	DB	' problem.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@OANAGHEJ@Cannot?5allocate?5map?5from?5errnos?5@
CONST	SEGMENT
??_C@_0DG@OANAGHEJ@Cannot?5allocate?5map?5from?5errnos?5@ DB 'Cannot allo'
	DB	'cate map from errnos to OSError subclasses', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FANLAMLN@WindowsError?$AA@
CONST	SEGMENT
??_C@_0N@FANLAMLN@WindowsError?$AA@ DB 'WindowsError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07FNHPCLMO@IOError?$AA@
CONST	SEGMENT
??_C@_07FNHPCLMO@IOError?$AA@ DB 'IOError', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KOECNPDN@EnvironmentError?$AA@
CONST	SEGMENT
??_C@_0BB@KOECNPDN@EnvironmentError?$AA@ DB 'EnvironmentError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
CONST	SEGMENT
??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@ DB 'Module dictio'
	DB	'nary insertion problem.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
CONST	SEGMENT
??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@ DB 'exceptions'
	DB	' bootstrapping error.', 00H			; `string'
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
CONST	ENDS
;	COMDAT _PyExc_Init
_TEXT	SEGMENT
bltinmod$ = 64
_PyExc_Init PROC					; COMDAT

; 2455 : {

$LN617:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 2456 :     PyObject *bdict;
; 2457 : 
; 2458 :     PRE_INIT(BaseException)

  0000a	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_BaseException+256, 4096 ; 00001000H
  00014	48 8b f9	 mov	 rdi, rcx
  00017	75 5e		 jne	 SHORT $LN282@PyExc_Init
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_BaseException
  00020	e8 00 00 00 00	 call	 PyType_Ready
  00025	85 c0		 test	 eax, eax
  00027	79 0c		 jns	 SHORT $LN277@PyExc_Init
  00029	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00030	e8 00 00 00 00	 call	 Py_FatalError
$LN277@PyExc_Init:
  00035	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_BaseException
  0003c	e8 00 00 00 00	 call	 _Py_PXCTX
  00041	85 c0		 test	 eax, eax
  00043	75 32		 jne	 SHORT $LN282@PyExc_Init
  00045	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0004c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00053	4c 8b cb	 mov	 r9, rbx
  00056	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  0005c	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00064	e8 00 00 00 00	 call	 _PyParallel_Guard
  00069	85 c0		 test	 eax, eax
  0006b	75 06		 jne	 SHORT $LN281@PyExc_Init
  0006d	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  00071	74 04		 je	 SHORT $LN282@PyExc_Init
$LN281@PyExc_Init:
  00073	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN282@PyExc_Init:

; 2459 :     PRE_INIT(Exception)

  00077	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_Exception+256, 4096 ; 00001000H
  00081	75 5e		 jne	 SHORT $LN286@PyExc_Init
  00083	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_Exception
  0008a	e8 00 00 00 00	 call	 PyType_Ready
  0008f	85 c0		 test	 eax, eax
  00091	79 0c		 jns	 SHORT $LN275@PyExc_Init
  00093	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  0009a	e8 00 00 00 00	 call	 Py_FatalError
$LN275@PyExc_Init:
  0009f	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_Exception
  000a6	e8 00 00 00 00	 call	 _Py_PXCTX
  000ab	85 c0		 test	 eax, eax
  000ad	75 32		 jne	 SHORT $LN286@PyExc_Init
  000af	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  000b6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  000bd	4c 8b cb	 mov	 r9, rbx
  000c0	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  000c6	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  000ce	e8 00 00 00 00	 call	 _PyParallel_Guard
  000d3	85 c0		 test	 eax, eax
  000d5	75 06		 jne	 SHORT $LN285@PyExc_Init
  000d7	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  000db	74 04		 je	 SHORT $LN286@PyExc_Init
$LN285@PyExc_Init:
  000dd	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN286@PyExc_Init:

; 2460 :     PRE_INIT(TypeError)

  000e1	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_TypeError+256, 4096 ; 00001000H
  000eb	75 5e		 jne	 SHORT $LN290@PyExc_Init
  000ed	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_TypeError
  000f4	e8 00 00 00 00	 call	 PyType_Ready
  000f9	85 c0		 test	 eax, eax
  000fb	79 0c		 jns	 SHORT $LN273@PyExc_Init
  000fd	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00104	e8 00 00 00 00	 call	 Py_FatalError
$LN273@PyExc_Init:
  00109	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_TypeError
  00110	e8 00 00 00 00	 call	 _Py_PXCTX
  00115	85 c0		 test	 eax, eax
  00117	75 32		 jne	 SHORT $LN290@PyExc_Init
  00119	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00120	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00127	4c 8b cb	 mov	 r9, rbx
  0012a	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00130	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00138	e8 00 00 00 00	 call	 _PyParallel_Guard
  0013d	85 c0		 test	 eax, eax
  0013f	75 06		 jne	 SHORT $LN289@PyExc_Init
  00141	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  00145	74 04		 je	 SHORT $LN290@PyExc_Init
$LN289@PyExc_Init:
  00147	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN290@PyExc_Init:

; 2461 :     PRE_INIT(StopIteration)

  0014b	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_StopIteration+256, 4096 ; 00001000H
  00155	75 5e		 jne	 SHORT $LN294@PyExc_Init
  00157	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_StopIteration
  0015e	e8 00 00 00 00	 call	 PyType_Ready
  00163	85 c0		 test	 eax, eax
  00165	79 0c		 jns	 SHORT $LN271@PyExc_Init
  00167	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  0016e	e8 00 00 00 00	 call	 Py_FatalError
$LN271@PyExc_Init:
  00173	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_StopIteration
  0017a	e8 00 00 00 00	 call	 _Py_PXCTX
  0017f	85 c0		 test	 eax, eax
  00181	75 32		 jne	 SHORT $LN294@PyExc_Init
  00183	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0018a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00191	4c 8b cb	 mov	 r9, rbx
  00194	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  0019a	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  001a2	e8 00 00 00 00	 call	 _PyParallel_Guard
  001a7	85 c0		 test	 eax, eax
  001a9	75 06		 jne	 SHORT $LN293@PyExc_Init
  001ab	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  001af	74 04		 je	 SHORT $LN294@PyExc_Init
$LN293@PyExc_Init:
  001b1	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN294@PyExc_Init:

; 2462 :     PRE_INIT(GeneratorExit)

  001b5	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_GeneratorExit+256, 4096 ; 00001000H
  001bf	75 5e		 jne	 SHORT $LN298@PyExc_Init
  001c1	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_GeneratorExit
  001c8	e8 00 00 00 00	 call	 PyType_Ready
  001cd	85 c0		 test	 eax, eax
  001cf	79 0c		 jns	 SHORT $LN269@PyExc_Init
  001d1	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  001d8	e8 00 00 00 00	 call	 Py_FatalError
$LN269@PyExc_Init:
  001dd	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_GeneratorExit
  001e4	e8 00 00 00 00	 call	 _Py_PXCTX
  001e9	85 c0		 test	 eax, eax
  001eb	75 32		 jne	 SHORT $LN298@PyExc_Init
  001ed	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  001f4	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  001fb	4c 8b cb	 mov	 r9, rbx
  001fe	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00204	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  0020c	e8 00 00 00 00	 call	 _PyParallel_Guard
  00211	85 c0		 test	 eax, eax
  00213	75 06		 jne	 SHORT $LN297@PyExc_Init
  00215	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  00219	74 04		 je	 SHORT $LN298@PyExc_Init
$LN297@PyExc_Init:
  0021b	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN298@PyExc_Init:

; 2463 :     PRE_INIT(SystemExit)

  0021f	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_SystemExit+256, 4096 ; 00001000H
  00229	75 5e		 jne	 SHORT $LN302@PyExc_Init
  0022b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_SystemExit
  00232	e8 00 00 00 00	 call	 PyType_Ready
  00237	85 c0		 test	 eax, eax
  00239	79 0c		 jns	 SHORT $LN267@PyExc_Init
  0023b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00242	e8 00 00 00 00	 call	 Py_FatalError
$LN267@PyExc_Init:
  00247	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_SystemExit
  0024e	e8 00 00 00 00	 call	 _Py_PXCTX
  00253	85 c0		 test	 eax, eax
  00255	75 32		 jne	 SHORT $LN302@PyExc_Init
  00257	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0025e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00265	4c 8b cb	 mov	 r9, rbx
  00268	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  0026e	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00276	e8 00 00 00 00	 call	 _PyParallel_Guard
  0027b	85 c0		 test	 eax, eax
  0027d	75 06		 jne	 SHORT $LN301@PyExc_Init
  0027f	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  00283	74 04		 je	 SHORT $LN302@PyExc_Init
$LN301@PyExc_Init:
  00285	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN302@PyExc_Init:

; 2464 :     PRE_INIT(KeyboardInterrupt)

  00289	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_KeyboardInterrupt+256, 4096 ; 00001000H
  00293	75 5e		 jne	 SHORT $LN306@PyExc_Init
  00295	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_KeyboardInterrupt
  0029c	e8 00 00 00 00	 call	 PyType_Ready
  002a1	85 c0		 test	 eax, eax
  002a3	79 0c		 jns	 SHORT $LN265@PyExc_Init
  002a5	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  002ac	e8 00 00 00 00	 call	 Py_FatalError
$LN265@PyExc_Init:
  002b1	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_KeyboardInterrupt
  002b8	e8 00 00 00 00	 call	 _Py_PXCTX
  002bd	85 c0		 test	 eax, eax
  002bf	75 32		 jne	 SHORT $LN306@PyExc_Init
  002c1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  002c8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  002cf	4c 8b cb	 mov	 r9, rbx
  002d2	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  002d8	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  002e0	e8 00 00 00 00	 call	 _PyParallel_Guard
  002e5	85 c0		 test	 eax, eax
  002e7	75 06		 jne	 SHORT $LN305@PyExc_Init
  002e9	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  002ed	74 04		 je	 SHORT $LN306@PyExc_Init
$LN305@PyExc_Init:
  002ef	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN306@PyExc_Init:

; 2465 :     PRE_INIT(ImportError)

  002f3	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_ImportError+256, 4096 ; 00001000H
  002fd	75 5e		 jne	 SHORT $LN310@PyExc_Init
  002ff	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ImportError
  00306	e8 00 00 00 00	 call	 PyType_Ready
  0030b	85 c0		 test	 eax, eax
  0030d	79 0c		 jns	 SHORT $LN263@PyExc_Init
  0030f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00316	e8 00 00 00 00	 call	 Py_FatalError
$LN263@PyExc_Init:
  0031b	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_ImportError
  00322	e8 00 00 00 00	 call	 _Py_PXCTX
  00327	85 c0		 test	 eax, eax
  00329	75 32		 jne	 SHORT $LN310@PyExc_Init
  0032b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00332	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00339	4c 8b cb	 mov	 r9, rbx
  0033c	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00342	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  0034a	e8 00 00 00 00	 call	 _PyParallel_Guard
  0034f	85 c0		 test	 eax, eax
  00351	75 06		 jne	 SHORT $LN309@PyExc_Init
  00353	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  00357	74 04		 je	 SHORT $LN310@PyExc_Init
$LN309@PyExc_Init:
  00359	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN310@PyExc_Init:

; 2466 :     PRE_INIT(OSError)

  0035d	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_OSError+256, 4096 ; 00001000H
  00367	75 5e		 jne	 SHORT $LN314@PyExc_Init
  00369	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_OSError
  00370	e8 00 00 00 00	 call	 PyType_Ready
  00375	85 c0		 test	 eax, eax
  00377	79 0c		 jns	 SHORT $LN261@PyExc_Init
  00379	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00380	e8 00 00 00 00	 call	 Py_FatalError
$LN261@PyExc_Init:
  00385	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_OSError
  0038c	e8 00 00 00 00	 call	 _Py_PXCTX
  00391	85 c0		 test	 eax, eax
  00393	75 32		 jne	 SHORT $LN314@PyExc_Init
  00395	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0039c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  003a3	4c 8b cb	 mov	 r9, rbx
  003a6	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  003ac	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  003b4	e8 00 00 00 00	 call	 _PyParallel_Guard
  003b9	85 c0		 test	 eax, eax
  003bb	75 06		 jne	 SHORT $LN313@PyExc_Init
  003bd	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  003c1	74 04		 je	 SHORT $LN314@PyExc_Init
$LN313@PyExc_Init:
  003c3	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN314@PyExc_Init:

; 2467 :     PRE_INIT(EOFError)

  003c7	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_EOFError+256, 4096 ; 00001000H
  003d1	75 5e		 jne	 SHORT $LN318@PyExc_Init
  003d3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_EOFError
  003da	e8 00 00 00 00	 call	 PyType_Ready
  003df	85 c0		 test	 eax, eax
  003e1	79 0c		 jns	 SHORT $LN259@PyExc_Init
  003e3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  003ea	e8 00 00 00 00	 call	 Py_FatalError
$LN259@PyExc_Init:
  003ef	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_EOFError
  003f6	e8 00 00 00 00	 call	 _Py_PXCTX
  003fb	85 c0		 test	 eax, eax
  003fd	75 32		 jne	 SHORT $LN318@PyExc_Init
  003ff	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00406	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  0040d	4c 8b cb	 mov	 r9, rbx
  00410	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00416	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  0041e	e8 00 00 00 00	 call	 _PyParallel_Guard
  00423	85 c0		 test	 eax, eax
  00425	75 06		 jne	 SHORT $LN317@PyExc_Init
  00427	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  0042b	74 04		 je	 SHORT $LN318@PyExc_Init
$LN317@PyExc_Init:
  0042d	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN318@PyExc_Init:

; 2468 :     PRE_INIT(RuntimeError)

  00431	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_RuntimeError+256, 4096 ; 00001000H
  0043b	75 5e		 jne	 SHORT $LN322@PyExc_Init
  0043d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_RuntimeError
  00444	e8 00 00 00 00	 call	 PyType_Ready
  00449	85 c0		 test	 eax, eax
  0044b	79 0c		 jns	 SHORT $LN257@PyExc_Init
  0044d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00454	e8 00 00 00 00	 call	 Py_FatalError
$LN257@PyExc_Init:
  00459	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_RuntimeError
  00460	e8 00 00 00 00	 call	 _Py_PXCTX
  00465	85 c0		 test	 eax, eax
  00467	75 32		 jne	 SHORT $LN322@PyExc_Init
  00469	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00470	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00477	4c 8b cb	 mov	 r9, rbx
  0047a	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00480	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00488	e8 00 00 00 00	 call	 _PyParallel_Guard
  0048d	85 c0		 test	 eax, eax
  0048f	75 06		 jne	 SHORT $LN321@PyExc_Init
  00491	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  00495	74 04		 je	 SHORT $LN322@PyExc_Init
$LN321@PyExc_Init:
  00497	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN322@PyExc_Init:

; 2469 :     PRE_INIT(NotImplementedError)

  0049b	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_NotImplementedError+256, 4096 ; 00001000H
  004a5	75 5e		 jne	 SHORT $LN326@PyExc_Init
  004a7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_NotImplementedError
  004ae	e8 00 00 00 00	 call	 PyType_Ready
  004b3	85 c0		 test	 eax, eax
  004b5	79 0c		 jns	 SHORT $LN255@PyExc_Init
  004b7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  004be	e8 00 00 00 00	 call	 Py_FatalError
$LN255@PyExc_Init:
  004c3	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_NotImplementedError
  004ca	e8 00 00 00 00	 call	 _Py_PXCTX
  004cf	85 c0		 test	 eax, eax
  004d1	75 32		 jne	 SHORT $LN326@PyExc_Init
  004d3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  004da	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  004e1	4c 8b cb	 mov	 r9, rbx
  004e4	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  004ea	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  004f2	e8 00 00 00 00	 call	 _PyParallel_Guard
  004f7	85 c0		 test	 eax, eax
  004f9	75 06		 jne	 SHORT $LN325@PyExc_Init
  004fb	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  004ff	74 04		 je	 SHORT $LN326@PyExc_Init
$LN325@PyExc_Init:
  00501	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN326@PyExc_Init:

; 2470 :     PRE_INIT(NameError)

  00505	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_NameError+256, 4096 ; 00001000H
  0050f	75 5e		 jne	 SHORT $LN330@PyExc_Init
  00511	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_NameError
  00518	e8 00 00 00 00	 call	 PyType_Ready
  0051d	85 c0		 test	 eax, eax
  0051f	79 0c		 jns	 SHORT $LN253@PyExc_Init
  00521	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00528	e8 00 00 00 00	 call	 Py_FatalError
$LN253@PyExc_Init:
  0052d	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_NameError
  00534	e8 00 00 00 00	 call	 _Py_PXCTX
  00539	85 c0		 test	 eax, eax
  0053b	75 32		 jne	 SHORT $LN330@PyExc_Init
  0053d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00544	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  0054b	4c 8b cb	 mov	 r9, rbx
  0054e	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00554	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  0055c	e8 00 00 00 00	 call	 _PyParallel_Guard
  00561	85 c0		 test	 eax, eax
  00563	75 06		 jne	 SHORT $LN329@PyExc_Init
  00565	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  00569	74 04		 je	 SHORT $LN330@PyExc_Init
$LN329@PyExc_Init:
  0056b	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN330@PyExc_Init:

; 2471 :     PRE_INIT(UnboundLocalError)

  0056f	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_UnboundLocalError+256, 4096 ; 00001000H
  00579	75 5e		 jne	 SHORT $LN334@PyExc_Init
  0057b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_UnboundLocalError
  00582	e8 00 00 00 00	 call	 PyType_Ready
  00587	85 c0		 test	 eax, eax
  00589	79 0c		 jns	 SHORT $LN251@PyExc_Init
  0058b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00592	e8 00 00 00 00	 call	 Py_FatalError
$LN251@PyExc_Init:
  00597	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_UnboundLocalError
  0059e	e8 00 00 00 00	 call	 _Py_PXCTX
  005a3	85 c0		 test	 eax, eax
  005a5	75 32		 jne	 SHORT $LN334@PyExc_Init
  005a7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  005ae	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  005b5	4c 8b cb	 mov	 r9, rbx
  005b8	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  005be	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  005c6	e8 00 00 00 00	 call	 _PyParallel_Guard
  005cb	85 c0		 test	 eax, eax
  005cd	75 06		 jne	 SHORT $LN333@PyExc_Init
  005cf	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  005d3	74 04		 je	 SHORT $LN334@PyExc_Init
$LN333@PyExc_Init:
  005d5	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN334@PyExc_Init:

; 2472 :     PRE_INIT(AttributeError)

  005d9	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_AttributeError+256, 4096 ; 00001000H
  005e3	75 5e		 jne	 SHORT $LN338@PyExc_Init
  005e5	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_AttributeError
  005ec	e8 00 00 00 00	 call	 PyType_Ready
  005f1	85 c0		 test	 eax, eax
  005f3	79 0c		 jns	 SHORT $LN249@PyExc_Init
  005f5	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  005fc	e8 00 00 00 00	 call	 Py_FatalError
$LN249@PyExc_Init:
  00601	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_AttributeError
  00608	e8 00 00 00 00	 call	 _Py_PXCTX
  0060d	85 c0		 test	 eax, eax
  0060f	75 32		 jne	 SHORT $LN338@PyExc_Init
  00611	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00618	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  0061f	4c 8b cb	 mov	 r9, rbx
  00622	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00628	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00630	e8 00 00 00 00	 call	 _PyParallel_Guard
  00635	85 c0		 test	 eax, eax
  00637	75 06		 jne	 SHORT $LN337@PyExc_Init
  00639	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  0063d	74 04		 je	 SHORT $LN338@PyExc_Init
$LN337@PyExc_Init:
  0063f	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN338@PyExc_Init:

; 2473 :     PRE_INIT(SyntaxError)

  00643	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_SyntaxError+256, 4096 ; 00001000H
  0064d	75 5e		 jne	 SHORT $LN342@PyExc_Init
  0064f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_SyntaxError
  00656	e8 00 00 00 00	 call	 PyType_Ready
  0065b	85 c0		 test	 eax, eax
  0065d	79 0c		 jns	 SHORT $LN247@PyExc_Init
  0065f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00666	e8 00 00 00 00	 call	 Py_FatalError
$LN247@PyExc_Init:
  0066b	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_SyntaxError
  00672	e8 00 00 00 00	 call	 _Py_PXCTX
  00677	85 c0		 test	 eax, eax
  00679	75 32		 jne	 SHORT $LN342@PyExc_Init
  0067b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00682	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00689	4c 8b cb	 mov	 r9, rbx
  0068c	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00692	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  0069a	e8 00 00 00 00	 call	 _PyParallel_Guard
  0069f	85 c0		 test	 eax, eax
  006a1	75 06		 jne	 SHORT $LN341@PyExc_Init
  006a3	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  006a7	74 04		 je	 SHORT $LN342@PyExc_Init
$LN341@PyExc_Init:
  006a9	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN342@PyExc_Init:

; 2474 :     PRE_INIT(IndentationError)

  006ad	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_IndentationError+256, 4096 ; 00001000H
  006b7	75 5e		 jne	 SHORT $LN346@PyExc_Init
  006b9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_IndentationError
  006c0	e8 00 00 00 00	 call	 PyType_Ready
  006c5	85 c0		 test	 eax, eax
  006c7	79 0c		 jns	 SHORT $LN245@PyExc_Init
  006c9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  006d0	e8 00 00 00 00	 call	 Py_FatalError
$LN245@PyExc_Init:
  006d5	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_IndentationError
  006dc	e8 00 00 00 00	 call	 _Py_PXCTX
  006e1	85 c0		 test	 eax, eax
  006e3	75 32		 jne	 SHORT $LN346@PyExc_Init
  006e5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  006ec	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  006f3	4c 8b cb	 mov	 r9, rbx
  006f6	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  006fc	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00704	e8 00 00 00 00	 call	 _PyParallel_Guard
  00709	85 c0		 test	 eax, eax
  0070b	75 06		 jne	 SHORT $LN345@PyExc_Init
  0070d	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  00711	74 04		 je	 SHORT $LN346@PyExc_Init
$LN345@PyExc_Init:
  00713	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN346@PyExc_Init:

; 2475 :     PRE_INIT(TabError)

  00717	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_TabError+256, 4096 ; 00001000H
  00721	75 5e		 jne	 SHORT $LN350@PyExc_Init
  00723	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_TabError
  0072a	e8 00 00 00 00	 call	 PyType_Ready
  0072f	85 c0		 test	 eax, eax
  00731	79 0c		 jns	 SHORT $LN243@PyExc_Init
  00733	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  0073a	e8 00 00 00 00	 call	 Py_FatalError
$LN243@PyExc_Init:
  0073f	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_TabError
  00746	e8 00 00 00 00	 call	 _Py_PXCTX
  0074b	85 c0		 test	 eax, eax
  0074d	75 32		 jne	 SHORT $LN350@PyExc_Init
  0074f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00756	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  0075d	4c 8b cb	 mov	 r9, rbx
  00760	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00766	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  0076e	e8 00 00 00 00	 call	 _PyParallel_Guard
  00773	85 c0		 test	 eax, eax
  00775	75 06		 jne	 SHORT $LN349@PyExc_Init
  00777	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  0077b	74 04		 je	 SHORT $LN350@PyExc_Init
$LN349@PyExc_Init:
  0077d	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN350@PyExc_Init:

; 2476 :     PRE_INIT(LookupError)

  00781	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_LookupError+256, 4096 ; 00001000H
  0078b	75 5e		 jne	 SHORT $LN354@PyExc_Init
  0078d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_LookupError
  00794	e8 00 00 00 00	 call	 PyType_Ready
  00799	85 c0		 test	 eax, eax
  0079b	79 0c		 jns	 SHORT $LN241@PyExc_Init
  0079d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  007a4	e8 00 00 00 00	 call	 Py_FatalError
$LN241@PyExc_Init:
  007a9	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_LookupError
  007b0	e8 00 00 00 00	 call	 _Py_PXCTX
  007b5	85 c0		 test	 eax, eax
  007b7	75 32		 jne	 SHORT $LN354@PyExc_Init
  007b9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  007c0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  007c7	4c 8b cb	 mov	 r9, rbx
  007ca	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  007d0	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  007d8	e8 00 00 00 00	 call	 _PyParallel_Guard
  007dd	85 c0		 test	 eax, eax
  007df	75 06		 jne	 SHORT $LN353@PyExc_Init
  007e1	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  007e5	74 04		 je	 SHORT $LN354@PyExc_Init
$LN353@PyExc_Init:
  007e7	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN354@PyExc_Init:

; 2477 :     PRE_INIT(IndexError)

  007eb	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_IndexError+256, 4096 ; 00001000H
  007f5	75 5e		 jne	 SHORT $LN358@PyExc_Init
  007f7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_IndexError
  007fe	e8 00 00 00 00	 call	 PyType_Ready
  00803	85 c0		 test	 eax, eax
  00805	79 0c		 jns	 SHORT $LN239@PyExc_Init
  00807	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  0080e	e8 00 00 00 00	 call	 Py_FatalError
$LN239@PyExc_Init:
  00813	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_IndexError
  0081a	e8 00 00 00 00	 call	 _Py_PXCTX
  0081f	85 c0		 test	 eax, eax
  00821	75 32		 jne	 SHORT $LN358@PyExc_Init
  00823	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0082a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00831	4c 8b cb	 mov	 r9, rbx
  00834	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  0083a	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00842	e8 00 00 00 00	 call	 _PyParallel_Guard
  00847	85 c0		 test	 eax, eax
  00849	75 06		 jne	 SHORT $LN357@PyExc_Init
  0084b	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  0084f	74 04		 je	 SHORT $LN358@PyExc_Init
$LN357@PyExc_Init:
  00851	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN358@PyExc_Init:

; 2478 :     PRE_INIT(KeyError)

  00855	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_KeyError+256, 4096 ; 00001000H
  0085f	75 5e		 jne	 SHORT $LN362@PyExc_Init
  00861	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_KeyError
  00868	e8 00 00 00 00	 call	 PyType_Ready
  0086d	85 c0		 test	 eax, eax
  0086f	79 0c		 jns	 SHORT $LN237@PyExc_Init
  00871	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00878	e8 00 00 00 00	 call	 Py_FatalError
$LN237@PyExc_Init:
  0087d	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_KeyError
  00884	e8 00 00 00 00	 call	 _Py_PXCTX
  00889	85 c0		 test	 eax, eax
  0088b	75 32		 jne	 SHORT $LN362@PyExc_Init
  0088d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00894	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  0089b	4c 8b cb	 mov	 r9, rbx
  0089e	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  008a4	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  008ac	e8 00 00 00 00	 call	 _PyParallel_Guard
  008b1	85 c0		 test	 eax, eax
  008b3	75 06		 jne	 SHORT $LN361@PyExc_Init
  008b5	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  008b9	74 04		 je	 SHORT $LN362@PyExc_Init
$LN361@PyExc_Init:
  008bb	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN362@PyExc_Init:

; 2479 :     PRE_INIT(ValueError)

  008bf	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_ValueError+256, 4096 ; 00001000H
  008c9	75 5e		 jne	 SHORT $LN366@PyExc_Init
  008cb	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ValueError
  008d2	e8 00 00 00 00	 call	 PyType_Ready
  008d7	85 c0		 test	 eax, eax
  008d9	79 0c		 jns	 SHORT $LN235@PyExc_Init
  008db	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  008e2	e8 00 00 00 00	 call	 Py_FatalError
$LN235@PyExc_Init:
  008e7	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_ValueError
  008ee	e8 00 00 00 00	 call	 _Py_PXCTX
  008f3	85 c0		 test	 eax, eax
  008f5	75 32		 jne	 SHORT $LN366@PyExc_Init
  008f7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  008fe	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00905	4c 8b cb	 mov	 r9, rbx
  00908	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  0090e	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00916	e8 00 00 00 00	 call	 _PyParallel_Guard
  0091b	85 c0		 test	 eax, eax
  0091d	75 06		 jne	 SHORT $LN365@PyExc_Init
  0091f	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  00923	74 04		 je	 SHORT $LN366@PyExc_Init
$LN365@PyExc_Init:
  00925	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN366@PyExc_Init:

; 2480 :     PRE_INIT(UnicodeError)

  00929	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_UnicodeError+256, 4096 ; 00001000H
  00933	75 5e		 jne	 SHORT $LN370@PyExc_Init
  00935	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_UnicodeError
  0093c	e8 00 00 00 00	 call	 PyType_Ready
  00941	85 c0		 test	 eax, eax
  00943	79 0c		 jns	 SHORT $LN233@PyExc_Init
  00945	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  0094c	e8 00 00 00 00	 call	 Py_FatalError
$LN233@PyExc_Init:
  00951	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_UnicodeError
  00958	e8 00 00 00 00	 call	 _Py_PXCTX
  0095d	85 c0		 test	 eax, eax
  0095f	75 32		 jne	 SHORT $LN370@PyExc_Init
  00961	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00968	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  0096f	4c 8b cb	 mov	 r9, rbx
  00972	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00978	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00980	e8 00 00 00 00	 call	 _PyParallel_Guard
  00985	85 c0		 test	 eax, eax
  00987	75 06		 jne	 SHORT $LN369@PyExc_Init
  00989	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  0098d	74 04		 je	 SHORT $LN370@PyExc_Init
$LN369@PyExc_Init:
  0098f	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN370@PyExc_Init:

; 2481 :     PRE_INIT(UnicodeEncodeError)

  00993	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_UnicodeEncodeError+256, 4096 ; 00001000H
  0099d	75 5e		 jne	 SHORT $LN374@PyExc_Init
  0099f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_UnicodeEncodeError
  009a6	e8 00 00 00 00	 call	 PyType_Ready
  009ab	85 c0		 test	 eax, eax
  009ad	79 0c		 jns	 SHORT $LN231@PyExc_Init
  009af	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  009b6	e8 00 00 00 00	 call	 Py_FatalError
$LN231@PyExc_Init:
  009bb	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_UnicodeEncodeError
  009c2	e8 00 00 00 00	 call	 _Py_PXCTX
  009c7	85 c0		 test	 eax, eax
  009c9	75 32		 jne	 SHORT $LN374@PyExc_Init
  009cb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  009d2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  009d9	4c 8b cb	 mov	 r9, rbx
  009dc	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  009e2	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  009ea	e8 00 00 00 00	 call	 _PyParallel_Guard
  009ef	85 c0		 test	 eax, eax
  009f1	75 06		 jne	 SHORT $LN373@PyExc_Init
  009f3	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  009f7	74 04		 je	 SHORT $LN374@PyExc_Init
$LN373@PyExc_Init:
  009f9	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN374@PyExc_Init:

; 2482 :     PRE_INIT(UnicodeDecodeError)

  009fd	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_UnicodeDecodeError+256, 4096 ; 00001000H
  00a07	75 5e		 jne	 SHORT $LN378@PyExc_Init
  00a09	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_UnicodeDecodeError
  00a10	e8 00 00 00 00	 call	 PyType_Ready
  00a15	85 c0		 test	 eax, eax
  00a17	79 0c		 jns	 SHORT $LN229@PyExc_Init
  00a19	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00a20	e8 00 00 00 00	 call	 Py_FatalError
$LN229@PyExc_Init:
  00a25	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_UnicodeDecodeError
  00a2c	e8 00 00 00 00	 call	 _Py_PXCTX
  00a31	85 c0		 test	 eax, eax
  00a33	75 32		 jne	 SHORT $LN378@PyExc_Init
  00a35	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00a3c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00a43	4c 8b cb	 mov	 r9, rbx
  00a46	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00a4c	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00a54	e8 00 00 00 00	 call	 _PyParallel_Guard
  00a59	85 c0		 test	 eax, eax
  00a5b	75 06		 jne	 SHORT $LN377@PyExc_Init
  00a5d	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  00a61	74 04		 je	 SHORT $LN378@PyExc_Init
$LN377@PyExc_Init:
  00a63	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN378@PyExc_Init:

; 2483 :     PRE_INIT(UnicodeTranslateError)

  00a67	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_UnicodeTranslateError+256, 4096 ; 00001000H
  00a71	75 5e		 jne	 SHORT $LN382@PyExc_Init
  00a73	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_UnicodeTranslateError
  00a7a	e8 00 00 00 00	 call	 PyType_Ready
  00a7f	85 c0		 test	 eax, eax
  00a81	79 0c		 jns	 SHORT $LN227@PyExc_Init
  00a83	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00a8a	e8 00 00 00 00	 call	 Py_FatalError
$LN227@PyExc_Init:
  00a8f	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_UnicodeTranslateError
  00a96	e8 00 00 00 00	 call	 _Py_PXCTX
  00a9b	85 c0		 test	 eax, eax
  00a9d	75 32		 jne	 SHORT $LN382@PyExc_Init
  00a9f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00aa6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00aad	4c 8b cb	 mov	 r9, rbx
  00ab0	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00ab6	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00abe	e8 00 00 00 00	 call	 _PyParallel_Guard
  00ac3	85 c0		 test	 eax, eax
  00ac5	75 06		 jne	 SHORT $LN381@PyExc_Init
  00ac7	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  00acb	74 04		 je	 SHORT $LN382@PyExc_Init
$LN381@PyExc_Init:
  00acd	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN382@PyExc_Init:

; 2484 :     PRE_INIT(AssertionError)

  00ad1	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_AssertionError+256, 4096 ; 00001000H
  00adb	75 5e		 jne	 SHORT $LN386@PyExc_Init
  00add	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_AssertionError
  00ae4	e8 00 00 00 00	 call	 PyType_Ready
  00ae9	85 c0		 test	 eax, eax
  00aeb	79 0c		 jns	 SHORT $LN225@PyExc_Init
  00aed	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00af4	e8 00 00 00 00	 call	 Py_FatalError
$LN225@PyExc_Init:
  00af9	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_AssertionError
  00b00	e8 00 00 00 00	 call	 _Py_PXCTX
  00b05	85 c0		 test	 eax, eax
  00b07	75 32		 jne	 SHORT $LN386@PyExc_Init
  00b09	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00b10	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00b17	4c 8b cb	 mov	 r9, rbx
  00b1a	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00b20	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00b28	e8 00 00 00 00	 call	 _PyParallel_Guard
  00b2d	85 c0		 test	 eax, eax
  00b2f	75 06		 jne	 SHORT $LN385@PyExc_Init
  00b31	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  00b35	74 04		 je	 SHORT $LN386@PyExc_Init
$LN385@PyExc_Init:
  00b37	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN386@PyExc_Init:

; 2485 :     PRE_INIT(ArithmeticError)

  00b3b	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_ArithmeticError+256, 4096 ; 00001000H
  00b45	75 5e		 jne	 SHORT $LN390@PyExc_Init
  00b47	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ArithmeticError
  00b4e	e8 00 00 00 00	 call	 PyType_Ready
  00b53	85 c0		 test	 eax, eax
  00b55	79 0c		 jns	 SHORT $LN223@PyExc_Init
  00b57	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00b5e	e8 00 00 00 00	 call	 Py_FatalError
$LN223@PyExc_Init:
  00b63	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_ArithmeticError
  00b6a	e8 00 00 00 00	 call	 _Py_PXCTX
  00b6f	85 c0		 test	 eax, eax
  00b71	75 32		 jne	 SHORT $LN390@PyExc_Init
  00b73	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00b7a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00b81	4c 8b cb	 mov	 r9, rbx
  00b84	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00b8a	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00b92	e8 00 00 00 00	 call	 _PyParallel_Guard
  00b97	85 c0		 test	 eax, eax
  00b99	75 06		 jne	 SHORT $LN389@PyExc_Init
  00b9b	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  00b9f	74 04		 je	 SHORT $LN390@PyExc_Init
$LN389@PyExc_Init:
  00ba1	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN390@PyExc_Init:

; 2486 :     PRE_INIT(FloatingPointError)

  00ba5	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_FloatingPointError+256, 4096 ; 00001000H
  00baf	75 5e		 jne	 SHORT $LN394@PyExc_Init
  00bb1	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_FloatingPointError
  00bb8	e8 00 00 00 00	 call	 PyType_Ready
  00bbd	85 c0		 test	 eax, eax
  00bbf	79 0c		 jns	 SHORT $LN221@PyExc_Init
  00bc1	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00bc8	e8 00 00 00 00	 call	 Py_FatalError
$LN221@PyExc_Init:
  00bcd	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_FloatingPointError
  00bd4	e8 00 00 00 00	 call	 _Py_PXCTX
  00bd9	85 c0		 test	 eax, eax
  00bdb	75 32		 jne	 SHORT $LN394@PyExc_Init
  00bdd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00be4	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00beb	4c 8b cb	 mov	 r9, rbx
  00bee	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00bf4	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00bfc	e8 00 00 00 00	 call	 _PyParallel_Guard
  00c01	85 c0		 test	 eax, eax
  00c03	75 06		 jne	 SHORT $LN393@PyExc_Init
  00c05	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  00c09	74 04		 je	 SHORT $LN394@PyExc_Init
$LN393@PyExc_Init:
  00c0b	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN394@PyExc_Init:

; 2487 :     PRE_INIT(OverflowError)

  00c0f	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_OverflowError+256, 4096 ; 00001000H
  00c19	75 5e		 jne	 SHORT $LN398@PyExc_Init
  00c1b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_OverflowError
  00c22	e8 00 00 00 00	 call	 PyType_Ready
  00c27	85 c0		 test	 eax, eax
  00c29	79 0c		 jns	 SHORT $LN219@PyExc_Init
  00c2b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00c32	e8 00 00 00 00	 call	 Py_FatalError
$LN219@PyExc_Init:
  00c37	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_OverflowError
  00c3e	e8 00 00 00 00	 call	 _Py_PXCTX
  00c43	85 c0		 test	 eax, eax
  00c45	75 32		 jne	 SHORT $LN398@PyExc_Init
  00c47	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00c4e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00c55	4c 8b cb	 mov	 r9, rbx
  00c58	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00c5e	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00c66	e8 00 00 00 00	 call	 _PyParallel_Guard
  00c6b	85 c0		 test	 eax, eax
  00c6d	75 06		 jne	 SHORT $LN397@PyExc_Init
  00c6f	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  00c73	74 04		 je	 SHORT $LN398@PyExc_Init
$LN397@PyExc_Init:
  00c75	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN398@PyExc_Init:

; 2488 :     PRE_INIT(ZeroDivisionError)

  00c79	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_ZeroDivisionError+256, 4096 ; 00001000H
  00c83	75 5e		 jne	 SHORT $LN402@PyExc_Init
  00c85	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ZeroDivisionError
  00c8c	e8 00 00 00 00	 call	 PyType_Ready
  00c91	85 c0		 test	 eax, eax
  00c93	79 0c		 jns	 SHORT $LN217@PyExc_Init
  00c95	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00c9c	e8 00 00 00 00	 call	 Py_FatalError
$LN217@PyExc_Init:
  00ca1	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_ZeroDivisionError
  00ca8	e8 00 00 00 00	 call	 _Py_PXCTX
  00cad	85 c0		 test	 eax, eax
  00caf	75 32		 jne	 SHORT $LN402@PyExc_Init
  00cb1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00cb8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00cbf	4c 8b cb	 mov	 r9, rbx
  00cc2	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00cc8	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00cd0	e8 00 00 00 00	 call	 _PyParallel_Guard
  00cd5	85 c0		 test	 eax, eax
  00cd7	75 06		 jne	 SHORT $LN401@PyExc_Init
  00cd9	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  00cdd	74 04		 je	 SHORT $LN402@PyExc_Init
$LN401@PyExc_Init:
  00cdf	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN402@PyExc_Init:

; 2489 :     PRE_INIT(SystemError)

  00ce3	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_SystemError+256, 4096 ; 00001000H
  00ced	75 5e		 jne	 SHORT $LN406@PyExc_Init
  00cef	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_SystemError
  00cf6	e8 00 00 00 00	 call	 PyType_Ready
  00cfb	85 c0		 test	 eax, eax
  00cfd	79 0c		 jns	 SHORT $LN215@PyExc_Init
  00cff	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00d06	e8 00 00 00 00	 call	 Py_FatalError
$LN215@PyExc_Init:
  00d0b	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_SystemError
  00d12	e8 00 00 00 00	 call	 _Py_PXCTX
  00d17	85 c0		 test	 eax, eax
  00d19	75 32		 jne	 SHORT $LN406@PyExc_Init
  00d1b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00d22	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00d29	4c 8b cb	 mov	 r9, rbx
  00d2c	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00d32	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00d3a	e8 00 00 00 00	 call	 _PyParallel_Guard
  00d3f	85 c0		 test	 eax, eax
  00d41	75 06		 jne	 SHORT $LN405@PyExc_Init
  00d43	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  00d47	74 04		 je	 SHORT $LN406@PyExc_Init
$LN405@PyExc_Init:
  00d49	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN406@PyExc_Init:

; 2490 :     PRE_INIT(ReferenceError)

  00d4d	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_ReferenceError+256, 4096 ; 00001000H
  00d57	75 5e		 jne	 SHORT $LN410@PyExc_Init
  00d59	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ReferenceError
  00d60	e8 00 00 00 00	 call	 PyType_Ready
  00d65	85 c0		 test	 eax, eax
  00d67	79 0c		 jns	 SHORT $LN213@PyExc_Init
  00d69	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00d70	e8 00 00 00 00	 call	 Py_FatalError
$LN213@PyExc_Init:
  00d75	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_ReferenceError
  00d7c	e8 00 00 00 00	 call	 _Py_PXCTX
  00d81	85 c0		 test	 eax, eax
  00d83	75 32		 jne	 SHORT $LN410@PyExc_Init
  00d85	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00d8c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00d93	4c 8b cb	 mov	 r9, rbx
  00d96	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00d9c	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00da4	e8 00 00 00 00	 call	 _PyParallel_Guard
  00da9	85 c0		 test	 eax, eax
  00dab	75 06		 jne	 SHORT $LN409@PyExc_Init
  00dad	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  00db1	74 04		 je	 SHORT $LN410@PyExc_Init
$LN409@PyExc_Init:
  00db3	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN410@PyExc_Init:

; 2491 :     PRE_INIT(BufferError)

  00db7	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_BufferError+256, 4096 ; 00001000H
  00dc1	75 5e		 jne	 SHORT $LN614@PyExc_Init
  00dc3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_BufferError
  00dca	e8 00 00 00 00	 call	 PyType_Ready
  00dcf	85 c0		 test	 eax, eax
  00dd1	79 0c		 jns	 SHORT $LN211@PyExc_Init
  00dd3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00dda	e8 00 00 00 00	 call	 Py_FatalError
$LN211@PyExc_Init:
  00ddf	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_BufferError
  00de6	e8 00 00 00 00	 call	 _Py_PXCTX
  00deb	85 c0		 test	 eax, eax
  00ded	75 32		 jne	 SHORT $LN614@PyExc_Init
  00def	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00df6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00dfd	4c 8b cb	 mov	 r9, rbx
  00e00	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00e06	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00e0e	e8 00 00 00 00	 call	 _PyParallel_Guard
  00e13	85 c0		 test	 eax, eax
  00e15	75 06		 jne	 SHORT $LN413@PyExc_Init
  00e17	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  00e1b	74 04		 je	 SHORT $LN614@PyExc_Init
$LN413@PyExc_Init:
  00e1d	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN614@PyExc_Init:

; 2492 :     PRE_INIT(MemoryError)

  00e21	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_MemoryError+256, 4096 ; 00001000H
  00e2b	75 5e		 jne	 SHORT $LN615@PyExc_Init
  00e2d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_MemoryError
  00e34	e8 00 00 00 00	 call	 PyType_Ready
  00e39	85 c0		 test	 eax, eax
  00e3b	79 0c		 jns	 SHORT $LN209@PyExc_Init
  00e3d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00e44	e8 00 00 00 00	 call	 Py_FatalError
$LN209@PyExc_Init:
  00e49	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_MemoryError
  00e50	e8 00 00 00 00	 call	 _Py_PXCTX
  00e55	85 c0		 test	 eax, eax
  00e57	75 32		 jne	 SHORT $LN615@PyExc_Init
  00e59	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00e60	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00e67	4c 8b cb	 mov	 r9, rbx
  00e6a	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00e70	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00e78	e8 00 00 00 00	 call	 _PyParallel_Guard
  00e7d	85 c0		 test	 eax, eax
  00e7f	75 06		 jne	 SHORT $LN417@PyExc_Init
  00e81	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  00e85	74 04		 je	 SHORT $LN615@PyExc_Init
$LN417@PyExc_Init:
  00e87	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN615@PyExc_Init:

; 2493 :     PRE_INIT(BufferError)

  00e8b	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_BufferError+256, 4096 ; 00001000H
  00e95	75 5e		 jne	 SHORT $LN422@PyExc_Init
  00e97	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_BufferError
  00e9e	e8 00 00 00 00	 call	 PyType_Ready
  00ea3	85 c0		 test	 eax, eax
  00ea5	79 0c		 jns	 SHORT $LN207@PyExc_Init
  00ea7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00eae	e8 00 00 00 00	 call	 Py_FatalError
$LN207@PyExc_Init:
  00eb3	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_BufferError
  00eba	e8 00 00 00 00	 call	 _Py_PXCTX
  00ebf	85 c0		 test	 eax, eax
  00ec1	75 32		 jne	 SHORT $LN422@PyExc_Init
  00ec3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00eca	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00ed1	4c 8b cb	 mov	 r9, rbx
  00ed4	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00eda	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00ee2	e8 00 00 00 00	 call	 _PyParallel_Guard
  00ee7	85 c0		 test	 eax, eax
  00ee9	75 06		 jne	 SHORT $LN421@PyExc_Init
  00eeb	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  00eef	74 04		 je	 SHORT $LN422@PyExc_Init
$LN421@PyExc_Init:
  00ef1	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN422@PyExc_Init:

; 2494 : #ifdef WITH_PARALLEL
; 2495 :     PRE_INIT(ParallelError)

  00ef5	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_ParallelError+256, 4096 ; 00001000H
  00eff	75 5e		 jne	 SHORT $LN426@PyExc_Init
  00f01	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ParallelError
  00f08	e8 00 00 00 00	 call	 PyType_Ready
  00f0d	85 c0		 test	 eax, eax
  00f0f	79 0c		 jns	 SHORT $LN205@PyExc_Init
  00f11	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00f18	e8 00 00 00 00	 call	 Py_FatalError
$LN205@PyExc_Init:
  00f1d	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_ParallelError
  00f24	e8 00 00 00 00	 call	 _Py_PXCTX
  00f29	85 c0		 test	 eax, eax
  00f2b	75 32		 jne	 SHORT $LN426@PyExc_Init
  00f2d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00f34	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00f3b	4c 8b cb	 mov	 r9, rbx
  00f3e	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00f44	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00f4c	e8 00 00 00 00	 call	 _PyParallel_Guard
  00f51	85 c0		 test	 eax, eax
  00f53	75 06		 jne	 SHORT $LN425@PyExc_Init
  00f55	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  00f59	74 04		 je	 SHORT $LN426@PyExc_Init
$LN425@PyExc_Init:
  00f5b	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN426@PyExc_Init:

; 2496 :     PRE_INIT(ParallelThreadInitializationError)

  00f5f	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_ParallelThreadInitializationError+256, 4096 ; 00001000H
  00f69	75 5e		 jne	 SHORT $LN430@PyExc_Init
  00f6b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ParallelThreadInitializationError
  00f72	e8 00 00 00 00	 call	 PyType_Ready
  00f77	85 c0		 test	 eax, eax
  00f79	79 0c		 jns	 SHORT $LN203@PyExc_Init
  00f7b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00f82	e8 00 00 00 00	 call	 Py_FatalError
$LN203@PyExc_Init:
  00f87	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_ParallelThreadInitializationError
  00f8e	e8 00 00 00 00	 call	 _Py_PXCTX
  00f93	85 c0		 test	 eax, eax
  00f95	75 32		 jne	 SHORT $LN430@PyExc_Init
  00f97	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00f9e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00fa5	4c 8b cb	 mov	 r9, rbx
  00fa8	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00fae	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00fb6	e8 00 00 00 00	 call	 _PyParallel_Guard
  00fbb	85 c0		 test	 eax, eax
  00fbd	75 06		 jne	 SHORT $LN429@PyExc_Init
  00fbf	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  00fc3	74 04		 je	 SHORT $LN430@PyExc_Init
$LN429@PyExc_Init:
  00fc5	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN430@PyExc_Init:

; 2497 :     PRE_INIT(ParallelContextInitializationError)

  00fc9	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_ParallelContextInitializationError+256, 4096 ; 00001000H
  00fd3	75 5e		 jne	 SHORT $LN434@PyExc_Init
  00fd5	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ParallelContextInitializationError
  00fdc	e8 00 00 00 00	 call	 PyType_Ready
  00fe1	85 c0		 test	 eax, eax
  00fe3	79 0c		 jns	 SHORT $LN201@PyExc_Init
  00fe5	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00fec	e8 00 00 00 00	 call	 Py_FatalError
$LN201@PyExc_Init:
  00ff1	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_ParallelContextInitializationError
  00ff8	e8 00 00 00 00	 call	 _Py_PXCTX
  00ffd	85 c0		 test	 eax, eax
  00fff	75 32		 jne	 SHORT $LN434@PyExc_Init
  01001	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  01008	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  0100f	4c 8b cb	 mov	 r9, rbx
  01012	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  01018	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  01020	e8 00 00 00 00	 call	 _PyParallel_Guard
  01025	85 c0		 test	 eax, eax
  01027	75 06		 jne	 SHORT $LN433@PyExc_Init
  01029	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  0102d	74 04		 je	 SHORT $LN434@PyExc_Init
$LN433@PyExc_Init:
  0102f	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN434@PyExc_Init:

; 2498 :     PRE_INIT(ParallelContextError)

  01033	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_ParallelContextError+256, 4096 ; 00001000H
  0103d	75 5e		 jne	 SHORT $LN438@PyExc_Init
  0103f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ParallelContextError
  01046	e8 00 00 00 00	 call	 PyType_Ready
  0104b	85 c0		 test	 eax, eax
  0104d	79 0c		 jns	 SHORT $LN199@PyExc_Init
  0104f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  01056	e8 00 00 00 00	 call	 Py_FatalError
$LN199@PyExc_Init:
  0105b	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_ParallelContextError
  01062	e8 00 00 00 00	 call	 _Py_PXCTX
  01067	85 c0		 test	 eax, eax
  01069	75 32		 jne	 SHORT $LN438@PyExc_Init
  0106b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  01072	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  01079	4c 8b cb	 mov	 r9, rbx
  0107c	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  01082	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  0108a	e8 00 00 00 00	 call	 _PyParallel_Guard
  0108f	85 c0		 test	 eax, eax
  01091	75 06		 jne	 SHORT $LN437@PyExc_Init
  01093	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  01097	74 04		 je	 SHORT $LN438@PyExc_Init
$LN437@PyExc_Init:
  01099	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN438@PyExc_Init:

; 2499 :     PRE_INIT(ParallelImportError)

  0109d	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_ParallelImportError+256, 4096 ; 00001000H
  010a7	75 5e		 jne	 SHORT $LN442@PyExc_Init
  010a9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ParallelImportError
  010b0	e8 00 00 00 00	 call	 PyType_Ready
  010b5	85 c0		 test	 eax, eax
  010b7	79 0c		 jns	 SHORT $LN197@PyExc_Init
  010b9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  010c0	e8 00 00 00 00	 call	 Py_FatalError
$LN197@PyExc_Init:
  010c5	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_ParallelImportError
  010cc	e8 00 00 00 00	 call	 _Py_PXCTX
  010d1	85 c0		 test	 eax, eax
  010d3	75 32		 jne	 SHORT $LN442@PyExc_Init
  010d5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  010dc	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  010e3	4c 8b cb	 mov	 r9, rbx
  010e6	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  010ec	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  010f4	e8 00 00 00 00	 call	 _PyParallel_Guard
  010f9	85 c0		 test	 eax, eax
  010fb	75 06		 jne	 SHORT $LN441@PyExc_Init
  010fd	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  01101	74 04		 je	 SHORT $LN442@PyExc_Init
$LN441@PyExc_Init:
  01103	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN442@PyExc_Init:

; 2500 :     PRE_INIT(ParallelGlobalVariableAccessError)

  01107	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_ParallelGlobalVariableAccessError+256, 4096 ; 00001000H
  01111	75 5e		 jne	 SHORT $LN446@PyExc_Init
  01113	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ParallelGlobalVariableAccessError
  0111a	e8 00 00 00 00	 call	 PyType_Ready
  0111f	85 c0		 test	 eax, eax
  01121	79 0c		 jns	 SHORT $LN195@PyExc_Init
  01123	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  0112a	e8 00 00 00 00	 call	 Py_FatalError
$LN195@PyExc_Init:
  0112f	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_ParallelGlobalVariableAccessError
  01136	e8 00 00 00 00	 call	 _Py_PXCTX
  0113b	85 c0		 test	 eax, eax
  0113d	75 32		 jne	 SHORT $LN446@PyExc_Init
  0113f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  01146	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  0114d	4c 8b cb	 mov	 r9, rbx
  01150	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  01156	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  0115e	e8 00 00 00 00	 call	 _PyParallel_Guard
  01163	85 c0		 test	 eax, eax
  01165	75 06		 jne	 SHORT $LN445@PyExc_Init
  01167	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  0116b	74 04		 je	 SHORT $LN446@PyExc_Init
$LN445@PyExc_Init:
  0116d	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN446@PyExc_Init:

; 2501 :     PRE_INIT(ParallelNonlocalVariableAccessError)

  01171	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_ParallelNonlocalVariableAccessError+256, 4096 ; 00001000H
  0117b	75 5e		 jne	 SHORT $LN450@PyExc_Init
  0117d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ParallelNonlocalVariableAccessError
  01184	e8 00 00 00 00	 call	 PyType_Ready
  01189	85 c0		 test	 eax, eax
  0118b	79 0c		 jns	 SHORT $LN193@PyExc_Init
  0118d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  01194	e8 00 00 00 00	 call	 Py_FatalError
$LN193@PyExc_Init:
  01199	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_ParallelNonlocalVariableAccessError
  011a0	e8 00 00 00 00	 call	 _Py_PXCTX
  011a5	85 c0		 test	 eax, eax
  011a7	75 32		 jne	 SHORT $LN450@PyExc_Init
  011a9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  011b0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  011b7	4c 8b cb	 mov	 r9, rbx
  011ba	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  011c0	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  011c8	e8 00 00 00 00	 call	 _PyParallel_Guard
  011cd	85 c0		 test	 eax, eax
  011cf	75 06		 jne	 SHORT $LN449@PyExc_Init
  011d1	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  011d5	74 04		 je	 SHORT $LN450@PyExc_Init
$LN449@PyExc_Init:
  011d7	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN450@PyExc_Init:

; 2502 :     PRE_INIT(AsyncError)

  011db	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_AsyncError+256, 4096 ; 00001000H
  011e5	75 5e		 jne	 SHORT $LN454@PyExc_Init
  011e7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_AsyncError
  011ee	e8 00 00 00 00	 call	 PyType_Ready
  011f3	85 c0		 test	 eax, eax
  011f5	79 0c		 jns	 SHORT $LN191@PyExc_Init
  011f7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  011fe	e8 00 00 00 00	 call	 Py_FatalError
$LN191@PyExc_Init:
  01203	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_AsyncError
  0120a	e8 00 00 00 00	 call	 _Py_PXCTX
  0120f	85 c0		 test	 eax, eax
  01211	75 32		 jne	 SHORT $LN454@PyExc_Init
  01213	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0121a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  01221	4c 8b cb	 mov	 r9, rbx
  01224	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  0122a	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  01232	e8 00 00 00 00	 call	 _PyParallel_Guard
  01237	85 c0		 test	 eax, eax
  01239	75 06		 jne	 SHORT $LN453@PyExc_Init
  0123b	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  0123f	74 04		 je	 SHORT $LN454@PyExc_Init
$LN453@PyExc_Init:
  01241	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN454@PyExc_Init:

; 2503 :     PRE_INIT(AsyncRunCalledWithoutEventsError)

  01245	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_AsyncRunCalledWithoutEventsError+256, 4096 ; 00001000H
  0124f	75 5e		 jne	 SHORT $LN458@PyExc_Init
  01251	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_AsyncRunCalledWithoutEventsError
  01258	e8 00 00 00 00	 call	 PyType_Ready
  0125d	85 c0		 test	 eax, eax
  0125f	79 0c		 jns	 SHORT $LN189@PyExc_Init
  01261	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  01268	e8 00 00 00 00	 call	 Py_FatalError
$LN189@PyExc_Init:
  0126d	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_AsyncRunCalledWithoutEventsError
  01274	e8 00 00 00 00	 call	 _Py_PXCTX
  01279	85 c0		 test	 eax, eax
  0127b	75 32		 jne	 SHORT $LN458@PyExc_Init
  0127d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  01284	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  0128b	4c 8b cb	 mov	 r9, rbx
  0128e	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  01294	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  0129c	e8 00 00 00 00	 call	 _PyParallel_Guard
  012a1	85 c0		 test	 eax, eax
  012a3	75 06		 jne	 SHORT $LN457@PyExc_Init
  012a5	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  012a9	74 04		 je	 SHORT $LN458@PyExc_Init
$LN457@PyExc_Init:
  012ab	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN458@PyExc_Init:

; 2504 :     PRE_INIT(AsyncRunNoActiveEventsError)

  012af	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_AsyncRunNoActiveEventsError+256, 4096 ; 00001000H
  012b9	75 5e		 jne	 SHORT $LN462@PyExc_Init
  012bb	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_AsyncRunNoActiveEventsError
  012c2	e8 00 00 00 00	 call	 PyType_Ready
  012c7	85 c0		 test	 eax, eax
  012c9	79 0c		 jns	 SHORT $LN187@PyExc_Init
  012cb	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  012d2	e8 00 00 00 00	 call	 Py_FatalError
$LN187@PyExc_Init:
  012d7	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_AsyncRunNoActiveEventsError
  012de	e8 00 00 00 00	 call	 _Py_PXCTX
  012e3	85 c0		 test	 eax, eax
  012e5	75 32		 jne	 SHORT $LN462@PyExc_Init
  012e7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  012ee	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  012f5	4c 8b cb	 mov	 r9, rbx
  012f8	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  012fe	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  01306	e8 00 00 00 00	 call	 _PyParallel_Guard
  0130b	85 c0		 test	 eax, eax
  0130d	75 06		 jne	 SHORT $LN461@PyExc_Init
  0130f	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  01313	74 04		 je	 SHORT $LN462@PyExc_Init
$LN461@PyExc_Init:
  01315	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN462@PyExc_Init:

; 2505 : #endif
; 2506 :     PRE_INIT(Warning)

  01319	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_Warning+256, 4096 ; 00001000H
  01323	75 5e		 jne	 SHORT $LN466@PyExc_Init
  01325	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_Warning
  0132c	e8 00 00 00 00	 call	 PyType_Ready
  01331	85 c0		 test	 eax, eax
  01333	79 0c		 jns	 SHORT $LN185@PyExc_Init
  01335	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  0133c	e8 00 00 00 00	 call	 Py_FatalError
$LN185@PyExc_Init:
  01341	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_Warning
  01348	e8 00 00 00 00	 call	 _Py_PXCTX
  0134d	85 c0		 test	 eax, eax
  0134f	75 32		 jne	 SHORT $LN466@PyExc_Init
  01351	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  01358	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  0135f	4c 8b cb	 mov	 r9, rbx
  01362	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  01368	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  01370	e8 00 00 00 00	 call	 _PyParallel_Guard
  01375	85 c0		 test	 eax, eax
  01377	75 06		 jne	 SHORT $LN465@PyExc_Init
  01379	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  0137d	74 04		 je	 SHORT $LN466@PyExc_Init
$LN465@PyExc_Init:
  0137f	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN466@PyExc_Init:

; 2507 :     PRE_INIT(UserWarning)

  01383	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_UserWarning+256, 4096 ; 00001000H
  0138d	75 5e		 jne	 SHORT $LN470@PyExc_Init
  0138f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_UserWarning
  01396	e8 00 00 00 00	 call	 PyType_Ready
  0139b	85 c0		 test	 eax, eax
  0139d	79 0c		 jns	 SHORT $LN183@PyExc_Init
  0139f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  013a6	e8 00 00 00 00	 call	 Py_FatalError
$LN183@PyExc_Init:
  013ab	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_UserWarning
  013b2	e8 00 00 00 00	 call	 _Py_PXCTX
  013b7	85 c0		 test	 eax, eax
  013b9	75 32		 jne	 SHORT $LN470@PyExc_Init
  013bb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  013c2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  013c9	4c 8b cb	 mov	 r9, rbx
  013cc	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  013d2	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  013da	e8 00 00 00 00	 call	 _PyParallel_Guard
  013df	85 c0		 test	 eax, eax
  013e1	75 06		 jne	 SHORT $LN469@PyExc_Init
  013e3	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  013e7	74 04		 je	 SHORT $LN470@PyExc_Init
$LN469@PyExc_Init:
  013e9	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN470@PyExc_Init:

; 2508 :     PRE_INIT(DeprecationWarning)

  013ed	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_DeprecationWarning+256, 4096 ; 00001000H
  013f7	75 5e		 jne	 SHORT $LN474@PyExc_Init
  013f9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_DeprecationWarning
  01400	e8 00 00 00 00	 call	 PyType_Ready
  01405	85 c0		 test	 eax, eax
  01407	79 0c		 jns	 SHORT $LN181@PyExc_Init
  01409	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  01410	e8 00 00 00 00	 call	 Py_FatalError
$LN181@PyExc_Init:
  01415	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_DeprecationWarning
  0141c	e8 00 00 00 00	 call	 _Py_PXCTX
  01421	85 c0		 test	 eax, eax
  01423	75 32		 jne	 SHORT $LN474@PyExc_Init
  01425	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0142c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  01433	4c 8b cb	 mov	 r9, rbx
  01436	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  0143c	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  01444	e8 00 00 00 00	 call	 _PyParallel_Guard
  01449	85 c0		 test	 eax, eax
  0144b	75 06		 jne	 SHORT $LN473@PyExc_Init
  0144d	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  01451	74 04		 je	 SHORT $LN474@PyExc_Init
$LN473@PyExc_Init:
  01453	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN474@PyExc_Init:

; 2509 :     PRE_INIT(PendingDeprecationWarning)

  01457	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_PendingDeprecationWarning+256, 4096 ; 00001000H
  01461	75 5e		 jne	 SHORT $LN478@PyExc_Init
  01463	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_PendingDeprecationWarning
  0146a	e8 00 00 00 00	 call	 PyType_Ready
  0146f	85 c0		 test	 eax, eax
  01471	79 0c		 jns	 SHORT $LN179@PyExc_Init
  01473	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  0147a	e8 00 00 00 00	 call	 Py_FatalError
$LN179@PyExc_Init:
  0147f	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_PendingDeprecationWarning
  01486	e8 00 00 00 00	 call	 _Py_PXCTX
  0148b	85 c0		 test	 eax, eax
  0148d	75 32		 jne	 SHORT $LN478@PyExc_Init
  0148f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  01496	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  0149d	4c 8b cb	 mov	 r9, rbx
  014a0	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  014a6	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  014ae	e8 00 00 00 00	 call	 _PyParallel_Guard
  014b3	85 c0		 test	 eax, eax
  014b5	75 06		 jne	 SHORT $LN477@PyExc_Init
  014b7	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  014bb	74 04		 je	 SHORT $LN478@PyExc_Init
$LN477@PyExc_Init:
  014bd	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN478@PyExc_Init:

; 2510 :     PRE_INIT(SyntaxWarning)

  014c1	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_SyntaxWarning+256, 4096 ; 00001000H
  014cb	75 5e		 jne	 SHORT $LN482@PyExc_Init
  014cd	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_SyntaxWarning
  014d4	e8 00 00 00 00	 call	 PyType_Ready
  014d9	85 c0		 test	 eax, eax
  014db	79 0c		 jns	 SHORT $LN177@PyExc_Init
  014dd	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  014e4	e8 00 00 00 00	 call	 Py_FatalError
$LN177@PyExc_Init:
  014e9	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_SyntaxWarning
  014f0	e8 00 00 00 00	 call	 _Py_PXCTX
  014f5	85 c0		 test	 eax, eax
  014f7	75 32		 jne	 SHORT $LN482@PyExc_Init
  014f9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  01500	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  01507	4c 8b cb	 mov	 r9, rbx
  0150a	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  01510	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  01518	e8 00 00 00 00	 call	 _PyParallel_Guard
  0151d	85 c0		 test	 eax, eax
  0151f	75 06		 jne	 SHORT $LN481@PyExc_Init
  01521	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  01525	74 04		 je	 SHORT $LN482@PyExc_Init
$LN481@PyExc_Init:
  01527	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN482@PyExc_Init:

; 2511 :     PRE_INIT(RuntimeWarning)

  0152b	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_RuntimeWarning+256, 4096 ; 00001000H
  01535	75 5e		 jne	 SHORT $LN486@PyExc_Init
  01537	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_RuntimeWarning
  0153e	e8 00 00 00 00	 call	 PyType_Ready
  01543	85 c0		 test	 eax, eax
  01545	79 0c		 jns	 SHORT $LN175@PyExc_Init
  01547	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  0154e	e8 00 00 00 00	 call	 Py_FatalError
$LN175@PyExc_Init:
  01553	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_RuntimeWarning
  0155a	e8 00 00 00 00	 call	 _Py_PXCTX
  0155f	85 c0		 test	 eax, eax
  01561	75 32		 jne	 SHORT $LN486@PyExc_Init
  01563	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0156a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  01571	4c 8b cb	 mov	 r9, rbx
  01574	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  0157a	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  01582	e8 00 00 00 00	 call	 _PyParallel_Guard
  01587	85 c0		 test	 eax, eax
  01589	75 06		 jne	 SHORT $LN485@PyExc_Init
  0158b	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  0158f	74 04		 je	 SHORT $LN486@PyExc_Init
$LN485@PyExc_Init:
  01591	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN486@PyExc_Init:

; 2512 :     PRE_INIT(FutureWarning)

  01595	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_FutureWarning+256, 4096 ; 00001000H
  0159f	75 5e		 jne	 SHORT $LN490@PyExc_Init
  015a1	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_FutureWarning
  015a8	e8 00 00 00 00	 call	 PyType_Ready
  015ad	85 c0		 test	 eax, eax
  015af	79 0c		 jns	 SHORT $LN173@PyExc_Init
  015b1	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  015b8	e8 00 00 00 00	 call	 Py_FatalError
$LN173@PyExc_Init:
  015bd	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_FutureWarning
  015c4	e8 00 00 00 00	 call	 _Py_PXCTX
  015c9	85 c0		 test	 eax, eax
  015cb	75 32		 jne	 SHORT $LN490@PyExc_Init
  015cd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  015d4	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  015db	4c 8b cb	 mov	 r9, rbx
  015de	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  015e4	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  015ec	e8 00 00 00 00	 call	 _PyParallel_Guard
  015f1	85 c0		 test	 eax, eax
  015f3	75 06		 jne	 SHORT $LN489@PyExc_Init
  015f5	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  015f9	74 04		 je	 SHORT $LN490@PyExc_Init
$LN489@PyExc_Init:
  015fb	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN490@PyExc_Init:

; 2513 :     PRE_INIT(ImportWarning)

  015ff	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_ImportWarning+256, 4096 ; 00001000H
  01609	75 5e		 jne	 SHORT $LN494@PyExc_Init
  0160b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ImportWarning
  01612	e8 00 00 00 00	 call	 PyType_Ready
  01617	85 c0		 test	 eax, eax
  01619	79 0c		 jns	 SHORT $LN171@PyExc_Init
  0161b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  01622	e8 00 00 00 00	 call	 Py_FatalError
$LN171@PyExc_Init:
  01627	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_ImportWarning
  0162e	e8 00 00 00 00	 call	 _Py_PXCTX
  01633	85 c0		 test	 eax, eax
  01635	75 32		 jne	 SHORT $LN494@PyExc_Init
  01637	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0163e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  01645	4c 8b cb	 mov	 r9, rbx
  01648	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  0164e	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  01656	e8 00 00 00 00	 call	 _PyParallel_Guard
  0165b	85 c0		 test	 eax, eax
  0165d	75 06		 jne	 SHORT $LN493@PyExc_Init
  0165f	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  01663	74 04		 je	 SHORT $LN494@PyExc_Init
$LN493@PyExc_Init:
  01665	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN494@PyExc_Init:

; 2514 :     PRE_INIT(UnicodeWarning)

  01669	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_UnicodeWarning+256, 4096 ; 00001000H
  01673	75 5e		 jne	 SHORT $LN498@PyExc_Init
  01675	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_UnicodeWarning
  0167c	e8 00 00 00 00	 call	 PyType_Ready
  01681	85 c0		 test	 eax, eax
  01683	79 0c		 jns	 SHORT $LN169@PyExc_Init
  01685	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  0168c	e8 00 00 00 00	 call	 Py_FatalError
$LN169@PyExc_Init:
  01691	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_UnicodeWarning
  01698	e8 00 00 00 00	 call	 _Py_PXCTX
  0169d	85 c0		 test	 eax, eax
  0169f	75 32		 jne	 SHORT $LN498@PyExc_Init
  016a1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  016a8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  016af	4c 8b cb	 mov	 r9, rbx
  016b2	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  016b8	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  016c0	e8 00 00 00 00	 call	 _PyParallel_Guard
  016c5	85 c0		 test	 eax, eax
  016c7	75 06		 jne	 SHORT $LN497@PyExc_Init
  016c9	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  016cd	74 04		 je	 SHORT $LN498@PyExc_Init
$LN497@PyExc_Init:
  016cf	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN498@PyExc_Init:

; 2515 :     PRE_INIT(BytesWarning)

  016d3	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_BytesWarning+256, 4096 ; 00001000H
  016dd	75 5e		 jne	 SHORT $LN502@PyExc_Init
  016df	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_BytesWarning
  016e6	e8 00 00 00 00	 call	 PyType_Ready
  016eb	85 c0		 test	 eax, eax
  016ed	79 0c		 jns	 SHORT $LN167@PyExc_Init
  016ef	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  016f6	e8 00 00 00 00	 call	 Py_FatalError
$LN167@PyExc_Init:
  016fb	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_BytesWarning
  01702	e8 00 00 00 00	 call	 _Py_PXCTX
  01707	85 c0		 test	 eax, eax
  01709	75 32		 jne	 SHORT $LN502@PyExc_Init
  0170b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  01712	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  01719	4c 8b cb	 mov	 r9, rbx
  0171c	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  01722	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  0172a	e8 00 00 00 00	 call	 _PyParallel_Guard
  0172f	85 c0		 test	 eax, eax
  01731	75 06		 jne	 SHORT $LN501@PyExc_Init
  01733	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  01737	74 04		 je	 SHORT $LN502@PyExc_Init
$LN501@PyExc_Init:
  01739	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN502@PyExc_Init:

; 2516 :     PRE_INIT(ResourceWarning)

  0173d	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_ResourceWarning+256, 4096 ; 00001000H
  01747	75 5e		 jne	 SHORT $LN506@PyExc_Init
  01749	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ResourceWarning
  01750	e8 00 00 00 00	 call	 PyType_Ready
  01755	85 c0		 test	 eax, eax
  01757	79 0c		 jns	 SHORT $LN165@PyExc_Init
  01759	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  01760	e8 00 00 00 00	 call	 Py_FatalError
$LN165@PyExc_Init:
  01765	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_ResourceWarning
  0176c	e8 00 00 00 00	 call	 _Py_PXCTX
  01771	85 c0		 test	 eax, eax
  01773	75 32		 jne	 SHORT $LN506@PyExc_Init
  01775	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0177c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  01783	4c 8b cb	 mov	 r9, rbx
  01786	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  0178c	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  01794	e8 00 00 00 00	 call	 _PyParallel_Guard
  01799	85 c0		 test	 eax, eax
  0179b	75 06		 jne	 SHORT $LN505@PyExc_Init
  0179d	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  017a1	74 04		 je	 SHORT $LN506@PyExc_Init
$LN505@PyExc_Init:
  017a3	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN506@PyExc_Init:

; 2517 : 
; 2518 :     /* OSError subclasses */
; 2519 :     PRE_INIT(ConnectionError);

  017a7	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_ConnectionError+256, 4096 ; 00001000H
  017b1	75 5e		 jne	 SHORT $LN510@PyExc_Init
  017b3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ConnectionError
  017ba	e8 00 00 00 00	 call	 PyType_Ready
  017bf	85 c0		 test	 eax, eax
  017c1	79 0c		 jns	 SHORT $LN163@PyExc_Init
  017c3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  017ca	e8 00 00 00 00	 call	 Py_FatalError
$LN163@PyExc_Init:
  017cf	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_ConnectionError
  017d6	e8 00 00 00 00	 call	 _Py_PXCTX
  017db	85 c0		 test	 eax, eax
  017dd	75 32		 jne	 SHORT $LN510@PyExc_Init
  017df	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  017e6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  017ed	4c 8b cb	 mov	 r9, rbx
  017f0	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  017f6	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  017fe	e8 00 00 00 00	 call	 _PyParallel_Guard
  01803	85 c0		 test	 eax, eax
  01805	75 06		 jne	 SHORT $LN509@PyExc_Init
  01807	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  0180b	74 04		 je	 SHORT $LN510@PyExc_Init
$LN509@PyExc_Init:
  0180d	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN510@PyExc_Init:

; 2520 : 
; 2521 :     PRE_INIT(BlockingIOError);

  01811	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_BlockingIOError+256, 4096 ; 00001000H
  0181b	75 5e		 jne	 SHORT $LN514@PyExc_Init
  0181d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_BlockingIOError
  01824	e8 00 00 00 00	 call	 PyType_Ready
  01829	85 c0		 test	 eax, eax
  0182b	79 0c		 jns	 SHORT $LN161@PyExc_Init
  0182d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  01834	e8 00 00 00 00	 call	 Py_FatalError
$LN161@PyExc_Init:
  01839	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_BlockingIOError
  01840	e8 00 00 00 00	 call	 _Py_PXCTX
  01845	85 c0		 test	 eax, eax
  01847	75 32		 jne	 SHORT $LN514@PyExc_Init
  01849	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  01850	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  01857	4c 8b cb	 mov	 r9, rbx
  0185a	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  01860	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  01868	e8 00 00 00 00	 call	 _PyParallel_Guard
  0186d	85 c0		 test	 eax, eax
  0186f	75 06		 jne	 SHORT $LN513@PyExc_Init
  01871	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  01875	74 04		 je	 SHORT $LN514@PyExc_Init
$LN513@PyExc_Init:
  01877	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN514@PyExc_Init:

; 2522 :     PRE_INIT(BrokenPipeError);

  0187b	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_BrokenPipeError+256, 4096 ; 00001000H
  01885	75 5e		 jne	 SHORT $LN518@PyExc_Init
  01887	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_BrokenPipeError
  0188e	e8 00 00 00 00	 call	 PyType_Ready
  01893	85 c0		 test	 eax, eax
  01895	79 0c		 jns	 SHORT $LN159@PyExc_Init
  01897	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  0189e	e8 00 00 00 00	 call	 Py_FatalError
$LN159@PyExc_Init:
  018a3	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_BrokenPipeError
  018aa	e8 00 00 00 00	 call	 _Py_PXCTX
  018af	85 c0		 test	 eax, eax
  018b1	75 32		 jne	 SHORT $LN518@PyExc_Init
  018b3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  018ba	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  018c1	4c 8b cb	 mov	 r9, rbx
  018c4	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  018ca	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  018d2	e8 00 00 00 00	 call	 _PyParallel_Guard
  018d7	85 c0		 test	 eax, eax
  018d9	75 06		 jne	 SHORT $LN517@PyExc_Init
  018db	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  018df	74 04		 je	 SHORT $LN518@PyExc_Init
$LN517@PyExc_Init:
  018e1	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN518@PyExc_Init:

; 2523 :     PRE_INIT(ChildProcessError);

  018e5	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_ChildProcessError+256, 4096 ; 00001000H
  018ef	75 5e		 jne	 SHORT $LN522@PyExc_Init
  018f1	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ChildProcessError
  018f8	e8 00 00 00 00	 call	 PyType_Ready
  018fd	85 c0		 test	 eax, eax
  018ff	79 0c		 jns	 SHORT $LN157@PyExc_Init
  01901	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  01908	e8 00 00 00 00	 call	 Py_FatalError
$LN157@PyExc_Init:
  0190d	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_ChildProcessError
  01914	e8 00 00 00 00	 call	 _Py_PXCTX
  01919	85 c0		 test	 eax, eax
  0191b	75 32		 jne	 SHORT $LN522@PyExc_Init
  0191d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  01924	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  0192b	4c 8b cb	 mov	 r9, rbx
  0192e	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  01934	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  0193c	e8 00 00 00 00	 call	 _PyParallel_Guard
  01941	85 c0		 test	 eax, eax
  01943	75 06		 jne	 SHORT $LN521@PyExc_Init
  01945	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  01949	74 04		 je	 SHORT $LN522@PyExc_Init
$LN521@PyExc_Init:
  0194b	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN522@PyExc_Init:

; 2524 :     PRE_INIT(ConnectionAbortedError);

  0194f	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_ConnectionAbortedError+256, 4096 ; 00001000H
  01959	75 5e		 jne	 SHORT $LN526@PyExc_Init
  0195b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ConnectionAbortedError
  01962	e8 00 00 00 00	 call	 PyType_Ready
  01967	85 c0		 test	 eax, eax
  01969	79 0c		 jns	 SHORT $LN155@PyExc_Init
  0196b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  01972	e8 00 00 00 00	 call	 Py_FatalError
$LN155@PyExc_Init:
  01977	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_ConnectionAbortedError
  0197e	e8 00 00 00 00	 call	 _Py_PXCTX
  01983	85 c0		 test	 eax, eax
  01985	75 32		 jne	 SHORT $LN526@PyExc_Init
  01987	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0198e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  01995	4c 8b cb	 mov	 r9, rbx
  01998	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  0199e	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  019a6	e8 00 00 00 00	 call	 _PyParallel_Guard
  019ab	85 c0		 test	 eax, eax
  019ad	75 06		 jne	 SHORT $LN525@PyExc_Init
  019af	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  019b3	74 04		 je	 SHORT $LN526@PyExc_Init
$LN525@PyExc_Init:
  019b5	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN526@PyExc_Init:

; 2525 :     PRE_INIT(ConnectionRefusedError);

  019b9	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_ConnectionRefusedError+256, 4096 ; 00001000H
  019c3	75 5e		 jne	 SHORT $LN530@PyExc_Init
  019c5	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ConnectionRefusedError
  019cc	e8 00 00 00 00	 call	 PyType_Ready
  019d1	85 c0		 test	 eax, eax
  019d3	79 0c		 jns	 SHORT $LN153@PyExc_Init
  019d5	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  019dc	e8 00 00 00 00	 call	 Py_FatalError
$LN153@PyExc_Init:
  019e1	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_ConnectionRefusedError
  019e8	e8 00 00 00 00	 call	 _Py_PXCTX
  019ed	85 c0		 test	 eax, eax
  019ef	75 32		 jne	 SHORT $LN530@PyExc_Init
  019f1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  019f8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  019ff	4c 8b cb	 mov	 r9, rbx
  01a02	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  01a08	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  01a10	e8 00 00 00 00	 call	 _PyParallel_Guard
  01a15	85 c0		 test	 eax, eax
  01a17	75 06		 jne	 SHORT $LN529@PyExc_Init
  01a19	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  01a1d	74 04		 je	 SHORT $LN530@PyExc_Init
$LN529@PyExc_Init:
  01a1f	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN530@PyExc_Init:

; 2526 :     PRE_INIT(ConnectionResetError);

  01a23	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_ConnectionResetError+256, 4096 ; 00001000H
  01a2d	75 5e		 jne	 SHORT $LN534@PyExc_Init
  01a2f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ConnectionResetError
  01a36	e8 00 00 00 00	 call	 PyType_Ready
  01a3b	85 c0		 test	 eax, eax
  01a3d	79 0c		 jns	 SHORT $LN151@PyExc_Init
  01a3f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  01a46	e8 00 00 00 00	 call	 Py_FatalError
$LN151@PyExc_Init:
  01a4b	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_ConnectionResetError
  01a52	e8 00 00 00 00	 call	 _Py_PXCTX
  01a57	85 c0		 test	 eax, eax
  01a59	75 32		 jne	 SHORT $LN534@PyExc_Init
  01a5b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  01a62	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  01a69	4c 8b cb	 mov	 r9, rbx
  01a6c	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  01a72	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  01a7a	e8 00 00 00 00	 call	 _PyParallel_Guard
  01a7f	85 c0		 test	 eax, eax
  01a81	75 06		 jne	 SHORT $LN533@PyExc_Init
  01a83	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  01a87	74 04		 je	 SHORT $LN534@PyExc_Init
$LN533@PyExc_Init:
  01a89	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN534@PyExc_Init:

; 2527 :     PRE_INIT(FileExistsError);

  01a8d	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_FileExistsError+256, 4096 ; 00001000H
  01a97	75 5e		 jne	 SHORT $LN538@PyExc_Init
  01a99	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_FileExistsError
  01aa0	e8 00 00 00 00	 call	 PyType_Ready
  01aa5	85 c0		 test	 eax, eax
  01aa7	79 0c		 jns	 SHORT $LN149@PyExc_Init
  01aa9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  01ab0	e8 00 00 00 00	 call	 Py_FatalError
$LN149@PyExc_Init:
  01ab5	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_FileExistsError
  01abc	e8 00 00 00 00	 call	 _Py_PXCTX
  01ac1	85 c0		 test	 eax, eax
  01ac3	75 32		 jne	 SHORT $LN538@PyExc_Init
  01ac5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  01acc	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  01ad3	4c 8b cb	 mov	 r9, rbx
  01ad6	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  01adc	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  01ae4	e8 00 00 00 00	 call	 _PyParallel_Guard
  01ae9	85 c0		 test	 eax, eax
  01aeb	75 06		 jne	 SHORT $LN537@PyExc_Init
  01aed	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  01af1	74 04		 je	 SHORT $LN538@PyExc_Init
$LN537@PyExc_Init:
  01af3	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN538@PyExc_Init:

; 2528 :     PRE_INIT(FileNotFoundError);

  01af7	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_FileNotFoundError+256, 4096 ; 00001000H
  01b01	75 5e		 jne	 SHORT $LN542@PyExc_Init
  01b03	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_FileNotFoundError
  01b0a	e8 00 00 00 00	 call	 PyType_Ready
  01b0f	85 c0		 test	 eax, eax
  01b11	79 0c		 jns	 SHORT $LN147@PyExc_Init
  01b13	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  01b1a	e8 00 00 00 00	 call	 Py_FatalError
$LN147@PyExc_Init:
  01b1f	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_FileNotFoundError
  01b26	e8 00 00 00 00	 call	 _Py_PXCTX
  01b2b	85 c0		 test	 eax, eax
  01b2d	75 32		 jne	 SHORT $LN542@PyExc_Init
  01b2f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  01b36	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  01b3d	4c 8b cb	 mov	 r9, rbx
  01b40	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  01b46	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  01b4e	e8 00 00 00 00	 call	 _PyParallel_Guard
  01b53	85 c0		 test	 eax, eax
  01b55	75 06		 jne	 SHORT $LN541@PyExc_Init
  01b57	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  01b5b	74 04		 je	 SHORT $LN542@PyExc_Init
$LN541@PyExc_Init:
  01b5d	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN542@PyExc_Init:

; 2529 :     PRE_INIT(IsADirectoryError);

  01b61	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_IsADirectoryError+256, 4096 ; 00001000H
  01b6b	75 5e		 jne	 SHORT $LN546@PyExc_Init
  01b6d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_IsADirectoryError
  01b74	e8 00 00 00 00	 call	 PyType_Ready
  01b79	85 c0		 test	 eax, eax
  01b7b	79 0c		 jns	 SHORT $LN145@PyExc_Init
  01b7d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  01b84	e8 00 00 00 00	 call	 Py_FatalError
$LN145@PyExc_Init:
  01b89	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_IsADirectoryError
  01b90	e8 00 00 00 00	 call	 _Py_PXCTX
  01b95	85 c0		 test	 eax, eax
  01b97	75 32		 jne	 SHORT $LN546@PyExc_Init
  01b99	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  01ba0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  01ba7	4c 8b cb	 mov	 r9, rbx
  01baa	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  01bb0	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  01bb8	e8 00 00 00 00	 call	 _PyParallel_Guard
  01bbd	85 c0		 test	 eax, eax
  01bbf	75 06		 jne	 SHORT $LN545@PyExc_Init
  01bc1	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  01bc5	74 04		 je	 SHORT $LN546@PyExc_Init
$LN545@PyExc_Init:
  01bc7	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN546@PyExc_Init:

; 2530 :     PRE_INIT(NotADirectoryError);

  01bcb	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_NotADirectoryError+256, 4096 ; 00001000H
  01bd5	75 5e		 jne	 SHORT $LN550@PyExc_Init
  01bd7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_NotADirectoryError
  01bde	e8 00 00 00 00	 call	 PyType_Ready
  01be3	85 c0		 test	 eax, eax
  01be5	79 0c		 jns	 SHORT $LN143@PyExc_Init
  01be7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  01bee	e8 00 00 00 00	 call	 Py_FatalError
$LN143@PyExc_Init:
  01bf3	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_NotADirectoryError
  01bfa	e8 00 00 00 00	 call	 _Py_PXCTX
  01bff	85 c0		 test	 eax, eax
  01c01	75 32		 jne	 SHORT $LN550@PyExc_Init
  01c03	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  01c0a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  01c11	4c 8b cb	 mov	 r9, rbx
  01c14	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  01c1a	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  01c22	e8 00 00 00 00	 call	 _PyParallel_Guard
  01c27	85 c0		 test	 eax, eax
  01c29	75 06		 jne	 SHORT $LN549@PyExc_Init
  01c2b	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  01c2f	74 04		 je	 SHORT $LN550@PyExc_Init
$LN549@PyExc_Init:
  01c31	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN550@PyExc_Init:

; 2531 :     PRE_INIT(InterruptedError);

  01c35	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_InterruptedError+256, 4096 ; 00001000H
  01c3f	75 5e		 jne	 SHORT $LN554@PyExc_Init
  01c41	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_InterruptedError
  01c48	e8 00 00 00 00	 call	 PyType_Ready
  01c4d	85 c0		 test	 eax, eax
  01c4f	79 0c		 jns	 SHORT $LN141@PyExc_Init
  01c51	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  01c58	e8 00 00 00 00	 call	 Py_FatalError
$LN141@PyExc_Init:
  01c5d	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_InterruptedError
  01c64	e8 00 00 00 00	 call	 _Py_PXCTX
  01c69	85 c0		 test	 eax, eax
  01c6b	75 32		 jne	 SHORT $LN554@PyExc_Init
  01c6d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  01c74	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  01c7b	4c 8b cb	 mov	 r9, rbx
  01c7e	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  01c84	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  01c8c	e8 00 00 00 00	 call	 _PyParallel_Guard
  01c91	85 c0		 test	 eax, eax
  01c93	75 06		 jne	 SHORT $LN553@PyExc_Init
  01c95	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  01c99	74 04		 je	 SHORT $LN554@PyExc_Init
$LN553@PyExc_Init:
  01c9b	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN554@PyExc_Init:

; 2532 :     PRE_INIT(PermissionError);

  01c9f	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_PermissionError+256, 4096 ; 00001000H
  01ca9	75 5e		 jne	 SHORT $LN558@PyExc_Init
  01cab	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_PermissionError
  01cb2	e8 00 00 00 00	 call	 PyType_Ready
  01cb7	85 c0		 test	 eax, eax
  01cb9	79 0c		 jns	 SHORT $LN139@PyExc_Init
  01cbb	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  01cc2	e8 00 00 00 00	 call	 Py_FatalError
$LN139@PyExc_Init:
  01cc7	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_PermissionError
  01cce	e8 00 00 00 00	 call	 _Py_PXCTX
  01cd3	85 c0		 test	 eax, eax
  01cd5	75 32		 jne	 SHORT $LN558@PyExc_Init
  01cd7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  01cde	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  01ce5	4c 8b cb	 mov	 r9, rbx
  01ce8	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  01cee	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  01cf6	e8 00 00 00 00	 call	 _PyParallel_Guard
  01cfb	85 c0		 test	 eax, eax
  01cfd	75 06		 jne	 SHORT $LN557@PyExc_Init
  01cff	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  01d03	74 04		 je	 SHORT $LN558@PyExc_Init
$LN557@PyExc_Init:
  01d05	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN558@PyExc_Init:

; 2533 :     PRE_INIT(ProcessLookupError);

  01d09	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_ProcessLookupError+256, 4096 ; 00001000H
  01d13	75 5e		 jne	 SHORT $LN562@PyExc_Init
  01d15	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ProcessLookupError
  01d1c	e8 00 00 00 00	 call	 PyType_Ready
  01d21	85 c0		 test	 eax, eax
  01d23	79 0c		 jns	 SHORT $LN137@PyExc_Init
  01d25	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  01d2c	e8 00 00 00 00	 call	 Py_FatalError
$LN137@PyExc_Init:
  01d31	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_ProcessLookupError
  01d38	e8 00 00 00 00	 call	 _Py_PXCTX
  01d3d	85 c0		 test	 eax, eax
  01d3f	75 32		 jne	 SHORT $LN562@PyExc_Init
  01d41	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  01d48	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  01d4f	4c 8b cb	 mov	 r9, rbx
  01d52	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  01d58	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  01d60	e8 00 00 00 00	 call	 _PyParallel_Guard
  01d65	85 c0		 test	 eax, eax
  01d67	75 06		 jne	 SHORT $LN561@PyExc_Init
  01d69	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  01d6d	74 04		 je	 SHORT $LN562@PyExc_Init
$LN561@PyExc_Init:
  01d6f	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN562@PyExc_Init:

; 2534 :     PRE_INIT(TimeoutError);

  01d73	f7 05 00 01 00
	00 00 10 00 00	 test	 DWORD PTR _PyExc_TimeoutError+256, 4096 ; 00001000H
  01d7d	75 5e		 jne	 SHORT $LN566@PyExc_Init
  01d7f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_TimeoutError
  01d86	e8 00 00 00 00	 call	 PyType_Ready
  01d8b	85 c0		 test	 eax, eax
  01d8d	79 0c		 jns	 SHORT $LN135@PyExc_Init
  01d8f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  01d96	e8 00 00 00 00	 call	 Py_FatalError
$LN135@PyExc_Init:
  01d9b	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_TimeoutError
  01da2	e8 00 00 00 00	 call	 _Py_PXCTX
  01da7	85 c0		 test	 eax, eax
  01da9	75 32		 jne	 SHORT $LN566@PyExc_Init
  01dab	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  01db2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  01db9	4c 8b cb	 mov	 r9, rbx
  01dbc	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  01dc2	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  01dca	e8 00 00 00 00	 call	 _PyParallel_Guard
  01dcf	85 c0		 test	 eax, eax
  01dd1	75 06		 jne	 SHORT $LN565@PyExc_Init
  01dd3	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  01dd7	74 04		 je	 SHORT $LN566@PyExc_Init
$LN565@PyExc_Init:
  01dd9	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN566@PyExc_Init:

; 2535 : 
; 2536 :     bdict = PyModule_GetDict(bltinmod);

  01ddd	48 8b cf	 mov	 rcx, rdi
  01de0	e8 00 00 00 00	 call	 PyModule_GetDict
  01de5	48 8b d8	 mov	 rbx, rax

; 2537 :     if (bdict == NULL)

  01de8	48 85 c0	 test	 rax, rax
  01deb	75 0c		 jne	 SHORT $LN134@PyExc_Init

; 2538 :         Py_FatalError("exceptions bootstrapping error.");

  01ded	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  01df4	e8 00 00 00 00	 call	 Py_FatalError
$LN134@PyExc_Init:

; 2539 : 
; 2540 :     POST_INIT(BaseException)

  01df9	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_BaseException
  01e00	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0O@GCAIIPIB@BaseException?$AA@
  01e07	48 8b cb	 mov	 rcx, rbx
  01e0a	e8 00 00 00 00	 call	 PyDict_SetItemString
  01e0f	85 c0		 test	 eax, eax
  01e11	74 0c		 je	 SHORT $LN133@PyExc_Init
  01e13	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01e1a	e8 00 00 00 00	 call	 Py_FatalError
$LN133@PyExc_Init:

; 2541 :     POST_INIT(Exception)

  01e1f	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_Exception
  01e26	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_09FBNMMHMJ@Exception?$AA@
  01e2d	48 8b cb	 mov	 rcx, rbx
  01e30	e8 00 00 00 00	 call	 PyDict_SetItemString
  01e35	85 c0		 test	 eax, eax
  01e37	74 0c		 je	 SHORT $LN132@PyExc_Init
  01e39	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01e40	e8 00 00 00 00	 call	 Py_FatalError
$LN132@PyExc_Init:

; 2542 :     POST_INIT(TypeError)

  01e45	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_TypeError
  01e4c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_09MGGHOBOJ@TypeError?$AA@
  01e53	48 8b cb	 mov	 rcx, rbx
  01e56	e8 00 00 00 00	 call	 PyDict_SetItemString
  01e5b	85 c0		 test	 eax, eax
  01e5d	74 0c		 je	 SHORT $LN131@PyExc_Init
  01e5f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01e66	e8 00 00 00 00	 call	 Py_FatalError
$LN131@PyExc_Init:

; 2543 :     POST_INIT(StopIteration)

  01e6b	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_StopIteration
  01e72	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0O@LGLKOGMF@StopIteration?$AA@
  01e79	48 8b cb	 mov	 rcx, rbx
  01e7c	e8 00 00 00 00	 call	 PyDict_SetItemString
  01e81	85 c0		 test	 eax, eax
  01e83	74 0c		 je	 SHORT $LN130@PyExc_Init
  01e85	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01e8c	e8 00 00 00 00	 call	 Py_FatalError
$LN130@PyExc_Init:

; 2544 :     POST_INIT(GeneratorExit)

  01e91	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_GeneratorExit
  01e98	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0O@GBGLOLNB@GeneratorExit?$AA@
  01e9f	48 8b cb	 mov	 rcx, rbx
  01ea2	e8 00 00 00 00	 call	 PyDict_SetItemString
  01ea7	85 c0		 test	 eax, eax
  01ea9	74 0c		 je	 SHORT $LN129@PyExc_Init
  01eab	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01eb2	e8 00 00 00 00	 call	 Py_FatalError
$LN129@PyExc_Init:

; 2545 :     POST_INIT(SystemExit)

  01eb7	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_SystemExit
  01ebe	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0L@MBGFFHMP@SystemExit?$AA@
  01ec5	48 8b cb	 mov	 rcx, rbx
  01ec8	e8 00 00 00 00	 call	 PyDict_SetItemString
  01ecd	85 c0		 test	 eax, eax
  01ecf	74 0c		 je	 SHORT $LN128@PyExc_Init
  01ed1	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01ed8	e8 00 00 00 00	 call	 Py_FatalError
$LN128@PyExc_Init:

; 2546 :     POST_INIT(KeyboardInterrupt)

  01edd	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_KeyboardInterrupt
  01ee4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BC@BACBBCED@KeyboardInterrupt?$AA@
  01eeb	48 8b cb	 mov	 rcx, rbx
  01eee	e8 00 00 00 00	 call	 PyDict_SetItemString
  01ef3	85 c0		 test	 eax, eax
  01ef5	74 0c		 je	 SHORT $LN127@PyExc_Init
  01ef7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01efe	e8 00 00 00 00	 call	 Py_FatalError
$LN127@PyExc_Init:

; 2547 :     POST_INIT(ImportError)

  01f03	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ImportError
  01f0a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0M@HCFCBBPI@ImportError?$AA@
  01f11	48 8b cb	 mov	 rcx, rbx
  01f14	e8 00 00 00 00	 call	 PyDict_SetItemString
  01f19	85 c0		 test	 eax, eax
  01f1b	74 0c		 je	 SHORT $LN126@PyExc_Init
  01f1d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01f24	e8 00 00 00 00	 call	 Py_FatalError
$LN126@PyExc_Init:

; 2548 :     POST_INIT(OSError)

  01f29	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_OSError
  01f30	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_07DLGONEPD@OSError?$AA@
  01f37	48 8b cb	 mov	 rcx, rbx
  01f3a	e8 00 00 00 00	 call	 PyDict_SetItemString
  01f3f	85 c0		 test	 eax, eax
  01f41	74 0c		 je	 SHORT $LN125@PyExc_Init
  01f43	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01f4a	e8 00 00 00 00	 call	 Py_FatalError
$LN125@PyExc_Init:

; 2549 :     INIT_ALIAS(EnvironmentError, OSError)

  01f4f	48 8b 3d 00 00
	00 00		 mov	 rdi, QWORD PTR PyExc_OSError
  01f56	e8 00 00 00 00	 call	 _Py_PXCTX
  01f5b	85 c0		 test	 eax, eax
  01f5d	75 32		 jne	 SHORT $LN124@PyExc_Init
  01f5f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  01f66	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  01f6d	4c 8b cf	 mov	 r9, rdi
  01f70	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  01f76	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  01f7e	e8 00 00 00 00	 call	 _PyParallel_Guard
  01f83	85 c0		 test	 eax, eax
  01f85	75 06		 jne	 SHORT $LN569@PyExc_Init
  01f87	f6 47 20 20	 test	 BYTE PTR [rdi+32], 32	; 00000020H
  01f8b	74 04		 je	 SHORT $LN124@PyExc_Init
$LN569@PyExc_Init:
  01f8d	48 ff 47 50	 inc	 QWORD PTR [rdi+80]
$LN124@PyExc_Init:
  01f91	48 8b 3d 00 00
	00 00		 mov	 rdi, QWORD PTR PyExc_EnvironmentError
  01f98	48 85 ff	 test	 rdi, rdi
  01f9b	74 65		 je	 SHORT $LN123@PyExc_Init
  01f9d	e8 00 00 00 00	 call	 _Py_PXCTX
  01fa2	85 c0		 test	 eax, eax
  01fa4	75 5c		 jne	 SHORT $LN123@PyExc_Init
  01fa6	48 8b 47 20	 mov	 rax, QWORD PTR [rdi+32]
  01faa	a8 20		 test	 al, 32			; 00000020H
  01fac	75 4c		 jne	 SHORT $LN577@PyExc_Init
  01fae	84 c0		 test	 al, al
  01fb0	78 48		 js	 SHORT $LN577@PyExc_Init
  01fb2	a8 02		 test	 al, 2
  01fb4	75 4c		 jne	 SHORT $LN123@PyExc_Init
  01fb6	48 ff 4f 50	 dec	 QWORD PTR [rdi+80]
  01fba	75 46		 jne	 SHORT $LN123@PyExc_Init
  01fbc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  01fc3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  01fca	4c 8b cf	 mov	 r9, rdi
  01fcd	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  01fd3	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  01fdb	e8 00 00 00 00	 call	 _PyParallel_Guard
  01fe0	48 8b cf	 mov	 rcx, rdi
  01fe3	85 c0		 test	 eax, eax
  01fe5	74 07		 je	 SHORT $LN582@PyExc_Init
  01fe7	e8 00 00 00 00	 call	 _Px_Dealloc
  01fec	eb 14		 jmp	 SHORT $LN123@PyExc_Init
$LN582@PyExc_Init:
  01fee	48 8b 47 58	 mov	 rax, QWORD PTR [rdi+88]
  01ff2	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  01ff8	eb 08		 jmp	 SHORT $LN123@PyExc_Init
$LN577@PyExc_Init:
  01ffa	48 8b cf	 mov	 rcx, rdi
  01ffd	e8 00 00 00 00	 call	 Px_DecRef
$LN123@PyExc_Init:
  02002	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_OSError
  02009	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BB@KOECNPDN@EnvironmentError?$AA@
  02010	48 8b cb	 mov	 rcx, rbx
  02013	4c 89 05 00 00
	00 00		 mov	 QWORD PTR PyExc_EnvironmentError, r8
  0201a	e8 00 00 00 00	 call	 PyDict_SetItemString
  0201f	85 c0		 test	 eax, eax
  02021	74 0c		 je	 SHORT $LN120@PyExc_Init
  02023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0202a	e8 00 00 00 00	 call	 Py_FatalError
$LN120@PyExc_Init:

; 2550 :     INIT_ALIAS(IOError, OSError)

  0202f	48 8b 3d 00 00
	00 00		 mov	 rdi, QWORD PTR PyExc_OSError
  02036	e8 00 00 00 00	 call	 _Py_PXCTX
  0203b	85 c0		 test	 eax, eax
  0203d	75 32		 jne	 SHORT $LN119@PyExc_Init
  0203f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  02046	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  0204d	4c 8b cf	 mov	 r9, rdi
  02050	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  02056	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  0205e	e8 00 00 00 00	 call	 _PyParallel_Guard
  02063	85 c0		 test	 eax, eax
  02065	75 06		 jne	 SHORT $LN584@PyExc_Init
  02067	f6 47 20 20	 test	 BYTE PTR [rdi+32], 32	; 00000020H
  0206b	74 04		 je	 SHORT $LN119@PyExc_Init
$LN584@PyExc_Init:
  0206d	48 ff 47 50	 inc	 QWORD PTR [rdi+80]
$LN119@PyExc_Init:
  02071	48 8b 3d 00 00
	00 00		 mov	 rdi, QWORD PTR PyExc_IOError
  02078	48 85 ff	 test	 rdi, rdi
  0207b	74 65		 je	 SHORT $LN118@PyExc_Init
  0207d	e8 00 00 00 00	 call	 _Py_PXCTX
  02082	85 c0		 test	 eax, eax
  02084	75 5c		 jne	 SHORT $LN118@PyExc_Init
  02086	48 8b 47 20	 mov	 rax, QWORD PTR [rdi+32]
  0208a	a8 20		 test	 al, 32			; 00000020H
  0208c	75 4c		 jne	 SHORT $LN592@PyExc_Init
  0208e	84 c0		 test	 al, al
  02090	78 48		 js	 SHORT $LN592@PyExc_Init
  02092	a8 02		 test	 al, 2
  02094	75 4c		 jne	 SHORT $LN118@PyExc_Init
  02096	48 ff 4f 50	 dec	 QWORD PTR [rdi+80]
  0209a	75 46		 jne	 SHORT $LN118@PyExc_Init
  0209c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  020a3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  020aa	4c 8b cf	 mov	 r9, rdi
  020ad	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  020b3	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  020bb	e8 00 00 00 00	 call	 _PyParallel_Guard
  020c0	48 8b cf	 mov	 rcx, rdi
  020c3	85 c0		 test	 eax, eax
  020c5	74 07		 je	 SHORT $LN597@PyExc_Init
  020c7	e8 00 00 00 00	 call	 _Px_Dealloc
  020cc	eb 14		 jmp	 SHORT $LN118@PyExc_Init
$LN597@PyExc_Init:
  020ce	48 8b 47 58	 mov	 rax, QWORD PTR [rdi+88]
  020d2	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  020d8	eb 08		 jmp	 SHORT $LN118@PyExc_Init
$LN592@PyExc_Init:
  020da	48 8b cf	 mov	 rcx, rdi
  020dd	e8 00 00 00 00	 call	 Px_DecRef
$LN118@PyExc_Init:
  020e2	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_OSError
  020e9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_07FNHPCLMO@IOError?$AA@
  020f0	48 8b cb	 mov	 rcx, rbx
  020f3	4c 89 05 00 00
	00 00		 mov	 QWORD PTR PyExc_IOError, r8
  020fa	e8 00 00 00 00	 call	 PyDict_SetItemString
  020ff	85 c0		 test	 eax, eax
  02101	74 0c		 je	 SHORT $LN115@PyExc_Init
  02103	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0210a	e8 00 00 00 00	 call	 Py_FatalError
$LN115@PyExc_Init:

; 2551 : #ifdef MS_WINDOWS
; 2552 :     INIT_ALIAS(WindowsError, OSError)

  0210f	48 8b 3d 00 00
	00 00		 mov	 rdi, QWORD PTR PyExc_OSError
  02116	e8 00 00 00 00	 call	 _Py_PXCTX
  0211b	85 c0		 test	 eax, eax
  0211d	75 32		 jne	 SHORT $LN114@PyExc_Init
  0211f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  02126	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  0212d	4c 8b cf	 mov	 r9, rdi
  02130	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  02136	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  0213e	e8 00 00 00 00	 call	 _PyParallel_Guard
  02143	85 c0		 test	 eax, eax
  02145	75 06		 jne	 SHORT $LN599@PyExc_Init
  02147	f6 47 20 20	 test	 BYTE PTR [rdi+32], 32	; 00000020H
  0214b	74 04		 je	 SHORT $LN114@PyExc_Init
$LN599@PyExc_Init:
  0214d	48 ff 47 50	 inc	 QWORD PTR [rdi+80]
$LN114@PyExc_Init:
  02151	48 8b 3d 00 00
	00 00		 mov	 rdi, QWORD PTR PyExc_WindowsError
  02158	48 85 ff	 test	 rdi, rdi
  0215b	74 65		 je	 SHORT $LN113@PyExc_Init
  0215d	e8 00 00 00 00	 call	 _Py_PXCTX
  02162	85 c0		 test	 eax, eax
  02164	75 5c		 jne	 SHORT $LN113@PyExc_Init
  02166	48 8b 47 20	 mov	 rax, QWORD PTR [rdi+32]
  0216a	a8 20		 test	 al, 32			; 00000020H
  0216c	75 4c		 jne	 SHORT $LN607@PyExc_Init
  0216e	84 c0		 test	 al, al
  02170	78 48		 js	 SHORT $LN607@PyExc_Init
  02172	a8 02		 test	 al, 2
  02174	75 4c		 jne	 SHORT $LN113@PyExc_Init
  02176	48 ff 4f 50	 dec	 QWORD PTR [rdi+80]
  0217a	75 46		 jne	 SHORT $LN113@PyExc_Init
  0217c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  02183	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  0218a	4c 8b cf	 mov	 r9, rdi
  0218d	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  02193	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0219b	e8 00 00 00 00	 call	 _PyParallel_Guard
  021a0	48 8b cf	 mov	 rcx, rdi
  021a3	85 c0		 test	 eax, eax
  021a5	74 07		 je	 SHORT $LN612@PyExc_Init
  021a7	e8 00 00 00 00	 call	 _Px_Dealloc
  021ac	eb 14		 jmp	 SHORT $LN113@PyExc_Init
$LN612@PyExc_Init:
  021ae	48 8b 47 58	 mov	 rax, QWORD PTR [rdi+88]
  021b2	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  021b8	eb 08		 jmp	 SHORT $LN113@PyExc_Init
$LN607@PyExc_Init:
  021ba	48 8b cf	 mov	 rcx, rdi
  021bd	e8 00 00 00 00	 call	 Px_DecRef
$LN113@PyExc_Init:
  021c2	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_OSError
  021c9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0N@FANLAMLN@WindowsError?$AA@
  021d0	48 8b cb	 mov	 rcx, rbx
  021d3	4c 89 05 00 00
	00 00		 mov	 QWORD PTR PyExc_WindowsError, r8
  021da	e8 00 00 00 00	 call	 PyDict_SetItemString
  021df	85 c0		 test	 eax, eax
  021e1	74 0c		 je	 SHORT $LN110@PyExc_Init
  021e3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  021ea	e8 00 00 00 00	 call	 Py_FatalError
$LN110@PyExc_Init:

; 2553 : #endif
; 2554 : #ifdef __VMS
; 2555 :     INIT_ALIAS(VMSError, OSError)
; 2556 : #endif
; 2557 :     POST_INIT(EOFError)

  021ef	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_EOFError
  021f6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_08BJKGOKBF@EOFError?$AA@
  021fd	48 8b cb	 mov	 rcx, rbx
  02200	e8 00 00 00 00	 call	 PyDict_SetItemString
  02205	85 c0		 test	 eax, eax
  02207	74 0c		 je	 SHORT $LN109@PyExc_Init
  02209	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02210	e8 00 00 00 00	 call	 Py_FatalError
$LN109@PyExc_Init:

; 2558 :     POST_INIT(RuntimeError)

  02215	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_RuntimeError
  0221c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0N@PJCHGDKG@RuntimeError?$AA@
  02223	48 8b cb	 mov	 rcx, rbx
  02226	e8 00 00 00 00	 call	 PyDict_SetItemString
  0222b	85 c0		 test	 eax, eax
  0222d	74 0c		 je	 SHORT $LN108@PyExc_Init
  0222f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02236	e8 00 00 00 00	 call	 Py_FatalError
$LN108@PyExc_Init:

; 2559 :     POST_INIT(NotImplementedError)

  0223b	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_NotImplementedError
  02242	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BE@NIHEKDAM@NotImplementedError?$AA@
  02249	48 8b cb	 mov	 rcx, rbx
  0224c	e8 00 00 00 00	 call	 PyDict_SetItemString
  02251	85 c0		 test	 eax, eax
  02253	74 0c		 je	 SHORT $LN107@PyExc_Init
  02255	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0225c	e8 00 00 00 00	 call	 Py_FatalError
$LN107@PyExc_Init:

; 2560 :     POST_INIT(NameError)

  02261	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_NameError
  02268	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_09GENDEFL@NameError?$AA@
  0226f	48 8b cb	 mov	 rcx, rbx
  02272	e8 00 00 00 00	 call	 PyDict_SetItemString
  02277	85 c0		 test	 eax, eax
  02279	74 0c		 je	 SHORT $LN106@PyExc_Init
  0227b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02282	e8 00 00 00 00	 call	 Py_FatalError
$LN106@PyExc_Init:

; 2561 :     POST_INIT(UnboundLocalError)

  02287	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_UnboundLocalError
  0228e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BC@EJBPJIJA@UnboundLocalError?$AA@
  02295	48 8b cb	 mov	 rcx, rbx
  02298	e8 00 00 00 00	 call	 PyDict_SetItemString
  0229d	85 c0		 test	 eax, eax
  0229f	74 0c		 je	 SHORT $LN105@PyExc_Init
  022a1	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  022a8	e8 00 00 00 00	 call	 Py_FatalError
$LN105@PyExc_Init:

; 2562 :     POST_INIT(AttributeError)

  022ad	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_AttributeError
  022b4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0P@OMMLLIOG@AttributeError?$AA@
  022bb	48 8b cb	 mov	 rcx, rbx
  022be	e8 00 00 00 00	 call	 PyDict_SetItemString
  022c3	85 c0		 test	 eax, eax
  022c5	74 0c		 je	 SHORT $LN104@PyExc_Init
  022c7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  022ce	e8 00 00 00 00	 call	 Py_FatalError
$LN104@PyExc_Init:

; 2563 :     POST_INIT(SyntaxError)

  022d3	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_SyntaxError
  022da	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0M@KIDEJCGH@SyntaxError?$AA@
  022e1	48 8b cb	 mov	 rcx, rbx
  022e4	e8 00 00 00 00	 call	 PyDict_SetItemString
  022e9	85 c0		 test	 eax, eax
  022eb	74 0c		 je	 SHORT $LN103@PyExc_Init
  022ed	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  022f4	e8 00 00 00 00	 call	 Py_FatalError
$LN103@PyExc_Init:

; 2564 :     POST_INIT(IndentationError)

  022f9	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_IndentationError
  02300	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BB@PAPDAKC@IndentationError?$AA@
  02307	48 8b cb	 mov	 rcx, rbx
  0230a	e8 00 00 00 00	 call	 PyDict_SetItemString
  0230f	85 c0		 test	 eax, eax
  02311	74 0c		 je	 SHORT $LN102@PyExc_Init
  02313	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0231a	e8 00 00 00 00	 call	 Py_FatalError
$LN102@PyExc_Init:

; 2565 :     POST_INIT(TabError)

  0231f	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_TabError
  02326	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_08HFBDNBMM@TabError?$AA@
  0232d	48 8b cb	 mov	 rcx, rbx
  02330	e8 00 00 00 00	 call	 PyDict_SetItemString
  02335	85 c0		 test	 eax, eax
  02337	74 0c		 je	 SHORT $LN101@PyExc_Init
  02339	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02340	e8 00 00 00 00	 call	 Py_FatalError
$LN101@PyExc_Init:

; 2566 :     POST_INIT(LookupError)

  02345	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_LookupError
  0234c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0M@MHFOHJEK@LookupError?$AA@
  02353	48 8b cb	 mov	 rcx, rbx
  02356	e8 00 00 00 00	 call	 PyDict_SetItemString
  0235b	85 c0		 test	 eax, eax
  0235d	74 0c		 je	 SHORT $LN100@PyExc_Init
  0235f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02366	e8 00 00 00 00	 call	 Py_FatalError
$LN100@PyExc_Init:

; 2567 :     POST_INIT(IndexError)

  0236b	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_IndexError
  02372	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0L@PDGDGKIP@IndexError?$AA@
  02379	48 8b cb	 mov	 rcx, rbx
  0237c	e8 00 00 00 00	 call	 PyDict_SetItemString
  02381	85 c0		 test	 eax, eax
  02383	74 0c		 je	 SHORT $LN99@PyExc_Init
  02385	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0238c	e8 00 00 00 00	 call	 Py_FatalError
$LN99@PyExc_Init:

; 2568 :     POST_INIT(KeyError)

  02391	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_KeyError
  02398	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_08OHPJJKKC@KeyError?$AA@
  0239f	48 8b cb	 mov	 rcx, rbx
  023a2	e8 00 00 00 00	 call	 PyDict_SetItemString
  023a7	85 c0		 test	 eax, eax
  023a9	74 0c		 je	 SHORT $LN98@PyExc_Init
  023ab	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  023b2	e8 00 00 00 00	 call	 Py_FatalError
$LN98@PyExc_Init:

; 2569 :     POST_INIT(ValueError)

  023b7	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ValueError
  023be	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0L@POAMGPDC@ValueError?$AA@
  023c5	48 8b cb	 mov	 rcx, rbx
  023c8	e8 00 00 00 00	 call	 PyDict_SetItemString
  023cd	85 c0		 test	 eax, eax
  023cf	74 0c		 je	 SHORT $LN97@PyExc_Init
  023d1	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  023d8	e8 00 00 00 00	 call	 Py_FatalError
$LN97@PyExc_Init:

; 2570 :     POST_INIT(UnicodeError)

  023dd	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_UnicodeError
  023e4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0N@HJMCMBLP@UnicodeError?$AA@
  023eb	48 8b cb	 mov	 rcx, rbx
  023ee	e8 00 00 00 00	 call	 PyDict_SetItemString
  023f3	85 c0		 test	 eax, eax
  023f5	74 0c		 je	 SHORT $LN96@PyExc_Init
  023f7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  023fe	e8 00 00 00 00	 call	 Py_FatalError
$LN96@PyExc_Init:

; 2571 :     POST_INIT(UnicodeEncodeError)

  02403	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_UnicodeEncodeError
  0240a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BD@PEGECFKD@UnicodeEncodeError?$AA@
  02411	48 8b cb	 mov	 rcx, rbx
  02414	e8 00 00 00 00	 call	 PyDict_SetItemString
  02419	85 c0		 test	 eax, eax
  0241b	74 0c		 je	 SHORT $LN95@PyExc_Init
  0241d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02424	e8 00 00 00 00	 call	 Py_FatalError
$LN95@PyExc_Init:

; 2572 :     POST_INIT(UnicodeDecodeError)

  02429	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_UnicodeDecodeError
  02430	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BD@EMOAOOII@UnicodeDecodeError?$AA@
  02437	48 8b cb	 mov	 rcx, rbx
  0243a	e8 00 00 00 00	 call	 PyDict_SetItemString
  0243f	85 c0		 test	 eax, eax
  02441	74 0c		 je	 SHORT $LN94@PyExc_Init
  02443	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0244a	e8 00 00 00 00	 call	 Py_FatalError
$LN94@PyExc_Init:

; 2573 :     POST_INIT(UnicodeTranslateError)

  0244f	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_UnicodeTranslateError
  02456	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BG@MKGFNNGN@UnicodeTranslateError?$AA@
  0245d	48 8b cb	 mov	 rcx, rbx
  02460	e8 00 00 00 00	 call	 PyDict_SetItemString
  02465	85 c0		 test	 eax, eax
  02467	74 0c		 je	 SHORT $LN93@PyExc_Init
  02469	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02470	e8 00 00 00 00	 call	 Py_FatalError
$LN93@PyExc_Init:

; 2574 :     POST_INIT(AssertionError)

  02475	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_AssertionError
  0247c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0P@ECLAGKMP@AssertionError?$AA@
  02483	48 8b cb	 mov	 rcx, rbx
  02486	e8 00 00 00 00	 call	 PyDict_SetItemString
  0248b	85 c0		 test	 eax, eax
  0248d	74 0c		 je	 SHORT $LN92@PyExc_Init
  0248f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02496	e8 00 00 00 00	 call	 Py_FatalError
$LN92@PyExc_Init:

; 2575 :     POST_INIT(ArithmeticError)

  0249b	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ArithmeticError
  024a2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BA@HMBIHIEF@ArithmeticError?$AA@
  024a9	48 8b cb	 mov	 rcx, rbx
  024ac	e8 00 00 00 00	 call	 PyDict_SetItemString
  024b1	85 c0		 test	 eax, eax
  024b3	74 0c		 je	 SHORT $LN91@PyExc_Init
  024b5	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  024bc	e8 00 00 00 00	 call	 Py_FatalError
$LN91@PyExc_Init:

; 2576 :     POST_INIT(FloatingPointError)

  024c1	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_FloatingPointError
  024c8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BD@BMMMKAGK@FloatingPointError?$AA@
  024cf	48 8b cb	 mov	 rcx, rbx
  024d2	e8 00 00 00 00	 call	 PyDict_SetItemString
  024d7	85 c0		 test	 eax, eax
  024d9	74 0c		 je	 SHORT $LN90@PyExc_Init
  024db	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  024e2	e8 00 00 00 00	 call	 Py_FatalError
$LN90@PyExc_Init:

; 2577 :     POST_INIT(OverflowError)

  024e7	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_OverflowError
  024ee	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0O@DAFOBLHH@OverflowError?$AA@
  024f5	48 8b cb	 mov	 rcx, rbx
  024f8	e8 00 00 00 00	 call	 PyDict_SetItemString
  024fd	85 c0		 test	 eax, eax
  024ff	74 0c		 je	 SHORT $LN89@PyExc_Init
  02501	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02508	e8 00 00 00 00	 call	 Py_FatalError
$LN89@PyExc_Init:

; 2578 :     POST_INIT(ZeroDivisionError)

  0250d	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ZeroDivisionError
  02514	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BC@JKCGANPD@ZeroDivisionError?$AA@
  0251b	48 8b cb	 mov	 rcx, rbx
  0251e	e8 00 00 00 00	 call	 PyDict_SetItemString
  02523	85 c0		 test	 eax, eax
  02525	74 0c		 je	 SHORT $LN88@PyExc_Init
  02527	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0252e	e8 00 00 00 00	 call	 Py_FatalError
$LN88@PyExc_Init:

; 2579 :     POST_INIT(SystemError)

  02533	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_SystemError
  0253a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0M@MLMICFKM@SystemError?$AA@
  02541	48 8b cb	 mov	 rcx, rbx
  02544	e8 00 00 00 00	 call	 PyDict_SetItemString
  02549	85 c0		 test	 eax, eax
  0254b	74 0c		 je	 SHORT $LN87@PyExc_Init
  0254d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02554	e8 00 00 00 00	 call	 Py_FatalError
$LN87@PyExc_Init:

; 2580 :     POST_INIT(ReferenceError)

  02559	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ReferenceError
  02560	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0P@NJFCDLEA@ReferenceError?$AA@
  02567	48 8b cb	 mov	 rcx, rbx
  0256a	e8 00 00 00 00	 call	 PyDict_SetItemString
  0256f	85 c0		 test	 eax, eax
  02571	74 0c		 je	 SHORT $LN86@PyExc_Init
  02573	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0257a	e8 00 00 00 00	 call	 Py_FatalError
$LN86@PyExc_Init:

; 2581 :     POST_INIT(BufferError)

  0257f	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_BufferError
  02586	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0M@IEEINKIE@BufferError?$AA@
  0258d	48 8b cb	 mov	 rcx, rbx
  02590	e8 00 00 00 00	 call	 PyDict_SetItemString
  02595	85 c0		 test	 eax, eax
  02597	74 0c		 je	 SHORT $LN85@PyExc_Init
  02599	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  025a0	e8 00 00 00 00	 call	 Py_FatalError
$LN85@PyExc_Init:

; 2582 :     POST_INIT(MemoryError)

  025a5	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_MemoryError
  025ac	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0M@HIBAKAFK@MemoryError?$AA@
  025b3	48 8b cb	 mov	 rcx, rbx
  025b6	e8 00 00 00 00	 call	 PyDict_SetItemString
  025bb	85 c0		 test	 eax, eax
  025bd	74 0c		 je	 SHORT $LN84@PyExc_Init
  025bf	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  025c6	e8 00 00 00 00	 call	 Py_FatalError
$LN84@PyExc_Init:

; 2583 :     POST_INIT(BufferError)

  025cb	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_BufferError
  025d2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0M@IEEINKIE@BufferError?$AA@
  025d9	48 8b cb	 mov	 rcx, rbx
  025dc	e8 00 00 00 00	 call	 PyDict_SetItemString
  025e1	85 c0		 test	 eax, eax
  025e3	74 0c		 je	 SHORT $LN83@PyExc_Init
  025e5	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  025ec	e8 00 00 00 00	 call	 Py_FatalError
$LN83@PyExc_Init:

; 2584 : #ifdef WITH_PARALLEL
; 2585 :     POST_INIT(ParallelError)

  025f1	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ParallelError
  025f8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0O@GFKDNBOD@ParallelError?$AA@
  025ff	48 8b cb	 mov	 rcx, rbx
  02602	e8 00 00 00 00	 call	 PyDict_SetItemString
  02607	85 c0		 test	 eax, eax
  02609	74 0c		 je	 SHORT $LN82@PyExc_Init
  0260b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02612	e8 00 00 00 00	 call	 Py_FatalError
$LN82@PyExc_Init:

; 2586 :     POST_INIT(ParallelThreadInitializationError)

  02617	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ParallelThreadInitializationError
  0261e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CC@IAEHFMP@ParallelThreadInitializationErro@
  02625	48 8b cb	 mov	 rcx, rbx
  02628	e8 00 00 00 00	 call	 PyDict_SetItemString
  0262d	85 c0		 test	 eax, eax
  0262f	74 0c		 je	 SHORT $LN81@PyExc_Init
  02631	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02638	e8 00 00 00 00	 call	 Py_FatalError
$LN81@PyExc_Init:

; 2587 :     POST_INIT(ParallelContextInitializationError)

  0263d	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ParallelContextInitializationError
  02644	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@MNHCHPAI@ParallelContextInitializationErr@
  0264b	48 8b cb	 mov	 rcx, rbx
  0264e	e8 00 00 00 00	 call	 PyDict_SetItemString
  02653	85 c0		 test	 eax, eax
  02655	74 0c		 je	 SHORT $LN80@PyExc_Init
  02657	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0265e	e8 00 00 00 00	 call	 Py_FatalError
$LN80@PyExc_Init:

; 2588 :     POST_INIT(ParallelContextError)

  02663	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ParallelContextError
  0266a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@HFKFAIAA@ParallelContextError?$AA@
  02671	48 8b cb	 mov	 rcx, rbx
  02674	e8 00 00 00 00	 call	 PyDict_SetItemString
  02679	85 c0		 test	 eax, eax
  0267b	74 0c		 je	 SHORT $LN79@PyExc_Init
  0267d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02684	e8 00 00 00 00	 call	 Py_FatalError
$LN79@PyExc_Init:

; 2589 :     POST_INIT(ParallelImportError)

  02689	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ParallelImportError
  02690	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BE@FCGCAOGC@ParallelImportError?$AA@
  02697	48 8b cb	 mov	 rcx, rbx
  0269a	e8 00 00 00 00	 call	 PyDict_SetItemString
  0269f	85 c0		 test	 eax, eax
  026a1	74 0c		 je	 SHORT $LN78@PyExc_Init
  026a3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  026aa	e8 00 00 00 00	 call	 Py_FatalError
$LN78@PyExc_Init:

; 2590 :     POST_INIT(ParallelGlobalVariableAccessError)

  026af	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ParallelGlobalVariableAccessError
  026b6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CC@HPLHCPKN@ParallelGlobalVariableAccessErro@
  026bd	48 8b cb	 mov	 rcx, rbx
  026c0	e8 00 00 00 00	 call	 PyDict_SetItemString
  026c5	85 c0		 test	 eax, eax
  026c7	74 0c		 je	 SHORT $LN77@PyExc_Init
  026c9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  026d0	e8 00 00 00 00	 call	 Py_FatalError
$LN77@PyExc_Init:

; 2591 :     POST_INIT(ParallelNonlocalVariableAccessError)

  026d5	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ParallelNonlocalVariableAccessError
  026dc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CE@ONNHACJB@ParallelNonlocalVariableAccessEr@
  026e3	48 8b cb	 mov	 rcx, rbx
  026e6	e8 00 00 00 00	 call	 PyDict_SetItemString
  026eb	85 c0		 test	 eax, eax
  026ed	74 0c		 je	 SHORT $LN76@PyExc_Init
  026ef	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  026f6	e8 00 00 00 00	 call	 Py_FatalError
$LN76@PyExc_Init:

; 2592 :     POST_INIT(AsyncError)

  026fb	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_AsyncError
  02702	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0L@POMMPANG@AsyncError?$AA@
  02709	48 8b cb	 mov	 rcx, rbx
  0270c	e8 00 00 00 00	 call	 PyDict_SetItemString
  02711	85 c0		 test	 eax, eax
  02713	74 0c		 je	 SHORT $LN75@PyExc_Init
  02715	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0271c	e8 00 00 00 00	 call	 Py_FatalError
$LN75@PyExc_Init:

; 2593 :     POST_INIT(AsyncRunCalledWithoutEventsError)

  02721	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_AsyncRunCalledWithoutEventsError
  02728	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CB@DHCJJACB@AsyncRunCalledWithoutEventsError@
  0272f	48 8b cb	 mov	 rcx, rbx
  02732	e8 00 00 00 00	 call	 PyDict_SetItemString
  02737	85 c0		 test	 eax, eax
  02739	74 0c		 je	 SHORT $LN74@PyExc_Init
  0273b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02742	e8 00 00 00 00	 call	 Py_FatalError
$LN74@PyExc_Init:

; 2594 :     POST_INIT(AsyncRunNoActiveEventsError)

  02747	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_AsyncRunNoActiveEventsError
  0274e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BM@GCGOLDFN@AsyncRunNoActiveEventsError?$AA@
  02755	48 8b cb	 mov	 rcx, rbx
  02758	e8 00 00 00 00	 call	 PyDict_SetItemString
  0275d	85 c0		 test	 eax, eax
  0275f	74 0c		 je	 SHORT $LN73@PyExc_Init
  02761	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02768	e8 00 00 00 00	 call	 Py_FatalError
$LN73@PyExc_Init:

; 2595 : #endif
; 2596 :     POST_INIT(Warning)

  0276d	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_Warning
  02774	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_07KGMMFLDN@Warning?$AA@
  0277b	48 8b cb	 mov	 rcx, rbx
  0277e	e8 00 00 00 00	 call	 PyDict_SetItemString
  02783	85 c0		 test	 eax, eax
  02785	74 0c		 je	 SHORT $LN72@PyExc_Init
  02787	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0278e	e8 00 00 00 00	 call	 Py_FatalError
$LN72@PyExc_Init:

; 2597 :     POST_INIT(UserWarning)

  02793	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_UserWarning
  0279a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0M@JCLIHPLC@UserWarning?$AA@
  027a1	48 8b cb	 mov	 rcx, rbx
  027a4	e8 00 00 00 00	 call	 PyDict_SetItemString
  027a9	85 c0		 test	 eax, eax
  027ab	74 0c		 je	 SHORT $LN71@PyExc_Init
  027ad	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  027b4	e8 00 00 00 00	 call	 Py_FatalError
$LN71@PyExc_Init:

; 2598 :     POST_INIT(DeprecationWarning)

  027b9	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_DeprecationWarning
  027c0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BD@GIDNBIPD@DeprecationWarning?$AA@
  027c7	48 8b cb	 mov	 rcx, rbx
  027ca	e8 00 00 00 00	 call	 PyDict_SetItemString
  027cf	85 c0		 test	 eax, eax
  027d1	74 0c		 je	 SHORT $LN70@PyExc_Init
  027d3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  027da	e8 00 00 00 00	 call	 Py_FatalError
$LN70@PyExc_Init:

; 2599 :     POST_INIT(PendingDeprecationWarning)

  027df	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_PendingDeprecationWarning
  027e6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BK@JDBEDOM@PendingDeprecationWarning?$AA@
  027ed	48 8b cb	 mov	 rcx, rbx
  027f0	e8 00 00 00 00	 call	 PyDict_SetItemString
  027f5	85 c0		 test	 eax, eax
  027f7	74 0c		 je	 SHORT $LN69@PyExc_Init
  027f9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02800	e8 00 00 00 00	 call	 Py_FatalError
$LN69@PyExc_Init:

; 2600 :     POST_INIT(SyntaxWarning)

  02805	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_SyntaxWarning
  0280c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0O@IOJIPFFN@SyntaxWarning?$AA@
  02813	48 8b cb	 mov	 rcx, rbx
  02816	e8 00 00 00 00	 call	 PyDict_SetItemString
  0281b	85 c0		 test	 eax, eax
  0281d	74 0c		 je	 SHORT $LN68@PyExc_Init
  0281f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02826	e8 00 00 00 00	 call	 Py_FatalError
$LN68@PyExc_Init:

; 2601 :     POST_INIT(RuntimeWarning)

  0282b	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_RuntimeWarning
  02832	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0P@JGMDIAML@RuntimeWarning?$AA@
  02839	48 8b cb	 mov	 rcx, rbx
  0283c	e8 00 00 00 00	 call	 PyDict_SetItemString
  02841	85 c0		 test	 eax, eax
  02843	74 0c		 je	 SHORT $LN67@PyExc_Init
  02845	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0284c	e8 00 00 00 00	 call	 Py_FatalError
$LN67@PyExc_Init:

; 2602 :     POST_INIT(FutureWarning)

  02851	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_FutureWarning
  02858	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0O@EAIEFLDH@FutureWarning?$AA@
  0285f	48 8b cb	 mov	 rcx, rbx
  02862	e8 00 00 00 00	 call	 PyDict_SetItemString
  02867	85 c0		 test	 eax, eax
  02869	74 0c		 je	 SHORT $LN66@PyExc_Init
  0286b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02872	e8 00 00 00 00	 call	 Py_FatalError
$LN66@PyExc_Init:

; 2603 :     POST_INIT(ImportWarning)

  02877	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ImportWarning
  0287e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0O@MPAGLHE@ImportWarning?$AA@
  02885	48 8b cb	 mov	 rcx, rbx
  02888	e8 00 00 00 00	 call	 PyDict_SetItemString
  0288d	85 c0		 test	 eax, eax
  0288f	74 0c		 je	 SHORT $LN65@PyExc_Init
  02891	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02898	e8 00 00 00 00	 call	 Py_FatalError
$LN65@PyExc_Init:

; 2604 :     POST_INIT(UnicodeWarning)

  0289d	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_UnicodeWarning
  028a4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0P@DFBLGLPC@UnicodeWarning?$AA@
  028ab	48 8b cb	 mov	 rcx, rbx
  028ae	e8 00 00 00 00	 call	 PyDict_SetItemString
  028b3	85 c0		 test	 eax, eax
  028b5	74 0c		 je	 SHORT $LN64@PyExc_Init
  028b7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  028be	e8 00 00 00 00	 call	 Py_FatalError
$LN64@PyExc_Init:

; 2605 :     POST_INIT(BytesWarning)

  028c3	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_BytesWarning
  028ca	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0N@BILDEMAG@BytesWarning?$AA@
  028d1	48 8b cb	 mov	 rcx, rbx
  028d4	e8 00 00 00 00	 call	 PyDict_SetItemString
  028d9	85 c0		 test	 eax, eax
  028db	74 0c		 je	 SHORT $LN63@PyExc_Init
  028dd	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  028e4	e8 00 00 00 00	 call	 Py_FatalError
$LN63@PyExc_Init:

; 2606 :     POST_INIT(ResourceWarning)

  028e9	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ResourceWarning
  028f0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BA@JIBLCGNF@ResourceWarning?$AA@
  028f7	48 8b cb	 mov	 rcx, rbx
  028fa	e8 00 00 00 00	 call	 PyDict_SetItemString
  028ff	85 c0		 test	 eax, eax
  02901	74 0c		 je	 SHORT $LN62@PyExc_Init
  02903	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0290a	e8 00 00 00 00	 call	 Py_FatalError
$LN62@PyExc_Init:

; 2607 : 
; 2608 :     if (!errnomap) {

  0290f	48 83 3d 00 00
	00 00 00	 cmp	 QWORD PTR errnomap, 0
  02917	75 1d		 jne	 SHORT $LN60@PyExc_Init

; 2609 :         errnomap = PyDict_New();

  02919	e8 00 00 00 00	 call	 PyDict_New
  0291e	48 89 05 00 00
	00 00		 mov	 QWORD PTR errnomap, rax

; 2610 :         if (!errnomap)

  02925	48 85 c0	 test	 rax, rax
  02928	75 0c		 jne	 SHORT $LN60@PyExc_Init

; 2611 :             Py_FatalError("Cannot allocate map from errnos to OSError subclasses");

  0292a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0DG@OANAGHEJ@Cannot?5allocate?5map?5from?5errnos?5@
  02931	e8 00 00 00 00	 call	 Py_FatalError
$LN60@PyExc_Init:

; 2612 :     }
; 2613 : 
; 2614 :     /* OSError subclasses */
; 2615 :     POST_INIT(ConnectionError);

  02936	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ConnectionError
  0293d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BA@FGMDNHAG@ConnectionError?$AA@
  02944	48 8b cb	 mov	 rcx, rbx
  02947	e8 00 00 00 00	 call	 PyDict_SetItemString
  0294c	85 c0		 test	 eax, eax
  0294e	74 0c		 je	 SHORT $LN59@PyExc_Init
  02950	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02957	e8 00 00 00 00	 call	 Py_FatalError
$LN59@PyExc_Init:

; 2616 : 
; 2617 :     POST_INIT(BlockingIOError);

  0295c	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_BlockingIOError
  02963	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BA@JGPGLFDG@BlockingIOError?$AA@
  0296a	48 8b cb	 mov	 rcx, rbx
  0296d	e8 00 00 00 00	 call	 PyDict_SetItemString
  02972	85 c0		 test	 eax, eax
  02974	74 0c		 je	 SHORT $LN58@PyExc_Init
  02976	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0297d	e8 00 00 00 00	 call	 Py_FatalError
$LN58@PyExc_Init:

; 2618 :     ADD_ERRNO(BlockingIOError, EAGAIN);

  02982	b9 0b 00 00 00	 mov	 ecx, 11
  02987	e8 00 00 00 00	 call	 PyLong_FromLong
  0298c	48 8b f8	 mov	 rdi, rax
  0298f	48 85 c0	 test	 rax, rax
  02992	74 1a		 je	 SHORT $LN56@PyExc_Init
  02994	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_BlockingIOError
  0299b	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  029a2	48 8b d0	 mov	 rdx, rax
  029a5	e8 00 00 00 00	 call	 PyDict_SetItem
  029aa	85 c0		 test	 eax, eax
  029ac	74 0c		 je	 SHORT $LN57@PyExc_Init
$LN56@PyExc_Init:
  029ae	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  029b5	e8 00 00 00 00	 call	 Py_FatalError
$LN57@PyExc_Init:
  029ba	48 8b cf	 mov	 rcx, rdi
  029bd	e8 00 00 00 00	 call	 _Py_DecRef

; 2619 :     ADD_ERRNO(BlockingIOError, EALREADY);

  029c2	b9 35 27 00 00	 mov	 ecx, 10037		; 00002735H
  029c7	e8 00 00 00 00	 call	 PyLong_FromLong
  029cc	48 8b f8	 mov	 rdi, rax
  029cf	48 85 c0	 test	 rax, rax
  029d2	74 1a		 je	 SHORT $LN54@PyExc_Init
  029d4	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_BlockingIOError
  029db	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  029e2	48 8b d0	 mov	 rdx, rax
  029e5	e8 00 00 00 00	 call	 PyDict_SetItem
  029ea	85 c0		 test	 eax, eax
  029ec	74 0c		 je	 SHORT $LN55@PyExc_Init
$LN54@PyExc_Init:
  029ee	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  029f5	e8 00 00 00 00	 call	 Py_FatalError
$LN55@PyExc_Init:
  029fa	48 8b cf	 mov	 rcx, rdi
  029fd	e8 00 00 00 00	 call	 _Py_DecRef

; 2620 :     ADD_ERRNO(BlockingIOError, EINPROGRESS);

  02a02	b9 34 27 00 00	 mov	 ecx, 10036		; 00002734H
  02a07	e8 00 00 00 00	 call	 PyLong_FromLong
  02a0c	48 8b f8	 mov	 rdi, rax
  02a0f	48 85 c0	 test	 rax, rax
  02a12	74 1a		 je	 SHORT $LN52@PyExc_Init
  02a14	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_BlockingIOError
  02a1b	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  02a22	48 8b d0	 mov	 rdx, rax
  02a25	e8 00 00 00 00	 call	 PyDict_SetItem
  02a2a	85 c0		 test	 eax, eax
  02a2c	74 0c		 je	 SHORT $LN53@PyExc_Init
$LN52@PyExc_Init:
  02a2e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  02a35	e8 00 00 00 00	 call	 Py_FatalError
$LN53@PyExc_Init:
  02a3a	48 8b cf	 mov	 rcx, rdi
  02a3d	e8 00 00 00 00	 call	 _Py_DecRef

; 2621 :     ADD_ERRNO(BlockingIOError, EWOULDBLOCK);

  02a42	b9 33 27 00 00	 mov	 ecx, 10035		; 00002733H
  02a47	e8 00 00 00 00	 call	 PyLong_FromLong
  02a4c	48 8b f8	 mov	 rdi, rax
  02a4f	48 85 c0	 test	 rax, rax
  02a52	74 1a		 je	 SHORT $LN50@PyExc_Init
  02a54	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_BlockingIOError
  02a5b	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  02a62	48 8b d0	 mov	 rdx, rax
  02a65	e8 00 00 00 00	 call	 PyDict_SetItem
  02a6a	85 c0		 test	 eax, eax
  02a6c	74 0c		 je	 SHORT $LN51@PyExc_Init
$LN50@PyExc_Init:
  02a6e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  02a75	e8 00 00 00 00	 call	 Py_FatalError
$LN51@PyExc_Init:
  02a7a	48 8b cf	 mov	 rcx, rdi
  02a7d	e8 00 00 00 00	 call	 _Py_DecRef

; 2622 :     POST_INIT(BrokenPipeError);

  02a82	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_BrokenPipeError
  02a89	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BA@OKFJGAGB@BrokenPipeError?$AA@
  02a90	48 8b cb	 mov	 rcx, rbx
  02a93	e8 00 00 00 00	 call	 PyDict_SetItemString
  02a98	85 c0		 test	 eax, eax
  02a9a	74 0c		 je	 SHORT $LN49@PyExc_Init
  02a9c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02aa3	e8 00 00 00 00	 call	 Py_FatalError
$LN49@PyExc_Init:

; 2623 :     ADD_ERRNO(BrokenPipeError, EPIPE);

  02aa8	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  02aad	e8 00 00 00 00	 call	 PyLong_FromLong
  02ab2	48 8b f8	 mov	 rdi, rax
  02ab5	48 85 c0	 test	 rax, rax
  02ab8	74 1a		 je	 SHORT $LN47@PyExc_Init
  02aba	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_BrokenPipeError
  02ac1	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  02ac8	48 8b d0	 mov	 rdx, rax
  02acb	e8 00 00 00 00	 call	 PyDict_SetItem
  02ad0	85 c0		 test	 eax, eax
  02ad2	74 0c		 je	 SHORT $LN48@PyExc_Init
$LN47@PyExc_Init:
  02ad4	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  02adb	e8 00 00 00 00	 call	 Py_FatalError
$LN48@PyExc_Init:
  02ae0	48 8b cf	 mov	 rcx, rdi
  02ae3	e8 00 00 00 00	 call	 _Py_DecRef

; 2624 :     ADD_ERRNO(BrokenPipeError, ESHUTDOWN);

  02ae8	b9 4a 27 00 00	 mov	 ecx, 10058		; 0000274aH
  02aed	e8 00 00 00 00	 call	 PyLong_FromLong
  02af2	48 8b f8	 mov	 rdi, rax
  02af5	48 85 c0	 test	 rax, rax
  02af8	74 1a		 je	 SHORT $LN45@PyExc_Init
  02afa	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_BrokenPipeError
  02b01	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  02b08	48 8b d0	 mov	 rdx, rax
  02b0b	e8 00 00 00 00	 call	 PyDict_SetItem
  02b10	85 c0		 test	 eax, eax
  02b12	74 0c		 je	 SHORT $LN46@PyExc_Init
$LN45@PyExc_Init:
  02b14	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  02b1b	e8 00 00 00 00	 call	 Py_FatalError
$LN46@PyExc_Init:
  02b20	48 8b cf	 mov	 rcx, rdi
  02b23	e8 00 00 00 00	 call	 _Py_DecRef

; 2625 :     POST_INIT(ChildProcessError);

  02b28	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ChildProcessError
  02b2f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BC@LJAFFAPL@ChildProcessError?$AA@
  02b36	48 8b cb	 mov	 rcx, rbx
  02b39	e8 00 00 00 00	 call	 PyDict_SetItemString
  02b3e	85 c0		 test	 eax, eax
  02b40	74 0c		 je	 SHORT $LN44@PyExc_Init
  02b42	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02b49	e8 00 00 00 00	 call	 Py_FatalError
$LN44@PyExc_Init:

; 2626 :     ADD_ERRNO(ChildProcessError, ECHILD);

  02b4e	b9 0a 00 00 00	 mov	 ecx, 10
  02b53	e8 00 00 00 00	 call	 PyLong_FromLong
  02b58	48 8b f8	 mov	 rdi, rax
  02b5b	48 85 c0	 test	 rax, rax
  02b5e	74 1a		 je	 SHORT $LN42@PyExc_Init
  02b60	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ChildProcessError
  02b67	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  02b6e	48 8b d0	 mov	 rdx, rax
  02b71	e8 00 00 00 00	 call	 PyDict_SetItem
  02b76	85 c0		 test	 eax, eax
  02b78	74 0c		 je	 SHORT $LN43@PyExc_Init
$LN42@PyExc_Init:
  02b7a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  02b81	e8 00 00 00 00	 call	 Py_FatalError
$LN43@PyExc_Init:
  02b86	48 8b cf	 mov	 rcx, rdi
  02b89	e8 00 00 00 00	 call	 _Py_DecRef

; 2627 :     POST_INIT(ConnectionAbortedError);

  02b8e	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ConnectionAbortedError
  02b95	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BH@IAHALHIL@ConnectionAbortedError?$AA@
  02b9c	48 8b cb	 mov	 rcx, rbx
  02b9f	e8 00 00 00 00	 call	 PyDict_SetItemString
  02ba4	85 c0		 test	 eax, eax
  02ba6	74 0c		 je	 SHORT $LN41@PyExc_Init
  02ba8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02baf	e8 00 00 00 00	 call	 Py_FatalError
$LN41@PyExc_Init:

; 2628 :     ADD_ERRNO(ConnectionAbortedError, ECONNABORTED);

  02bb4	b9 45 27 00 00	 mov	 ecx, 10053		; 00002745H
  02bb9	e8 00 00 00 00	 call	 PyLong_FromLong
  02bbe	48 8b f8	 mov	 rdi, rax
  02bc1	48 85 c0	 test	 rax, rax
  02bc4	74 1a		 je	 SHORT $LN39@PyExc_Init
  02bc6	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ConnectionAbortedError
  02bcd	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  02bd4	48 8b d0	 mov	 rdx, rax
  02bd7	e8 00 00 00 00	 call	 PyDict_SetItem
  02bdc	85 c0		 test	 eax, eax
  02bde	74 0c		 je	 SHORT $LN40@PyExc_Init
$LN39@PyExc_Init:
  02be0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  02be7	e8 00 00 00 00	 call	 Py_FatalError
$LN40@PyExc_Init:
  02bec	48 8b cf	 mov	 rcx, rdi
  02bef	e8 00 00 00 00	 call	 _Py_DecRef

; 2629 :     POST_INIT(ConnectionRefusedError);

  02bf4	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ConnectionRefusedError
  02bfb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BH@NFNMCF@ConnectionRefusedError?$AA@
  02c02	48 8b cb	 mov	 rcx, rbx
  02c05	e8 00 00 00 00	 call	 PyDict_SetItemString
  02c0a	85 c0		 test	 eax, eax
  02c0c	74 0c		 je	 SHORT $LN38@PyExc_Init
  02c0e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02c15	e8 00 00 00 00	 call	 Py_FatalError
$LN38@PyExc_Init:

; 2630 :     ADD_ERRNO(ConnectionRefusedError, ECONNREFUSED);

  02c1a	b9 4d 27 00 00	 mov	 ecx, 10061		; 0000274dH
  02c1f	e8 00 00 00 00	 call	 PyLong_FromLong
  02c24	48 8b f8	 mov	 rdi, rax
  02c27	48 85 c0	 test	 rax, rax
  02c2a	74 1a		 je	 SHORT $LN36@PyExc_Init
  02c2c	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ConnectionRefusedError
  02c33	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  02c3a	48 8b d0	 mov	 rdx, rax
  02c3d	e8 00 00 00 00	 call	 PyDict_SetItem
  02c42	85 c0		 test	 eax, eax
  02c44	74 0c		 je	 SHORT $LN37@PyExc_Init
$LN36@PyExc_Init:
  02c46	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  02c4d	e8 00 00 00 00	 call	 Py_FatalError
$LN37@PyExc_Init:
  02c52	48 8b cf	 mov	 rcx, rdi
  02c55	e8 00 00 00 00	 call	 _Py_DecRef

; 2631 :     POST_INIT(ConnectionResetError);

  02c5a	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ConnectionResetError
  02c61	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@KPCMAHCN@ConnectionResetError?$AA@
  02c68	48 8b cb	 mov	 rcx, rbx
  02c6b	e8 00 00 00 00	 call	 PyDict_SetItemString
  02c70	85 c0		 test	 eax, eax
  02c72	74 0c		 je	 SHORT $LN35@PyExc_Init
  02c74	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02c7b	e8 00 00 00 00	 call	 Py_FatalError
$LN35@PyExc_Init:

; 2632 :     ADD_ERRNO(ConnectionResetError, ECONNRESET);

  02c80	b9 46 27 00 00	 mov	 ecx, 10054		; 00002746H
  02c85	e8 00 00 00 00	 call	 PyLong_FromLong
  02c8a	48 8b f8	 mov	 rdi, rax
  02c8d	48 85 c0	 test	 rax, rax
  02c90	74 1a		 je	 SHORT $LN33@PyExc_Init
  02c92	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ConnectionResetError
  02c99	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  02ca0	48 8b d0	 mov	 rdx, rax
  02ca3	e8 00 00 00 00	 call	 PyDict_SetItem
  02ca8	85 c0		 test	 eax, eax
  02caa	74 0c		 je	 SHORT $LN34@PyExc_Init
$LN33@PyExc_Init:
  02cac	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  02cb3	e8 00 00 00 00	 call	 Py_FatalError
$LN34@PyExc_Init:
  02cb8	48 8b cf	 mov	 rcx, rdi
  02cbb	e8 00 00 00 00	 call	 _Py_DecRef

; 2633 :     POST_INIT(FileExistsError);

  02cc0	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_FileExistsError
  02cc7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BA@FBEHCPFP@FileExistsError?$AA@
  02cce	48 8b cb	 mov	 rcx, rbx
  02cd1	e8 00 00 00 00	 call	 PyDict_SetItemString
  02cd6	85 c0		 test	 eax, eax
  02cd8	74 0c		 je	 SHORT $LN32@PyExc_Init
  02cda	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02ce1	e8 00 00 00 00	 call	 Py_FatalError
$LN32@PyExc_Init:

; 2634 :     ADD_ERRNO(FileExistsError, EEXIST);

  02ce6	b9 11 00 00 00	 mov	 ecx, 17
  02ceb	e8 00 00 00 00	 call	 PyLong_FromLong
  02cf0	48 8b f8	 mov	 rdi, rax
  02cf3	48 85 c0	 test	 rax, rax
  02cf6	74 1a		 je	 SHORT $LN30@PyExc_Init
  02cf8	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_FileExistsError
  02cff	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  02d06	48 8b d0	 mov	 rdx, rax
  02d09	e8 00 00 00 00	 call	 PyDict_SetItem
  02d0e	85 c0		 test	 eax, eax
  02d10	74 0c		 je	 SHORT $LN31@PyExc_Init
$LN30@PyExc_Init:
  02d12	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  02d19	e8 00 00 00 00	 call	 Py_FatalError
$LN31@PyExc_Init:
  02d1e	48 8b cf	 mov	 rcx, rdi
  02d21	e8 00 00 00 00	 call	 _Py_DecRef

; 2635 :     POST_INIT(FileNotFoundError);

  02d26	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_FileNotFoundError
  02d2d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BC@IPPJKII@FileNotFoundError?$AA@
  02d34	48 8b cb	 mov	 rcx, rbx
  02d37	e8 00 00 00 00	 call	 PyDict_SetItemString
  02d3c	85 c0		 test	 eax, eax
  02d3e	74 0c		 je	 SHORT $LN29@PyExc_Init
  02d40	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02d47	e8 00 00 00 00	 call	 Py_FatalError
$LN29@PyExc_Init:

; 2636 :     ADD_ERRNO(FileNotFoundError, ENOENT);

  02d4c	b9 02 00 00 00	 mov	 ecx, 2
  02d51	e8 00 00 00 00	 call	 PyLong_FromLong
  02d56	48 8b f8	 mov	 rdi, rax
  02d59	48 85 c0	 test	 rax, rax
  02d5c	74 1a		 je	 SHORT $LN27@PyExc_Init
  02d5e	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_FileNotFoundError
  02d65	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  02d6c	48 8b d0	 mov	 rdx, rax
  02d6f	e8 00 00 00 00	 call	 PyDict_SetItem
  02d74	85 c0		 test	 eax, eax
  02d76	74 0c		 je	 SHORT $LN28@PyExc_Init
$LN27@PyExc_Init:
  02d78	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  02d7f	e8 00 00 00 00	 call	 Py_FatalError
$LN28@PyExc_Init:
  02d84	48 8b cf	 mov	 rcx, rdi
  02d87	e8 00 00 00 00	 call	 _Py_DecRef

; 2637 :     POST_INIT(IsADirectoryError);

  02d8c	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_IsADirectoryError
  02d93	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BC@EPPFJLG@IsADirectoryError?$AA@
  02d9a	48 8b cb	 mov	 rcx, rbx
  02d9d	e8 00 00 00 00	 call	 PyDict_SetItemString
  02da2	85 c0		 test	 eax, eax
  02da4	74 0c		 je	 SHORT $LN26@PyExc_Init
  02da6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02dad	e8 00 00 00 00	 call	 Py_FatalError
$LN26@PyExc_Init:

; 2638 :     ADD_ERRNO(IsADirectoryError, EISDIR);

  02db2	b9 15 00 00 00	 mov	 ecx, 21
  02db7	e8 00 00 00 00	 call	 PyLong_FromLong
  02dbc	48 8b f8	 mov	 rdi, rax
  02dbf	48 85 c0	 test	 rax, rax
  02dc2	74 1a		 je	 SHORT $LN24@PyExc_Init
  02dc4	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_IsADirectoryError
  02dcb	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  02dd2	48 8b d0	 mov	 rdx, rax
  02dd5	e8 00 00 00 00	 call	 PyDict_SetItem
  02dda	85 c0		 test	 eax, eax
  02ddc	74 0c		 je	 SHORT $LN25@PyExc_Init
$LN24@PyExc_Init:
  02dde	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  02de5	e8 00 00 00 00	 call	 Py_FatalError
$LN25@PyExc_Init:
  02dea	48 8b cf	 mov	 rcx, rdi
  02ded	e8 00 00 00 00	 call	 _Py_DecRef

; 2639 :     POST_INIT(NotADirectoryError);

  02df2	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_NotADirectoryError
  02df9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BD@BDDBNNNE@NotADirectoryError?$AA@
  02e00	48 8b cb	 mov	 rcx, rbx
  02e03	e8 00 00 00 00	 call	 PyDict_SetItemString
  02e08	85 c0		 test	 eax, eax
  02e0a	74 0c		 je	 SHORT $LN23@PyExc_Init
  02e0c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02e13	e8 00 00 00 00	 call	 Py_FatalError
$LN23@PyExc_Init:

; 2640 :     ADD_ERRNO(NotADirectoryError, ENOTDIR);

  02e18	b9 14 00 00 00	 mov	 ecx, 20
  02e1d	e8 00 00 00 00	 call	 PyLong_FromLong
  02e22	48 8b f8	 mov	 rdi, rax
  02e25	48 85 c0	 test	 rax, rax
  02e28	74 1a		 je	 SHORT $LN21@PyExc_Init
  02e2a	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_NotADirectoryError
  02e31	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  02e38	48 8b d0	 mov	 rdx, rax
  02e3b	e8 00 00 00 00	 call	 PyDict_SetItem
  02e40	85 c0		 test	 eax, eax
  02e42	74 0c		 je	 SHORT $LN22@PyExc_Init
$LN21@PyExc_Init:
  02e44	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  02e4b	e8 00 00 00 00	 call	 Py_FatalError
$LN22@PyExc_Init:
  02e50	48 8b cf	 mov	 rcx, rdi
  02e53	e8 00 00 00 00	 call	 _Py_DecRef

; 2641 :     POST_INIT(InterruptedError);

  02e58	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_InterruptedError
  02e5f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BB@PFBGOELP@InterruptedError?$AA@
  02e66	48 8b cb	 mov	 rcx, rbx
  02e69	e8 00 00 00 00	 call	 PyDict_SetItemString
  02e6e	85 c0		 test	 eax, eax
  02e70	74 0c		 je	 SHORT $LN20@PyExc_Init
  02e72	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02e79	e8 00 00 00 00	 call	 Py_FatalError
$LN20@PyExc_Init:

; 2642 :     ADD_ERRNO(InterruptedError, EINTR);

  02e7e	b9 04 00 00 00	 mov	 ecx, 4
  02e83	e8 00 00 00 00	 call	 PyLong_FromLong
  02e88	48 8b f8	 mov	 rdi, rax
  02e8b	48 85 c0	 test	 rax, rax
  02e8e	74 1a		 je	 SHORT $LN18@PyExc_Init
  02e90	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_InterruptedError
  02e97	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  02e9e	48 8b d0	 mov	 rdx, rax
  02ea1	e8 00 00 00 00	 call	 PyDict_SetItem
  02ea6	85 c0		 test	 eax, eax
  02ea8	74 0c		 je	 SHORT $LN19@PyExc_Init
$LN18@PyExc_Init:
  02eaa	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  02eb1	e8 00 00 00 00	 call	 Py_FatalError
$LN19@PyExc_Init:
  02eb6	48 8b cf	 mov	 rcx, rdi
  02eb9	e8 00 00 00 00	 call	 _Py_DecRef

; 2643 :     POST_INIT(PermissionError);

  02ebe	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_PermissionError
  02ec5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BA@EGIOHDMA@PermissionError?$AA@
  02ecc	48 8b cb	 mov	 rcx, rbx
  02ecf	e8 00 00 00 00	 call	 PyDict_SetItemString
  02ed4	85 c0		 test	 eax, eax
  02ed6	74 0c		 je	 SHORT $LN17@PyExc_Init
  02ed8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02edf	e8 00 00 00 00	 call	 Py_FatalError
$LN17@PyExc_Init:

; 2644 :     ADD_ERRNO(PermissionError, EACCES);

  02ee4	b9 0d 00 00 00	 mov	 ecx, 13
  02ee9	e8 00 00 00 00	 call	 PyLong_FromLong
  02eee	48 8b f8	 mov	 rdi, rax
  02ef1	48 85 c0	 test	 rax, rax
  02ef4	74 1a		 je	 SHORT $LN15@PyExc_Init
  02ef6	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_PermissionError
  02efd	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  02f04	48 8b d0	 mov	 rdx, rax
  02f07	e8 00 00 00 00	 call	 PyDict_SetItem
  02f0c	85 c0		 test	 eax, eax
  02f0e	74 0c		 je	 SHORT $LN16@PyExc_Init
$LN15@PyExc_Init:
  02f10	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  02f17	e8 00 00 00 00	 call	 Py_FatalError
$LN16@PyExc_Init:
  02f1c	48 8b cf	 mov	 rcx, rdi
  02f1f	e8 00 00 00 00	 call	 _Py_DecRef

; 2645 :     ADD_ERRNO(PermissionError, EPERM);

  02f24	b9 01 00 00 00	 mov	 ecx, 1
  02f29	e8 00 00 00 00	 call	 PyLong_FromLong
  02f2e	48 8b f8	 mov	 rdi, rax
  02f31	48 85 c0	 test	 rax, rax
  02f34	74 1a		 je	 SHORT $LN13@PyExc_Init
  02f36	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_PermissionError
  02f3d	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  02f44	48 8b d0	 mov	 rdx, rax
  02f47	e8 00 00 00 00	 call	 PyDict_SetItem
  02f4c	85 c0		 test	 eax, eax
  02f4e	74 0c		 je	 SHORT $LN14@PyExc_Init
$LN13@PyExc_Init:
  02f50	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  02f57	e8 00 00 00 00	 call	 Py_FatalError
$LN14@PyExc_Init:
  02f5c	48 8b cf	 mov	 rcx, rdi
  02f5f	e8 00 00 00 00	 call	 _Py_DecRef

; 2646 :     POST_INIT(ProcessLookupError);

  02f64	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ProcessLookupError
  02f6b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BD@LBBCHOLB@ProcessLookupError?$AA@
  02f72	48 8b cb	 mov	 rcx, rbx
  02f75	e8 00 00 00 00	 call	 PyDict_SetItemString
  02f7a	85 c0		 test	 eax, eax
  02f7c	74 0c		 je	 SHORT $LN12@PyExc_Init
  02f7e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02f85	e8 00 00 00 00	 call	 Py_FatalError
$LN12@PyExc_Init:

; 2647 :     ADD_ERRNO(ProcessLookupError, ESRCH);

  02f8a	b9 03 00 00 00	 mov	 ecx, 3
  02f8f	e8 00 00 00 00	 call	 PyLong_FromLong
  02f94	48 8b f8	 mov	 rdi, rax
  02f97	48 85 c0	 test	 rax, rax
  02f9a	74 1a		 je	 SHORT $LN10@PyExc_Init
  02f9c	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ProcessLookupError
  02fa3	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  02faa	48 8b d0	 mov	 rdx, rax
  02fad	e8 00 00 00 00	 call	 PyDict_SetItem
  02fb2	85 c0		 test	 eax, eax
  02fb4	74 0c		 je	 SHORT $LN11@PyExc_Init
$LN10@PyExc_Init:
  02fb6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  02fbd	e8 00 00 00 00	 call	 Py_FatalError
$LN11@PyExc_Init:
  02fc2	48 8b cf	 mov	 rcx, rdi
  02fc5	e8 00 00 00 00	 call	 _Py_DecRef

; 2648 :     POST_INIT(TimeoutError);

  02fca	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_TimeoutError
  02fd1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0N@BMLDFELP@TimeoutError?$AA@
  02fd8	48 8b cb	 mov	 rcx, rbx
  02fdb	e8 00 00 00 00	 call	 PyDict_SetItemString
  02fe0	85 c0		 test	 eax, eax
  02fe2	74 0c		 je	 SHORT $LN9@PyExc_Init
  02fe4	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02feb	e8 00 00 00 00	 call	 Py_FatalError
$LN9@PyExc_Init:

; 2649 :     ADD_ERRNO(TimeoutError, ETIMEDOUT);

  02ff0	b9 4c 27 00 00	 mov	 ecx, 10060		; 0000274cH
  02ff5	e8 00 00 00 00	 call	 PyLong_FromLong
  02ffa	48 8b d8	 mov	 rbx, rax
  02ffd	48 85 c0	 test	 rax, rax
  03000	74 1a		 je	 SHORT $LN7@PyExc_Init
  03002	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_TimeoutError
  03009	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  03010	48 8b d0	 mov	 rdx, rax
  03013	e8 00 00 00 00	 call	 PyDict_SetItem
  03018	85 c0		 test	 eax, eax
  0301a	74 0c		 je	 SHORT $LN8@PyExc_Init
$LN7@PyExc_Init:
  0301c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  03023	e8 00 00 00 00	 call	 Py_FatalError
$LN8@PyExc_Init:
  03028	48 8b cb	 mov	 rcx, rbx
  0302b	e8 00 00 00 00	 call	 _Py_DecRef

; 2650 : 
; 2651 :     preallocate_memerrors();

  03030	e8 00 00 00 00	 call	 preallocate_memerrors

; 2652 : 
; 2653 :     if (!PyExc_RecursionErrorInst) {

  03035	48 83 3d 00 00
	00 00 00	 cmp	 QWORD PTR PyExc_RecursionErrorInst, 0
  0303d	0f 85 b4 00 00
	00		 jne	 $LN4@PyExc_Init

; 2654 :         PyExc_RecursionErrorInst = BaseException_new(&_PyExc_RuntimeError, NULL, NULL);

  03043	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_RuntimeError
  0304a	45 33 c0	 xor	 r8d, r8d
  0304d	33 d2		 xor	 edx, edx
  0304f	48 89 74 24 40	 mov	 QWORD PTR [rsp+64], rsi
  03054	e8 00 00 00 00	 call	 BaseException_new
  03059	48 8b f0	 mov	 rsi, rax
  0305c	48 89 05 00 00
	00 00		 mov	 QWORD PTR PyExc_RecursionErrorInst, rax

; 2655 :         if (!PyExc_RecursionErrorInst)

  03063	48 85 c0	 test	 rax, rax
  03066	75 1b		 jne	 SHORT $LN5@PyExc_Init

; 2656 :             Py_FatalError("Cannot pre-allocate RuntimeError instance for "
; 2657 :                             "recursion errors");

  03068	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0DP@ICIAEEBH@Cannot?5pre?9allocate?5RuntimeError@
  0306f	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]

; 2675 :         }
; 2676 :     }
; 2677 : }

  03074	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  03079	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0307d	5f		 pop	 rdi
  0307e	e9 00 00 00 00	 jmp	 Py_FatalError
$LN5@PyExc_Init:

; 2658 :         else {
; 2659 :             PyBaseExceptionObject *err_inst =
; 2660 :                 (PyBaseExceptionObject *)PyExc_RecursionErrorInst;
; 2661 :             PyObject *args_tuple;
; 2662 :             PyObject *exc_message;
; 2663 :             exc_message = PyUnicode_FromString("maximum recursion depth exceeded");

  03083	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CB@JIEDPDLF@maximum?5recursion?5depth?5exceeded@
  0308a	e8 00 00 00 00	 call	 PyUnicode_FromString
  0308f	48 8b f8	 mov	 rdi, rax

; 2664 :             if (!exc_message)

  03092	48 85 c0	 test	 rax, rax
  03095	75 0c		 jne	 SHORT $LN3@PyExc_Init

; 2665 :                 Py_FatalError("cannot allocate argument for RuntimeError "
; 2666 :                                 "pre-allocation");

  03097	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0DJ@IIJEFPMJ@cannot?5allocate?5argument?5for?5Run@
  0309e	e8 00 00 00 00	 call	 Py_FatalError
$LN3@PyExc_Init:

; 2667 :             args_tuple = PyTuple_Pack(1, exc_message);

  030a3	48 8b d7	 mov	 rdx, rdi
  030a6	b9 01 00 00 00	 mov	 ecx, 1
  030ab	e8 00 00 00 00	 call	 PyTuple_Pack
  030b0	48 8b d8	 mov	 rbx, rax

; 2668 :             if (!args_tuple)

  030b3	48 85 c0	 test	 rax, rax
  030b6	75 0c		 jne	 SHORT $LN2@PyExc_Init

; 2669 :                 Py_FatalError("cannot allocate tuple for RuntimeError "
; 2670 :                                 "pre-allocation");

  030b8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0DG@DCAIDKJK@cannot?5allocate?5tuple?5for?5Runtim@
  030bf	e8 00 00 00 00	 call	 Py_FatalError
$LN2@PyExc_Init:

; 2671 :             Py_DECREF(exc_message);

  030c4	48 8b cf	 mov	 rcx, rdi
  030c7	e8 00 00 00 00	 call	 _Py_DecRef

; 2672 :             if (BaseException_init(err_inst, args_tuple, NULL))

  030cc	45 33 c0	 xor	 r8d, r8d
  030cf	48 8b d3	 mov	 rdx, rbx
  030d2	48 8b ce	 mov	 rcx, rsi
  030d5	e8 00 00 00 00	 call	 BaseException_init
  030da	85 c0		 test	 eax, eax
  030dc	74 0c		 je	 SHORT $LN1@PyExc_Init

; 2673 :                 Py_FatalError("init of pre-allocated RuntimeError failed");

  030de	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CK@HNJAAFFN@init?5of?5pre?9allocated?5RuntimeErr@
  030e5	e8 00 00 00 00	 call	 Py_FatalError
$LN1@PyExc_Init:

; 2674 :             Py_DECREF(args_tuple);

  030ea	48 8b cb	 mov	 rcx, rbx
  030ed	e8 00 00 00 00	 call	 _Py_DecRef
  030f2	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
$LN4@PyExc_Init:

; 2675 :         }
; 2676 :     }
; 2677 : }

  030f7	48 8b 5c 24 48	 mov	 rbx, QWORD PTR [rsp+72]
  030fc	48 83 c4 30	 add	 rsp, 48			; 00000030H
  03100	5f		 pop	 rdi
  03101	c3		 ret	 0
_PyExc_Init ENDP
_TEXT	ENDS
PUBLIC	??_C@_0M@HDPKIMAI@_PyExc_Fini?$AA@		; `string'
PUBLIC	_PyExc_Fini
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$_PyExc_Fini DD imagerel $LN33
	DD	imagerel $LN33+368
	DD	imagerel $unwind$_PyExc_Fini
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_PyExc_Fini DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT ??_C@_0M@HDPKIMAI@_PyExc_Fini?$AA@
CONST	SEGMENT
??_C@_0M@HDPKIMAI@_PyExc_Fini?$AA@ DB '_PyExc_Fini', 00H ; `string'
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
CONST	ENDS
;	COMDAT _PyExc_Fini
_TEXT	SEGMENT
_PyExc_Fini PROC					; COMDAT

; 2681 : {

$LN33:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H

; 2682 :     Py_CLEAR(PyExc_RecursionErrorInst);

  00006	4c 8b 0d 00 00
	00 00		 mov	 r9, QWORD PTR PyExc_RecursionErrorInst
  0000d	4d 85 c9	 test	 r9, r9
  00010	0f 84 9c 00 00
	00		 je	 $LN7@PyExc_Fini
  00016	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0001d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0M@HDPKIMAI@_PyExc_Fini?$AA@
  00024	41 b8 7a 0a 00
	00		 mov	 r8d, 2682		; 00000a7aH
  0002a	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00032	e8 00 00 00 00	 call	 _PyParallel_Guard
  00037	85 c0		 test	 eax, eax
  00039	75 77		 jne	 SHORT $LN7@PyExc_Fini
  0003b	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR PyExc_RecursionErrorInst
  00042	48 c7 05 00 00
	00 00 00 00 00
	00		 mov	 QWORD PTR PyExc_RecursionErrorInst, 0
  0004d	e8 00 00 00 00	 call	 _Py_PXCTX
  00052	85 c0		 test	 eax, eax
  00054	75 5c		 jne	 SHORT $LN7@PyExc_Fini
  00056	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  0005a	a8 20		 test	 al, 32			; 00000020H
  0005c	75 4c		 jne	 SHORT $LN15@PyExc_Fini
  0005e	84 c0		 test	 al, al
  00060	78 48		 js	 SHORT $LN15@PyExc_Fini
  00062	a8 02		 test	 al, 2
  00064	75 4c		 jne	 SHORT $LN7@PyExc_Fini
  00066	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  0006a	75 46		 jne	 SHORT $LN7@PyExc_Fini
  0006c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00073	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  0007a	4c 8b cb	 mov	 r9, rbx
  0007d	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  00083	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0008b	e8 00 00 00 00	 call	 _PyParallel_Guard
  00090	48 8b cb	 mov	 rcx, rbx
  00093	85 c0		 test	 eax, eax
  00095	74 07		 je	 SHORT $LN20@PyExc_Fini
  00097	e8 00 00 00 00	 call	 _Px_Dealloc
  0009c	eb 14		 jmp	 SHORT $LN7@PyExc_Fini
$LN20@PyExc_Fini:
  0009e	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  000a2	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  000a8	eb 08		 jmp	 SHORT $LN7@PyExc_Fini
$LN15@PyExc_Fini:
  000aa	48 8b cb	 mov	 rcx, rbx
  000ad	e8 00 00 00 00	 call	 Px_DecRef
$LN7@PyExc_Fini:

; 2683 :     free_preallocated_memerrors();

  000b2	e8 00 00 00 00	 call	 free_preallocated_memerrors

; 2684 :     Py_CLEAR(errnomap);

  000b7	4c 8b 0d 00 00
	00 00		 mov	 r9, QWORD PTR errnomap
  000be	4d 85 c9	 test	 r9, r9
  000c1	0f 84 a3 00 00
	00		 je	 $LN3@PyExc_Fini
  000c7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  000ce	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0M@HDPKIMAI@_PyExc_Fini?$AA@
  000d5	41 b8 7c 0a 00
	00		 mov	 r8d, 2684		; 00000a7cH
  000db	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  000e3	e8 00 00 00 00	 call	 _PyParallel_Guard
  000e8	85 c0		 test	 eax, eax
  000ea	75 7e		 jne	 SHORT $LN3@PyExc_Fini
  000ec	48 8b 1d 00 00
	00 00		 mov	 rbx, QWORD PTR errnomap
  000f3	48 c7 05 00 00
	00 00 00 00 00
	00		 mov	 QWORD PTR errnomap, 0
  000fe	e8 00 00 00 00	 call	 _Py_PXCTX
  00103	85 c0		 test	 eax, eax
  00105	75 63		 jne	 SHORT $LN3@PyExc_Fini
  00107	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  0010b	a8 20		 test	 al, 32			; 00000020H
  0010d	75 53		 jne	 SHORT $LN26@PyExc_Fini
  0010f	84 c0		 test	 al, al
  00111	78 4f		 js	 SHORT $LN26@PyExc_Fini
  00113	a8 02		 test	 al, 2
  00115	75 53		 jne	 SHORT $LN3@PyExc_Fini
  00117	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  0011b	75 4d		 jne	 SHORT $LN3@PyExc_Fini
  0011d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00124	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  0012b	4c 8b cb	 mov	 r9, rbx
  0012e	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  00134	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0013c	e8 00 00 00 00	 call	 _PyParallel_Guard
  00141	48 8b cb	 mov	 rcx, rbx
  00144	85 c0		 test	 eax, eax
  00146	74 0a		 je	 SHORT $LN31@PyExc_Fini

; 2685 : }

  00148	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0014c	5b		 pop	 rbx
  0014d	e9 00 00 00 00	 jmp	 _Px_Dealloc

; 2684 :     Py_CLEAR(errnomap);

$LN31@PyExc_Fini:
  00152	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]

; 2685 : }

  00156	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0015a	5b		 pop	 rbx
  0015b	48 ff a0 88 00
	00 00		 rex_jmp QWORD PTR [rax+136]

; 2684 :     Py_CLEAR(errnomap);

$LN26@PyExc_Fini:
  00162	48 8b cb	 mov	 rcx, rbx
  00165	e8 00 00 00 00	 call	 Px_DecRef
$LN3@PyExc_Fini:

; 2685 : }

  0016a	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0016e	5b		 pop	 rbx
  0016f	c3		 ret	 0
_PyExc_Fini ENDP
_TEXT	ENDS
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$BaseException_with_traceback DD imagerel BaseException_with_traceback
	DD	imagerel BaseException_with_traceback+94
	DD	imagerel $unwind$BaseException_with_traceback
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_with_traceback DD 020601H
	DD	030025206H
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
xdata	ENDS
;	COMDAT BaseException_with_traceback
_TEXT	SEGMENT
self$ = 64
tb$ = 72
BaseException_with_traceback PROC			; COMDAT

; 169  : BaseException_with_traceback(PyObject *self, PyObject *tb) {

  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8b d9	 mov	 rbx, rcx

; 170  :     if (PyException_SetTraceback(self, tb))

  00009	e8 00 00 00 00	 call	 PyException_SetTraceback
  0000e	85 c0		 test	 eax, eax
  00010	74 08		 je	 SHORT $LN1@BaseExcept@14

; 171  :         return NULL;

  00012	33 c0		 xor	 eax, eax

; 175  : }

  00014	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00018	5b		 pop	 rbx
  00019	c3		 ret	 0
$LN1@BaseExcept@14:

; 172  : 
; 173  :     Py_INCREF(self);

  0001a	e8 00 00 00 00	 call	 _Py_PXCTX
  0001f	85 c0		 test	 eax, eax
  00021	75 32		 jne	 SHORT $LN5@BaseExcept@14
  00023	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00031	4c 8b cb	 mov	 r9, rbx
  00034	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  0003a	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00042	e8 00 00 00 00	 call	 _PyParallel_Guard
  00047	85 c0		 test	 eax, eax
  00049	75 06		 jne	 SHORT $LN4@BaseExcept@14
  0004b	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  0004f	74 04		 je	 SHORT $LN5@BaseExcept@14
$LN4@BaseExcept@14:
  00051	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN5@BaseExcept@14:

; 174  :     return self;

  00055	48 8b c3	 mov	 rax, rbx

; 175  : }

  00058	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0005c	5b		 pop	 rbx
  0005d	c3		 ret	 0
BaseException_with_traceback ENDP
_TEXT	ENDS
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$BaseException_get_context DD imagerel BaseException_get_context
	DD	imagerel BaseException_get_context+95
	DD	imagerel $unwind$BaseException_get_context
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_get_context DD 010401H
	DD	06204H
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
xdata	ENDS
;	COMDAT BaseException_get_context
_TEXT	SEGMENT
self$ = 64
BaseException_get_context PROC				; COMDAT

; 248  : BaseException_get_context(PyObject *self) {

  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 249  :     PyObject *res = PyException_GetContext(self);

  00004	e8 00 00 00 00	 call	 PyException_GetContext

; 250  :     if (res)

  00009	48 85 c0	 test	 rax, rax

; 251  :         return res;  /* new reference already returned above */

  0000c	75 4c		 jne	 SHORT $LN2@BaseExcept@15

; 252  :     Py_RETURN_NONE;

  0000e	e8 00 00 00 00	 call	 _Py_PXCTX
  00013	85 c0		 test	 eax, eax
  00015	75 3c		 jne	 SHORT $LN5@BaseExcept@15
  00017	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:_Py_NoneStruct
  0001e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00025	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  0002c	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00032	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  0003a	e8 00 00 00 00	 call	 _PyParallel_Guard
  0003f	85 c0		 test	 eax, eax
  00041	75 09		 jne	 SHORT $LN4@BaseExcept@15
  00043	f6 05 20 00 00
	00 20		 test	 BYTE PTR _Py_NoneStruct+32, 32 ; 00000020H
  0004a	74 07		 je	 SHORT $LN5@BaseExcept@15
$LN4@BaseExcept@15:
  0004c	48 ff 05 50 00
	00 00		 inc	 QWORD PTR _Py_NoneStruct+80
$LN5@BaseExcept@15:
  00053	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_NoneStruct
$LN2@BaseExcept@15:

; 253  : }

  0005a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0005e	c3		 ret	 0
BaseException_get_context ENDP
_TEXT	ENDS
PUBLIC	??_C@_0DM@EKFEABFK@exception?5context?5must?5be?5None?5o@ ; `string'
PUBLIC	??_C@_0BP@KFHGPADI@__context__?5may?5not?5be?5deleted?$AA@ ; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$BaseException_set_context DD imagerel BaseException_set_context
	DD	imagerel BaseException_set_context+151
	DD	imagerel $unwind$BaseException_set_context
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_set_context DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT ??_C@_0DM@EKFEABFK@exception?5context?5must?5be?5None?5o@
CONST	SEGMENT
??_C@_0DM@EKFEABFK@exception?5context?5must?5be?5None?5o@ DB 'exception c'
	DB	'ontext must be None or derive from BaseException', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@KFHGPADI@__context__?5may?5not?5be?5deleted?$AA@
CONST	SEGMENT
??_C@_0BP@KFHGPADI@__context__?5may?5not?5be?5deleted?$AA@ DB '__context_'
	DB	'_ may not be deleted', 00H			; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT BaseException_set_context
_TEXT	SEGMENT
self$ = 48
arg$ = 56
BaseException_set_context PROC				; COMDAT

; 256  : BaseException_set_context(PyObject *self, PyObject *arg) {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b da	 mov	 rbx, rdx
  0000d	48 8b f9	 mov	 rdi, rcx

; 257  :     if (arg == NULL) {

  00010	48 85 d2	 test	 rdx, rdx
  00013	75 21		 jne	 SHORT $LN6@BaseExcept@16

; 258  :         PyErr_SetString(PyExc_TypeError, "__context__ may not be deleted");

  00015	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  0001c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BP@KFHGPADI@__context__?5may?5not?5be?5deleted?$AA@
  00023	e8 00 00 00 00	 call	 PyErr_SetString

; 259  :         return -1;

  00028	83 c8 ff	 or	 eax, -1

; 271  :     return 0;
; 272  : }

  0002b	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
$LN6@BaseExcept@16:

; 260  :     } else if (arg == Py_None) {

  00036	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_NoneStruct
  0003d	48 3b d0	 cmp	 rdx, rax
  00040	75 04		 jne	 SHORT $LN4@BaseExcept@16

; 261  :         arg = NULL;

  00042	33 db		 xor	 ebx, ebx
  00044	eb 39		 jmp	 SHORT $LN1@BaseExcept@16
$LN4@BaseExcept@16:

; 262  :     } else if (!PyExceptionInstance_Check(arg)) {

  00046	48 8b 42 58	 mov	 rax, QWORD PTR [rdx+88]
  0004a	f7 80 00 01 00
	00 00 00 00 40	 test	 DWORD PTR [rax+256], 1073741824 ; 40000000H
  00054	75 21		 jne	 SHORT $LN2@BaseExcept@16

; 263  :         PyErr_SetString(PyExc_TypeError, "exception context must be None "
; 264  :                         "or derive from BaseException");

  00056	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  0005d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0DM@EKFEABFK@exception?5context?5must?5be?5None?5o@
  00064	e8 00 00 00 00	 call	 PyErr_SetString

; 265  :         return -1;

  00069	83 c8 ff	 or	 eax, -1

; 271  :     return 0;
; 272  : }

  0006c	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00071	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00075	5f		 pop	 rdi
  00076	c3		 ret	 0
$LN2@BaseExcept@16:

; 266  :     } else {
; 267  :         /* PyException_SetContext steals this reference */
; 268  :         Py_INCREF(arg);

  00077	48 8b ca	 mov	 rcx, rdx
  0007a	e8 00 00 00 00	 call	 _Py_IncRef
$LN1@BaseExcept@16:

; 269  :     }
; 270  :     PyException_SetContext(self, arg);

  0007f	48 8b d3	 mov	 rdx, rbx
  00082	48 8b cf	 mov	 rcx, rdi
  00085	e8 00 00 00 00	 call	 PyException_SetContext

; 271  :     return 0;
; 272  : }

  0008a	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0008f	33 c0		 xor	 eax, eax
  00091	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00095	5f		 pop	 rdi
  00096	c3		 ret	 0
BaseException_set_context ENDP
_TEXT	ENDS
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$BaseException_get_cause DD imagerel BaseException_get_cause
	DD	imagerel BaseException_get_cause+95
	DD	imagerel $unwind$BaseException_get_cause
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_get_cause DD 010401H
	DD	06204H
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
xdata	ENDS
;	COMDAT BaseException_get_cause
_TEXT	SEGMENT
self$ = 64
BaseException_get_cause PROC				; COMDAT

; 275  : BaseException_get_cause(PyObject *self) {

  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 276  :     PyObject *res = PyException_GetCause(self);

  00004	e8 00 00 00 00	 call	 PyException_GetCause

; 277  :     if (res)

  00009	48 85 c0	 test	 rax, rax

; 278  :         return res;  /* new reference already returned above */

  0000c	75 4c		 jne	 SHORT $LN2@BaseExcept@17

; 279  :     Py_RETURN_NONE;

  0000e	e8 00 00 00 00	 call	 _Py_PXCTX
  00013	85 c0		 test	 eax, eax
  00015	75 3c		 jne	 SHORT $LN5@BaseExcept@17
  00017	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:_Py_NoneStruct
  0001e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00025	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  0002c	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00032	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  0003a	e8 00 00 00 00	 call	 _PyParallel_Guard
  0003f	85 c0		 test	 eax, eax
  00041	75 09		 jne	 SHORT $LN4@BaseExcept@17
  00043	f6 05 20 00 00
	00 20		 test	 BYTE PTR _Py_NoneStruct+32, 32 ; 00000020H
  0004a	74 07		 je	 SHORT $LN5@BaseExcept@17
$LN4@BaseExcept@17:
  0004c	48 ff 05 50 00
	00 00		 inc	 QWORD PTR _Py_NoneStruct+80
$LN5@BaseExcept@17:
  00053	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_NoneStruct
$LN2@BaseExcept@17:

; 280  : }

  0005a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0005e	c3		 ret	 0
BaseException_get_cause ENDP
_TEXT	ENDS
PUBLIC	??_C@_0DK@EFOGLGHG@exception?5cause?5must?5be?5None?5or?5@ ; `string'
PUBLIC	??_C@_0BN@PKFHNKCD@__cause__?5may?5not?5be?5deleted?$AA@ ; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$BaseException_set_cause DD imagerel BaseException_set_cause
	DD	imagerel BaseException_set_cause+151
	DD	imagerel $unwind$BaseException_set_cause
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_set_cause DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT ??_C@_0DK@EFOGLGHG@exception?5cause?5must?5be?5None?5or?5@
CONST	SEGMENT
??_C@_0DK@EFOGLGHG@exception?5cause?5must?5be?5None?5or?5@ DB 'exception '
	DB	'cause must be None or derive from BaseException', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@PKFHNKCD@__cause__?5may?5not?5be?5deleted?$AA@
CONST	SEGMENT
??_C@_0BN@PKFHNKCD@__cause__?5may?5not?5be?5deleted?$AA@ DB '__cause__ ma'
	DB	'y not be deleted', 00H			; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT BaseException_set_cause
_TEXT	SEGMENT
self$ = 48
arg$ = 56
BaseException_set_cause PROC				; COMDAT

; 283  : BaseException_set_cause(PyObject *self, PyObject *arg) {

  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b da	 mov	 rbx, rdx
  0000d	48 8b f9	 mov	 rdi, rcx

; 284  :     if (arg == NULL) {

  00010	48 85 d2	 test	 rdx, rdx
  00013	75 21		 jne	 SHORT $LN6@BaseExcept@18

; 285  :         PyErr_SetString(PyExc_TypeError, "__cause__ may not be deleted");

  00015	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  0001c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BN@PKFHNKCD@__cause__?5may?5not?5be?5deleted?$AA@
  00023	e8 00 00 00 00	 call	 PyErr_SetString

; 286  :         return -1;

  00028	83 c8 ff	 or	 eax, -1

; 298  :     return 0;
; 299  : }

  0002b	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
$LN6@BaseExcept@18:

; 287  :     } else if (arg == Py_None) {

  00036	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_NoneStruct
  0003d	48 3b d0	 cmp	 rdx, rax
  00040	75 04		 jne	 SHORT $LN4@BaseExcept@18

; 288  :         arg = NULL;

  00042	33 db		 xor	 ebx, ebx
  00044	eb 39		 jmp	 SHORT $LN1@BaseExcept@18
$LN4@BaseExcept@18:

; 289  :     } else if (!PyExceptionInstance_Check(arg)) {

  00046	48 8b 42 58	 mov	 rax, QWORD PTR [rdx+88]
  0004a	f7 80 00 01 00
	00 00 00 00 40	 test	 DWORD PTR [rax+256], 1073741824 ; 40000000H
  00054	75 21		 jne	 SHORT $LN2@BaseExcept@18

; 290  :         PyErr_SetString(PyExc_TypeError, "exception cause must be None "
; 291  :                         "or derive from BaseException");

  00056	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  0005d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0DK@EFOGLGHG@exception?5cause?5must?5be?5None?5or?5@
  00064	e8 00 00 00 00	 call	 PyErr_SetString

; 292  :         return -1;

  00069	83 c8 ff	 or	 eax, -1

; 298  :     return 0;
; 299  : }

  0006c	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00071	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00075	5f		 pop	 rdi
  00076	c3		 ret	 0
$LN2@BaseExcept@18:

; 293  :     } else {
; 294  :         /* PyException_SetCause steals this reference */
; 295  :         Py_INCREF(arg);

  00077	48 8b ca	 mov	 rcx, rdx
  0007a	e8 00 00 00 00	 call	 _Py_IncRef
$LN1@BaseExcept@18:

; 296  :     }
; 297  :     PyException_SetCause(self, arg);

  0007f	48 8b d3	 mov	 rdx, rbx
  00082	48 8b cf	 mov	 rcx, rdi
  00085	e8 00 00 00 00	 call	 PyException_SetCause

; 298  :     return 0;
; 299  : }

  0008a	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0008f	33 c0		 xor	 eax, eax
  00091	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00095	5f		 pop	 rdi
  00096	c3		 ret	 0
BaseException_set_cause ENDP
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT oserror_use_init
_TEXT	SEGMENT
type$ = 8
oserror_use_init PROC					; COMDAT

; 861  :     /* When __init__ is defined in a OSError subclass, we want any
; 862  :        extraneous argument to __new__ to be ignored.  The only reasonable
; 863  :        solution, given __new__ takes a variable number of arguments,
; 864  :        is to defer arg parsing and initialization to __init__.
; 865  : 
; 866  :        But when __new__ is overriden as well, it should call our __new__
; 867  :        with the right arguments.
; 868  : 
; 869  :        (see http://bugs.python.org/issue12555#msg148829 )
; 870  :     */
; 871  :     if (type->tp_init != (initproc) OSError_init &&
; 872  :         type->tp_new == (newfunc) OSError_new) {

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:OSError_init
  00007	48 39 81 80 01
	00 00		 cmp	 QWORD PTR [rcx+384], rax
  0000e	74 16		 je	 SHORT $LN1@oserror_us
  00010	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:OSError_new
  00017	48 39 81 90 01
	00 00		 cmp	 QWORD PTR [rcx+400], rax
  0001e	75 06		 jne	 SHORT $LN1@oserror_us

; 873  :         assert((PyObject *) type != PyExc_OSError);
; 874  :         return 1;

  00020	b8 01 00 00 00	 mov	 eax, 1

; 877  : }

  00025	c3		 ret	 0
$LN1@oserror_us:

; 875  :     }
; 876  :     return 0;

  00026	33 c0		 xor	 eax, eax

; 877  : }

  00028	c3		 ret	 0
oserror_use_init ENDP
_TEXT	ENDS
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$OSError_init DD imagerel OSError_init
	DD	imagerel OSError_init+267
	DD	imagerel $unwind$OSError_init
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$OSError_init DD 040f01H
	DD	0c340fH
	DD	0700b720fH
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\exceptions.c
xdata	ENDS
;	COMDAT OSError_init
_TEXT	SEGMENT
strerror$ = 48
myerrno$ = 56
winerror$ = 80
self$ = 80
args$ = 88
kwds$ = 96
filename$ = 104
OSError_init PROC					; COMDAT

; 945  : {

  00000	48 89 5c 24 18	 mov	 QWORD PTR [rsp+24], rbx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	57		 push	 rdi
  0000b	48 83 ec 40	 sub	 rsp, 64			; 00000040H

; 946  :     PyObject *myerrno = NULL, *strerror = NULL, *filename = NULL;

  0000f	33 c0		 xor	 eax, eax
  00011	48 8b f9	 mov	 rdi, rcx

; 947  : #ifdef MS_WINDOWS
; 948  :     PyObject *winerror = NULL;
; 949  : #endif
; 950  : 
; 951  :     if (!oserror_use_init(Py_TYPE(self)))

  00014	48 8b 49 58	 mov	 rcx, QWORD PTR [rcx+88]
  00018	48 8b da	 mov	 rbx, rdx
  0001b	48 89 44 24 38	 mov	 QWORD PTR myerrno$[rsp], rax
  00020	48 89 44 24 30	 mov	 QWORD PTR strerror$[rsp], rax
  00025	48 89 44 24 68	 mov	 QWORD PTR filename$[rsp], rax
  0002a	48 89 44 24 50	 mov	 QWORD PTR winerror$[rsp], rax
  0002f	e8 00 00 00 00	 call	 oserror_use_init
  00034	85 c0		 test	 eax, eax
  00036	75 0d		 jne	 SHORT $LN8@OSError_in
$LN15@OSError_in:

; 952  :         /* Everything already done in OSError_new */
; 953  :         return 0;

  00038	33 c0		 xor	 eax, eax

; 978  : }

  0003a	48 8b 5c 24 60	 mov	 rbx, QWORD PTR [rsp+96]
  0003f	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00043	5f		 pop	 rdi
  00044	c3		 ret	 0
$LN8@OSError_in:

; 954  : 
; 955  :     if (!_PyArg_NoKeywords(Py_TYPE(self)->tp_name, kwds))

  00045	48 8b 49 70	 mov	 rcx, QWORD PTR [rcx+112]
  00049	49 8b d0	 mov	 rdx, r8
  0004c	e8 00 00 00 00	 call	 _PyArg_NoKeywords
  00051	85 c0		 test	 eax, eax

; 956  :         return -1;

  00053	0f 84 a4 00 00
	00		 je	 $LN3@OSError_in

; 957  : 
; 958  :     Py_INCREF(args);

  00059	e8 00 00 00 00	 call	 _Py_PXCTX
  0005e	85 c0		 test	 eax, eax
  00060	75 32		 jne	 SHORT $LN12@OSError_in
  00062	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00069	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00070	4c 8b cb	 mov	 r9, rbx
  00073	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00079	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00081	e8 00 00 00 00	 call	 _PyParallel_Guard
  00086	85 c0		 test	 eax, eax
  00088	75 06		 jne	 SHORT $LN11@OSError_in
  0008a	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  0008e	74 04		 je	 SHORT $LN12@OSError_in
$LN11@OSError_in:
  00090	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN12@OSError_in:

; 959  :     if (oserror_parse_args(&args, &myerrno, &strerror, &filename
; 960  : #ifdef MS_WINDOWS
; 961  :                            , &winerror
; 962  : #endif
; 963  :         ))

  00094	48 8d 44 24 50	 lea	 rax, QWORD PTR winerror$[rsp]
  00099	4c 8d 4c 24 68	 lea	 r9, QWORD PTR filename$[rsp]
  0009e	4c 8d 44 24 30	 lea	 r8, QWORD PTR strerror$[rsp]
  000a3	48 8d 54 24 38	 lea	 rdx, QWORD PTR myerrno$[rsp]
  000a8	48 8d 4c 24 58	 lea	 rcx, QWORD PTR args$[rsp]
  000ad	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000b2	e8 00 00 00 00	 call	 oserror_parse_args
  000b7	85 c0		 test	 eax, eax
  000b9	75 33		 jne	 SHORT $error$21448

; 964  :         goto error;
; 965  : 
; 966  :     if (oserror_init(self, &args, myerrno, strerror, filename
; 967  : #ifdef MS_WINDOWS
; 968  :                      , winerror
; 969  : #endif
; 970  :         ))

  000bb	48 8b 44 24 50	 mov	 rax, QWORD PTR winerror$[rsp]
  000c0	4c 8b 4c 24 30	 mov	 r9, QWORD PTR strerror$[rsp]
  000c5	4c 8b 44 24 38	 mov	 r8, QWORD PTR myerrno$[rsp]
  000ca	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000cf	48 8b 44 24 68	 mov	 rax, QWORD PTR filename$[rsp]
  000d4	48 8d 54 24 58	 lea	 rdx, QWORD PTR args$[rsp]
  000d9	48 8b cf	 mov	 rcx, rdi
  000dc	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000e1	e8 00 00 00 00	 call	 oserror_init
  000e6	85 c0		 test	 eax, eax

; 971  :         goto error;
; 972  : 
; 973  :     return 0;

  000e8	0f 84 4a ff ff
	ff		 je	 $LN15@OSError_in
$error$21448:

; 974  : 
; 975  : error:
; 976  :     Py_XDECREF(args);

  000ee	48 8b 4c 24 58	 mov	 rcx, QWORD PTR args$[rsp]
  000f3	48 85 c9	 test	 rcx, rcx
  000f6	74 05		 je	 SHORT $LN3@OSError_in
  000f8	e8 00 00 00 00	 call	 _Py_DecRef
$LN3@OSError_in:

; 977  :     return -1;

  000fd	83 c8 ff	 or	 eax, -1

; 978  : }

  00100	48 8b 5c 24 60	 mov	 rbx, QWORD PTR [rsp+96]
  00105	48 83 c4 40	 add	 rsp, 64			; 00000040H
  00109	5f		 pop	 rdi
  0010a	c3		 ret	 0
OSError_init ENDP
_TEXT	ENDS
END
