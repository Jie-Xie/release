; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_11LOCGONAA@?$AA?$AA@			; `string'
PUBLIC	_PyOS_opterr
PUBLIC	_PyOS_optind
PUBLIC	_PyOS_optarg
_BSS	SEGMENT
_PyOS_optarg DQ	01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_11LOCGONAA@?$AA?$AA@
CONST	SEGMENT
??_C@_11LOCGONAA@?$AA?$AA@ DB 00H, 00H			; `string'
CONST	ENDS
_DATA	SEGMENT
_PyOS_opterr DD	01H
_PyOS_optind DD	01H
opt_ptr	DQ	FLAT:??_C@_11LOCGONAA@?$AA?$AA@
_DATA	ENDS
PUBLIC	_PyOS_ResetGetOpt
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\python\getopt.c
;	COMDAT _PyOS_ResetGetOpt
_TEXT	SEGMENT
_PyOS_ResetGetOpt PROC					; COMDAT

; 48   :     _PyOS_opterr = 1;
; 49   :     _PyOS_optind = 1;
; 50   :     _PyOS_optarg = NULL;
; 51   :     opt_ptr = L"";

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_11LOCGONAA@?$AA?$AA@
  00007	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _PyOS_opterr, 1
  00011	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _PyOS_optind, 1
  0001b	48 89 05 00 00
	00 00		 mov	 QWORD PTR opt_ptr, rax
  00022	48 c7 05 00 00
	00 00 00 00 00
	00		 mov	 QWORD PTR _PyOS_optarg, 0

; 52   : }

  0002d	c3		 ret	 0
_PyOS_ResetGetOpt ENDP
_TEXT	ENDS
PUBLIC	??_C@_0CG@DHDGHLFO@Argument?5expected?5for?5the?5?9?$CFc?5op@ ; `string'
PUBLIC	??_C@_0BF@ENGKCCMO@Unknown?5option?3?5?9?$CFc?6?$AA@ ; `string'
PUBLIC	??_C@_0BL@PPOHDLBP@?9J?5is?5reserved?5for?5Jython?6?$AA@ ; `string'
PUBLIC	??_C@_1BE@EOBDNJGJ@?$AA?9?$AA?9?$AAv?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?$AA@ ; `string'
PUBLIC	??_C@_1O@JMHGNBEL@?$AA?9?$AA?9?$AAh?$AAe?$AAl?$AAp?$AA?$AA@ ; `string'
PUBLIC	??_C@_15KHFHDPFH@?$AA?9?$AA?9?$AA?$AA@		; `string'
PUBLIC	??_C@_15BAIPABEI@?$AA?1?$AA?$DP?$AA?$AA@	; `string'
PUBLIC	_PyOS_GetOpt
EXTRN	__imp_wcschr:PROC
EXTRN	__imp_fprintf:PROC
EXTRN	__imp___iob_func:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$_PyOS_GetOpt DD imagerel $LN27
	DD	imagerel $LN27+486
	DD	imagerel $unwind$_PyOS_GetOpt
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_PyOS_GetOpt DD 081401H
	DD	086414H
	DD	075414H
	DD	063414H
	DD	070103214H
xdata	ENDS
;	COMDAT ??_C@_0CG@DHDGHLFO@Argument?5expected?5for?5the?5?9?$CFc?5op@
CONST	SEGMENT
??_C@_0CG@DHDGHLFO@Argument?5expected?5for?5the?5?9?$CFc?5op@ DB 'Argumen'
	DB	't expected for the -%c option', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@ENGKCCMO@Unknown?5option?3?5?9?$CFc?6?$AA@
CONST	SEGMENT
??_C@_0BF@ENGKCCMO@Unknown?5option?3?5?9?$CFc?6?$AA@ DB 'Unknown option: '
	DB	'-%c', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@PPOHDLBP@?9J?5is?5reserved?5for?5Jython?6?$AA@
CONST	SEGMENT
??_C@_0BL@PPOHDLBP@?9J?5is?5reserved?5for?5Jython?6?$AA@ DB '-J is reserv'
	DB	'ed for Jython', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@EOBDNJGJ@?$AA?9?$AA?9?$AAv?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?$AA@
CONST	SEGMENT
??_C@_1BE@EOBDNJGJ@?$AA?9?$AA?9?$AAv?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?$AA@ DB '-'
	DB	00H, '-', 00H, 'v', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H
	DB	'o', 00H, 'n', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@JMHGNBEL@?$AA?9?$AA?9?$AAh?$AAe?$AAl?$AAp?$AA?$AA@
CONST	SEGMENT
??_C@_1O@JMHGNBEL@?$AA?9?$AA?9?$AAh?$AAe?$AAl?$AAp?$AA?$AA@ DB '-', 00H, '-'
	DB	00H, 'h', 00H, 'e', 00H, 'l', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15KHFHDPFH@?$AA?9?$AA?9?$AA?$AA@
CONST	SEGMENT
??_C@_15KHFHDPFH@?$AA?9?$AA?9?$AA?$AA@ DB '-', 00H, '-', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15BAIPABEI@?$AA?1?$AA?$DP?$AA?$AA@
CONST	SEGMENT
??_C@_15BAIPABEI@?$AA?1?$AA?$DP?$AA?$AA@ DB '/', 00H, '?', 00H, 00H, 00H ; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT _PyOS_GetOpt
_TEXT	SEGMENT
argc$ = 48
argv$ = 56
optstring$ = 64
_PyOS_GetOpt PROC					; COMDAT

; 55   : {

$LN27:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  0000a	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000f	57		 push	 rdi
  00010	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 56   :     wchar_t *ptr;
; 57   :     wchar_t option;
; 58   : 
; 59   :     if (*opt_ptr == '\0') {

  00014	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR opt_ptr
  0001b	48 8b ea	 mov	 rbp, rdx
  0001e	8b d9		 mov	 ebx, ecx
  00020	66 83 38 00	 cmp	 WORD PTR [rax], 0
  00024	0f 85 ab 00 00
	00		 jne	 $LN23@PyOS_GetOp

; 60   : 
; 61   :         if (_PyOS_optind >= argc)

  0002a	4c 63 0d 00 00
	00 00		 movsxd	 r9, DWORD PTR _PyOS_optind
  00031	44 3b c9	 cmp	 r9d, ecx

; 62   :             return -1;

  00034	7d 5b		 jge	 SHORT $LN17@PyOS_GetOp

; 63   : #ifdef MS_WINDOWS
; 64   :         else if (wcscmp(argv[_PyOS_optind], L"/?") == 0) {

  00036	4a 8b 14 ca	 mov	 rdx, QWORD PTR [rdx+r9*8]
  0003a	48 8d 3d 00 00
	00 00		 lea	 rdi, OFFSET FLAT:??_C@_15BAIPABEI@?$AA?1?$AA?$DP?$AA?$AA@
  00041	b9 03 00 00 00	 mov	 ecx, 3
  00046	48 8b f2	 mov	 rsi, rdx
  00049	66 f3 a7	 repe cmpsw
  0004c	75 14		 jne	 SHORT $LN20@PyOS_GetOp
$LN26@PyOS_GetOp:

; 65   :             ++_PyOS_optind;

  0004e	41 ff c1	 inc	 r9d

; 66   :             return 'h';

  00051	b8 68 00 00 00	 mov	 eax, 104		; 00000068H
  00056	44 89 0d 00 00
	00 00		 mov	 DWORD PTR _PyOS_optind, r9d
  0005d	e9 6f 01 00 00	 jmp	 $LN24@PyOS_GetOp
$LN20@PyOS_GetOp:

; 67   :         }
; 68   : #endif
; 69   : 
; 70   :         else if (argv[_PyOS_optind][0] != L'-' ||
; 71   :                  argv[_PyOS_optind][1] == L'\0' /* lone dash */ )

  00062	66 83 3a 2d	 cmp	 WORD PTR [rdx], 45	; 0000002dH
  00066	75 29		 jne	 SHORT $LN17@PyOS_GetOp
  00068	66 83 7a 02 00	 cmp	 WORD PTR [rdx+2], 0
  0006d	48 8d 42 02	 lea	 rax, QWORD PTR [rdx+2]
  00071	74 1e		 je	 SHORT $LN17@PyOS_GetOp

; 72   :             return -1;
; 73   : 
; 74   :         else if (wcscmp(argv[_PyOS_optind], L"--") == 0) {

  00073	48 8d 3d 00 00
	00 00		 lea	 rdi, OFFSET FLAT:??_C@_15KHFHDPFH@?$AA?9?$AA?9?$AA?$AA@
  0007a	48 8b f2	 mov	 rsi, rdx
  0007d	b9 03 00 00 00	 mov	 ecx, 3
  00082	66 f3 a7	 repe cmpsw
  00085	75 12		 jne	 SHORT $LN15@PyOS_GetOp

; 75   :             ++_PyOS_optind;

  00087	41 ff c1	 inc	 r9d
  0008a	44 89 0d 00 00
	00 00		 mov	 DWORD PTR _PyOS_optind, r9d
$LN17@PyOS_GetOp:

; 76   :             return -1;

  00091	83 c8 ff	 or	 eax, -1
  00094	e9 38 01 00 00	 jmp	 $LN24@PyOS_GetOp
$LN15@PyOS_GetOp:

; 77   :         }
; 78   : 
; 79   :         else if (wcscmp(argv[_PyOS_optind], L"--help") == 0) {

  00099	48 8d 3d 00 00
	00 00		 lea	 rdi, OFFSET FLAT:??_C@_1O@JMHGNBEL@?$AA?9?$AA?9?$AAh?$AAe?$AAl?$AAp?$AA?$AA@
  000a0	48 8b f2	 mov	 rsi, rdx
  000a3	b9 07 00 00 00	 mov	 ecx, 7
  000a8	66 f3 a7	 repe cmpsw

; 80   :             ++_PyOS_optind;
; 81   :             return 'h';

  000ab	74 a1		 je	 SHORT $LN26@PyOS_GetOp

; 82   :         }
; 83   : 
; 84   :         else if (wcscmp(argv[_PyOS_optind], L"--version") == 0) {
; 85   :             ++_PyOS_optind;

  000ad	41 ff c1	 inc	 r9d
  000b0	48 8d 3d 00 00
	00 00		 lea	 rdi, OFFSET FLAT:??_C@_1BE@EOBDNJGJ@?$AA?9?$AA?9?$AAv?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?$AA@
  000b7	48 8b f2	 mov	 rsi, rdx
  000ba	b9 0a 00 00 00	 mov	 ecx, 10
  000bf	66 f3 a7	 repe cmpsw
  000c2	44 89 0d 00 00
	00 00		 mov	 DWORD PTR _PyOS_optind, r9d
  000c9	75 0a		 jne	 SHORT $LN23@PyOS_GetOp

; 86   :             return 'V';

  000cb	b8 56 00 00 00	 mov	 eax, 86			; 00000056H
  000d0	e9 fc 00 00 00	 jmp	 $LN24@PyOS_GetOp
$LN23@PyOS_GetOp:

; 87   :         }
; 88   : 
; 89   : 
; 90   :         opt_ptr = &argv[_PyOS_optind++][1];
; 91   :     }
; 92   : 
; 93   :     if ((option = *opt_ptr++) == L'\0')

  000d5	0f b7 38	 movzx	 edi, WORD PTR [rax]
  000d8	48 83 c0 02	 add	 rax, 2
  000dc	48 89 05 00 00
	00 00		 mov	 QWORD PTR opt_ptr, rax
  000e3	66 85 ff	 test	 di, di

; 94   :         return -1;

  000e6	74 a9		 je	 SHORT $LN17@PyOS_GetOp

; 95   : 
; 96   :     if (option == 'J') {

  000e8	66 83 ff 4a	 cmp	 di, 74			; 0000004aH
  000ec	75 2a		 jne	 SHORT $LN9@PyOS_GetOp

; 97   :         if (_PyOS_opterr)

  000ee	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _PyOS_opterr, 0
  000f5	74 17		 je	 SHORT $LN8@PyOS_GetOp

; 98   :             fprintf(stderr, "-J is reserved for Jython\n");

  000f7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___iob_func
  000fd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BL@PPOHDLBP@?9J?5is?5reserved?5for?5Jython?6?$AA@
  00104	48 8d 48 60	 lea	 rcx, QWORD PTR [rax+96]
  00108	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fprintf
$LN8@PyOS_GetOp:

; 99   :         return '_';

  0010e	b8 5f 00 00 00	 mov	 eax, 95			; 0000005fH
  00113	e9 b9 00 00 00	 jmp	 $LN24@PyOS_GetOp
$LN9@PyOS_GetOp:

; 100  :     }
; 101  : 
; 102  :     if ((ptr = wcschr(optstring, option)) == NULL) {

  00118	0f b7 d7	 movzx	 edx, di
  0011b	49 8b c8	 mov	 rcx, r8
  0011e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_wcschr
  00124	48 85 c0	 test	 rax, rax
  00127	75 2d		 jne	 SHORT $LN7@PyOS_GetOp

; 103  :         if (_PyOS_opterr)

  00129	39 05 00 00 00
	00		 cmp	 DWORD PTR _PyOS_opterr, eax
  0012f	74 1e		 je	 SHORT $LN6@PyOS_GetOp

; 104  :             fprintf(stderr, "Unknown option: -%c\n", (char)option);

  00131	40 0f be ff	 movsx	 edi, dil
  00135	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___iob_func
  0013b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@ENGKCCMO@Unknown?5option?3?5?9?$CFc?6?$AA@
  00142	48 8d 48 60	 lea	 rcx, QWORD PTR [rax+96]
  00146	44 8b c7	 mov	 r8d, edi
  00149	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fprintf
$LN6@PyOS_GetOp:

; 105  :         return '_';

  0014f	b8 5f 00 00 00	 mov	 eax, 95			; 0000005fH
  00154	eb 7b		 jmp	 SHORT $LN24@PyOS_GetOp
$LN7@PyOS_GetOp:

; 106  :     }
; 107  : 
; 108  :     if (*(ptr + 1) == L':') {

  00156	66 83 78 02 3a	 cmp	 WORD PTR [rax+2], 58	; 0000003aH
  0015b	75 71		 jne	 SHORT $LN3@PyOS_GetOp

; 109  :         if (*opt_ptr != L'\0') {

  0015d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR opt_ptr
  00164	66 83 38 00	 cmp	 WORD PTR [rax], 0
  00168	74 17		 je	 SHORT $LN4@PyOS_GetOp

; 110  :             _PyOS_optarg  = opt_ptr;

  0016a	48 89 05 00 00
	00 00		 mov	 QWORD PTR _PyOS_optarg, rax

; 111  :             opt_ptr = L"";

  00171	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_11LOCGONAA@?$AA?$AA@
  00178	48 89 05 00 00
	00 00		 mov	 QWORD PTR opt_ptr, rax

; 112  :         }
; 113  : 
; 114  :         else {

  0017f	eb 4d		 jmp	 SHORT $LN3@PyOS_GetOp
$LN4@PyOS_GetOp:

; 115  :             if (_PyOS_optind >= argc) {

  00181	48 63 15 00 00
	00 00		 movsxd	 rdx, DWORD PTR _PyOS_optind
  00188	3b d3		 cmp	 edx, ebx
  0018a	7c 2e		 jl	 SHORT $LN2@PyOS_GetOp

; 116  :                 if (_PyOS_opterr)

  0018c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _PyOS_opterr, 0
  00193	74 1e		 je	 SHORT $LN1@PyOS_GetOp

; 117  :                     fprintf(stderr,
; 118  :                         "Argument expected for the -%c option\n", (char)option);

  00195	40 0f be ff	 movsx	 edi, dil
  00199	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___iob_func
  0019f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CG@DHDGHLFO@Argument?5expected?5for?5the?5?9?$CFc?5op@
  001a6	48 8d 48 60	 lea	 rcx, QWORD PTR [rax+96]
  001aa	44 8b c7	 mov	 r8d, edi
  001ad	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fprintf
$LN1@PyOS_GetOp:

; 119  :                 return '_';

  001b3	b8 5f 00 00 00	 mov	 eax, 95			; 0000005fH
  001b8	eb 17		 jmp	 SHORT $LN24@PyOS_GetOp
$LN2@PyOS_GetOp:

; 120  :             }
; 121  : 
; 122  :             _PyOS_optarg = argv[_PyOS_optind++];

  001ba	48 8b 4c d5 00	 mov	 rcx, QWORD PTR [rbp+rdx*8]
  001bf	ff c2		 inc	 edx
  001c1	48 89 0d 00 00
	00 00		 mov	 QWORD PTR _PyOS_optarg, rcx
  001c8	89 15 00 00 00
	00		 mov	 DWORD PTR _PyOS_optind, edx
$LN3@PyOS_GetOp:

; 123  :         }
; 124  :     }
; 125  : 
; 126  :     return option;

  001ce	0f b7 c7	 movzx	 eax, di
$LN24@PyOS_GetOp:

; 127  : }

  001d1	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  001d6	48 8b 6c 24 38	 mov	 rbp, QWORD PTR [rsp+56]
  001db	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
  001e0	48 83 c4 20	 add	 rsp, 32			; 00000020H
  001e4	5f		 pop	 rdi
  001e5	c3		 ret	 0
_PyOS_GetOpt ENDP
_TEXT	ENDS
END
