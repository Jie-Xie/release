; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	PyGrammar_FindDFA
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\parser\grammar1.c
;	COMDAT PyGrammar_FindDFA
_TEXT	SEGMENT
g$ = 8
type$ = 16
PyGrammar_FindDFA PROC					; COMDAT

; 14   :     register dfa *d;
; 15   : #if 1
; 16   :     /* Massive speed-up */
; 17   :     d = &g->g_dfa[type - NT_OFFSET];

  00000	8d 82 00 ff ff
	ff		 lea	 eax, DWORD PTR [rdx-256]

; 18   :     assert(d->d_type == type);
; 19   :     return d;

  00006	48 63 d0	 movsxd	 rdx, eax
  00009	48 8b 41 08	 mov	 rax, QWORD PTR [rcx+8]
  0000d	4c 8d 04 92	 lea	 r8, QWORD PTR [rdx+rdx*4]
  00011	4a 8d 04 c0	 lea	 rax, QWORD PTR [rax+r8*8]

; 20   : #else
; 21   :     /* Old, slow version */
; 22   :     register int i;
; 23   : 
; 24   :     for (i = g->g_ndfas, d = g->g_dfa; --i >= 0; d++) {
; 25   :         if (d->d_type == type)
; 26   :             return d;
; 27   :     }
; 28   :     assert(0);
; 29   :     /* NOTREACHED */
; 30   : #endif
; 31   : }

  00015	c3		 ret	 0
PyGrammar_FindDFA ENDP
_TEXT	ENDS
PUBLIC	??_C@_0O@MPOPIKLL@invalid?5label?$AA@		; `string'
PUBLIC	??_C@_0N@JPJIHJHF@?$CF?432s?$CI?$CF?432s?$CJ?$AA@ ; `string'
PUBLIC	??_C@_04KFGGFMJH@NT?$CFd?$AA@			; `string'
PUBLIC	??_C@_05HKAKDGKI@EMPTY?$AA@			; `string'
PUBLIC	PyGrammar_LabelRepr
EXTRN	Py_FatalError:PROC
EXTRN	_PyParser_TokenNames:BYTE
EXTRN	PyOS_snprintf:PROC
_BSS	SEGMENT
?buf@?1??PyGrammar_LabelRepr@@9@9 DB 064H DUP (?)	; `PyGrammar_LabelRepr'::`2'::buf
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyGrammar_LabelRepr DD imagerel $LN13
	DD	imagerel $LN13+180
	DD	imagerel $unwind$PyGrammar_LabelRepr
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyGrammar_LabelRepr DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT ??_C@_0O@MPOPIKLL@invalid?5label?$AA@
CONST	SEGMENT
??_C@_0O@MPOPIKLL@invalid?5label?$AA@ DB 'invalid label', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@JPJIHJHF@?$CF?432s?$CI?$CF?432s?$CJ?$AA@
CONST	SEGMENT
??_C@_0N@JPJIHJHF@?$CF?432s?$CI?$CF?432s?$CJ?$AA@ DB '%.32s(%.32s)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04KFGGFMJH@NT?$CFd?$AA@
CONST	SEGMENT
??_C@_04KFGGFMJH@NT?$CFd?$AA@ DB 'NT%d', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05HKAKDGKI@EMPTY?$AA@
CONST	SEGMENT
??_C@_05HKAKDGKI@EMPTY?$AA@ DB 'EMPTY', 00H		; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT PyGrammar_LabelRepr
_TEXT	SEGMENT
lb$ = 64
PyGrammar_LabelRepr PROC				; COMDAT

; 35   : {

$LN13:
  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 36   :     static char buf[100];
; 37   : 
; 38   :     if (lb->lb_type == ENDMARKER)

  00004	48 63 01	 movsxd	 rax, DWORD PTR [rcx]
  00007	85 c0		 test	 eax, eax
  00009	75 0c		 jne	 SHORT $LN10@PyGrammar_

; 39   :         return "EMPTY";

  0000b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_05HKAKDGKI@EMPTY?$AA@

; 60   :     }
; 61   : }

  00012	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00016	c3		 ret	 0
$LN10@PyGrammar_:

; 40   :     else if (ISNONTERMINAL(lb->lb_type)) {

  00017	3d 00 01 00 00	 cmp	 eax, 256		; 00000100H
  0001c	7c 38		 jl	 SHORT $LN8@PyGrammar_

; 41   :         if (lb->lb_str == NULL) {

  0001e	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]
  00022	48 85 d2	 test	 rdx, rdx
  00025	75 27		 jne	 SHORT $LN7@PyGrammar_

; 42   :             PyOS_snprintf(buf, sizeof(buf), "NT%d", lb->lb_type);

  00027	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_04KFGGFMJH@NT?$CFd?$AA@
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?buf@?1??PyGrammar_LabelRepr@@9@9
  00035	44 8b c8	 mov	 r9d, eax
  00038	ba 64 00 00 00	 mov	 edx, 100		; 00000064H
  0003d	e8 00 00 00 00	 call	 PyOS_snprintf

; 43   :             return buf;

  00042	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?buf@?1??PyGrammar_LabelRepr@@9@9

; 60   :     }
; 61   : }

  00049	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0004d	c3		 ret	 0
$LN7@PyGrammar_:

; 44   :         }
; 45   :         else
; 46   :             return lb->lb_str;

  0004e	48 8b c2	 mov	 rax, rdx

; 60   :     }
; 61   : }

  00051	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00055	c3		 ret	 0
$LN8@PyGrammar_:

; 47   :     }
; 48   :     else if (lb->lb_type < N_TOKENS) {

  00056	83 f8 36	 cmp	 eax, 54			; 00000036H
  00059	7d 46		 jge	 SHORT $LN4@PyGrammar_

; 49   :         if (lb->lb_str == NULL)

  0005b	48 8b 51 08	 mov	 rdx, QWORD PTR [rcx+8]

; 50   :             return _PyParser_TokenNames[lb->lb_type];

  0005f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyParser_TokenNames
  00066	48 85 d2	 test	 rdx, rdx
  00069	75 09		 jne	 SHORT $LN3@PyGrammar_
  0006b	48 8b 04 c1	 mov	 rax, QWORD PTR [rcx+rax*8]

; 60   :     }
; 61   : }

  0006f	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00073	c3		 ret	 0
$LN3@PyGrammar_:

; 51   :         else {
; 52   :             PyOS_snprintf(buf, sizeof(buf), "%.32s(%.32s)",
; 53   :                 _PyParser_TokenNames[lb->lb_type], lb->lb_str);

  00074	4c 8b 0c c1	 mov	 r9, QWORD PTR [rcx+rax*8]
  00078	48 89 54 24 20	 mov	 QWORD PTR [rsp+32], rdx
  0007d	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_0N@JPJIHJHF@?$CF?432s?$CI?$CF?432s?$CJ?$AA@
  00084	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?buf@?1??PyGrammar_LabelRepr@@9@9
  0008b	ba 64 00 00 00	 mov	 edx, 100		; 00000064H
  00090	e8 00 00 00 00	 call	 PyOS_snprintf

; 54   :             return buf;

  00095	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?buf@?1??PyGrammar_LabelRepr@@9@9

; 60   :     }
; 61   : }

  0009c	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000a0	c3		 ret	 0
$LN4@PyGrammar_:

; 55   :         }
; 56   :     }
; 57   :     else {
; 58   :         Py_FatalError("invalid label");

  000a1	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0O@MPOPIKLL@invalid?5label?$AA@
  000a8	e8 00 00 00 00	 call	 Py_FatalError

; 59   :         return NULL;

  000ad	33 c0		 xor	 eax, eax

; 60   :     }
; 61   : }

  000af	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000b3	c3		 ret	 0
PyGrammar_LabelRepr ENDP
_TEXT	ENDS
END
