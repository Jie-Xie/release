; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_09DILDJBMG@_symtable?$AA@			; `string'
PUBLIC	??_C@_0EC@FFINNOKB@Return?5symbol?5and?5scope?5dictiona@ ; `string'
PUBLIC	??_C@_08HFCPDANL@symtable?$AA@			; `string'
;	COMDAT ??_C@_09DILDJBMG@_symtable?$AA@
CONST	SEGMENT
??_C@_09DILDJBMG@_symtable?$AA@ DB '_symtable', 00H	; `string'
CONST	ENDS
_DATA	SEGMENT
symtable_methods DQ FLAT:??_C@_08HFCPDANL@symtable?$AA@
	DQ	FLAT:symtable_symtable
	DD	01H
	ORG $+4
	DQ	FLAT:??_C@_0EC@FFINNOKB@Return?5symbol?5and?5scope?5dictiona@
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+16
symtablemodule DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_09DILDJBMG@_symtable?$AA@
	DQ	0000000000000000H
	DQ	ffffffffffffffffH
	DQ	FLAT:symtable_methods
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
_DATA	ENDS
;	COMDAT ??_C@_0EC@FFINNOKB@Return?5symbol?5and?5scope?5dictiona@
CONST	SEGMENT
??_C@_0EC@FFINNOKB@Return?5symbol?5and?5scope?5dictiona@ DB 'Return symbo'
	DB	'l and scope dictionaries used internally by compiler.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08HFCPDANL@symtable?$AA@
CONST	SEGMENT
??_C@_08HFCPDANL@symtable?$AA@ DB 'symtable', 00H	; `string'
CONST	ENDS
PUBLIC	??_C@_0L@DHGMCEID@_Py_IncRef?$AA@		; `string'
PUBLIC	??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@ ; `string'
PUBLIC	_Py_IncRef
EXTRN	_PyParallel_Guard:PROC
EXTRN	_Py_PXCTX:PROC
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$_Py_IncRef DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$_Py_IncRef
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_Py_IncRef DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT ??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
CONST	SEGMENT
??_C@_0L@DHGMCEID@_Py_IncRef?$AA@ DB '_Py_IncRef', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
CONST	SEGMENT
??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@ DB 'c:\src\pypa'
	DB	'rallel\include\object.h', 00H		; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT _Py_IncRef
_TEXT	SEGMENT
op$ = 64
_Py_IncRef PROC						; COMDAT

; 904  : {

$LN5:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8b d9	 mov	 rbx, rcx

; 905  :     if ((!Py_PXCTX && (Py_ISPY(op) || Px_PERSISTED(op)))) {

  00009	e8 00 00 00 00	 call	 _Py_PXCTX
  0000e	85 c0		 test	 eax, eax
  00010	75 32		 jne	 SHORT $LN2@Py_IncRef
  00012	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00019	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00020	4c 8b cb	 mov	 r9, rbx
  00023	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00029	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  00031	e8 00 00 00 00	 call	 _PyParallel_Guard
  00036	85 c0		 test	 eax, eax
  00038	75 06		 jne	 SHORT $LN1@Py_IncRef
  0003a	f6 43 20 20	 test	 BYTE PTR [rbx+32], 32	; 00000020H
  0003e	74 04		 je	 SHORT $LN2@Py_IncRef
$LN1@Py_IncRef:

; 906  :         _Py_INC_REFTOTAL;
; 907  :         (((PyObject*)(op))->ob_refcnt++);

  00040	48 ff 43 50	 inc	 QWORD PTR [rbx+80]
$LN2@Py_IncRef:

; 908  :     }
; 909  : }

  00044	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00048	5b		 pop	 rbx
  00049	c3		 ret	 0
_Py_IncRef ENDP
_TEXT	ENDS
PUBLIC	??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@		; `string'
PUBLIC	_Py_DecRef
EXTRN	Px_DecRef:PROC
EXTRN	_Px_Dealloc:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$_Py_DecRef DD imagerel $LN12
	DD	imagerel $LN12+123
	DD	imagerel $unwind$_Py_DecRef
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_Py_DecRef DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT ??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
CONST	SEGMENT
??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@ DB '_Py_DecRef', 00H	; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT _Py_DecRef
_TEXT	SEGMENT
op$ = 64
_Py_DecRef PROC						; COMDAT

; 923  : {

$LN12:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8b d9	 mov	 rbx, rcx

; 924  :     if (!Py_PXCTX) {

  00009	e8 00 00 00 00	 call	 _Py_PXCTX
  0000e	85 c0		 test	 eax, eax
  00010	75 63		 jne	 SHORT $LN11@Py_DecRef

; 925  :         if (Px_PERSISTED(op) || Px_CLONED(op))

  00012	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  00016	a8 20		 test	 al, 32			; 00000020H
  00018	75 53		 jne	 SHORT $LN5@Py_DecRef
  0001a	84 c0		 test	 al, al
  0001c	78 4f		 js	 SHORT $LN5@Py_DecRef

; 927  :         else if (!Px_ISPX(op)) {

  0001e	a8 02		 test	 al, 2
  00020	75 53		 jne	 SHORT $LN11@Py_DecRef

; 928  :             _Py_DEC_REFTOTAL;
; 929  :             if ((--((PyObject *)(op))->ob_refcnt) != 0) {

  00022	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  00026	75 4d		 jne	 SHORT $LN11@Py_DecRef

; 930  :                 _Py_CHECK_REFCNT(op);
; 931  :             } else
; 932  :                 _Py_Dealloc((PyObject *)(op));

  00028	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  00036	4c 8b cb	 mov	 r9, rbx
  00039	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  0003f	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00047	e8 00 00 00 00	 call	 _PyParallel_Guard
  0004c	48 8b cb	 mov	 rcx, rbx
  0004f	85 c0		 test	 eax, eax
  00051	74 0a		 je	 SHORT $LN10@Py_DecRef

; 933  :         }
; 934  :     }
; 935  : }

  00053	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00057	5b		 pop	 rbx
  00058	e9 00 00 00 00	 jmp	 _Px_Dealloc
$LN10@Py_DecRef:

; 930  :                 _Py_CHECK_REFCNT(op);
; 931  :             } else
; 932  :                 _Py_Dealloc((PyObject *)(op));

  0005d	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]

; 933  :         }
; 934  :     }
; 935  : }

  00061	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00065	5b		 pop	 rbx
  00066	48 ff a0 88 00
	00 00		 rex_jmp QWORD PTR [rax+136]
$LN5@Py_DecRef:

; 926  :             Px_DECREF(op);

  0006d	48 8b cb	 mov	 rcx, rbx
  00070	e8 00 00 00 00	 call	 Px_DecRef
$LN11@Py_DecRef:

; 933  :         }
; 934  :     }
; 935  : }

  00075	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00079	5b		 pop	 rbx
  0007a	c3		 ret	 0
_Py_DecRef ENDP
_TEXT	ENDS
PUBLIC	??_C@_0DG@HJDBMJC@symtable?$CI?$CJ?5arg?53?5must?5be?5?8exec?8?5@ ; `string'
PUBLIC	??_C@_06EJFMBPJF@single?$AA@			; `string'
PUBLIC	??_C@_04KGAGIKCD@eval?$AA@			; `string'
PUBLIC	??_C@_04MGEIEJAD@exec?$AA@			; `string'
PUBLIC	??_C@_0N@NAKJAHLK@sss?3symtable?$AA@		; `string'
EXTRN	PyErr_SetString:PROC
EXTRN	PyExc_ValueError:QWORD
EXTRN	PySymtable_Free:PROC
EXTRN	PyMem_Free:PROC
EXTRN	Py_SymtableString:PROC
EXTRN	PyArg_ParseTuple:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$symtable_symtable DD imagerel symtable_symtable
	DD	imagerel symtable_symtable+58
	DD	imagerel $unwind$symtable_symtable
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$symtable_symtable DD imagerel symtable_symtable+58
	DD	imagerel symtable_symtable+268
	DD	imagerel $chain$1$symtable_symtable
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$3$symtable_symtable DD imagerel symtable_symtable+268
	DD	imagerel symtable_symtable+304
	DD	imagerel $chain$3$symtable_symtable
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$3$symtable_symtable DD 040021H
	DD	087400H
	DD	0a6400H
	DD	imagerel symtable_symtable
	DD	imagerel symtable_symtable+58
	DD	imagerel $unwind$symtable_symtable
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$symtable_symtable DD 040a21H
	DD	08740aH
	DD	0a6405H
	DD	imagerel symtable_symtable
	DD	imagerel symtable_symtable+58
	DD	imagerel $unwind$symtable_symtable
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$symtable_symtable DD 010401H
	DD	08204H
xdata	ENDS
;	COMDAT ??_C@_0DG@HJDBMJC@symtable?$CI?$CJ?5arg?53?5must?5be?5?8exec?8?5@
CONST	SEGMENT
??_C@_0DG@HJDBMJC@symtable?$CI?$CJ?5arg?53?5must?5be?5?8exec?8?5@ DB 'sym'
	DB	'table() arg 3 must be ''exec'' or ''eval'' or ''single''', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06EJFMBPJF@single?$AA@
CONST	SEGMENT
??_C@_06EJFMBPJF@single?$AA@ DB 'single', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04KGAGIKCD@eval?$AA@
CONST	SEGMENT
??_C@_04KGAGIKCD@eval?$AA@ DB 'eval', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04MGEIEJAD@exec?$AA@
CONST	SEGMENT
??_C@_04MGEIEJAD@exec?$AA@ DB 'exec', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@NAKJAHLK@sss?3symtable?$AA@
CONST	SEGMENT
??_C@_0N@NAKJAHLK@sss?3symtable?$AA@ DB 'sss:symtable', 00H ; `string'
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\modules\symtablemodule.c
CONST	ENDS
;	COMDAT symtable_symtable
_TEXT	SEGMENT
str$ = 48
self$ = 80
args$ = 88
startstr$ = 96
filename$ = 104
symtable_symtable PROC					; COMDAT

; 9    : {

  00000	48 83 ec 48	 sub	 rsp, 72			; 00000048H
  00004	48 8b c2	 mov	 rax, rdx

; 10   :     struct symtable *st;
; 11   :     PyObject *t;
; 12   : 
; 13   :     char *str;
; 14   :     char *filename;
; 15   :     char *startstr;
; 16   :     int start;
; 17   : 
; 18   :     if (!PyArg_ParseTuple(args, "sss:symtable", &str, &filename,
; 19   :                           &startstr))

  00007	48 8d 4c 24 60	 lea	 rcx, QWORD PTR startstr$[rsp]
  0000c	4c 8d 4c 24 68	 lea	 r9, QWORD PTR filename$[rsp]
  00011	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00016	4c 8d 44 24 30	 lea	 r8, QWORD PTR str$[rsp]
  0001b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0N@NAKJAHLK@sss?3symtable?$AA@
  00022	48 8b c8	 mov	 rcx, rax
  00025	e8 00 00 00 00	 call	 PyArg_ParseTuple
  0002a	85 c0		 test	 eax, eax
  0002c	75 07		 jne	 SHORT $LN8@symtable_s

; 20   :         return NULL;

  0002e	33 c0		 xor	 eax, eax

; 40   : }

  00030	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00034	c3		 ret	 0
$LN8@symtable_s:

; 21   :     if (strcmp(startstr, "exec") == 0)

  00035	48 8b 44 24 60	 mov	 rax, QWORD PTR startstr$[rsp]
  0003a	48 89 74 24 50	 mov	 QWORD PTR [rsp+80], rsi
  0003f	48 89 7c 24 40	 mov	 QWORD PTR [rsp+64], rdi
  00044	48 8d 3d 00 00
	00 00		 lea	 rdi, OFFSET FLAT:??_C@_04MGEIEJAD@exec?$AA@
  0004b	b9 05 00 00 00	 mov	 ecx, 5
  00050	48 8b f0	 mov	 rsi, rax
  00053	f3 a6		 repe cmpsb
  00055	75 08		 jne	 SHORT $LN7@symtable_s

; 22   :         start = Py_file_input;

  00057	41 b8 01 01 00
	00		 mov	 r8d, 257		; 00000101H
  0005d	eb 34		 jmp	 SHORT $LN2@symtable_s
$LN7@symtable_s:

; 23   :     else if (strcmp(startstr, "eval") == 0)

  0005f	48 8d 3d 00 00
	00 00		 lea	 rdi, OFFSET FLAT:??_C@_04KGAGIKCD@eval?$AA@
  00066	48 8b f0	 mov	 rsi, rax
  00069	b9 05 00 00 00	 mov	 ecx, 5
  0006e	f3 a6		 repe cmpsb
  00070	75 08		 jne	 SHORT $LN5@symtable_s

; 24   :         start = Py_eval_input;

  00072	41 b8 02 01 00
	00		 mov	 r8d, 258		; 00000102H
  00078	eb 19		 jmp	 SHORT $LN2@symtable_s
$LN5@symtable_s:

; 25   :     else if (strcmp(startstr, "single") == 0)

  0007a	48 8d 3d 00 00
	00 00		 lea	 rdi, OFFSET FLAT:??_C@_06EJFMBPJF@single?$AA@
  00081	48 8b f0	 mov	 rsi, rax
  00084	b9 07 00 00 00	 mov	 ecx, 7
  00089	f3 a6		 repe cmpsb
  0008b	75 7f		 jne	 SHORT $LN3@symtable_s

; 26   :         start = Py_single_input;

  0008d	41 b8 00 01 00
	00		 mov	 r8d, 256		; 00000100H
$LN2@symtable_s:

; 31   :     }
; 32   :     st = Py_SymtableString(str, filename, start);

  00093	48 8b 54 24 68	 mov	 rdx, QWORD PTR filename$[rsp]
  00098	48 8b 4c 24 30	 mov	 rcx, QWORD PTR str$[rsp]
  0009d	e8 00 00 00 00	 call	 Py_SymtableString
  000a2	48 8b f0	 mov	 rsi, rax

; 33   :     if (st == NULL)

  000a5	48 85 c0	 test	 rax, rax

; 34   :         return NULL;

  000a8	74 75		 je	 SHORT $LN17@symtable_s

; 35   :     t = (PyObject *)st->st_top;

  000aa	48 8b 78 10	 mov	 rdi, QWORD PTR [rax+16]

; 36   :     Py_INCREF(t);

  000ae	e8 00 00 00 00	 call	 _Py_PXCTX
  000b3	85 c0		 test	 eax, eax
  000b5	75 32		 jne	 SHORT $LN12@symtable_s
  000b7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  000be	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  000c5	4c 8b cf	 mov	 r9, rdi
  000c8	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  000ce	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  000d6	e8 00 00 00 00	 call	 _PyParallel_Guard
  000db	85 c0		 test	 eax, eax
  000dd	75 06		 jne	 SHORT $LN11@symtable_s
  000df	f6 47 20 20	 test	 BYTE PTR [rdi+32], 32	; 00000020H
  000e3	74 04		 je	 SHORT $LN12@symtable_s
$LN11@symtable_s:
  000e5	48 ff 47 50	 inc	 QWORD PTR [rdi+80]
$LN12@symtable_s:

; 37   :     PyMem_Free((void *)st->st_future);

  000e9	48 8b 4e 40	 mov	 rcx, QWORD PTR [rsi+64]
  000ed	e8 00 00 00 00	 call	 PyMem_Free

; 38   :     PySymtable_Free(st);

  000f2	48 8b ce	 mov	 rcx, rsi
  000f5	e8 00 00 00 00	 call	 PySymtable_Free
  000fa	48 8b 74 24 50	 mov	 rsi, QWORD PTR [rsp+80]

; 39   :     return t;

  000ff	48 8b c7	 mov	 rax, rdi
  00102	48 8b 7c 24 40	 mov	 rdi, QWORD PTR [rsp+64]

; 40   : }

  00107	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0010b	c3		 ret	 0
$LN3@symtable_s:

; 27   :     else {
; 28   :         PyErr_SetString(PyExc_ValueError,
; 29   :            "symtable() arg 3 must be 'exec' or 'eval' or 'single'");

  0010c	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ValueError
  00113	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0DG@HJDBMJC@symtable?$CI?$CJ?5arg?53?5must?5be?5?8exec?8?5@
  0011a	e8 00 00 00 00	 call	 PyErr_SetString
$LN17@symtable_s:

; 30   :         return NULL;

  0011f	48 8b 74 24 50	 mov	 rsi, QWORD PTR [rsp+80]
  00124	48 8b 7c 24 40	 mov	 rdi, QWORD PTR [rsp+64]
  00129	33 c0		 xor	 eax, eax

; 40   : }

  0012b	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0012f	c3		 ret	 0
symtable_symtable ENDP
_TEXT	ENDS
PUBLIC	??_C@_0L@EBPDDDPO@SCOPE_MASK?$AA@		; `string'
PUBLIC	??_C@_09IOLEDOKJ@SCOPE_OFF?$AA@			; `string'
PUBLIC	??_C@_04KPAIPGNJ@CELL?$AA@			; `string'
PUBLIC	??_C@_04HEDFJGEJ@FREE?$AA@			; `string'
PUBLIC	??_C@_0BA@FMICAABN@GLOBAL_IMPLICIT?$AA@		; `string'
PUBLIC	??_C@_0BA@IOONMMEG@GLOBAL_EXPLICIT?$AA@		; `string'
PUBLIC	??_C@_05EIDBELPO@LOCAL?$AA@			; `string'
PUBLIC	??_C@_0N@GNBPPHC@OPT_TOPLEVEL?$AA@		; `string'
PUBLIC	??_C@_0BA@NKHFICHP@OPT_IMPORT_STAR?$AA@		; `string'
PUBLIC	??_C@_0M@GHEPPINF@TYPE_MODULE?$AA@		; `string'
PUBLIC	??_C@_0L@BHKHDFDK@TYPE_CLASS?$AA@		; `string'
PUBLIC	??_C@_0O@FOICOKEA@TYPE_FUNCTION?$AA@		; `string'
PUBLIC	??_C@_09KPLPJFIL@DEF_BOUND?$AA@			; `string'
PUBLIC	??_C@_0L@IDCKLPEL@DEF_IMPORT?$AA@		; `string'
PUBLIC	??_C@_0P@JFMEAKHL@DEF_FREE_CLASS?$AA@		; `string'
PUBLIC	??_C@_08GMBOBBBJ@DEF_FREE?$AA@			; `string'
PUBLIC	??_C@_09BJNIEMLH@DEF_PARAM?$AA@			; `string'
PUBLIC	??_C@_09CDECDBIN@DEF_LOCAL?$AA@			; `string'
PUBLIC	??_C@_0L@JEOIEKEN@DEF_GLOBAL?$AA@		; `string'
PUBLIC	??_C@_03MBJMPENK@USE?$AA@			; `string'
PUBLIC	PyInit__symtable
EXTRN	PyErr_Occurred:PROC
EXTRN	PyModule_AddIntConstant:PROC
EXTRN	PyModule_Create2:PROC
EXTRN	PyType_Ready:PROC
EXTRN	PySTEntry_Type:BYTE
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyInit__symtable DD imagerel $LN7
	DD	imagerel $LN7+39
	DD	imagerel $unwind$PyInit__symtable
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$PyInit__symtable DD imagerel $LN7+39
	DD	imagerel $LN7+67
	DD	imagerel $chain$0$PyInit__symtable
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$2$PyInit__symtable DD imagerel $LN7+67
	DD	imagerel $LN7+517
	DD	imagerel $chain$2$PyInit__symtable
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$2$PyInit__symtable DD 020021H
	DD	043400H
	DD	imagerel $LN7
	DD	imagerel $LN7+39
	DD	imagerel $unwind$PyInit__symtable
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$PyInit__symtable DD 020521H
	DD	043405H
	DD	imagerel $LN7
	DD	imagerel $LN7+39
	DD	imagerel $unwind$PyInit__symtable
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyInit__symtable DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT ??_C@_0L@EBPDDDPO@SCOPE_MASK?$AA@
CONST	SEGMENT
??_C@_0L@EBPDDDPO@SCOPE_MASK?$AA@ DB 'SCOPE_MASK', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09IOLEDOKJ@SCOPE_OFF?$AA@
CONST	SEGMENT
??_C@_09IOLEDOKJ@SCOPE_OFF?$AA@ DB 'SCOPE_OFF', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_04KPAIPGNJ@CELL?$AA@
CONST	SEGMENT
??_C@_04KPAIPGNJ@CELL?$AA@ DB 'CELL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04HEDFJGEJ@FREE?$AA@
CONST	SEGMENT
??_C@_04HEDFJGEJ@FREE?$AA@ DB 'FREE', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FMICAABN@GLOBAL_IMPLICIT?$AA@
CONST	SEGMENT
??_C@_0BA@FMICAABN@GLOBAL_IMPLICIT?$AA@ DB 'GLOBAL_IMPLICIT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IOONMMEG@GLOBAL_EXPLICIT?$AA@
CONST	SEGMENT
??_C@_0BA@IOONMMEG@GLOBAL_EXPLICIT?$AA@ DB 'GLOBAL_EXPLICIT', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05EIDBELPO@LOCAL?$AA@
CONST	SEGMENT
??_C@_05EIDBELPO@LOCAL?$AA@ DB 'LOCAL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@GNBPPHC@OPT_TOPLEVEL?$AA@
CONST	SEGMENT
??_C@_0N@GNBPPHC@OPT_TOPLEVEL?$AA@ DB 'OPT_TOPLEVEL', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@NKHFICHP@OPT_IMPORT_STAR?$AA@
CONST	SEGMENT
??_C@_0BA@NKHFICHP@OPT_IMPORT_STAR?$AA@ DB 'OPT_IMPORT_STAR', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GHEPPINF@TYPE_MODULE?$AA@
CONST	SEGMENT
??_C@_0M@GHEPPINF@TYPE_MODULE?$AA@ DB 'TYPE_MODULE', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@BHKHDFDK@TYPE_CLASS?$AA@
CONST	SEGMENT
??_C@_0L@BHKHDFDK@TYPE_CLASS?$AA@ DB 'TYPE_CLASS', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@FOICOKEA@TYPE_FUNCTION?$AA@
CONST	SEGMENT
??_C@_0O@FOICOKEA@TYPE_FUNCTION?$AA@ DB 'TYPE_FUNCTION', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09KPLPJFIL@DEF_BOUND?$AA@
CONST	SEGMENT
??_C@_09KPLPJFIL@DEF_BOUND?$AA@ DB 'DEF_BOUND', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@IDCKLPEL@DEF_IMPORT?$AA@
CONST	SEGMENT
??_C@_0L@IDCKLPEL@DEF_IMPORT?$AA@ DB 'DEF_IMPORT', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JFMEAKHL@DEF_FREE_CLASS?$AA@
CONST	SEGMENT
??_C@_0P@JFMEAKHL@DEF_FREE_CLASS?$AA@ DB 'DEF_FREE_CLASS', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08GMBOBBBJ@DEF_FREE?$AA@
CONST	SEGMENT
??_C@_08GMBOBBBJ@DEF_FREE?$AA@ DB 'DEF_FREE', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09BJNIEMLH@DEF_PARAM?$AA@
CONST	SEGMENT
??_C@_09BJNIEMLH@DEF_PARAM?$AA@ DB 'DEF_PARAM', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09CDECDBIN@DEF_LOCAL?$AA@
CONST	SEGMENT
??_C@_09CDECDBIN@DEF_LOCAL?$AA@ DB 'DEF_LOCAL', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@JEOIEKEN@DEF_GLOBAL?$AA@
CONST	SEGMENT
??_C@_0L@JEOIEKEN@DEF_GLOBAL?$AA@ DB 'DEF_GLOBAL', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03MBJMPENK@USE?$AA@
CONST	SEGMENT
??_C@_03MBJMPENK@USE?$AA@ DB 'USE', 00H			; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT PyInit__symtable
_TEXT	SEGMENT
PyInit__symtable PROC					; COMDAT

; 63   : {

$LN7:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 64   :     PyObject *m;
; 65   : 
; 66   :     if (PyType_Ready(&PySTEntry_Type) < 0)

  00004	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:PySTEntry_Type
  0000b	e8 00 00 00 00	 call	 PyType_Ready
  00010	85 c0		 test	 eax, eax
  00012	79 07		 jns	 SHORT $LN3@PyInit__sy

; 67   :         return NULL;

  00014	33 c0		 xor	 eax, eax

; 102  : }

  00016	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001a	c3		 ret	 0
$LN3@PyInit__sy:

; 68   : 
; 69   :     m = PyModule_Create(&symtablemodule);

  0001b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:symtablemodule
  00022	ba f5 03 00 00	 mov	 edx, 1013		; 000003f5H
  00027	48 89 5c 24 20	 mov	 QWORD PTR [rsp+32], rbx
  0002c	e8 00 00 00 00	 call	 PyModule_Create2
  00031	48 8b d8	 mov	 rbx, rax

; 70   :     if (m == NULL)

  00034	48 85 c0	 test	 rax, rax
  00037	75 0a		 jne	 SHORT $LN2@PyInit__sy
  00039	48 8b 5c 24 20	 mov	 rbx, QWORD PTR [rsp+32]

; 102  : }

  0003e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00042	c3		 ret	 0
$LN2@PyInit__sy:

; 71   :         return NULL;
; 72   :     PyModule_AddIntConstant(m, "USE", USE);

  00043	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_03MBJMPENK@USE?$AA@
  0004a	41 b8 10 00 00
	00		 mov	 r8d, 16
  00050	48 8b c8	 mov	 rcx, rax
  00053	e8 00 00 00 00	 call	 PyModule_AddIntConstant

; 73   :     PyModule_AddIntConstant(m, "DEF_GLOBAL", DEF_GLOBAL);

  00058	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0L@JEOIEKEN@DEF_GLOBAL?$AA@
  0005f	41 b8 01 00 00
	00		 mov	 r8d, 1
  00065	48 8b cb	 mov	 rcx, rbx
  00068	e8 00 00 00 00	 call	 PyModule_AddIntConstant

; 74   :     PyModule_AddIntConstant(m, "DEF_LOCAL", DEF_LOCAL);

  0006d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_09CDECDBIN@DEF_LOCAL?$AA@
  00074	41 b8 02 00 00
	00		 mov	 r8d, 2
  0007a	48 8b cb	 mov	 rcx, rbx
  0007d	e8 00 00 00 00	 call	 PyModule_AddIntConstant

; 75   :     PyModule_AddIntConstant(m, "DEF_PARAM", DEF_PARAM);

  00082	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_09BJNIEMLH@DEF_PARAM?$AA@
  00089	41 b8 04 00 00
	00		 mov	 r8d, 4
  0008f	48 8b cb	 mov	 rcx, rbx
  00092	e8 00 00 00 00	 call	 PyModule_AddIntConstant

; 76   :     PyModule_AddIntConstant(m, "DEF_FREE", DEF_FREE);

  00097	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_08GMBOBBBJ@DEF_FREE?$AA@
  0009e	41 b8 20 00 00
	00		 mov	 r8d, 32			; 00000020H
  000a4	48 8b cb	 mov	 rcx, rbx
  000a7	e8 00 00 00 00	 call	 PyModule_AddIntConstant

; 77   :     PyModule_AddIntConstant(m, "DEF_FREE_CLASS", DEF_FREE_CLASS);

  000ac	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0P@JFMEAKHL@DEF_FREE_CLASS?$AA@
  000b3	41 b8 40 00 00
	00		 mov	 r8d, 64			; 00000040H
  000b9	48 8b cb	 mov	 rcx, rbx
  000bc	e8 00 00 00 00	 call	 PyModule_AddIntConstant

; 78   :     PyModule_AddIntConstant(m, "DEF_IMPORT", DEF_IMPORT);

  000c1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0L@IDCKLPEL@DEF_IMPORT?$AA@
  000c8	41 b8 80 00 00
	00		 mov	 r8d, 128		; 00000080H
  000ce	48 8b cb	 mov	 rcx, rbx
  000d1	e8 00 00 00 00	 call	 PyModule_AddIntConstant

; 79   :     PyModule_AddIntConstant(m, "DEF_BOUND", DEF_BOUND);

  000d6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_09KPLPJFIL@DEF_BOUND?$AA@
  000dd	41 b8 86 00 00
	00		 mov	 r8d, 134		; 00000086H
  000e3	48 8b cb	 mov	 rcx, rbx
  000e6	e8 00 00 00 00	 call	 PyModule_AddIntConstant

; 80   : 
; 81   :     PyModule_AddIntConstant(m, "TYPE_FUNCTION", FunctionBlock);

  000eb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0O@FOICOKEA@TYPE_FUNCTION?$AA@
  000f2	45 33 c0	 xor	 r8d, r8d
  000f5	48 8b cb	 mov	 rcx, rbx
  000f8	e8 00 00 00 00	 call	 PyModule_AddIntConstant

; 82   :     PyModule_AddIntConstant(m, "TYPE_CLASS", ClassBlock);

  000fd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0L@BHKHDFDK@TYPE_CLASS?$AA@
  00104	41 b8 01 00 00
	00		 mov	 r8d, 1
  0010a	48 8b cb	 mov	 rcx, rbx
  0010d	e8 00 00 00 00	 call	 PyModule_AddIntConstant

; 83   :     PyModule_AddIntConstant(m, "TYPE_MODULE", ModuleBlock);

  00112	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0M@GHEPPINF@TYPE_MODULE?$AA@
  00119	41 b8 02 00 00
	00		 mov	 r8d, 2
  0011f	48 8b cb	 mov	 rcx, rbx
  00122	e8 00 00 00 00	 call	 PyModule_AddIntConstant

; 84   : 
; 85   :     PyModule_AddIntConstant(m, "OPT_IMPORT_STAR", OPT_IMPORT_STAR);

  00127	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BA@NKHFICHP@OPT_IMPORT_STAR?$AA@
  0012e	41 b8 01 00 00
	00		 mov	 r8d, 1
  00134	48 8b cb	 mov	 rcx, rbx
  00137	e8 00 00 00 00	 call	 PyModule_AddIntConstant

; 86   :     PyModule_AddIntConstant(m, "OPT_TOPLEVEL", OPT_TOPLEVEL);

  0013c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0N@GNBPPHC@OPT_TOPLEVEL?$AA@
  00143	41 b8 02 00 00
	00		 mov	 r8d, 2
  00149	48 8b cb	 mov	 rcx, rbx
  0014c	e8 00 00 00 00	 call	 PyModule_AddIntConstant

; 87   : 
; 88   :     PyModule_AddIntConstant(m, "LOCAL", LOCAL);

  00151	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_05EIDBELPO@LOCAL?$AA@
  00158	41 b8 01 00 00
	00		 mov	 r8d, 1
  0015e	48 8b cb	 mov	 rcx, rbx
  00161	e8 00 00 00 00	 call	 PyModule_AddIntConstant

; 89   :     PyModule_AddIntConstant(m, "GLOBAL_EXPLICIT", GLOBAL_EXPLICIT);

  00166	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BA@IOONMMEG@GLOBAL_EXPLICIT?$AA@
  0016d	41 b8 02 00 00
	00		 mov	 r8d, 2
  00173	48 8b cb	 mov	 rcx, rbx
  00176	e8 00 00 00 00	 call	 PyModule_AddIntConstant

; 90   :     PyModule_AddIntConstant(m, "GLOBAL_IMPLICIT", GLOBAL_IMPLICIT);

  0017b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BA@FMICAABN@GLOBAL_IMPLICIT?$AA@
  00182	41 b8 03 00 00
	00		 mov	 r8d, 3
  00188	48 8b cb	 mov	 rcx, rbx
  0018b	e8 00 00 00 00	 call	 PyModule_AddIntConstant

; 91   :     PyModule_AddIntConstant(m, "FREE", FREE);

  00190	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_04HEDFJGEJ@FREE?$AA@
  00197	41 b8 04 00 00
	00		 mov	 r8d, 4
  0019d	48 8b cb	 mov	 rcx, rbx
  001a0	e8 00 00 00 00	 call	 PyModule_AddIntConstant

; 92   :     PyModule_AddIntConstant(m, "CELL", CELL);

  001a5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_04KPAIPGNJ@CELL?$AA@
  001ac	41 b8 05 00 00
	00		 mov	 r8d, 5
  001b2	48 8b cb	 mov	 rcx, rbx
  001b5	e8 00 00 00 00	 call	 PyModule_AddIntConstant

; 93   : 
; 94   :     PyModule_AddIntConstant(m, "SCOPE_OFF", SCOPE_OFFSET);

  001ba	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_09IOLEDOKJ@SCOPE_OFF?$AA@
  001c1	41 b8 0b 00 00
	00		 mov	 r8d, 11
  001c7	48 8b cb	 mov	 rcx, rbx
  001ca	e8 00 00 00 00	 call	 PyModule_AddIntConstant

; 95   :     PyModule_AddIntConstant(m, "SCOPE_MASK", SCOPE_MASK);

  001cf	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0L@EBPDDDPO@SCOPE_MASK?$AA@
  001d6	41 b8 0f 00 00
	00		 mov	 r8d, 15
  001dc	48 8b cb	 mov	 rcx, rbx
  001df	e8 00 00 00 00	 call	 PyModule_AddIntConstant

; 96   : 
; 97   :     if (PyErr_Occurred()) {

  001e4	e8 00 00 00 00	 call	 PyErr_Occurred
  001e9	48 85 c0	 test	 rax, rax
  001ec	74 0a		 je	 SHORT $LN1@PyInit__sy

; 98   :         Py_DECREF(m);

  001ee	48 8b cb	 mov	 rcx, rbx
  001f1	e8 00 00 00 00	 call	 _Py_DecRef

; 99   :         m = 0;

  001f6	33 db		 xor	 ebx, ebx
$LN1@PyInit__sy:

; 100  :     }
; 101  :     return m;

  001f8	48 8b c3	 mov	 rax, rbx
  001fb	48 8b 5c 24 20	 mov	 rbx, QWORD PTR [rsp+32]

; 102  : }

  00200	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00204	c3		 ret	 0
PyInit__symtable ENDP
_TEXT	ENDS
END
