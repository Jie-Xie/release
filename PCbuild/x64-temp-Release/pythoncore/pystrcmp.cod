; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	PyOS_mystrnicmp
EXTRN	__imp_tolower:PROC
;	COMDAT pdata
; File c:\src\pyparallel\python\pystrcmp.c
pdata	SEGMENT
$pdata$PyOS_mystrnicmp DD imagerel $LN11
	DD	imagerel $LN11+164
	DD	imagerel $unwind$PyOS_mystrnicmp
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyOS_mystrnicmp DD 083701H
	DD	063437H
	DD	08640fH
	DD	07540fH
	DD	0700b320fH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT PyOS_mystrnicmp
_TEXT	SEGMENT
s1$ = 48
s2$ = 56
size$ = 64
PyOS_mystrnicmp PROC					; COMDAT

; 8    : {

$LN11:
  00000	48 89 6c 24 10	 mov	 QWORD PTR [rsp+16], rbp
  00005	48 89 74 24 18	 mov	 QWORD PTR [rsp+24], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	49 8b f8	 mov	 rdi, r8
  00012	48 8b f2	 mov	 rsi, rdx
  00015	48 8b e9	 mov	 rbp, rcx

; 9    :     if (size == 0)

  00018	4d 85 c0	 test	 r8, r8
  0001b	75 12		 jne	 SHORT $LN8@PyOS_mystr

; 10   :         return 0;

  0001d	33 c0		 xor	 eax, eax

; 17   : }

  0001f	48 8b 6c 24 38	 mov	 rbp, QWORD PTR [rsp+56]
  00024	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
  00029	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002d	5f		 pop	 rdi
  0002e	c3		 ret	 0
$LN8@PyOS_mystr:

; 11   :     while ((--size > 0) &&
; 12   :            (tolower((unsigned)*s1) == tolower((unsigned)*s2))) {

  0002f	48 ff cf	 dec	 rdi
  00032	48 89 5c 24 30	 mov	 QWORD PTR [rsp+48], rbx
  00037	48 85 ff	 test	 rdi, rdi
  0003a	7e 3a		 jle	 SHORT $LN10@PyOS_mystr
  0003c	0f 1f 40 00	 npad	 4
$LL4@PyOS_mystr:
  00040	0f be 4d 00	 movsx	 ecx, BYTE PTR [rbp]
  00044	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_tolower
  0004a	0f be 0e	 movsx	 ecx, BYTE PTR [rsi]
  0004d	8b d8		 mov	 ebx, eax
  0004f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_tolower
  00055	3b d8		 cmp	 ebx, eax
  00057	75 1d		 jne	 SHORT $LN10@PyOS_mystr

; 13   :         if (!*s1++ || !*s2++)

  00059	0f b6 45 00	 movzx	 eax, BYTE PTR [rbp]
  0005d	48 ff c5	 inc	 rbp
  00060	84 c0		 test	 al, al
  00062	74 12		 je	 SHORT $LN10@PyOS_mystr
  00064	0f b6 06	 movzx	 eax, BYTE PTR [rsi]
  00067	48 ff c6	 inc	 rsi
  0006a	84 c0		 test	 al, al
  0006c	74 08		 je	 SHORT $LN10@PyOS_mystr

; 11   :     while ((--size > 0) &&
; 12   :            (tolower((unsigned)*s1) == tolower((unsigned)*s2))) {

  0006e	48 ff cf	 dec	 rdi
  00071	48 85 ff	 test	 rdi, rdi
  00074	7f ca		 jg	 SHORT $LL4@PyOS_mystr
$LN10@PyOS_mystr:

; 14   :             break;
; 15   :     }
; 16   :     return tolower((unsigned)*s1) - tolower((unsigned)*s2);

  00076	0f be 4d 00	 movsx	 ecx, BYTE PTR [rbp]
  0007a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_tolower
  00080	0f be 0e	 movsx	 ecx, BYTE PTR [rsi]
  00083	8b d8		 mov	 ebx, eax
  00085	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_tolower

; 17   : }

  0008b	48 8b 6c 24 38	 mov	 rbp, QWORD PTR [rsp+56]
  00090	48 8b 74 24 40	 mov	 rsi, QWORD PTR [rsp+64]
  00095	2b d8		 sub	 ebx, eax
  00097	8b c3		 mov	 eax, ebx
  00099	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0009e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  000a2	5f		 pop	 rdi
  000a3	c3		 ret	 0
PyOS_mystrnicmp ENDP
_TEXT	ENDS
PUBLIC	PyOS_mystricmp
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyOS_mystricmp DD imagerel $LN6
	DD	imagerel $LN6+118
	DD	imagerel $unwind$PyOS_mystricmp
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyOS_mystricmp DD 081a01H
	DD	06741aH
	DD	08540fH
	DD	07340fH
	DD	0600b320fH
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT PyOS_mystricmp
_TEXT	SEGMENT
s1$ = 48
s2$ = 56
PyOS_mystricmp PROC					; COMDAT

; 21   : {

$LN6:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	56		 push	 rsi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	48 8b ea	 mov	 rbp, rdx
  00012	48 8b f1	 mov	 rsi, rcx
  00015	48 89 7c 24 30	 mov	 QWORD PTR [rsp+48], rdi
  0001a	66 0f 1f 44 00
	00		 npad	 6
$LL2@PyOS_mystr@2:

; 22   :     while (*s1 && (tolower((unsigned)*s1++) == tolower((unsigned)*s2++))) {

  00020	0f b6 06	 movzx	 eax, BYTE PTR [rsi]
  00023	84 c0		 test	 al, al
  00025	74 21		 je	 SHORT $LN1@PyOS_mystr@2
  00027	0f be 4d 00	 movsx	 ecx, BYTE PTR [rbp]
  0002b	0f be d8	 movsx	 ebx, al
  0002e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_tolower
  00034	8b cb		 mov	 ecx, ebx
  00036	8b f8		 mov	 edi, eax
  00038	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_tolower
  0003e	48 ff c5	 inc	 rbp
  00041	48 ff c6	 inc	 rsi
  00044	3b c7		 cmp	 eax, edi
  00046	74 d8		 je	 SHORT $LL2@PyOS_mystr@2
$LN1@PyOS_mystr@2:

; 23   :         ;
; 24   :     }
; 25   :     return (tolower((unsigned)*s1) - tolower((unsigned)*s2));

  00048	0f be 0e	 movsx	 ecx, BYTE PTR [rsi]
  0004b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_tolower
  00051	0f be 4d 00	 movsx	 ecx, BYTE PTR [rbp]
  00055	8b d8		 mov	 ebx, eax
  00057	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_tolower
  0005d	48 8b 7c 24 30	 mov	 rdi, QWORD PTR [rsp+48]

; 26   : }

  00062	48 8b 6c 24 40	 mov	 rbp, QWORD PTR [rsp+64]
  00067	2b d8		 sub	 ebx, eax
  00069	8b c3		 mov	 eax, ebx
  0006b	48 8b 5c 24 38	 mov	 rbx, QWORD PTR [rsp+56]
  00070	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00074	5e		 pop	 rsi
  00075	c3		 ret	 0
PyOS_mystricmp ENDP
_TEXT	ENDS
END
