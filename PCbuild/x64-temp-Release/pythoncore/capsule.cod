; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	??_C@_09MDEEIMMG@PyCapsule?$AA@			; `string'
PUBLIC	PyCapsule_Type
EXTRN	PyType_Type:BYTE
;	COMDAT ??_C@_09MDEEIMMG@PyCapsule?$AA@
CONST	SEGMENT
??_C@_09MDEEIMMG@PyCapsule?$AA@ DB 'PyCapsule', 00H	; `string'
CONST	ENDS
_DATA	SEGMENT
PyCapsule_Type__doc__ DB 'Capsule objects let you wrap a C "void *" point'
	DB	'er in a Python', 0aH, 'object.  They''re a way of passing dat'
	DB	'a through the Python interpreter', 0aH, 'without creating you'
	DB	'r own custom type.', 0aH, 0aH, 'Capsules are used for communi'
	DB	'cation between extension modules.', 0aH, 'They provide a way '
	DB	'for an extension module to export a C interface', 0aH, 'to ot'
	DB	'her extension modules, so that extension modules can use the', 0aH
	DB	'Python import mechanism to link to one another.', 0aH, 00H
	ORG $+15
PyCapsule_Type DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	FLAT:PyType_Type
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_09MDEEIMMG@PyCapsule?$AA@
	DQ	0000000000000080H
	DQ	0000000000000000H
	DQ	FLAT:capsule_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:capsule_repr
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:PyCapsule_Type__doc__
	ORG $+208
_DATA	ENDS
PUBLIC	??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@		; `string'
PUBLIC	??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@ ; `string'
PUBLIC	_Py_DecRef
EXTRN	Px_DecRef:PROC
EXTRN	_Px_Dealloc:PROC
EXTRN	_PyParallel_Guard:PROC
EXTRN	_Py_PXCTX:PROC
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$_Py_DecRef DD imagerel $LN12
	DD	imagerel $LN12+123
	DD	imagerel $unwind$_Py_DecRef
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_Py_DecRef DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT ??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
CONST	SEGMENT
??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@ DB '_Py_DecRef', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
CONST	SEGMENT
??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@ DB 'c:\src\pypa'
	DB	'rallel\include\object.h', 00H		; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT _Py_DecRef
_TEXT	SEGMENT
op$ = 64
_Py_DecRef PROC						; COMDAT

; 923  : {

$LN12:
  00000	40 53		 push	 rbx
  00002	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00006	48 8b d9	 mov	 rbx, rcx

; 924  :     if (!Py_PXCTX) {

  00009	e8 00 00 00 00	 call	 _Py_PXCTX
  0000e	85 c0		 test	 eax, eax
  00010	75 63		 jne	 SHORT $LN11@Py_DecRef

; 925  :         if (Px_PERSISTED(op) || Px_CLONED(op))

  00012	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  00016	a8 20		 test	 al, 32			; 00000020H
  00018	75 53		 jne	 SHORT $LN5@Py_DecRef
  0001a	84 c0		 test	 al, al
  0001c	78 4f		 js	 SHORT $LN5@Py_DecRef

; 927  :         else if (!Px_ISPX(op)) {

  0001e	a8 02		 test	 al, 2
  00020	75 53		 jne	 SHORT $LN11@Py_DecRef

; 928  :             _Py_DEC_REFTOTAL;
; 929  :             if ((--((PyObject *)(op))->ob_refcnt) != 0) {

  00022	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  00026	75 4d		 jne	 SHORT $LN11@Py_DecRef

; 930  :                 _Py_CHECK_REFCNT(op);
; 931  :             } else
; 932  :                 _Py_Dealloc((PyObject *)(op));

  00028	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  00036	4c 8b cb	 mov	 r9, rbx
  00039	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  0003f	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00047	e8 00 00 00 00	 call	 _PyParallel_Guard
  0004c	48 8b cb	 mov	 rcx, rbx
  0004f	85 c0		 test	 eax, eax
  00051	74 0a		 je	 SHORT $LN10@Py_DecRef

; 933  :         }
; 934  :     }
; 935  : }

  00053	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00057	5b		 pop	 rbx
  00058	e9 00 00 00 00	 jmp	 _Px_Dealloc
$LN10@Py_DecRef:

; 930  :                 _Py_CHECK_REFCNT(op);
; 931  :             } else
; 932  :                 _Py_Dealloc((PyObject *)(op));

  0005d	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]

; 933  :         }
; 934  :     }
; 935  : }

  00061	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00065	5b		 pop	 rbx
  00066	48 ff a0 88 00
	00 00		 rex_jmp QWORD PTR [rax+136]
$LN5@Py_DecRef:

; 926  :             Px_DECREF(op);

  0006d	48 8b cb	 mov	 rcx, rbx
  00070	e8 00 00 00 00	 call	 Px_DecRef
$LN11@Py_DecRef:

; 933  :         }
; 934  :     }
; 935  : }

  00075	48 83 c4 30	 add	 rsp, 48			; 00000030H
  00079	5b		 pop	 rbx
  0007a	c3		 ret	 0
_Py_DecRef ENDP
_TEXT	ENDS
EXTRN	PyObject_Init:PROC
EXTRN	PyObject_Malloc:PROC
EXTRN	_PxObject_New:PROC
;	COMDAT pdata
; File c:\src\pyparallel\include\objimpl.h
pdata	SEGMENT
$pdata$_PyObject_NEW DD imagerel _PyObject_NEW
	DD	imagerel _PyObject_NEW+56
	DD	imagerel $unwind$_PyObject_NEW
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_PyObject_NEW DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT _PyObject_NEW
_TEXT	SEGMENT
tp$ = 48
_PyObject_NEW PROC					; COMDAT

; 293  : {

  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  00006	48 8b d9	 mov	 rbx, rcx

; 294  :     Px_RETURN(_PxObject_New(tp))

  00009	e8 00 00 00 00	 call	 _Py_PXCTX
  0000e	85 c0		 test	 eax, eax
  00010	74 0d		 je	 SHORT $LN1@PyObject_N
  00012	48 8b cb	 mov	 rcx, rbx

; 296  : }

  00015	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00019	5b		 pop	 rbx
  0001a	e9 00 00 00 00	 jmp	 _PxObject_New
$LN1@PyObject_N:

; 295  :     return PyObject_Init((PyObject *)PyObject_MALLOC(_PyObject_SIZE(tp)), tp);

  0001f	48 8b 4b 78	 mov	 rcx, QWORD PTR [rbx+120]
  00023	e8 00 00 00 00	 call	 PyObject_Malloc
  00028	48 8b d3	 mov	 rdx, rbx
  0002b	48 8b c8	 mov	 rcx, rax

; 296  : }

  0002e	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00032	5b		 pop	 rbx
  00033	e9 00 00 00 00	 jmp	 PyObject_Init
_PyObject_NEW ENDP
_TEXT	ENDS
EXTRN	PyErr_SetString:PROC
EXTRN	PyExc_ValueError:QWORD
;	COMDAT pdata
; File c:\src\pyparallel\objects\capsule.c
pdata	SEGMENT
$pdata$_is_legal_capsule DD imagerel _is_legal_capsule
	DD	imagerel _is_legal_capsule+58
	DD	imagerel $unwind$_is_legal_capsule
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_is_legal_capsule DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT _is_legal_capsule
_TEXT	SEGMENT
capsule$ = 48
invalid_capsule$ = 56
_is_legal_capsule PROC					; COMDAT

; 18   : {

  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 19   :     if (!capsule || !PyCapsule_CheckExact(capsule) || capsule->pointer == NULL) {

  00004	48 85 c9	 test	 rcx, rcx
  00007	74 1e		 je	 SHORT $LN1@is_legal_c
  00009	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:PyCapsule_Type
  00010	48 39 41 58	 cmp	 QWORD PTR [rcx+88], rax
  00014	75 11		 jne	 SHORT $LN1@is_legal_c
  00016	48 83 79 60 00	 cmp	 QWORD PTR [rcx+96], 0
  0001b	74 0a		 je	 SHORT $LN1@is_legal_c

; 22   :     }
; 23   :     return 1;

  0001d	b8 01 00 00 00	 mov	 eax, 1

; 24   : }

  00022	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00026	c3		 ret	 0
$LN1@is_legal_c:

; 20   :         PyErr_SetString(PyExc_ValueError, invalid_capsule);

  00027	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ValueError
  0002e	e8 00 00 00 00	 call	 PyErr_SetString

; 21   :         return 0;

  00033	33 c0		 xor	 eax, eax

; 24   : }

  00035	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00039	c3		 ret	 0
_is_legal_capsule ENDP
; Function compile flags: /Ogtpy
_TEXT	ENDS
;	COMDAT name_matches
_TEXT	SEGMENT
name1$ = 8
name2$ = 16
name_matches PROC					; COMDAT

; 32   : name_matches(const char *name1, const char *name2) {

  00000	4c 8b c2	 mov	 r8, rdx

; 33   :     /* if either is NULL, */
; 34   :     if (!name1 || !name2) {

  00003	48 85 c9	 test	 rcx, rcx
  00006	74 23		 je	 SHORT $LN1@name_match
  00008	48 85 d2	 test	 rdx, rdx
  0000b	74 1e		 je	 SHORT $LN1@name_match

; 37   :     }
; 38   :     return !strcmp(name1, name2);

  0000d	4c 2b c1	 sub	 r8, rcx
$LL5@name_match:
  00010	0f b6 11	 movzx	 edx, BYTE PTR [rcx]
  00013	42 0f b6 04 01	 movzx	 eax, BYTE PTR [rcx+r8]
  00018	2b d0		 sub	 edx, eax
  0001a	75 07		 jne	 SHORT $LN6@name_match
  0001c	48 ff c1	 inc	 rcx
  0001f	85 c0		 test	 eax, eax
  00021	75 ed		 jne	 SHORT $LL5@name_match
$LN6@name_match:
  00023	33 c0		 xor	 eax, eax
  00025	85 d2		 test	 edx, edx
  00027	0f 94 c0	 sete	 al

; 39   : }

  0002a	c3		 ret	 0
$LN1@name_match:

; 35   :         /* they're only the same if they're both NULL. */
; 36   :         return name1 == name2;

  0002b	33 c0		 xor	 eax, eax
  0002d	48 3b ca	 cmp	 rcx, rdx
  00030	0f 94 c0	 sete	 al

; 39   : }

  00033	c3		 ret	 0
name_matches ENDP
_TEXT	ENDS
PUBLIC	??_C@_0CH@LKLOPFEC@PyCapsule_New?5called?5with?5null?5p@ ; `string'
PUBLIC	PyCapsule_New
;	COMDAT pdata
; File c:\src\pyparallel\include\objimpl.h
pdata	SEGMENT
$pdata$PyCapsule_New DD imagerel $LN9
	DD	imagerel $LN9+157
	DD	imagerel $unwind$PyCapsule_New
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyCapsule_New DD 060f01H
	DD	07640fH
	DD	06340fH
	DD	0700b320fH
xdata	ENDS
;	COMDAT ??_C@_0CH@LKLOPFEC@PyCapsule_New?5called?5with?5null?5p@
CONST	SEGMENT
??_C@_0CH@LKLOPFEC@PyCapsule_New?5called?5with?5null?5p@ DB 'PyCapsule_Ne'
	DB	'w called with null pointer', 00H		; `string'
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\capsule.c
CONST	ENDS
;	COMDAT PyCapsule_New
_TEXT	SEGMENT
pointer$ = 48
name$ = 56
destructor$ = 64
PyCapsule_New PROC					; COMDAT

; 45   : {

$LN9:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	48 89 74 24 10	 mov	 QWORD PTR [rsp+16], rsi
  0000a	57		 push	 rdi
  0000b	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000f	49 8b f8	 mov	 rdi, r8
  00012	48 8b f2	 mov	 rsi, rdx
  00015	48 8b d9	 mov	 rbx, rcx

; 46   :     PyCapsule *capsule;
; 47   : 
; 48   :     if (!pointer) {

  00018	48 85 c9	 test	 rcx, rcx
  0001b	75 25		 jne	 SHORT $LN2@PyCapsule_

; 49   :         PyErr_SetString(PyExc_ValueError, "PyCapsule_New called with null pointer");

  0001d	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ValueError
  00024	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CH@LKLOPFEC@PyCapsule_New?5called?5with?5null?5p@
  0002b	e8 00 00 00 00	 call	 PyErr_SetString
$LN8@PyCapsule_:

; 50   :         return NULL;

  00030	33 c0		 xor	 eax, eax

; 59   :     capsule->name = name;
; 60   :     capsule->context = NULL;
; 61   :     capsule->destructor = destructor;
; 62   : 
; 63   :     return (PyObject *)capsule;
; 64   : }

  00032	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00037	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  0003c	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00040	5f		 pop	 rdi
  00041	c3		 ret	 0
$LN2@PyCapsule_:

; 51   :     }
; 52   : 
; 53   :     capsule = PyObject_NEW(PyCapsule, &PyCapsule_Type);

  00042	e8 00 00 00 00	 call	 _Py_PXCTX
  00047	85 c0		 test	 eax, eax
  00049	74 0e		 je	 SHORT $LN5@PyCapsule_
  0004b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:PyCapsule_Type
  00052	e8 00 00 00 00	 call	 _PxObject_New
  00057	eb 1b		 jmp	 SHORT $LN6@PyCapsule_
$LN5@PyCapsule_:
  00059	48 8b 0d 78 00
	00 00		 mov	 rcx, QWORD PTR PyCapsule_Type+120
  00060	e8 00 00 00 00	 call	 PyObject_Malloc
  00065	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:PyCapsule_Type
  0006c	48 8b c8	 mov	 rcx, rax
  0006f	e8 00 00 00 00	 call	 PyObject_Init
$LN6@PyCapsule_:

; 54   :     if (capsule == NULL) {

  00074	48 85 c0	 test	 rax, rax

; 55   :         return NULL;

  00077	74 b7		 je	 SHORT $LN8@PyCapsule_

; 56   :     }
; 57   : 
; 58   :     capsule->pointer = pointer;

  00079	48 89 58 60	 mov	 QWORD PTR [rax+96], rbx

; 59   :     capsule->name = name;
; 60   :     capsule->context = NULL;
; 61   :     capsule->destructor = destructor;
; 62   : 
; 63   :     return (PyObject *)capsule;
; 64   : }

  0007d	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00082	48 89 70 68	 mov	 QWORD PTR [rax+104], rsi
  00086	48 8b 74 24 38	 mov	 rsi, QWORD PTR [rsp+56]
  0008b	48 c7 40 70 00
	00 00 00	 mov	 QWORD PTR [rax+112], 0
  00093	48 89 78 78	 mov	 QWORD PTR [rax+120], rdi
  00097	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0009b	5f		 pop	 rdi
  0009c	c3		 ret	 0
PyCapsule_New ENDP
_TEXT	ENDS
PUBLIC	PyCapsule_IsValid
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyCapsule_IsValid DD imagerel $LN5
	DD	imagerel $LN5+59
	DD	imagerel $unwind$PyCapsule_IsValid
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyCapsule_IsValid DD 010401H
	DD	04204H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT PyCapsule_IsValid
_TEXT	SEGMENT
o$ = 48
name$ = 56
PyCapsule_IsValid PROC					; COMDAT

; 69   : {

$LN5:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 70   :     PyCapsule *capsule = (PyCapsule *)o;
; 71   : 
; 72   :     return (capsule != NULL &&
; 73   :             PyCapsule_CheckExact(capsule) &&
; 74   :             capsule->pointer != NULL &&
; 75   :             name_matches(capsule->name, name));

  00004	48 85 c9	 test	 rcx, rcx
  00007	74 2b		 je	 SHORT $LN3@PyCapsule_@2
  00009	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:PyCapsule_Type
  00010	48 39 41 58	 cmp	 QWORD PTR [rcx+88], rax
  00014	75 1e		 jne	 SHORT $LN3@PyCapsule_@2
  00016	48 83 79 60 00	 cmp	 QWORD PTR [rcx+96], 0
  0001b	74 17		 je	 SHORT $LN3@PyCapsule_@2
  0001d	48 8b 49 68	 mov	 rcx, QWORD PTR [rcx+104]
  00021	e8 00 00 00 00	 call	 name_matches
  00026	85 c0		 test	 eax, eax
  00028	74 0a		 je	 SHORT $LN3@PyCapsule_@2
  0002a	b8 01 00 00 00	 mov	 eax, 1

; 76   : }

  0002f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00033	c3		 ret	 0
$LN3@PyCapsule_@2:

; 70   :     PyCapsule *capsule = (PyCapsule *)o;
; 71   : 
; 72   :     return (capsule != NULL &&
; 73   :             PyCapsule_CheckExact(capsule) &&
; 74   :             capsule->pointer != NULL &&
; 75   :             name_matches(capsule->name, name));

  00034	33 c0		 xor	 eax, eax

; 76   : }

  00036	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003a	c3		 ret	 0
PyCapsule_IsValid ENDP
_TEXT	ENDS
PUBLIC	??_C@_0DA@EEILPBOF@PyCapsule_GetPointer?5called?5with@ ; `string'
PUBLIC	??_C@_0DK@BDNAPFIG@PyCapsule_GetPointer?5called?5with@ ; `string'
PUBLIC	PyCapsule_GetPointer
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyCapsule_GetPointer DD imagerel $LN6
	DD	imagerel $LN6+95
	DD	imagerel $unwind$PyCapsule_GetPointer
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyCapsule_GetPointer DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT ??_C@_0DA@EEILPBOF@PyCapsule_GetPointer?5called?5with@
CONST	SEGMENT
??_C@_0DA@EEILPBOF@PyCapsule_GetPointer?5called?5with@ DB 'PyCapsule_GetP'
	DB	'ointer called with incorrect name', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@BDNAPFIG@PyCapsule_GetPointer?5called?5with@
CONST	SEGMENT
??_C@_0DK@BDNAPFIG@PyCapsule_GetPointer?5called?5with@ DB 'PyCapsule_GetP'
	DB	'ointer called with invalid PyCapsule object', 00H ; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT PyCapsule_GetPointer
_TEXT	SEGMENT
o$ = 48
name$ = 56
PyCapsule_GetPointer PROC				; COMDAT

; 81   : {

$LN6:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fa	 mov	 rdi, rdx

; 82   :     PyCapsule *capsule = (PyCapsule *)o;
; 83   : 
; 84   :     if (!is_legal_capsule(capsule, "PyCapsule_GetPointer")) {

  0000d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0DK@BDNAPFIG@PyCapsule_GetPointer?5called?5with@
  00014	48 8b d9	 mov	 rbx, rcx
  00017	e8 00 00 00 00	 call	 _is_legal_capsule
  0001c	85 c0		 test	 eax, eax

; 85   :         return NULL;

  0001e	74 23		 je	 SHORT $LN5@PyCapsule_@3

; 86   :     }
; 87   : 
; 88   :     if (!name_matches(name, capsule->name)) {

  00020	48 8b 53 68	 mov	 rdx, QWORD PTR [rbx+104]
  00024	48 8b cf	 mov	 rcx, rdi
  00027	e8 00 00 00 00	 call	 name_matches
  0002c	85 c0		 test	 eax, eax
  0002e	75 20		 jne	 SHORT $LN1@PyCapsule_@3

; 89   :         PyErr_SetString(PyExc_ValueError, "PyCapsule_GetPointer called with incorrect name");

  00030	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ValueError
  00037	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0DA@EEILPBOF@PyCapsule_GetPointer?5called?5with@
  0003e	e8 00 00 00 00	 call	 PyErr_SetString
$LN5@PyCapsule_@3:

; 90   :         return NULL;

  00043	33 c0		 xor	 eax, eax

; 94   : }

  00045	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0004a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0004e	5f		 pop	 rdi
  0004f	c3		 ret	 0
$LN1@PyCapsule_@3:

; 91   :     }
; 92   : 
; 93   :     return capsule->pointer;

  00050	48 8b 43 60	 mov	 rax, QWORD PTR [rbx+96]

; 94   : }

  00054	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00059	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0005d	5f		 pop	 rdi
  0005e	c3		 ret	 0
PyCapsule_GetPointer ENDP
_TEXT	ENDS
PUBLIC	??_C@_0DH@JIKJKMMD@PyCapsule_GetName?5called?5with?5in@ ; `string'
PUBLIC	PyCapsule_GetName
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyCapsule_GetName DD imagerel $LN4
	DD	imagerel $LN4+43
	DD	imagerel $unwind$PyCapsule_GetName
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyCapsule_GetName DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT ??_C@_0DH@JIKJKMMD@PyCapsule_GetName?5called?5with?5in@
CONST	SEGMENT
??_C@_0DH@JIKJKMMD@PyCapsule_GetName?5called?5with?5in@ DB 'PyCapsule_Get'
	DB	'Name called with invalid PyCapsule object', 00H ; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT PyCapsule_GetName
_TEXT	SEGMENT
o$ = 48
PyCapsule_GetName PROC					; COMDAT

; 99   : {

$LN4:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 100  :     PyCapsule *capsule = (PyCapsule *)o;
; 101  : 
; 102  :     if (!is_legal_capsule(capsule, "PyCapsule_GetName")) {

  00006	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0DH@JIKJKMMD@PyCapsule_GetName?5called?5with?5in@
  0000d	48 8b d9	 mov	 rbx, rcx
  00010	e8 00 00 00 00	 call	 _is_legal_capsule
  00015	85 c0		 test	 eax, eax
  00017	75 08		 jne	 SHORT $LN1@PyCapsule_@4

; 103  :         return NULL;

  00019	33 c0		 xor	 eax, eax

; 106  : }

  0001b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001f	5b		 pop	 rbx
  00020	c3		 ret	 0
$LN1@PyCapsule_@4:

; 104  :     }
; 105  :     return capsule->name;

  00021	48 8b 43 68	 mov	 rax, QWORD PTR [rbx+104]

; 106  : }

  00025	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00029	5b		 pop	 rbx
  0002a	c3		 ret	 0
PyCapsule_GetName ENDP
_TEXT	ENDS
PUBLIC	??_C@_0DN@MNFKNJLE@PyCapsule_GetDestructor?5called?5w@ ; `string'
PUBLIC	PyCapsule_GetDestructor
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyCapsule_GetDestructor DD imagerel $LN4
	DD	imagerel $LN4+43
	DD	imagerel $unwind$PyCapsule_GetDestructor
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyCapsule_GetDestructor DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT ??_C@_0DN@MNFKNJLE@PyCapsule_GetDestructor?5called?5w@
CONST	SEGMENT
??_C@_0DN@MNFKNJLE@PyCapsule_GetDestructor?5called?5w@ DB 'PyCapsule_GetD'
	DB	'estructor called with invalid PyCapsule object', 00H ; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT PyCapsule_GetDestructor
_TEXT	SEGMENT
o$ = 48
PyCapsule_GetDestructor PROC				; COMDAT

; 111  : {

$LN4:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 112  :     PyCapsule *capsule = (PyCapsule *)o;
; 113  : 
; 114  :     if (!is_legal_capsule(capsule, "PyCapsule_GetDestructor")) {

  00006	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0DN@MNFKNJLE@PyCapsule_GetDestructor?5called?5w@
  0000d	48 8b d9	 mov	 rbx, rcx
  00010	e8 00 00 00 00	 call	 _is_legal_capsule
  00015	85 c0		 test	 eax, eax
  00017	75 08		 jne	 SHORT $LN1@PyCapsule_@5

; 115  :         return NULL;

  00019	33 c0		 xor	 eax, eax

; 118  : }

  0001b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001f	5b		 pop	 rbx
  00020	c3		 ret	 0
$LN1@PyCapsule_@5:

; 116  :     }
; 117  :     return capsule->destructor;

  00021	48 8b 43 78	 mov	 rax, QWORD PTR [rbx+120]

; 118  : }

  00025	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00029	5b		 pop	 rbx
  0002a	c3		 ret	 0
PyCapsule_GetDestructor ENDP
_TEXT	ENDS
PUBLIC	??_C@_0DK@KHICHICO@PyCapsule_GetContext?5called?5with@ ; `string'
PUBLIC	PyCapsule_GetContext
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyCapsule_GetContext DD imagerel $LN4
	DD	imagerel $LN4+43
	DD	imagerel $unwind$PyCapsule_GetContext
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyCapsule_GetContext DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT ??_C@_0DK@KHICHICO@PyCapsule_GetContext?5called?5with@
CONST	SEGMENT
??_C@_0DK@KHICHICO@PyCapsule_GetContext?5called?5with@ DB 'PyCapsule_GetC'
	DB	'ontext called with invalid PyCapsule object', 00H ; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT PyCapsule_GetContext
_TEXT	SEGMENT
o$ = 48
PyCapsule_GetContext PROC				; COMDAT

; 123  : {

$LN4:
  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 124  :     PyCapsule *capsule = (PyCapsule *)o;
; 125  : 
; 126  :     if (!is_legal_capsule(capsule, "PyCapsule_GetContext")) {

  00006	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0DK@KHICHICO@PyCapsule_GetContext?5called?5with@
  0000d	48 8b d9	 mov	 rbx, rcx
  00010	e8 00 00 00 00	 call	 _is_legal_capsule
  00015	85 c0		 test	 eax, eax
  00017	75 08		 jne	 SHORT $LN1@PyCapsule_@6

; 127  :         return NULL;

  00019	33 c0		 xor	 eax, eax

; 130  : }

  0001b	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001f	5b		 pop	 rbx
  00020	c3		 ret	 0
$LN1@PyCapsule_@6:

; 128  :     }
; 129  :     return capsule->context;

  00021	48 8b 43 70	 mov	 rax, QWORD PTR [rbx+112]

; 130  : }

  00025	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00029	5b		 pop	 rbx
  0002a	c3		 ret	 0
PyCapsule_GetContext ENDP
_TEXT	ENDS
PUBLIC	??_C@_0DK@IIOLIHLE@PyCapsule_SetPointer?5called?5with@ ; `string'
PUBLIC	??_C@_0CO@DDMDBPPI@PyCapsule_SetPointer?5called?5with@ ; `string'
PUBLIC	PyCapsule_SetPointer
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyCapsule_SetPointer DD imagerel $LN6
	DD	imagerel $LN6+87
	DD	imagerel $unwind$PyCapsule_SetPointer
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyCapsule_SetPointer DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT ??_C@_0DK@IIOLIHLE@PyCapsule_SetPointer?5called?5with@
CONST	SEGMENT
??_C@_0DK@IIOLIHLE@PyCapsule_SetPointer?5called?5with@ DB 'PyCapsule_SetP'
	DB	'ointer called with invalid PyCapsule object', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@DDMDBPPI@PyCapsule_SetPointer?5called?5with@
CONST	SEGMENT
??_C@_0CO@DDMDBPPI@PyCapsule_SetPointer?5called?5with@ DB 'PyCapsule_SetP'
	DB	'ointer called with null pointer', 00H	; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT PyCapsule_SetPointer
_TEXT	SEGMENT
o$ = 48
pointer$ = 56
PyCapsule_SetPointer PROC				; COMDAT

; 135  : {

$LN6:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b da	 mov	 rbx, rdx
  0000d	48 8b f9	 mov	 rdi, rcx

; 136  :     PyCapsule *capsule = (PyCapsule *)o;
; 137  : 
; 138  :     if (!pointer) {

  00010	48 85 d2	 test	 rdx, rdx
  00013	75 21		 jne	 SHORT $LN2@PyCapsule_@7

; 139  :         PyErr_SetString(PyExc_ValueError, "PyCapsule_SetPointer called with null pointer");

  00015	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ValueError
  0001c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CO@DDMDBPPI@PyCapsule_SetPointer?5called?5with@
  00023	e8 00 00 00 00	 call	 PyErr_SetString
$LN5@PyCapsule_@7:

; 140  :         return -1;

  00028	83 c8 ff	 or	 eax, -1

; 148  :     return 0;
; 149  : }

  0002b	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00030	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00034	5f		 pop	 rdi
  00035	c3		 ret	 0
$LN2@PyCapsule_@7:

; 141  :     }
; 142  : 
; 143  :     if (!is_legal_capsule(capsule, "PyCapsule_SetPointer")) {

  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0DK@IIOLIHLE@PyCapsule_SetPointer?5called?5with@
  0003d	e8 00 00 00 00	 call	 _is_legal_capsule
  00042	85 c0		 test	 eax, eax

; 144  :         return -1;

  00044	74 e2		 je	 SHORT $LN5@PyCapsule_@7

; 145  :     }
; 146  : 
; 147  :     capsule->pointer = pointer;

  00046	48 89 5f 60	 mov	 QWORD PTR [rdi+96], rbx

; 148  :     return 0;
; 149  : }

  0004a	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  0004f	33 c0		 xor	 eax, eax
  00051	48 83 c4 20	 add	 rsp, 32			; 00000020H
  00055	5f		 pop	 rdi
  00056	c3		 ret	 0
PyCapsule_SetPointer ENDP
_TEXT	ENDS
PUBLIC	??_C@_0DH@ECKOKEHO@PyCapsule_SetName?5called?5with?5in@ ; `string'
PUBLIC	PyCapsule_SetName
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyCapsule_SetName DD imagerel $LN4
	DD	imagerel $LN4+63
	DD	imagerel $unwind$PyCapsule_SetName
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyCapsule_SetName DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT ??_C@_0DH@ECKOKEHO@PyCapsule_SetName?5called?5with?5in@
CONST	SEGMENT
??_C@_0DH@ECKOKEHO@PyCapsule_SetName?5called?5with?5in@ DB 'PyCapsule_Set'
	DB	'Name called with invalid PyCapsule object', 00H ; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT PyCapsule_SetName
_TEXT	SEGMENT
o$ = 48
name$ = 56
PyCapsule_SetName PROC					; COMDAT

; 154  : {

$LN4:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fa	 mov	 rdi, rdx

; 155  :     PyCapsule *capsule = (PyCapsule *)o;
; 156  : 
; 157  :     if (!is_legal_capsule(capsule, "PyCapsule_SetName")) {

  0000d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0DH@ECKOKEHO@PyCapsule_SetName?5called?5with?5in@
  00014	48 8b d9	 mov	 rbx, rcx
  00017	e8 00 00 00 00	 call	 _is_legal_capsule
  0001c	85 c0		 test	 eax, eax
  0001e	75 0e		 jne	 SHORT $LN1@PyCapsule_@8

; 158  :         return -1;

  00020	83 c8 ff	 or	 eax, -1

; 162  :     return 0;
; 163  : }

  00023	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
$LN1@PyCapsule_@8:

; 159  :     }
; 160  : 
; 161  :     capsule->name = name;

  0002e	48 89 7b 68	 mov	 QWORD PTR [rbx+104], rdi

; 162  :     return 0;
; 163  : }

  00032	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00037	33 c0		 xor	 eax, eax
  00039	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003d	5f		 pop	 rdi
  0003e	c3		 ret	 0
PyCapsule_SetName ENDP
_TEXT	ENDS
PUBLIC	??_C@_0DN@EGLHBKIB@PyCapsule_SetDestructor?5called?5w@ ; `string'
PUBLIC	PyCapsule_SetDestructor
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyCapsule_SetDestructor DD imagerel $LN4
	DD	imagerel $LN4+63
	DD	imagerel $unwind$PyCapsule_SetDestructor
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyCapsule_SetDestructor DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT ??_C@_0DN@EGLHBKIB@PyCapsule_SetDestructor?5called?5w@
CONST	SEGMENT
??_C@_0DN@EGLHBKIB@PyCapsule_SetDestructor?5called?5w@ DB 'PyCapsule_SetD'
	DB	'estructor called with invalid PyCapsule object', 00H ; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT PyCapsule_SetDestructor
_TEXT	SEGMENT
o$ = 48
destructor$ = 56
PyCapsule_SetDestructor PROC				; COMDAT

; 168  : {

$LN4:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fa	 mov	 rdi, rdx

; 169  :     PyCapsule *capsule = (PyCapsule *)o;
; 170  : 
; 171  :     if (!is_legal_capsule(capsule, "PyCapsule_SetDestructor")) {

  0000d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0DN@EGLHBKIB@PyCapsule_SetDestructor?5called?5w@
  00014	48 8b d9	 mov	 rbx, rcx
  00017	e8 00 00 00 00	 call	 _is_legal_capsule
  0001c	85 c0		 test	 eax, eax
  0001e	75 0e		 jne	 SHORT $LN1@PyCapsule_@9

; 172  :         return -1;

  00020	83 c8 ff	 or	 eax, -1

; 176  :     return 0;
; 177  : }

  00023	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
$LN1@PyCapsule_@9:

; 173  :     }
; 174  : 
; 175  :     capsule->destructor = destructor;

  0002e	48 89 7b 78	 mov	 QWORD PTR [rbx+120], rdi

; 176  :     return 0;
; 177  : }

  00032	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00037	33 c0		 xor	 eax, eax
  00039	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003d	5f		 pop	 rdi
  0003e	c3		 ret	 0
PyCapsule_SetDestructor ENDP
_TEXT	ENDS
PUBLIC	??_C@_0DK@DMLJAKBM@PyCapsule_SetContext?5called?5with@ ; `string'
PUBLIC	PyCapsule_SetContext
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyCapsule_SetContext DD imagerel $LN4
	DD	imagerel $LN4+63
	DD	imagerel $unwind$PyCapsule_SetContext
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyCapsule_SetContext DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT ??_C@_0DK@DMLJAKBM@PyCapsule_SetContext?5called?5with@
CONST	SEGMENT
??_C@_0DK@DMLJAKBM@PyCapsule_SetContext?5called?5with@ DB 'PyCapsule_SetC'
	DB	'ontext called with invalid PyCapsule object', 00H ; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT PyCapsule_SetContext
_TEXT	SEGMENT
o$ = 48
context$ = 56
PyCapsule_SetContext PROC				; COMDAT

; 182  : {

$LN4:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b fa	 mov	 rdi, rdx

; 183  :     PyCapsule *capsule = (PyCapsule *)o;
; 184  : 
; 185  :     if (!is_legal_capsule(capsule, "PyCapsule_SetContext")) {

  0000d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0DK@DMLJAKBM@PyCapsule_SetContext?5called?5with@
  00014	48 8b d9	 mov	 rbx, rcx
  00017	e8 00 00 00 00	 call	 _is_legal_capsule
  0001c	85 c0		 test	 eax, eax
  0001e	75 0e		 jne	 SHORT $LN1@PyCapsule_@10

; 186  :         return -1;

  00020	83 c8 ff	 or	 eax, -1

; 190  :     return 0;
; 191  : }

  00023	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00028	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002c	5f		 pop	 rdi
  0002d	c3		 ret	 0
$LN1@PyCapsule_@10:

; 187  :     }
; 188  : 
; 189  :     capsule->context = context;

  0002e	48 89 7b 70	 mov	 QWORD PTR [rbx+112], rdi

; 190  :     return 0;
; 191  : }

  00032	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00037	33 c0		 xor	 eax, eax
  00039	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0003d	5f		 pop	 rdi
  0003e	c3		 ret	 0
PyCapsule_SetContext ENDP
_TEXT	ENDS
PUBLIC	??_C@_0CD@NCFJNLCD@PyCapsule_Import?5?$CC?$CFs?$CC?5is?5not?5val@ ; `string'
PUBLIC	??_C@_0CO@EACNEGJM@PyCapsule_Import?5could?5not?5impor@ ; `string'
PUBLIC	PyCapsule_Import
EXTRN	__imp_free:PROC
EXTRN	_PxMem_Free:PROC
EXTRN	PyExc_AttributeError:QWORD
EXTRN	PyObject_GetAttrString:PROC
EXTRN	PyErr_Format:PROC
EXTRN	PyExc_ImportError:QWORD
EXTRN	PyImport_ImportModule:PROC
EXTRN	PyImport_ImportModuleNoBlock:PROC
EXTRN	__imp_strchr:PROC
EXTRN	__imp_malloc:PROC
EXTRN	_PxMem_Malloc:PROC
EXTRN	memcpy:PROC
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$PyCapsule_Import DD imagerel $LN56
	DD	imagerel $LN56+130
	DD	imagerel $unwind$PyCapsule_Import
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$PyCapsule_Import DD imagerel $LN56+130
	DD	imagerel $LN56+549
	DD	imagerel $chain$0$PyCapsule_Import
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$PyCapsule_Import DD imagerel $LN56+549
	DD	imagerel $LN56+598
	DD	imagerel $chain$1$PyCapsule_Import
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$PyCapsule_Import DD 021H
	DD	imagerel $LN56
	DD	imagerel $LN56+130
	DD	imagerel $unwind$PyCapsule_Import
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$PyCapsule_Import DD 020521H
	DD	0a6405H
	DD	imagerel $LN56
	DD	imagerel $LN56+130
	DD	imagerel $unwind$PyCapsule_Import
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyCapsule_Import DD 0a1901H
	DD	0d7419H
	DD	0c5419H
	DD	0b3419H
	DD	0e0155219H
	DD	0c011d013H
xdata	ENDS
;	COMDAT ??_C@_0CD@NCFJNLCD@PyCapsule_Import?5?$CC?$CFs?$CC?5is?5not?5val@
CONST	SEGMENT
??_C@_0CD@NCFJNLCD@PyCapsule_Import?5?$CC?$CFs?$CC?5is?5not?5val@ DB 'PyC'
	DB	'apsule_Import "%s" is not valid', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@EACNEGJM@PyCapsule_Import?5could?5not?5impor@
CONST	SEGMENT
??_C@_0CO@EACNEGJM@PyCapsule_Import?5could?5not?5impor@ DB 'PyCapsule_Imp'
	DB	'ort could not import module "%s"', 00H	; `string'
; Function compile flags: /Ogtpy
; File c:\src\pyparallel\objects\capsule.c
CONST	ENDS
;	COMDAT PyCapsule_Import
_TEXT	SEGMENT
name$ = 80
no_block$ = 88
PyCapsule_Import PROC					; COMDAT

; 196  : {

$LN56:
  00000	48 89 5c 24 10	 mov	 QWORD PTR [rsp+16], rbx
  00005	48 89 6c 24 18	 mov	 QWORD PTR [rsp+24], rbp
  0000a	48 89 7c 24 20	 mov	 QWORD PTR [rsp+32], rdi
  0000f	41 54		 push	 r12
  00011	41 55		 push	 r13
  00013	41 56		 push	 r14
  00015	48 83 ec 30	 sub	 rsp, 48			; 00000030H
  00019	4c 8b e9	 mov	 r13, rcx

; 197  :     PyObject *object = NULL;
; 198  :     void *return_value = NULL;
; 199  :     char *trace;
; 200  :     size_t name_length = (strlen(name) + 1) * sizeof(char);

  0001c	48 83 c9 ff	 or	 rcx, -1
  00020	33 c0		 xor	 eax, eax
  00022	49 8b fd	 mov	 rdi, r13
  00025	33 db		 xor	 ebx, ebx
  00027	44 8b e2	 mov	 r12d, edx
  0002a	f2 ae		 repne scasb
  0002c	44 8b f3	 mov	 r14d, ebx
  0002f	48 f7 d1	 not	 rcx
  00032	48 8b f9	 mov	 rdi, rcx

; 201  :     char *name_dup = (char *)PyMem_MALLOC(name_length);

  00035	e8 00 00 00 00	 call	 _Py_PXCTX
  0003a	85 c0		 test	 eax, eax
  0003c	74 0a		 je	 SHORT $LN22@PyCapsule_@11
  0003e	48 8b cf	 mov	 rcx, rdi
  00041	e8 00 00 00 00	 call	 _PxMem_Malloc
  00046	eb 25		 jmp	 SHORT $LN55@PyCapsule_@11
$LN22@PyCapsule_@11:
  00048	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH
  00052	48 3b f8	 cmp	 rdi, rax
  00055	0f 87 df 01 00
	00		 ja	 $LN52@PyCapsule_@11
  0005b	48 85 ff	 test	 rdi, rdi
  0005e	b9 01 00 00 00	 mov	 ecx, 1
  00063	48 0f 45 cf	 cmovne	 rcx, rdi
  00067	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_malloc
$LN55@PyCapsule_@11:
  0006d	48 8b e8	 mov	 rbp, rax

; 202  : 
; 203  :     if (!name_dup) {

  00070	48 85 c0	 test	 rax, rax
  00073	0f 84 c1 01 00
	00		 je	 $LN52@PyCapsule_@11

; 205  :     }
; 206  : 
; 207  :     memcpy(name_dup, name, name_length);

  00079	4c 8b c7	 mov	 r8, rdi
  0007c	49 8b d5	 mov	 rdx, r13
  0007f	48 8b c8	 mov	 rcx, rax
  00082	48 89 74 24 50	 mov	 QWORD PTR [rsp+80], rsi
  00087	e8 00 00 00 00	 call	 memcpy

; 208  : 
; 209  :     trace = name_dup;

  0008c	48 8b fd	 mov	 rdi, rbp
  0008f	90		 npad	 1
$LL16@PyCapsule_@11:

; 210  :     while (trace) {
; 211  :         char *dot = strchr(trace, '.');

  00090	ba 2e 00 00 00	 mov	 edx, 46			; 0000002eH
  00095	48 8b cf	 mov	 rcx, rdi
  00098	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_strchr
  0009e	48 8b f0	 mov	 rsi, rax

; 212  :         if (dot) {

  000a1	48 85 c0	 test	 rax, rax
  000a4	74 06		 je	 SHORT $LN14@PyCapsule_@11

; 213  :             *dot++ = '\0';

  000a6	44 88 30	 mov	 BYTE PTR [rax], r14b
  000a9	48 ff c6	 inc	 rsi
$LN14@PyCapsule_@11:

; 214  :         }
; 215  : 
; 216  :         if (object == NULL) {

  000ac	48 85 db	 test	 rbx, rbx
  000af	75 41		 jne	 SHORT $LN13@PyCapsule_@11

; 217  :             if (no_block) {
; 218  :                 object = PyImport_ImportModuleNoBlock(trace);

  000b1	48 8b cf	 mov	 rcx, rdi
  000b4	45 85 e4	 test	 r12d, r12d
  000b7	74 0d		 je	 SHORT $LN12@PyCapsule_@11
  000b9	e8 00 00 00 00	 call	 PyImport_ImportModuleNoBlock
  000be	48 8b d8	 mov	 rbx, rax

; 219  :             } else {

  000c1	e9 a4 00 00 00	 jmp	 $LN9@PyCapsule_@11
$LN12@PyCapsule_@11:

; 220  :                 object = PyImport_ImportModule(trace);

  000c6	e8 00 00 00 00	 call	 PyImport_ImportModule
  000cb	48 8b d8	 mov	 rbx, rax

; 221  :                 if (!object) {

  000ce	48 85 c0	 test	 rax, rax
  000d1	0f 85 9c 00 00
	00		 jne	 $LN51@PyCapsule_@11

; 222  :                     PyErr_Format(PyExc_ImportError, "PyCapsule_Import could not import module \"%s\"", trace);

  000d7	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ImportError
  000de	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CO@EACNEGJM@PyCapsule_Import?5could?5not?5impor@
  000e5	4c 8b c7	 mov	 r8, rdi
  000e8	e8 00 00 00 00	 call	 PyErr_Format

; 223  :                 }
; 224  :             }
; 225  :         } else {

  000ed	e9 22 01 00 00	 jmp	 $LN4@PyCapsule_@11
$LN13@PyCapsule_@11:

; 226  :             PyObject *object2 = PyObject_GetAttrString(object, trace);

  000f2	48 8b d7	 mov	 rdx, rdi
  000f5	48 8b cb	 mov	 rcx, rbx
  000f8	e8 00 00 00 00	 call	 PyObject_GetAttrString
  000fd	48 8b f8	 mov	 rdi, rax

; 227  :             Py_DECREF(object);

  00100	e8 00 00 00 00	 call	 _Py_PXCTX
  00105	85 c0		 test	 eax, eax
  00107	75 5e		 jne	 SHORT $LN36@PyCapsule_@11
  00109	48 8b 4b 20	 mov	 rcx, QWORD PTR [rbx+32]
  0010d	f6 c1 20	 test	 cl, 32			; 00000020H
  00110	75 4d		 jne	 SHORT $LN30@PyCapsule_@11
  00112	84 c9		 test	 cl, cl
  00114	78 49		 js	 SHORT $LN30@PyCapsule_@11
  00116	f6 c1 02	 test	 cl, 2
  00119	75 4c		 jne	 SHORT $LN36@PyCapsule_@11
  0011b	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  0011f	75 46		 jne	 SHORT $LN36@PyCapsule_@11
  00121	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  00128	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  0012f	4c 8b cb	 mov	 r9, rbx
  00132	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  00138	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00140	e8 00 00 00 00	 call	 _PyParallel_Guard
  00145	48 8b cb	 mov	 rcx, rbx
  00148	85 c0		 test	 eax, eax
  0014a	74 07		 je	 SHORT $LN35@PyCapsule_@11
  0014c	e8 00 00 00 00	 call	 _Px_Dealloc
  00151	eb 14		 jmp	 SHORT $LN36@PyCapsule_@11
$LN35@PyCapsule_@11:
  00153	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  00157	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  0015d	eb 08		 jmp	 SHORT $LN36@PyCapsule_@11
$LN30@PyCapsule_@11:
  0015f	48 8b cb	 mov	 rcx, rbx
  00162	e8 00 00 00 00	 call	 Px_DecRef
$LN36@PyCapsule_@11:

; 228  :             object = object2;

  00167	48 8b df	 mov	 rbx, rdi
$LN9@PyCapsule_@11:

; 229  :         }
; 230  :         if (!object) {

  0016a	48 85 db	 test	 rbx, rbx
  0016d	0f 84 a1 00 00
	00		 je	 $LN4@PyCapsule_@11
$LN51@PyCapsule_@11:

; 231  :             goto EXIT;
; 232  :         }
; 233  : 
; 234  :         trace = dot;

  00173	48 8b fe	 mov	 rdi, rsi
  00176	48 85 f6	 test	 rsi, rsi
  00179	0f 85 11 ff ff
	ff		 jne	 $LL16@PyCapsule_@11

; 235  :     }
; 236  : 
; 237  :     /* compare attribute name to module.name by hand */
; 238  :     if (PyCapsule_IsValid(object, name)) {

  0017f	49 8b d5	 mov	 rdx, r13
  00182	48 8b cb	 mov	 rcx, rbx
  00185	e8 00 00 00 00	 call	 PyCapsule_IsValid
  0018a	85 c0		 test	 eax, eax
  0018c	74 06		 je	 SHORT $LN7@PyCapsule_@11

; 239  :         PyCapsule *capsule = (PyCapsule *)object;
; 240  :         return_value = capsule->pointer;

  0018e	4c 8b 73 60	 mov	 r14, QWORD PTR [rbx+96]

; 241  :     } else {

  00192	eb 16		 jmp	 SHORT $EXIT$20346
$LN7@PyCapsule_@11:

; 242  :         PyErr_Format(PyExc_AttributeError,
; 243  :             "PyCapsule_Import \"%s\" is not valid",
; 244  :             name);

  00194	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_AttributeError
  0019b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@NCFJNLCD@PyCapsule_Import?5?$CC?$CFs?$CC?5is?5not?5val@
  001a2	4d 8b c5	 mov	 r8, r13
  001a5	e8 00 00 00 00	 call	 PyErr_Format
$EXIT$20346:

; 245  :     }
; 246  : 
; 247  : EXIT:
; 248  :     Py_XDECREF(object);

  001aa	48 85 db	 test	 rbx, rbx
  001ad	74 65		 je	 SHORT $LN4@PyCapsule_@11
  001af	e8 00 00 00 00	 call	 _Py_PXCTX
  001b4	85 c0		 test	 eax, eax
  001b6	75 5c		 jne	 SHORT $LN4@PyCapsule_@11
  001b8	48 8b 43 20	 mov	 rax, QWORD PTR [rbx+32]
  001bc	a8 20		 test	 al, 32			; 00000020H
  001be	75 4c		 jne	 SHORT $LN41@PyCapsule_@11
  001c0	84 c0		 test	 al, al
  001c2	78 48		 js	 SHORT $LN41@PyCapsule_@11
  001c4	a8 02		 test	 al, 2
  001c6	75 4c		 jne	 SHORT $LN4@PyCapsule_@11
  001c8	48 ff 4b 50	 dec	 QWORD PTR [rbx+80]
  001cc	75 46		 jne	 SHORT $LN4@PyCapsule_@11
  001ce	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  001d5	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  001dc	4c 8b cb	 mov	 r9, rbx
  001df	41 b8 a4 03 00
	00		 mov	 r8d, 932		; 000003a4H
  001e5	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  001ed	e8 00 00 00 00	 call	 _PyParallel_Guard
  001f2	48 8b cb	 mov	 rcx, rbx
  001f5	85 c0		 test	 eax, eax
  001f7	74 07		 je	 SHORT $LN46@PyCapsule_@11
  001f9	e8 00 00 00 00	 call	 _Px_Dealloc
  001fe	eb 14		 jmp	 SHORT $LN4@PyCapsule_@11
$LN46@PyCapsule_@11:
  00200	48 8b 43 58	 mov	 rax, QWORD PTR [rbx+88]
  00204	ff 90 88 00 00
	00		 call	 QWORD PTR [rax+136]
  0020a	eb 08		 jmp	 SHORT $LN4@PyCapsule_@11
$LN41@PyCapsule_@11:
  0020c	48 8b cb	 mov	 rcx, rbx
  0020f	e8 00 00 00 00	 call	 Px_DecRef
$LN4@PyCapsule_@11:

; 249  :     if (name_dup) {
; 250  :         PyMem_FREE(name_dup);

  00214	e8 00 00 00 00	 call	 _Py_PXCTX
  00219	48 8b 74 24 50	 mov	 rsi, QWORD PTR [rsp+80]
  0021e	48 8b cd	 mov	 rcx, rbp
  00221	85 c0		 test	 eax, eax
  00223	74 0a		 je	 SHORT $LN24@PyCapsule_@11
  00225	e8 00 00 00 00	 call	 _PxMem_Free

; 251  :     }
; 252  :     return return_value;

  0022a	49 8b c6	 mov	 rax, r14
  0022d	eb 0d		 jmp	 SHORT $LN18@PyCapsule_@11
$LN24@PyCapsule_@11:

; 249  :     if (name_dup) {
; 250  :         PyMem_FREE(name_dup);

  0022f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_free

; 251  :     }
; 252  :     return return_value;

  00235	49 8b c6	 mov	 rax, r14
  00238	eb 02		 jmp	 SHORT $LN18@PyCapsule_@11
$LN52@PyCapsule_@11:

; 204  :         return NULL;

  0023a	33 c0		 xor	 eax, eax
$LN18@PyCapsule_@11:

; 253  : }

  0023c	48 8b 5c 24 58	 mov	 rbx, QWORD PTR [rsp+88]
  00241	48 8b 6c 24 60	 mov	 rbp, QWORD PTR [rsp+96]
  00246	48 8b 7c 24 68	 mov	 rdi, QWORD PTR [rsp+104]
  0024b	48 83 c4 30	 add	 rsp, 48			; 00000030H
  0024f	41 5e		 pop	 r14
  00251	41 5d		 pop	 r13
  00253	41 5c		 pop	 r12
  00255	c3		 ret	 0
PyCapsule_Import ENDP
_TEXT	ENDS
EXTRN	PyObject_Free:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$capsule_dealloc DD imagerel capsule_dealloc
	DD	imagerel capsule_dealloc+33
	DD	imagerel $unwind$capsule_dealloc
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$capsule_dealloc DD 020601H
	DD	030023206H
; Function compile flags: /Ogtpy
xdata	ENDS
;	COMDAT capsule_dealloc
_TEXT	SEGMENT
o$ = 48
capsule_dealloc PROC					; COMDAT

; 258  : {

  00000	40 53		 push	 rbx
  00002	48 83 ec 20	 sub	 rsp, 32			; 00000020H

; 259  :     PyCapsule *capsule = (PyCapsule *)o;
; 260  :     if (capsule->destructor) {

  00006	48 8b 41 78	 mov	 rax, QWORD PTR [rcx+120]
  0000a	48 8b d9	 mov	 rbx, rcx
  0000d	48 85 c0	 test	 rax, rax
  00010	74 02		 je	 SHORT $LN1@capsule_de

; 261  :         capsule->destructor(o);

  00012	ff d0		 call	 rax
$LN1@capsule_de:

; 262  :     }
; 263  :     PyObject_DEL(o);

  00014	48 8b cb	 mov	 rcx, rbx

; 264  : }

  00017	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0001b	5b		 pop	 rbx
  0001c	e9 00 00 00 00	 jmp	 PyObject_Free
capsule_dealloc ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BO@GDMBHGFD@?$DMcapsule?5object?5?$CFs?$CFs?$CFs?5at?5?$CFp?$DO?$AA@ ; `string'
PUBLIC	??_C@_04HIBGFPH@NULL?$AA@			; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_01BJJEKLCA@?$CC?$AA@			; `string'
EXTRN	PyUnicode_FromFormat:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$capsule_repr DD imagerel capsule_repr
	DD	imagerel capsule_repr+61
	DD	imagerel $unwind$capsule_repr
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$capsule_repr DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT ??_C@_0BO@GDMBHGFD@?$DMcapsule?5object?5?$CFs?$CFs?$CFs?5at?5?$CFp?$DO?$AA@
CONST	SEGMENT
??_C@_0BO@GDMBHGFD@?$DMcapsule?5object?5?$CFs?$CFs?$CFs?5at?5?$CFp?$DO?$AA@ DB '<'
	DB	'capsule object %s%s%s at %p>', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04HIBGFPH@NULL?$AA@
CONST	SEGMENT
??_C@_04HIBGFPH@NULL?$AA@ DB 'NULL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01BJJEKLCA@?$CC?$AA@
CONST	SEGMENT
??_C@_01BJJEKLCA@?$CC?$AA@ DB '"', 00H			; `string'
; Function compile flags: /Ogtpy
CONST	ENDS
;	COMDAT capsule_repr
_TEXT	SEGMENT
o$ = 64
capsule_repr PROC					; COMDAT

; 269  : {

  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 270  :     PyCapsule *capsule = (PyCapsule *)o;
; 271  :     const char *name;
; 272  :     const char *quote;
; 273  : 
; 274  :     if (capsule->name) {

  00004	4c 8b 41 68	 mov	 r8, QWORD PTR [rcx+104]
  00008	4d 85 c0	 test	 r8, r8
  0000b	74 09		 je	 SHORT $LN2@capsule_re

; 275  :         quote = "\"";

  0000d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_01BJJEKLCA@?$CC?$AA@

; 276  :         name = capsule->name;
; 277  :     } else {

  00014	eb 0e		 jmp	 SHORT $LN1@capsule_re
$LN2@capsule_re:

; 278  :         quote = "";

  00016	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@

; 279  :         name = "NULL";

  0001d	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_04HIBGFPH@NULL?$AA@
$LN1@capsule_re:

; 280  :     }
; 281  : 
; 282  :     return PyUnicode_FromFormat("<capsule object %s%s%s at %p>",
; 283  :         quote, name, quote, capsule);

  00024	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00029	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BO@GDMBHGFD@?$DMcapsule?5object?5?$CFs?$CFs?$CFs?5at?5?$CFp?$DO?$AA@
  00030	4c 8b ca	 mov	 r9, rdx
  00033	e8 00 00 00 00	 call	 PyUnicode_FromFormat

; 284  : }

  00038	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003c	c3		 ret	 0
capsule_repr ENDP
_TEXT	ENDS
END
