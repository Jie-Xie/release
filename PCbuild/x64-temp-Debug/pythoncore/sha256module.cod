; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_07HKDAFOKE@_sha256?$AA@			; `string'
PUBLIC	??_C@_06DJABMLNO@sha224?$AA@			; `string'
PUBLIC	??_C@_06OHILPNJ@sha256?$AA@			; `string'
PUBLIC	??_C@_06ICGJLFIM@string?$AA@			; `string'
PUBLIC	??_C@_0P@KANEIJLI@_sha256?4sha256?$AA@		; `string'
PUBLIC	??_C@_0P@JHKNPNLP@_sha256?4sha224?$AA@		; `string'
PUBLIC	??_C@_0M@NPLIJFCD@digest_size?$AA@		; `string'
PUBLIC	??_C@_04MEMAJGDJ@name?$AA@			; `string'
PUBLIC	??_C@_0L@EHHMJOPG@block_size?$AA@		; `string'
PUBLIC	??_C@_06HDLLMMEJ@update?$AA@			; `string'
PUBLIC	??_C@_09NNAIGNDA@hexdigest?$AA@			; `string'
PUBLIC	??_C@_06IJPNAHC@digest?$AA@			; `string'
PUBLIC	??_C@_04COAGEIMF@copy?$AA@			; `string'
;	COMDAT ??_C@_07HKDAFOKE@_sha256?$AA@
CONST	SEGMENT
??_C@_07HKDAFOKE@_sha256?$AA@ DB '_sha256', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06DJABMLNO@sha224?$AA@
CONST	SEGMENT
??_C@_06DJABMLNO@sha224?$AA@ DB 'sha224', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06OHILPNJ@sha256?$AA@
CONST	SEGMENT
??_C@_06OHILPNJ@sha256?$AA@ DB 'sha256', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06ICGJLFIM@string?$AA@
CONST	SEGMENT
??_C@_06ICGJLFIM@string?$AA@ DB 'string', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@KANEIJLI@_sha256?4sha256?$AA@
CONST	SEGMENT
??_C@_0P@KANEIJLI@_sha256?4sha256?$AA@ DB '_sha256.sha256', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JHKNPNLP@_sha256?4sha224?$AA@
CONST	SEGMENT
??_C@_0P@JHKNPNLP@_sha256?4sha224?$AA@ DB '_sha256.sha224', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NPLIJFCD@digest_size?$AA@
CONST	SEGMENT
??_C@_0M@NPLIJFCD@digest_size?$AA@ DB 'digest_size', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04MEMAJGDJ@name?$AA@
CONST	SEGMENT
??_C@_04MEMAJGDJ@name?$AA@ DB 'name', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EHHMJOPG@block_size?$AA@
CONST	SEGMENT
??_C@_0L@EHHMJOPG@block_size?$AA@ DB 'block_size', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06HDLLMMEJ@update?$AA@
CONST	SEGMENT
??_C@_06HDLLMMEJ@update?$AA@ DB 'update', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09NNAIGNDA@hexdigest?$AA@
CONST	SEGMENT
??_C@_09NNAIGNDA@hexdigest?$AA@ DB 'hexdigest', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06IJPNAHC@digest?$AA@
CONST	SEGMENT
??_C@_06IJPNAHC@digest?$AA@ DB 'digest', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04COAGEIMF@copy?$AA@
CONST	SEGMENT
??_C@_04COAGEIMF@copy?$AA@ DB 'copy', 00H		; `string'
CONST	ENDS
_DATA	SEGMENT
SHA256_copy__doc__ DB 'Return a copy of the hash object.', 00H
	ORG $+6
SHA256_digest__doc__ DB 'Return the digest value as a string of binary da'
	DB	'ta.', 00H
	ORG $+4
SHA256_hexdigest__doc__ DB 'Return the digest value as a string of hexade'
	DB	'cimal digits.', 00H
	ORG $+5
SHA256_update__doc__ DB 'Update this hash object''s state with the provid'
	DB	'ed string.', 00H
	ORG $+6
SHA_methods DQ	FLAT:??_C@_04COAGEIMF@copy?$AA@
	DQ	FLAT:SHA256_copy
	DD	04H
	ORG $+4
	DQ	FLAT:SHA256_copy__doc__
	DQ	FLAT:??_C@_06IJPNAHC@digest?$AA@
	DQ	FLAT:SHA256_digest
	DD	04H
	ORG $+4
	DQ	FLAT:SHA256_digest__doc__
	DQ	FLAT:??_C@_09NNAIGNDA@hexdigest?$AA@
	DQ	FLAT:SHA256_hexdigest
	DD	04H
	ORG $+4
	DQ	FLAT:SHA256_hexdigest__doc__
	DQ	FLAT:??_C@_06HDLLMMEJ@update?$AA@
	DQ	FLAT:SHA256_update
	DD	01H
	ORG $+4
	DQ	FLAT:SHA256_update__doc__
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+16
SHA_getseters DQ FLAT:??_C@_0L@EHHMJOPG@block_size?$AA@
	DQ	FLAT:SHA256_get_block_size
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:??_C@_04MEMAJGDJ@name?$AA@
	DQ	FLAT:SHA256_get_name
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+32
	ORG $+8
SHA_members DQ	FLAT:??_C@_0M@NPLIJFCD@digest_size?$AA@
	DD	01H
	ORG $+4
	DQ	00000000000000d0H
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+32
SHA224type DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0P@JHKNPNLP@_sha256?4sha224?$AA@
	DQ	00000000000000e0H
	DQ	0000000000000000H
	DQ	FLAT:SHA_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	040000H
	ORG $+4
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:SHA_methods
	DQ	FLAT:SHA_members
	DQ	FLAT:SHA_getseters
	ORG $+136
SHA256type DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0P@KANEIJLI@_sha256?4sha256?$AA@
	DQ	00000000000000e0H
	DQ	0000000000000000H
	DQ	FLAT:SHA_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	040000H
	ORG $+4
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:SHA_methods
	DQ	FLAT:SHA_members
	DQ	FLAT:SHA_getseters
	ORG $+136
SHA256_new__doc__ DB 'Return a new SHA-256 hash object; optionally initia'
	DB	'lized with a string.', 00H
?kwlist@?1??SHA256_new@@9@9 DQ FLAT:??_C@_06ICGJLFIM@string?$AA@ ; `SHA256_new'::`2'::kwlist
	DQ	0000000000000000H
	ORG $+8
SHA224_new__doc__ DB 'Return a new SHA-224 hash object; optionally initia'
	DB	'lized with a string.', 00H
?kwlist@?1??SHA224_new@@9@9 DQ FLAT:??_C@_06ICGJLFIM@string?$AA@ ; `SHA224_new'::`2'::kwlist
	DQ	0000000000000000H
	ORG $+8
SHA_functions DQ FLAT:??_C@_06OHILPNJ@sha256?$AA@
	DQ	FLAT:SHA256_new
	DD	03H
	ORG $+4
	DQ	FLAT:SHA256_new__doc__
	DQ	FLAT:??_C@_06DJABMLNO@sha224?$AA@
	DQ	FLAT:SHA224_new
	DD	03H
	ORG $+4
	DQ	FLAT:SHA224_new__doc__
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+16
_sha256module DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_07HKDAFOKE@_sha256?$AA@
	DQ	0000000000000000H
	DQ	ffffffffffffffffH
	DQ	FLAT:SHA_functions
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
_DATA	ENDS
EXTRN	_PyObject_DebugFree:PROC
;	COMDAT pdata
; File c:\src\pyparallel\modules\sha256module.c
pdata	SEGMENT
$pdata$SHA_dealloc DD imagerel SHA_dealloc
	DD	imagerel SHA_dealloc+24
	DD	imagerel $unwind$SHA_dealloc
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SHA_dealloc DD 010901H
	DD	04209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT SHA_dealloc
_TEXT	SEGMENT
ptr$ = 48
SHA_dealloc PROC					; COMDAT

; 399  : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 400  :     PyObject_Del(ptr);

  00009	48 8b 4c 24 30	 mov	 rcx, QWORD PTR ptr$[rsp]
  0000e	e8 00 00 00 00	 call	 _PyObject_DebugFree

; 401  : }

  00013	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00017	c3		 ret	 0
SHA_dealloc ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$SHA256_copy DD imagerel SHA256_copy
	DD	imagerel SHA256_copy+103
	DD	imagerel $unwind$SHA256_copy
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SHA256_copy DD 010e01H
	DD	0620eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT SHA256_copy
_TEXT	SEGMENT
newobj$ = 32
self$ = 64
unused$ = 72
SHA256_copy PROC					; COMDAT

; 410  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 411  :     SHAobject *newobj;
; 412  : 
; 413  :     if (Py_TYPE(self) == &SHA256type) {

  0000e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:SHA256type
  00015	48 8b 4c 24 40	 mov	 rcx, QWORD PTR self$[rsp]
  0001a	48 39 41 58	 cmp	 QWORD PTR [rcx+88], rax
  0001e	75 18		 jne	 SHORT $LN4@SHA256_cop

; 414  :         if ( (newobj = newSHA256object())==NULL)

  00020	e8 00 00 00 00	 call	 newSHA256object
  00025	48 89 44 24 20	 mov	 QWORD PTR newobj$[rsp], rax
  0002a	48 83 7c 24 20
	00		 cmp	 QWORD PTR newobj$[rsp], 0
  00030	75 04		 jne	 SHORT $LN3@SHA256_cop

; 415  :             return NULL;

  00032	33 c0		 xor	 eax, eax
  00034	eb 2c		 jmp	 SHORT $LN5@SHA256_cop
$LN3@SHA256_cop:

; 416  :     } else {

  00036	eb 16		 jmp	 SHORT $LN2@SHA256_cop
$LN4@SHA256_cop:

; 417  :         if ( (newobj = newSHA224object())==NULL)

  00038	e8 00 00 00 00	 call	 newSHA224object
  0003d	48 89 44 24 20	 mov	 QWORD PTR newobj$[rsp], rax
  00042	48 83 7c 24 20
	00		 cmp	 QWORD PTR newobj$[rsp], 0
  00048	75 04		 jne	 SHORT $LN1@SHA256_cop

; 418  :             return NULL;

  0004a	33 c0		 xor	 eax, eax
  0004c	eb 14		 jmp	 SHORT $LN5@SHA256_cop
$LN1@SHA256_cop:
$LN2@SHA256_cop:

; 419  :     }
; 420  : 
; 421  :     SHAcopy(self, newobj);

  0004e	48 8b 54 24 20	 mov	 rdx, QWORD PTR newobj$[rsp]
  00053	48 8b 4c 24 40	 mov	 rcx, QWORD PTR self$[rsp]
  00058	e8 00 00 00 00	 call	 SHAcopy

; 422  :     return (PyObject *)newobj;

  0005d	48 8b 44 24 20	 mov	 rax, QWORD PTR newobj$[rsp]
$LN5@SHA256_cop:

; 423  : }

  00062	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00066	c3		 ret	 0
SHA256_copy ENDP
_TEXT	ENDS
EXTRN	memcpy:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$SHAcopy DD imagerel SHAcopy
	DD	imagerel SHAcopy+198
	DD	imagerel $unwind$SHAcopy
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SHAcopy DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT SHAcopy
_TEXT	SEGMENT
src$ = 48
dest$ = 56
SHAcopy	PROC						; COMDAT

; 78   : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 79   :     dest->Endianness = src->Endianness;

  0000e	48 8b 44 24 38	 mov	 rax, QWORD PTR dest$[rsp]
  00013	48 8b 4c 24 30	 mov	 rcx, QWORD PTR src$[rsp]
  00018	8b 89 c8 00 00
	00		 mov	 ecx, DWORD PTR [rcx+200]
  0001e	89 88 c8 00 00
	00		 mov	 DWORD PTR [rax+200], ecx

; 80   :     dest->local = src->local;

  00024	48 8b 44 24 38	 mov	 rax, QWORD PTR dest$[rsp]
  00029	48 8b 4c 24 30	 mov	 rcx, QWORD PTR src$[rsp]
  0002e	8b 89 cc 00 00
	00		 mov	 ecx, DWORD PTR [rcx+204]
  00034	89 88 cc 00 00
	00		 mov	 DWORD PTR [rax+204], ecx

; 81   :     dest->digestsize = src->digestsize;

  0003a	48 8b 44 24 38	 mov	 rax, QWORD PTR dest$[rsp]
  0003f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR src$[rsp]
  00044	8b 89 d0 00 00
	00		 mov	 ecx, DWORD PTR [rcx+208]
  0004a	89 88 d0 00 00
	00		 mov	 DWORD PTR [rax+208], ecx

; 82   :     dest->count_lo = src->count_lo;

  00050	48 8b 44 24 38	 mov	 rax, QWORD PTR dest$[rsp]
  00055	48 8b 4c 24 30	 mov	 rcx, QWORD PTR src$[rsp]
  0005a	8b 89 80 00 00
	00		 mov	 ecx, DWORD PTR [rcx+128]
  00060	89 88 80 00 00
	00		 mov	 DWORD PTR [rax+128], ecx

; 83   :     dest->count_hi = src->count_hi;

  00066	48 8b 44 24 38	 mov	 rax, QWORD PTR dest$[rsp]
  0006b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR src$[rsp]
  00070	8b 89 84 00 00
	00		 mov	 ecx, DWORD PTR [rcx+132]
  00076	89 88 84 00 00
	00		 mov	 DWORD PTR [rax+132], ecx

; 84   :     memcpy(dest->digest, src->digest, sizeof(src->digest));

  0007c	48 8b 44 24 30	 mov	 rax, QWORD PTR src$[rsp]
  00081	48 83 c0 60	 add	 rax, 96			; 00000060H
  00085	48 8b 4c 24 38	 mov	 rcx, QWORD PTR dest$[rsp]
  0008a	48 83 c1 60	 add	 rcx, 96			; 00000060H
  0008e	41 b8 20 00 00
	00		 mov	 r8d, 32			; 00000020H
  00094	48 8b d0	 mov	 rdx, rax
  00097	e8 00 00 00 00	 call	 memcpy

; 85   :     memcpy(dest->data, src->data, sizeof(src->data));

  0009c	48 8b 44 24 30	 mov	 rax, QWORD PTR src$[rsp]
  000a1	48 05 88 00 00
	00		 add	 rax, 136		; 00000088H
  000a7	48 8b 4c 24 38	 mov	 rcx, QWORD PTR dest$[rsp]
  000ac	48 81 c1 88 00
	00 00		 add	 rcx, 136		; 00000088H
  000b3	41 b8 40 00 00
	00		 mov	 r8d, 64			; 00000040H
  000b9	48 8b d0	 mov	 rdx, rax
  000bc	e8 00 00 00 00	 call	 memcpy

; 86   : }

  000c1	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000c5	c3		 ret	 0
SHAcopy	ENDP
_TEXT	ENDS
EXTRN	_PyObject_New:PROC
EXTRN	_PxObject_New:PROC
EXTRN	_Py_PXCTX:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$newSHA224object DD imagerel newSHA224object
	DD	imagerel newSHA224object+59
	DD	imagerel $unwind$newSHA224object
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$newSHA224object DD 010401H
	DD	06204H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT newSHA224object
_TEXT	SEGMENT
tv70 = 32
newSHA224object PROC					; COMDAT

; 385  : {

  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 386  :     return (SHAobject *)PyObject_New(SHAobject, &SHA224type);

  00004	e8 00 00 00 00	 call	 _Py_PXCTX
  00009	85 c0		 test	 eax, eax
  0000b	74 13		 je	 SHORT $LN3@newSHA224o
  0000d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:SHA224type
  00014	e8 00 00 00 00	 call	 _PxObject_New
  00019	48 89 44 24 20	 mov	 QWORD PTR tv70[rsp], rax
  0001e	eb 11		 jmp	 SHORT $LN4@newSHA224o
$LN3@newSHA224o:
  00020	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:SHA224type
  00027	e8 00 00 00 00	 call	 _PyObject_New
  0002c	48 89 44 24 20	 mov	 QWORD PTR tv70[rsp], rax
$LN4@newSHA224o:
  00031	48 8b 44 24 20	 mov	 rax, QWORD PTR tv70[rsp]

; 387  : }

  00036	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003a	c3		 ret	 0
newSHA224object ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$newSHA256object DD imagerel newSHA256object
	DD	imagerel newSHA256object+59
	DD	imagerel $unwind$newSHA256object
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$newSHA256object DD 010401H
	DD	06204H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT newSHA256object
_TEXT	SEGMENT
tv70 = 32
newSHA256object PROC					; COMDAT

; 391  : {

  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 392  :     return (SHAobject *)PyObject_New(SHAobject, &SHA256type);

  00004	e8 00 00 00 00	 call	 _Py_PXCTX
  00009	85 c0		 test	 eax, eax
  0000b	74 13		 je	 SHORT $LN3@newSHA256o
  0000d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:SHA256type
  00014	e8 00 00 00 00	 call	 _PxObject_New
  00019	48 89 44 24 20	 mov	 QWORD PTR tv70[rsp], rax
  0001e	eb 11		 jmp	 SHORT $LN4@newSHA256o
$LN3@newSHA256o:
  00020	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:SHA256type
  00027	e8 00 00 00 00	 call	 _PyObject_New
  0002c	48 89 44 24 20	 mov	 QWORD PTR tv70[rsp], rax
$LN4@newSHA256o:
  00031	48 8b 44 24 20	 mov	 rax, QWORD PTR tv70[rsp]

; 393  : }

  00036	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003a	c3		 ret	 0
newSHA256object ENDP
_TEXT	ENDS
EXTRN	PyBytes_FromStringAndSize:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$SHA256_digest DD imagerel SHA256_digest
	DD	imagerel SHA256_digest+92
	DD	imagerel $unwind$SHA256_digest
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SHA256_digest DD 021101H
	DD	0250111H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT SHA256_digest
_TEXT	SEGMENT
temp$ = 32
digest$ = 256
self$ = 304
unused$ = 312
SHA256_digest PROC					; COMDAT

; 430  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H

; 431  :     unsigned char digest[SHA_DIGESTSIZE];
; 432  :     SHAobject temp;
; 433  : 
; 434  :     SHAcopy(self, &temp);

  00011	48 8d 54 24 20	 lea	 rdx, QWORD PTR temp$[rsp]
  00016	48 8b 8c 24 30
	01 00 00	 mov	 rcx, QWORD PTR self$[rsp]
  0001e	e8 00 00 00 00	 call	 SHAcopy

; 435  :     sha_final(digest, &temp);

  00023	48 8d 54 24 20	 lea	 rdx, QWORD PTR temp$[rsp]
  00028	48 8d 8c 24 00
	01 00 00	 lea	 rcx, QWORD PTR digest$[rsp]
  00030	e8 00 00 00 00	 call	 sha_final

; 436  :     return PyBytes_FromStringAndSize((const char *)digest, self->digestsize);

  00035	48 8b 84 24 30
	01 00 00	 mov	 rax, QWORD PTR self$[rsp]
  0003d	48 63 80 d0 00
	00 00		 movsxd	 rax, DWORD PTR [rax+208]
  00044	48 8b d0	 mov	 rdx, rax
  00047	48 8d 8c 24 00
	01 00 00	 lea	 rcx, QWORD PTR digest$[rsp]
  0004f	e8 00 00 00 00	 call	 PyBytes_FromStringAndSize

; 437  : }

  00054	48 81 c4 28 01
	00 00		 add	 rsp, 296		; 00000128H
  0005b	c3		 ret	 0
SHA256_digest ENDP
_TEXT	ENDS
EXTRN	memset:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$sha_final DD imagerel sha_final
	DD	imagerel sha_final+1146
	DD	imagerel $unwind$sha_final
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$sha_final DD 010e01H
	DD	0620eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT sha_final
_TEXT	SEGMENT
count$ = 32
lo_bit_count$ = 36
hi_bit_count$ = 40
digest$ = 64
sha_info$ = 72
sha_final PROC						; COMDAT

; 309  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 310  :     int count;
; 311  :     SHA_INT32 lo_bit_count, hi_bit_count;
; 312  : 
; 313  :     lo_bit_count = sha_info->count_lo;

  0000e	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00013	8b 80 80 00 00
	00		 mov	 eax, DWORD PTR [rax+128]
  00019	89 44 24 24	 mov	 DWORD PTR lo_bit_count$[rsp], eax

; 314  :     hi_bit_count = sha_info->count_hi;

  0001d	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00022	8b 80 84 00 00
	00		 mov	 eax, DWORD PTR [rax+132]
  00028	89 44 24 28	 mov	 DWORD PTR hi_bit_count$[rsp], eax

; 315  :     count = (int) ((lo_bit_count >> 3) & 0x3f);

  0002c	8b 44 24 24	 mov	 eax, DWORD PTR lo_bit_count$[rsp]
  00030	c1 e8 03	 shr	 eax, 3
  00033	83 e0 3f	 and	 eax, 63			; 0000003fH
  00036	89 44 24 20	 mov	 DWORD PTR count$[rsp], eax

; 316  :     ((SHA_BYTE *) sha_info->data)[count++] = 0x80;

  0003a	48 63 44 24 20	 movsxd	 rax, DWORD PTR count$[rsp]
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR sha_info$[rsp]
  00044	c6 84 01 88 00
	00 00 80	 mov	 BYTE PTR [rcx+rax+136], 128 ; 00000080H
  0004c	8b 44 24 20	 mov	 eax, DWORD PTR count$[rsp]
  00050	ff c0		 inc	 eax
  00052	89 44 24 20	 mov	 DWORD PTR count$[rsp], eax

; 317  :     if (count > SHA_BLOCKSIZE - 8) {

  00056	83 7c 24 20 38	 cmp	 DWORD PTR count$[rsp], 56 ; 00000038H
  0005b	7e 4e		 jle	 SHORT $LN2@sha_final

; 318  :         memset(((SHA_BYTE *) sha_info->data) + count, 0,
; 319  :                SHA_BLOCKSIZE - count);

  0005d	b8 40 00 00 00	 mov	 eax, 64			; 00000040H
  00062	2b 44 24 20	 sub	 eax, DWORD PTR count$[rsp]
  00066	48 98		 cdqe
  00068	48 63 4c 24 20	 movsxd	 rcx, DWORD PTR count$[rsp]
  0006d	48 8b 54 24 48	 mov	 rdx, QWORD PTR sha_info$[rsp]
  00072	48 8d 8c 0a 88
	00 00 00	 lea	 rcx, QWORD PTR [rdx+rcx+136]
  0007a	4c 8b c0	 mov	 r8, rax
  0007d	33 d2		 xor	 edx, edx
  0007f	e8 00 00 00 00	 call	 memset

; 320  :         sha_transform(sha_info);

  00084	48 8b 4c 24 48	 mov	 rcx, QWORD PTR sha_info$[rsp]
  00089	e8 00 00 00 00	 call	 sha_transform

; 321  :         memset((SHA_BYTE *) sha_info->data, 0, SHA_BLOCKSIZE - 8);

  0008e	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00093	48 05 88 00 00
	00		 add	 rax, 136		; 00000088H
  00099	41 b8 38 00 00
	00		 mov	 r8d, 56			; 00000038H
  0009f	33 d2		 xor	 edx, edx
  000a1	48 8b c8	 mov	 rcx, rax
  000a4	e8 00 00 00 00	 call	 memset

; 322  :     }
; 323  :     else {

  000a9	eb 27		 jmp	 SHORT $LN1@sha_final
$LN2@sha_final:

; 324  :         memset(((SHA_BYTE *) sha_info->data) + count, 0,
; 325  :                SHA_BLOCKSIZE - 8 - count);

  000ab	b8 38 00 00 00	 mov	 eax, 56			; 00000038H
  000b0	2b 44 24 20	 sub	 eax, DWORD PTR count$[rsp]
  000b4	48 98		 cdqe
  000b6	48 63 4c 24 20	 movsxd	 rcx, DWORD PTR count$[rsp]
  000bb	48 8b 54 24 48	 mov	 rdx, QWORD PTR sha_info$[rsp]
  000c0	48 8d 8c 0a 88
	00 00 00	 lea	 rcx, QWORD PTR [rdx+rcx+136]
  000c8	4c 8b c0	 mov	 r8, rax
  000cb	33 d2		 xor	 edx, edx
  000cd	e8 00 00 00 00	 call	 memset
$LN1@sha_final:

; 326  :     }
; 327  : 
; 328  :     /* GJS: note that we add the hi/lo in big-endian. sha_transform will
; 329  :        swap these values into host-order. */
; 330  :     sha_info->data[56] = (hi_bit_count >> 24) & 0xff;

  000d2	8b 44 24 28	 mov	 eax, DWORD PTR hi_bit_count$[rsp]
  000d6	c1 e8 18	 shr	 eax, 24
  000d9	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  000de	48 8b 4c 24 48	 mov	 rcx, QWORD PTR sha_info$[rsp]
  000e3	88 81 c0 00 00
	00		 mov	 BYTE PTR [rcx+192], al

; 331  :     sha_info->data[57] = (hi_bit_count >> 16) & 0xff;

  000e9	8b 44 24 28	 mov	 eax, DWORD PTR hi_bit_count$[rsp]
  000ed	c1 e8 10	 shr	 eax, 16
  000f0	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  000f5	48 8b 4c 24 48	 mov	 rcx, QWORD PTR sha_info$[rsp]
  000fa	88 81 c1 00 00
	00		 mov	 BYTE PTR [rcx+193], al

; 332  :     sha_info->data[58] = (hi_bit_count >>  8) & 0xff;

  00100	8b 44 24 28	 mov	 eax, DWORD PTR hi_bit_count$[rsp]
  00104	c1 e8 08	 shr	 eax, 8
  00107	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0010c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR sha_info$[rsp]
  00111	88 81 c2 00 00
	00		 mov	 BYTE PTR [rcx+194], al

; 333  :     sha_info->data[59] = (hi_bit_count >>  0) & 0xff;

  00117	8b 44 24 28	 mov	 eax, DWORD PTR hi_bit_count$[rsp]
  0011b	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00120	48 8b 4c 24 48	 mov	 rcx, QWORD PTR sha_info$[rsp]
  00125	88 81 c3 00 00
	00		 mov	 BYTE PTR [rcx+195], al

; 334  :     sha_info->data[60] = (lo_bit_count >> 24) & 0xff;

  0012b	8b 44 24 24	 mov	 eax, DWORD PTR lo_bit_count$[rsp]
  0012f	c1 e8 18	 shr	 eax, 24
  00132	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00137	48 8b 4c 24 48	 mov	 rcx, QWORD PTR sha_info$[rsp]
  0013c	88 81 c4 00 00
	00		 mov	 BYTE PTR [rcx+196], al

; 335  :     sha_info->data[61] = (lo_bit_count >> 16) & 0xff;

  00142	8b 44 24 24	 mov	 eax, DWORD PTR lo_bit_count$[rsp]
  00146	c1 e8 10	 shr	 eax, 16
  00149	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0014e	48 8b 4c 24 48	 mov	 rcx, QWORD PTR sha_info$[rsp]
  00153	88 81 c5 00 00
	00		 mov	 BYTE PTR [rcx+197], al

; 336  :     sha_info->data[62] = (lo_bit_count >>  8) & 0xff;

  00159	8b 44 24 24	 mov	 eax, DWORD PTR lo_bit_count$[rsp]
  0015d	c1 e8 08	 shr	 eax, 8
  00160	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00165	48 8b 4c 24 48	 mov	 rcx, QWORD PTR sha_info$[rsp]
  0016a	88 81 c6 00 00
	00		 mov	 BYTE PTR [rcx+198], al

; 337  :     sha_info->data[63] = (lo_bit_count >>  0) & 0xff;

  00170	8b 44 24 24	 mov	 eax, DWORD PTR lo_bit_count$[rsp]
  00174	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00179	48 8b 4c 24 48	 mov	 rcx, QWORD PTR sha_info$[rsp]
  0017e	88 81 c7 00 00
	00		 mov	 BYTE PTR [rcx+199], al

; 338  :     sha_transform(sha_info);

  00184	48 8b 4c 24 48	 mov	 rcx, QWORD PTR sha_info$[rsp]
  00189	e8 00 00 00 00	 call	 sha_transform

; 339  :     digest[ 0] = (unsigned char) ((sha_info->digest[0] >> 24) & 0xff);

  0018e	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00193	8b 40 60	 mov	 eax, DWORD PTR [rax+96]
  00196	c1 e8 18	 shr	 eax, 24
  00199	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0019e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  001a3	88 01		 mov	 BYTE PTR [rcx], al

; 340  :     digest[ 1] = (unsigned char) ((sha_info->digest[0] >> 16) & 0xff);

  001a5	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  001aa	8b 40 60	 mov	 eax, DWORD PTR [rax+96]
  001ad	c1 e8 10	 shr	 eax, 16
  001b0	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  001b5	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  001ba	88 41 01	 mov	 BYTE PTR [rcx+1], al

; 341  :     digest[ 2] = (unsigned char) ((sha_info->digest[0] >>  8) & 0xff);

  001bd	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  001c2	8b 40 60	 mov	 eax, DWORD PTR [rax+96]
  001c5	c1 e8 08	 shr	 eax, 8
  001c8	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  001cd	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  001d2	88 41 02	 mov	 BYTE PTR [rcx+2], al

; 342  :     digest[ 3] = (unsigned char) ((sha_info->digest[0]      ) & 0xff);

  001d5	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  001da	8b 40 60	 mov	 eax, DWORD PTR [rax+96]
  001dd	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  001e2	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  001e7	88 41 03	 mov	 BYTE PTR [rcx+3], al

; 343  :     digest[ 4] = (unsigned char) ((sha_info->digest[1] >> 24) & 0xff);

  001ea	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  001ef	8b 40 64	 mov	 eax, DWORD PTR [rax+100]
  001f2	c1 e8 18	 shr	 eax, 24
  001f5	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  001fa	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  001ff	88 41 04	 mov	 BYTE PTR [rcx+4], al

; 344  :     digest[ 5] = (unsigned char) ((sha_info->digest[1] >> 16) & 0xff);

  00202	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00207	8b 40 64	 mov	 eax, DWORD PTR [rax+100]
  0020a	c1 e8 10	 shr	 eax, 16
  0020d	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00212	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00217	88 41 05	 mov	 BYTE PTR [rcx+5], al

; 345  :     digest[ 6] = (unsigned char) ((sha_info->digest[1] >>  8) & 0xff);

  0021a	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  0021f	8b 40 64	 mov	 eax, DWORD PTR [rax+100]
  00222	c1 e8 08	 shr	 eax, 8
  00225	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0022a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  0022f	88 41 06	 mov	 BYTE PTR [rcx+6], al

; 346  :     digest[ 7] = (unsigned char) ((sha_info->digest[1]      ) & 0xff);

  00232	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00237	8b 40 64	 mov	 eax, DWORD PTR [rax+100]
  0023a	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0023f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00244	88 41 07	 mov	 BYTE PTR [rcx+7], al

; 347  :     digest[ 8] = (unsigned char) ((sha_info->digest[2] >> 24) & 0xff);

  00247	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  0024c	8b 40 68	 mov	 eax, DWORD PTR [rax+104]
  0024f	c1 e8 18	 shr	 eax, 24
  00252	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00257	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  0025c	88 41 08	 mov	 BYTE PTR [rcx+8], al

; 348  :     digest[ 9] = (unsigned char) ((sha_info->digest[2] >> 16) & 0xff);

  0025f	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00264	8b 40 68	 mov	 eax, DWORD PTR [rax+104]
  00267	c1 e8 10	 shr	 eax, 16
  0026a	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0026f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00274	88 41 09	 mov	 BYTE PTR [rcx+9], al

; 349  :     digest[10] = (unsigned char) ((sha_info->digest[2] >>  8) & 0xff);

  00277	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  0027c	8b 40 68	 mov	 eax, DWORD PTR [rax+104]
  0027f	c1 e8 08	 shr	 eax, 8
  00282	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00287	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  0028c	88 41 0a	 mov	 BYTE PTR [rcx+10], al

; 350  :     digest[11] = (unsigned char) ((sha_info->digest[2]      ) & 0xff);

  0028f	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00294	8b 40 68	 mov	 eax, DWORD PTR [rax+104]
  00297	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0029c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  002a1	88 41 0b	 mov	 BYTE PTR [rcx+11], al

; 351  :     digest[12] = (unsigned char) ((sha_info->digest[3] >> 24) & 0xff);

  002a4	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  002a9	8b 40 6c	 mov	 eax, DWORD PTR [rax+108]
  002ac	c1 e8 18	 shr	 eax, 24
  002af	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  002b4	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  002b9	88 41 0c	 mov	 BYTE PTR [rcx+12], al

; 352  :     digest[13] = (unsigned char) ((sha_info->digest[3] >> 16) & 0xff);

  002bc	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  002c1	8b 40 6c	 mov	 eax, DWORD PTR [rax+108]
  002c4	c1 e8 10	 shr	 eax, 16
  002c7	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  002cc	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  002d1	88 41 0d	 mov	 BYTE PTR [rcx+13], al

; 353  :     digest[14] = (unsigned char) ((sha_info->digest[3] >>  8) & 0xff);

  002d4	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  002d9	8b 40 6c	 mov	 eax, DWORD PTR [rax+108]
  002dc	c1 e8 08	 shr	 eax, 8
  002df	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  002e4	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  002e9	88 41 0e	 mov	 BYTE PTR [rcx+14], al

; 354  :     digest[15] = (unsigned char) ((sha_info->digest[3]      ) & 0xff);

  002ec	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  002f1	8b 40 6c	 mov	 eax, DWORD PTR [rax+108]
  002f4	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  002f9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  002fe	88 41 0f	 mov	 BYTE PTR [rcx+15], al

; 355  :     digest[16] = (unsigned char) ((sha_info->digest[4] >> 24) & 0xff);

  00301	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00306	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  00309	c1 e8 18	 shr	 eax, 24
  0030c	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00311	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00316	88 41 10	 mov	 BYTE PTR [rcx+16], al

; 356  :     digest[17] = (unsigned char) ((sha_info->digest[4] >> 16) & 0xff);

  00319	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  0031e	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  00321	c1 e8 10	 shr	 eax, 16
  00324	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00329	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  0032e	88 41 11	 mov	 BYTE PTR [rcx+17], al

; 357  :     digest[18] = (unsigned char) ((sha_info->digest[4] >>  8) & 0xff);

  00331	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00336	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  00339	c1 e8 08	 shr	 eax, 8
  0033c	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00341	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00346	88 41 12	 mov	 BYTE PTR [rcx+18], al

; 358  :     digest[19] = (unsigned char) ((sha_info->digest[4]      ) & 0xff);

  00349	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  0034e	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  00351	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00356	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  0035b	88 41 13	 mov	 BYTE PTR [rcx+19], al

; 359  :     digest[20] = (unsigned char) ((sha_info->digest[5] >> 24) & 0xff);

  0035e	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00363	8b 40 74	 mov	 eax, DWORD PTR [rax+116]
  00366	c1 e8 18	 shr	 eax, 24
  00369	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0036e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00373	88 41 14	 mov	 BYTE PTR [rcx+20], al

; 360  :     digest[21] = (unsigned char) ((sha_info->digest[5] >> 16) & 0xff);

  00376	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  0037b	8b 40 74	 mov	 eax, DWORD PTR [rax+116]
  0037e	c1 e8 10	 shr	 eax, 16
  00381	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00386	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  0038b	88 41 15	 mov	 BYTE PTR [rcx+21], al

; 361  :     digest[22] = (unsigned char) ((sha_info->digest[5] >>  8) & 0xff);

  0038e	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00393	8b 40 74	 mov	 eax, DWORD PTR [rax+116]
  00396	c1 e8 08	 shr	 eax, 8
  00399	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0039e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  003a3	88 41 16	 mov	 BYTE PTR [rcx+22], al

; 362  :     digest[23] = (unsigned char) ((sha_info->digest[5]      ) & 0xff);

  003a6	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  003ab	8b 40 74	 mov	 eax, DWORD PTR [rax+116]
  003ae	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  003b3	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  003b8	88 41 17	 mov	 BYTE PTR [rcx+23], al

; 363  :     digest[24] = (unsigned char) ((sha_info->digest[6] >> 24) & 0xff);

  003bb	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  003c0	8b 40 78	 mov	 eax, DWORD PTR [rax+120]
  003c3	c1 e8 18	 shr	 eax, 24
  003c6	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  003cb	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  003d0	88 41 18	 mov	 BYTE PTR [rcx+24], al

; 364  :     digest[25] = (unsigned char) ((sha_info->digest[6] >> 16) & 0xff);

  003d3	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  003d8	8b 40 78	 mov	 eax, DWORD PTR [rax+120]
  003db	c1 e8 10	 shr	 eax, 16
  003de	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  003e3	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  003e8	88 41 19	 mov	 BYTE PTR [rcx+25], al

; 365  :     digest[26] = (unsigned char) ((sha_info->digest[6] >>  8) & 0xff);

  003eb	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  003f0	8b 40 78	 mov	 eax, DWORD PTR [rax+120]
  003f3	c1 e8 08	 shr	 eax, 8
  003f6	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  003fb	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00400	88 41 1a	 mov	 BYTE PTR [rcx+26], al

; 366  :     digest[27] = (unsigned char) ((sha_info->digest[6]      ) & 0xff);

  00403	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00408	8b 40 78	 mov	 eax, DWORD PTR [rax+120]
  0040b	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00410	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00415	88 41 1b	 mov	 BYTE PTR [rcx+27], al

; 367  :     digest[28] = (unsigned char) ((sha_info->digest[7] >> 24) & 0xff);

  00418	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  0041d	8b 40 7c	 mov	 eax, DWORD PTR [rax+124]
  00420	c1 e8 18	 shr	 eax, 24
  00423	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00428	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  0042d	88 41 1c	 mov	 BYTE PTR [rcx+28], al

; 368  :     digest[29] = (unsigned char) ((sha_info->digest[7] >> 16) & 0xff);

  00430	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00435	8b 40 7c	 mov	 eax, DWORD PTR [rax+124]
  00438	c1 e8 10	 shr	 eax, 16
  0043b	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00440	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00445	88 41 1d	 mov	 BYTE PTR [rcx+29], al

; 369  :     digest[30] = (unsigned char) ((sha_info->digest[7] >>  8) & 0xff);

  00448	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  0044d	8b 40 7c	 mov	 eax, DWORD PTR [rax+124]
  00450	c1 e8 08	 shr	 eax, 8
  00453	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00458	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  0045d	88 41 1e	 mov	 BYTE PTR [rcx+30], al

; 370  :     digest[31] = (unsigned char) ((sha_info->digest[7]      ) & 0xff);

  00460	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00465	8b 40 7c	 mov	 eax, DWORD PTR [rax+124]
  00468	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0046d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00472	88 41 1f	 mov	 BYTE PTR [rcx+31], al

; 371  : }

  00475	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00479	c3		 ret	 0
sha_final ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$sha_transform DD imagerel sha_transform
	DD	imagerel sha_transform+21295
	DD	imagerel $unwind$sha_transform
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$sha_transform DD 020c01H
	DD	02b010cH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT sha_transform
_TEXT	SEGMENT
W$ = 32
i$ = 288
S$ = 296
t1$ = 328
t0$ = 332
sha_info$ = 352
sha_transform PROC					; COMDAT

; 129  : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 81 ec 58 01
	00 00		 sub	 rsp, 344		; 00000158H

; 130  :     int i;
; 131  :         SHA_INT32 S[8], W[64], t0, t1;
; 132  : 
; 133  :     memcpy(W, sha_info->data, sizeof(sha_info->data));

  0000c	48 8b 84 24 60
	01 00 00	 mov	 rax, QWORD PTR sha_info$[rsp]
  00014	48 05 88 00 00
	00		 add	 rax, 136		; 00000088H
  0001a	41 b8 40 00 00
	00		 mov	 r8d, 64			; 00000040H
  00020	48 8b d0	 mov	 rdx, rax
  00023	48 8d 4c 24 20	 lea	 rcx, QWORD PTR W$[rsp]
  00028	e8 00 00 00 00	 call	 memcpy

; 134  :     longReverse(W, (int)sizeof(sha_info->data), sha_info->Endianness);

  0002d	48 8b 84 24 60
	01 00 00	 mov	 rax, QWORD PTR sha_info$[rsp]
  00035	44 8b 80 c8 00
	00 00		 mov	 r8d, DWORD PTR [rax+200]
  0003c	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  00041	48 8d 4c 24 20	 lea	 rcx, QWORD PTR W$[rsp]
  00046	e8 00 00 00 00	 call	 longReverse

; 135  : 
; 136  :     for (i = 16; i < 64; ++i) {

  0004b	c7 84 24 20 01
	00 00 10 00 00
	00		 mov	 DWORD PTR i$[rsp], 16
  00056	eb 10		 jmp	 SHORT $LN9@sha_transf
$LN8@sha_transf:
  00058	8b 84 24 20 01
	00 00		 mov	 eax, DWORD PTR i$[rsp]
  0005f	ff c0		 inc	 eax
  00061	89 84 24 20 01
	00 00		 mov	 DWORD PTR i$[rsp], eax
$LN9@sha_transf:
  00068	83 bc 24 20 01
	00 00 40	 cmp	 DWORD PTR i$[rsp], 64	; 00000040H
  00070	0f 8d 11 01 00
	00		 jge	 $LN7@sha_transf

; 137  :                 W[i] = Gamma1(W[i - 2]) + W[i - 7] + Gamma0(W[i - 15]) + W[i - 16];

  00076	8b 84 24 20 01
	00 00		 mov	 eax, DWORD PTR i$[rsp]
  0007d	83 e8 02	 sub	 eax, 2
  00080	48 98		 cdqe
  00082	8b 44 84 20	 mov	 eax, DWORD PTR W$[rsp+rax*4]
  00086	c1 e8 11	 shr	 eax, 17
  00089	8b 8c 24 20 01
	00 00		 mov	 ecx, DWORD PTR i$[rsp]
  00090	83 e9 02	 sub	 ecx, 2
  00093	48 63 c9	 movsxd	 rcx, ecx
  00096	8b 4c 8c 20	 mov	 ecx, DWORD PTR W$[rsp+rcx*4]
  0009a	c1 e1 0f	 shl	 ecx, 15
  0009d	0b c1		 or	 eax, ecx
  0009f	8b 8c 24 20 01
	00 00		 mov	 ecx, DWORD PTR i$[rsp]
  000a6	83 e9 02	 sub	 ecx, 2
  000a9	48 63 c9	 movsxd	 rcx, ecx
  000ac	8b 4c 8c 20	 mov	 ecx, DWORD PTR W$[rsp+rcx*4]
  000b0	c1 e9 13	 shr	 ecx, 19
  000b3	8b 94 24 20 01
	00 00		 mov	 edx, DWORD PTR i$[rsp]
  000ba	83 ea 02	 sub	 edx, 2
  000bd	48 63 d2	 movsxd	 rdx, edx
  000c0	8b 54 94 20	 mov	 edx, DWORD PTR W$[rsp+rdx*4]
  000c4	c1 e2 0d	 shl	 edx, 13
  000c7	0b ca		 or	 ecx, edx
  000c9	33 c1		 xor	 eax, ecx
  000cb	8b 8c 24 20 01
	00 00		 mov	 ecx, DWORD PTR i$[rsp]
  000d2	83 e9 02	 sub	 ecx, 2
  000d5	48 63 c9	 movsxd	 rcx, ecx
  000d8	8b 4c 8c 20	 mov	 ecx, DWORD PTR W$[rsp+rcx*4]
  000dc	c1 e9 0a	 shr	 ecx, 10
  000df	33 c1		 xor	 eax, ecx
  000e1	8b 8c 24 20 01
	00 00		 mov	 ecx, DWORD PTR i$[rsp]
  000e8	83 e9 07	 sub	 ecx, 7
  000eb	48 63 c9	 movsxd	 rcx, ecx
  000ee	03 44 8c 20	 add	 eax, DWORD PTR W$[rsp+rcx*4]
  000f2	8b 8c 24 20 01
	00 00		 mov	 ecx, DWORD PTR i$[rsp]
  000f9	83 e9 0f	 sub	 ecx, 15
  000fc	48 63 c9	 movsxd	 rcx, ecx
  000ff	8b 4c 8c 20	 mov	 ecx, DWORD PTR W$[rsp+rcx*4]
  00103	c1 e9 07	 shr	 ecx, 7
  00106	8b 94 24 20 01
	00 00		 mov	 edx, DWORD PTR i$[rsp]
  0010d	83 ea 0f	 sub	 edx, 15
  00110	48 63 d2	 movsxd	 rdx, edx
  00113	8b 54 94 20	 mov	 edx, DWORD PTR W$[rsp+rdx*4]
  00117	c1 e2 19	 shl	 edx, 25
  0011a	0b ca		 or	 ecx, edx
  0011c	8b 94 24 20 01
	00 00		 mov	 edx, DWORD PTR i$[rsp]
  00123	83 ea 0f	 sub	 edx, 15
  00126	48 63 d2	 movsxd	 rdx, edx
  00129	8b 54 94 20	 mov	 edx, DWORD PTR W$[rsp+rdx*4]
  0012d	c1 ea 12	 shr	 edx, 18
  00130	44 8b 84 24 20
	01 00 00	 mov	 r8d, DWORD PTR i$[rsp]
  00138	41 83 e8 0f	 sub	 r8d, 15
  0013c	4d 63 c0	 movsxd	 r8, r8d
  0013f	46 8b 44 84 20	 mov	 r8d, DWORD PTR W$[rsp+r8*4]
  00144	41 c1 e0 0e	 shl	 r8d, 14
  00148	41 0b d0	 or	 edx, r8d
  0014b	33 ca		 xor	 ecx, edx
  0014d	8b 94 24 20 01
	00 00		 mov	 edx, DWORD PTR i$[rsp]
  00154	83 ea 0f	 sub	 edx, 15
  00157	48 63 d2	 movsxd	 rdx, edx
  0015a	8b 54 94 20	 mov	 edx, DWORD PTR W$[rsp+rdx*4]
  0015e	c1 ea 03	 shr	 edx, 3
  00161	33 ca		 xor	 ecx, edx
  00163	03 c1		 add	 eax, ecx
  00165	8b 8c 24 20 01
	00 00		 mov	 ecx, DWORD PTR i$[rsp]
  0016c	83 e9 10	 sub	 ecx, 16
  0016f	48 63 c9	 movsxd	 rcx, ecx
  00172	03 44 8c 20	 add	 eax, DWORD PTR W$[rsp+rcx*4]
  00176	48 63 8c 24 20
	01 00 00	 movsxd	 rcx, DWORD PTR i$[rsp]
  0017e	89 44 8c 20	 mov	 DWORD PTR W$[rsp+rcx*4], eax

; 138  :     }

  00182	e9 d1 fe ff ff	 jmp	 $LN8@sha_transf
$LN7@sha_transf:

; 139  :     for (i = 0; i < 8; ++i) {

  00187	c7 84 24 20 01
	00 00 00 00 00
	00		 mov	 DWORD PTR i$[rsp], 0
  00192	eb 10		 jmp	 SHORT $LN6@sha_transf
$LN5@sha_transf:
  00194	8b 84 24 20 01
	00 00		 mov	 eax, DWORD PTR i$[rsp]
  0019b	ff c0		 inc	 eax
  0019d	89 84 24 20 01
	00 00		 mov	 DWORD PTR i$[rsp], eax
$LN6@sha_transf:
  001a4	83 bc 24 20 01
	00 00 08	 cmp	 DWORD PTR i$[rsp], 8
  001ac	7d 25		 jge	 SHORT $LN4@sha_transf

; 140  :         S[i] = sha_info->digest[i];

  001ae	48 63 84 24 20
	01 00 00	 movsxd	 rax, DWORD PTR i$[rsp]
  001b6	48 63 8c 24 20
	01 00 00	 movsxd	 rcx, DWORD PTR i$[rsp]
  001be	48 8b 94 24 60
	01 00 00	 mov	 rdx, QWORD PTR sha_info$[rsp]
  001c6	8b 44 82 60	 mov	 eax, DWORD PTR [rdx+rax*4+96]
  001ca	89 84 8c 28 01
	00 00		 mov	 DWORD PTR S$[rsp+rcx*4], eax

; 141  :     }

  001d1	eb c1		 jmp	 SHORT $LN5@sha_transf
$LN4@sha_transf:

; 142  : 
; 143  :     /* Compress */
; 144  : #define RND(a,b,c,d,e,f,g,h,i,ki)                    \
; 145  :      t0 = h + Sigma1(e) + Ch(e, f, g) + ki + W[i];   \
; 146  :      t1 = Sigma0(a) + Maj(a, b, c);                  \
; 147  :      d += t0;                                        \
; 148  :      h  = t0 + t1;
; 149  : 
; 150  :     RND(S[0],S[1],S[2],S[3],S[4],S[5],S[6],S[7],0,0x428a2f98);

  001d3	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+16]
  001da	c1 e8 06	 shr	 eax, 6
  001dd	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  001e4	c1 e1 1a	 shl	 ecx, 26
  001e7	0b c1		 or	 eax, ecx
  001e9	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  001f0	c1 e9 0b	 shr	 ecx, 11
  001f3	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  001fa	c1 e2 15	 shl	 edx, 21
  001fd	0b ca		 or	 ecx, edx
  001ff	33 c1		 xor	 eax, ecx
  00201	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  00208	c1 e9 19	 shr	 ecx, 25
  0020b	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  00212	c1 e2 07	 shl	 edx, 7
  00215	0b ca		 or	 ecx, edx
  00217	33 c1		 xor	 eax, ecx
  00219	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  00220	03 c8		 add	 ecx, eax
  00222	8b c1		 mov	 eax, ecx
  00224	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  0022b	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  00232	33 d1		 xor	 edx, ecx
  00234	8b ca		 mov	 ecx, edx
  00236	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  0023d	23 d1		 and	 edx, ecx
  0023f	8b ca		 mov	 ecx, edx
  00241	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  00248	33 d1		 xor	 edx, ecx
  0024a	8b ca		 mov	 ecx, edx
  0024c	8b 54 24 20	 mov	 edx, DWORD PTR W$[rsp]
  00250	03 d0		 add	 edx, eax
  00252	8b c2		 mov	 eax, edx
  00254	8d 84 01 98 2f
	8a 42		 lea	 eax, DWORD PTR [rcx+rax+1116352408]
  0025b	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  00262	8b 84 24 28 01
	00 00		 mov	 eax, DWORD PTR S$[rsp]
  00269	c1 e8 02	 shr	 eax, 2
  0026c	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  00273	c1 e1 1e	 shl	 ecx, 30
  00276	0b c1		 or	 eax, ecx
  00278	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  0027f	c1 e9 0d	 shr	 ecx, 13
  00282	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  00289	c1 e2 13	 shl	 edx, 19
  0028c	0b ca		 or	 ecx, edx
  0028e	33 c1		 xor	 eax, ecx
  00290	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  00297	c1 e9 16	 shr	 ecx, 22
  0029a	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  002a1	c1 e2 0a	 shl	 edx, 10
  002a4	0b ca		 or	 ecx, edx
  002a6	33 c1		 xor	 eax, ecx
  002a8	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  002af	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  002b6	0b d1		 or	 edx, ecx
  002b8	8b ca		 mov	 ecx, edx
  002ba	23 8c 24 30 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+8]
  002c1	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  002c8	44 8b 84 24 28
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp]
  002d0	44 23 c2	 and	 r8d, edx
  002d3	41 8b d0	 mov	 edx, r8d
  002d6	0b ca		 or	 ecx, edx
  002d8	03 c1		 add	 eax, ecx
  002da	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  002e1	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  002e8	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  002ef	03 c8		 add	 ecx, eax
  002f1	8b c1		 mov	 eax, ecx
  002f3	89 84 24 34 01
	00 00		 mov	 DWORD PTR S$[rsp+12], eax
  002fa	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  00301	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  00308	03 c8		 add	 ecx, eax
  0030a	8b c1		 mov	 eax, ecx
  0030c	89 84 24 44 01
	00 00		 mov	 DWORD PTR S$[rsp+28], eax

; 151  :     RND(S[7],S[0],S[1],S[2],S[3],S[4],S[5],S[6],1,0x71374491);

  00313	8b 84 24 34 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+12]
  0031a	c1 e8 06	 shr	 eax, 6
  0031d	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  00324	c1 e1 1a	 shl	 ecx, 26
  00327	0b c1		 or	 eax, ecx
  00329	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  00330	c1 e9 0b	 shr	 ecx, 11
  00333	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  0033a	c1 e2 15	 shl	 edx, 21
  0033d	0b ca		 or	 ecx, edx
  0033f	33 c1		 xor	 eax, ecx
  00341	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  00348	c1 e9 19	 shr	 ecx, 25
  0034b	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  00352	c1 e2 07	 shl	 edx, 7
  00355	0b ca		 or	 ecx, edx
  00357	33 c1		 xor	 eax, ecx
  00359	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  00360	03 c8		 add	 ecx, eax
  00362	8b c1		 mov	 eax, ecx
  00364	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  0036b	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  00372	33 d1		 xor	 edx, ecx
  00374	8b ca		 mov	 ecx, edx
  00376	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  0037d	23 d1		 and	 edx, ecx
  0037f	8b ca		 mov	 ecx, edx
  00381	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  00388	33 d1		 xor	 edx, ecx
  0038a	8b ca		 mov	 ecx, edx
  0038c	8b 54 24 24	 mov	 edx, DWORD PTR W$[rsp+4]
  00390	03 d0		 add	 edx, eax
  00392	8b c2		 mov	 eax, edx
  00394	8d 84 01 91 44
	37 71		 lea	 eax, DWORD PTR [rcx+rax+1899447441]
  0039b	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  003a2	8b 84 24 44 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+28]
  003a9	c1 e8 02	 shr	 eax, 2
  003ac	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  003b3	c1 e1 1e	 shl	 ecx, 30
  003b6	0b c1		 or	 eax, ecx
  003b8	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  003bf	c1 e9 0d	 shr	 ecx, 13
  003c2	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  003c9	c1 e2 13	 shl	 edx, 19
  003cc	0b ca		 or	 ecx, edx
  003ce	33 c1		 xor	 eax, ecx
  003d0	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  003d7	c1 e9 16	 shr	 ecx, 22
  003da	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  003e1	c1 e2 0a	 shl	 edx, 10
  003e4	0b ca		 or	 ecx, edx
  003e6	33 c1		 xor	 eax, ecx
  003e8	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  003ef	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  003f6	0b d1		 or	 edx, ecx
  003f8	8b ca		 mov	 ecx, edx
  003fa	23 8c 24 2c 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+4]
  00401	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  00408	44 8b 84 24 44
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+28]
  00410	44 23 c2	 and	 r8d, edx
  00413	41 8b d0	 mov	 edx, r8d
  00416	0b ca		 or	 ecx, edx
  00418	03 c1		 add	 eax, ecx
  0041a	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  00421	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  00428	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  0042f	03 c8		 add	 ecx, eax
  00431	8b c1		 mov	 eax, ecx
  00433	89 84 24 30 01
	00 00		 mov	 DWORD PTR S$[rsp+8], eax
  0043a	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  00441	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  00448	03 c8		 add	 ecx, eax
  0044a	8b c1		 mov	 eax, ecx
  0044c	89 84 24 40 01
	00 00		 mov	 DWORD PTR S$[rsp+24], eax

; 152  :     RND(S[6],S[7],S[0],S[1],S[2],S[3],S[4],S[5],2,0xb5c0fbcf);

  00453	8b 84 24 30 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+8]
  0045a	c1 e8 06	 shr	 eax, 6
  0045d	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  00464	c1 e1 1a	 shl	 ecx, 26
  00467	0b c1		 or	 eax, ecx
  00469	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  00470	c1 e9 0b	 shr	 ecx, 11
  00473	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  0047a	c1 e2 15	 shl	 edx, 21
  0047d	0b ca		 or	 ecx, edx
  0047f	33 c1		 xor	 eax, ecx
  00481	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  00488	c1 e9 19	 shr	 ecx, 25
  0048b	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  00492	c1 e2 07	 shl	 edx, 7
  00495	0b ca		 or	 ecx, edx
  00497	33 c1		 xor	 eax, ecx
  00499	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  004a0	03 c8		 add	 ecx, eax
  004a2	8b c1		 mov	 eax, ecx
  004a4	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  004ab	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  004b2	33 d1		 xor	 edx, ecx
  004b4	8b ca		 mov	 ecx, edx
  004b6	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  004bd	23 d1		 and	 edx, ecx
  004bf	8b ca		 mov	 ecx, edx
  004c1	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  004c8	33 d1		 xor	 edx, ecx
  004ca	8b ca		 mov	 ecx, edx
  004cc	8b 54 24 28	 mov	 edx, DWORD PTR W$[rsp+8]
  004d0	03 d0		 add	 edx, eax
  004d2	8b c2		 mov	 eax, edx
  004d4	ba cf fb c0 b5	 mov	 edx, -1245643825	; ffffffffb5c0fbcfH
  004d9	48 8d 0c 11	 lea	 rcx, QWORD PTR [rcx+rdx]
  004dd	03 c1		 add	 eax, ecx
  004df	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  004e6	8b 84 24 40 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+24]
  004ed	c1 e8 02	 shr	 eax, 2
  004f0	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  004f7	c1 e1 1e	 shl	 ecx, 30
  004fa	0b c1		 or	 eax, ecx
  004fc	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  00503	c1 e9 0d	 shr	 ecx, 13
  00506	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  0050d	c1 e2 13	 shl	 edx, 19
  00510	0b ca		 or	 ecx, edx
  00512	33 c1		 xor	 eax, ecx
  00514	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  0051b	c1 e9 16	 shr	 ecx, 22
  0051e	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  00525	c1 e2 0a	 shl	 edx, 10
  00528	0b ca		 or	 ecx, edx
  0052a	33 c1		 xor	 eax, ecx
  0052c	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  00533	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  0053a	0b d1		 or	 edx, ecx
  0053c	8b ca		 mov	 ecx, edx
  0053e	23 8c 24 28 01
	00 00		 and	 ecx, DWORD PTR S$[rsp]
  00545	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  0054c	44 8b 84 24 40
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+24]
  00554	44 23 c2	 and	 r8d, edx
  00557	41 8b d0	 mov	 edx, r8d
  0055a	0b ca		 or	 ecx, edx
  0055c	03 c1		 add	 eax, ecx
  0055e	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  00565	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  0056c	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  00573	03 c8		 add	 ecx, eax
  00575	8b c1		 mov	 eax, ecx
  00577	89 84 24 2c 01
	00 00		 mov	 DWORD PTR S$[rsp+4], eax
  0057e	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  00585	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  0058c	03 c8		 add	 ecx, eax
  0058e	8b c1		 mov	 eax, ecx
  00590	89 84 24 3c 01
	00 00		 mov	 DWORD PTR S$[rsp+20], eax

; 153  :     RND(S[5],S[6],S[7],S[0],S[1],S[2],S[3],S[4],3,0xe9b5dba5);

  00597	8b 84 24 2c 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+4]
  0059e	c1 e8 06	 shr	 eax, 6
  005a1	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  005a8	c1 e1 1a	 shl	 ecx, 26
  005ab	0b c1		 or	 eax, ecx
  005ad	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  005b4	c1 e9 0b	 shr	 ecx, 11
  005b7	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  005be	c1 e2 15	 shl	 edx, 21
  005c1	0b ca		 or	 ecx, edx
  005c3	33 c1		 xor	 eax, ecx
  005c5	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  005cc	c1 e9 19	 shr	 ecx, 25
  005cf	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  005d6	c1 e2 07	 shl	 edx, 7
  005d9	0b ca		 or	 ecx, edx
  005db	33 c1		 xor	 eax, ecx
  005dd	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  005e4	03 c8		 add	 ecx, eax
  005e6	8b c1		 mov	 eax, ecx
  005e8	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  005ef	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  005f6	33 d1		 xor	 edx, ecx
  005f8	8b ca		 mov	 ecx, edx
  005fa	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  00601	23 d1		 and	 edx, ecx
  00603	8b ca		 mov	 ecx, edx
  00605	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  0060c	33 d1		 xor	 edx, ecx
  0060e	8b ca		 mov	 ecx, edx
  00610	8b 54 24 2c	 mov	 edx, DWORD PTR W$[rsp+12]
  00614	03 d0		 add	 edx, eax
  00616	8b c2		 mov	 eax, edx
  00618	ba a5 db b5 e9	 mov	 edx, -373957723		; ffffffffe9b5dba5H
  0061d	48 8d 0c 11	 lea	 rcx, QWORD PTR [rcx+rdx]
  00621	03 c1		 add	 eax, ecx
  00623	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  0062a	8b 84 24 3c 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+20]
  00631	c1 e8 02	 shr	 eax, 2
  00634	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  0063b	c1 e1 1e	 shl	 ecx, 30
  0063e	0b c1		 or	 eax, ecx
  00640	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  00647	c1 e9 0d	 shr	 ecx, 13
  0064a	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  00651	c1 e2 13	 shl	 edx, 19
  00654	0b ca		 or	 ecx, edx
  00656	33 c1		 xor	 eax, ecx
  00658	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  0065f	c1 e9 16	 shr	 ecx, 22
  00662	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  00669	c1 e2 0a	 shl	 edx, 10
  0066c	0b ca		 or	 ecx, edx
  0066e	33 c1		 xor	 eax, ecx
  00670	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  00677	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  0067e	0b d1		 or	 edx, ecx
  00680	8b ca		 mov	 ecx, edx
  00682	23 8c 24 44 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+28]
  00689	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  00690	44 8b 84 24 3c
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+20]
  00698	44 23 c2	 and	 r8d, edx
  0069b	41 8b d0	 mov	 edx, r8d
  0069e	0b ca		 or	 ecx, edx
  006a0	03 c1		 add	 eax, ecx
  006a2	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  006a9	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  006b0	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  006b7	03 c8		 add	 ecx, eax
  006b9	8b c1		 mov	 eax, ecx
  006bb	89 84 24 28 01
	00 00		 mov	 DWORD PTR S$[rsp], eax
  006c2	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  006c9	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  006d0	03 c8		 add	 ecx, eax
  006d2	8b c1		 mov	 eax, ecx
  006d4	89 84 24 38 01
	00 00		 mov	 DWORD PTR S$[rsp+16], eax

; 154  :     RND(S[4],S[5],S[6],S[7],S[0],S[1],S[2],S[3],4,0x3956c25b);

  006db	8b 84 24 28 01
	00 00		 mov	 eax, DWORD PTR S$[rsp]
  006e2	c1 e8 06	 shr	 eax, 6
  006e5	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  006ec	c1 e1 1a	 shl	 ecx, 26
  006ef	0b c1		 or	 eax, ecx
  006f1	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  006f8	c1 e9 0b	 shr	 ecx, 11
  006fb	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  00702	c1 e2 15	 shl	 edx, 21
  00705	0b ca		 or	 ecx, edx
  00707	33 c1		 xor	 eax, ecx
  00709	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  00710	c1 e9 19	 shr	 ecx, 25
  00713	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  0071a	c1 e2 07	 shl	 edx, 7
  0071d	0b ca		 or	 ecx, edx
  0071f	33 c1		 xor	 eax, ecx
  00721	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  00728	03 c8		 add	 ecx, eax
  0072a	8b c1		 mov	 eax, ecx
  0072c	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  00733	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  0073a	33 d1		 xor	 edx, ecx
  0073c	8b ca		 mov	 ecx, edx
  0073e	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  00745	23 d1		 and	 edx, ecx
  00747	8b ca		 mov	 ecx, edx
  00749	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  00750	33 d1		 xor	 edx, ecx
  00752	8b ca		 mov	 ecx, edx
  00754	8b 54 24 30	 mov	 edx, DWORD PTR W$[rsp+16]
  00758	03 d0		 add	 edx, eax
  0075a	8b c2		 mov	 eax, edx
  0075c	8d 84 01 5b c2
	56 39		 lea	 eax, DWORD PTR [rcx+rax+961987163]
  00763	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  0076a	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+16]
  00771	c1 e8 02	 shr	 eax, 2
  00774	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  0077b	c1 e1 1e	 shl	 ecx, 30
  0077e	0b c1		 or	 eax, ecx
  00780	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  00787	c1 e9 0d	 shr	 ecx, 13
  0078a	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  00791	c1 e2 13	 shl	 edx, 19
  00794	0b ca		 or	 ecx, edx
  00796	33 c1		 xor	 eax, ecx
  00798	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  0079f	c1 e9 16	 shr	 ecx, 22
  007a2	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  007a9	c1 e2 0a	 shl	 edx, 10
  007ac	0b ca		 or	 ecx, edx
  007ae	33 c1		 xor	 eax, ecx
  007b0	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  007b7	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  007be	0b d1		 or	 edx, ecx
  007c0	8b ca		 mov	 ecx, edx
  007c2	23 8c 24 40 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+24]
  007c9	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  007d0	44 8b 84 24 38
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+16]
  007d8	44 23 c2	 and	 r8d, edx
  007db	41 8b d0	 mov	 edx, r8d
  007de	0b ca		 or	 ecx, edx
  007e0	03 c1		 add	 eax, ecx
  007e2	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  007e9	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  007f0	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  007f7	03 c8		 add	 ecx, eax
  007f9	8b c1		 mov	 eax, ecx
  007fb	89 84 24 44 01
	00 00		 mov	 DWORD PTR S$[rsp+28], eax
  00802	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  00809	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  00810	03 c8		 add	 ecx, eax
  00812	8b c1		 mov	 eax, ecx
  00814	89 84 24 34 01
	00 00		 mov	 DWORD PTR S$[rsp+12], eax

; 155  :     RND(S[3],S[4],S[5],S[6],S[7],S[0],S[1],S[2],5,0x59f111f1);

  0081b	8b 84 24 44 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+28]
  00822	c1 e8 06	 shr	 eax, 6
  00825	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  0082c	c1 e1 1a	 shl	 ecx, 26
  0082f	0b c1		 or	 eax, ecx
  00831	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  00838	c1 e9 0b	 shr	 ecx, 11
  0083b	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  00842	c1 e2 15	 shl	 edx, 21
  00845	0b ca		 or	 ecx, edx
  00847	33 c1		 xor	 eax, ecx
  00849	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  00850	c1 e9 19	 shr	 ecx, 25
  00853	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  0085a	c1 e2 07	 shl	 edx, 7
  0085d	0b ca		 or	 ecx, edx
  0085f	33 c1		 xor	 eax, ecx
  00861	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  00868	03 c8		 add	 ecx, eax
  0086a	8b c1		 mov	 eax, ecx
  0086c	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  00873	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  0087a	33 d1		 xor	 edx, ecx
  0087c	8b ca		 mov	 ecx, edx
  0087e	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  00885	23 d1		 and	 edx, ecx
  00887	8b ca		 mov	 ecx, edx
  00889	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  00890	33 d1		 xor	 edx, ecx
  00892	8b ca		 mov	 ecx, edx
  00894	8b 54 24 34	 mov	 edx, DWORD PTR W$[rsp+20]
  00898	03 d0		 add	 edx, eax
  0089a	8b c2		 mov	 eax, edx
  0089c	8d 84 01 f1 11
	f1 59		 lea	 eax, DWORD PTR [rcx+rax+1508970993]
  008a3	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  008aa	8b 84 24 34 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+12]
  008b1	c1 e8 02	 shr	 eax, 2
  008b4	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  008bb	c1 e1 1e	 shl	 ecx, 30
  008be	0b c1		 or	 eax, ecx
  008c0	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  008c7	c1 e9 0d	 shr	 ecx, 13
  008ca	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  008d1	c1 e2 13	 shl	 edx, 19
  008d4	0b ca		 or	 ecx, edx
  008d6	33 c1		 xor	 eax, ecx
  008d8	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  008df	c1 e9 16	 shr	 ecx, 22
  008e2	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  008e9	c1 e2 0a	 shl	 edx, 10
  008ec	0b ca		 or	 ecx, edx
  008ee	33 c1		 xor	 eax, ecx
  008f0	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  008f7	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  008fe	0b d1		 or	 edx, ecx
  00900	8b ca		 mov	 ecx, edx
  00902	23 8c 24 3c 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+20]
  00909	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  00910	44 8b 84 24 34
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+12]
  00918	44 23 c2	 and	 r8d, edx
  0091b	41 8b d0	 mov	 edx, r8d
  0091e	0b ca		 or	 ecx, edx
  00920	03 c1		 add	 eax, ecx
  00922	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  00929	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  00930	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  00937	03 c8		 add	 ecx, eax
  00939	8b c1		 mov	 eax, ecx
  0093b	89 84 24 40 01
	00 00		 mov	 DWORD PTR S$[rsp+24], eax
  00942	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  00949	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  00950	03 c8		 add	 ecx, eax
  00952	8b c1		 mov	 eax, ecx
  00954	89 84 24 30 01
	00 00		 mov	 DWORD PTR S$[rsp+8], eax

; 156  :     RND(S[2],S[3],S[4],S[5],S[6],S[7],S[0],S[1],6,0x923f82a4);

  0095b	8b 84 24 40 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+24]
  00962	c1 e8 06	 shr	 eax, 6
  00965	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  0096c	c1 e1 1a	 shl	 ecx, 26
  0096f	0b c1		 or	 eax, ecx
  00971	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  00978	c1 e9 0b	 shr	 ecx, 11
  0097b	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  00982	c1 e2 15	 shl	 edx, 21
  00985	0b ca		 or	 ecx, edx
  00987	33 c1		 xor	 eax, ecx
  00989	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  00990	c1 e9 19	 shr	 ecx, 25
  00993	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  0099a	c1 e2 07	 shl	 edx, 7
  0099d	0b ca		 or	 ecx, edx
  0099f	33 c1		 xor	 eax, ecx
  009a1	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  009a8	03 c8		 add	 ecx, eax
  009aa	8b c1		 mov	 eax, ecx
  009ac	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  009b3	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  009ba	33 d1		 xor	 edx, ecx
  009bc	8b ca		 mov	 ecx, edx
  009be	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  009c5	23 d1		 and	 edx, ecx
  009c7	8b ca		 mov	 ecx, edx
  009c9	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  009d0	33 d1		 xor	 edx, ecx
  009d2	8b ca		 mov	 ecx, edx
  009d4	8b 54 24 38	 mov	 edx, DWORD PTR W$[rsp+24]
  009d8	03 d0		 add	 edx, eax
  009da	8b c2		 mov	 eax, edx
  009dc	ba a4 82 3f 92	 mov	 edx, -1841331548	; ffffffff923f82a4H
  009e1	48 8d 0c 11	 lea	 rcx, QWORD PTR [rcx+rdx]
  009e5	03 c1		 add	 eax, ecx
  009e7	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  009ee	8b 84 24 30 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+8]
  009f5	c1 e8 02	 shr	 eax, 2
  009f8	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  009ff	c1 e1 1e	 shl	 ecx, 30
  00a02	0b c1		 or	 eax, ecx
  00a04	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  00a0b	c1 e9 0d	 shr	 ecx, 13
  00a0e	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  00a15	c1 e2 13	 shl	 edx, 19
  00a18	0b ca		 or	 ecx, edx
  00a1a	33 c1		 xor	 eax, ecx
  00a1c	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  00a23	c1 e9 16	 shr	 ecx, 22
  00a26	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  00a2d	c1 e2 0a	 shl	 edx, 10
  00a30	0b ca		 or	 ecx, edx
  00a32	33 c1		 xor	 eax, ecx
  00a34	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  00a3b	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  00a42	0b d1		 or	 edx, ecx
  00a44	8b ca		 mov	 ecx, edx
  00a46	23 8c 24 38 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+16]
  00a4d	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  00a54	44 8b 84 24 30
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+8]
  00a5c	44 23 c2	 and	 r8d, edx
  00a5f	41 8b d0	 mov	 edx, r8d
  00a62	0b ca		 or	 ecx, edx
  00a64	03 c1		 add	 eax, ecx
  00a66	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  00a6d	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  00a74	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  00a7b	03 c8		 add	 ecx, eax
  00a7d	8b c1		 mov	 eax, ecx
  00a7f	89 84 24 3c 01
	00 00		 mov	 DWORD PTR S$[rsp+20], eax
  00a86	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  00a8d	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  00a94	03 c8		 add	 ecx, eax
  00a96	8b c1		 mov	 eax, ecx
  00a98	89 84 24 2c 01
	00 00		 mov	 DWORD PTR S$[rsp+4], eax

; 157  :     RND(S[1],S[2],S[3],S[4],S[5],S[6],S[7],S[0],7,0xab1c5ed5);

  00a9f	8b 84 24 3c 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+20]
  00aa6	c1 e8 06	 shr	 eax, 6
  00aa9	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  00ab0	c1 e1 1a	 shl	 ecx, 26
  00ab3	0b c1		 or	 eax, ecx
  00ab5	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  00abc	c1 e9 0b	 shr	 ecx, 11
  00abf	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  00ac6	c1 e2 15	 shl	 edx, 21
  00ac9	0b ca		 or	 ecx, edx
  00acb	33 c1		 xor	 eax, ecx
  00acd	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  00ad4	c1 e9 19	 shr	 ecx, 25
  00ad7	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  00ade	c1 e2 07	 shl	 edx, 7
  00ae1	0b ca		 or	 ecx, edx
  00ae3	33 c1		 xor	 eax, ecx
  00ae5	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  00aec	03 c8		 add	 ecx, eax
  00aee	8b c1		 mov	 eax, ecx
  00af0	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  00af7	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  00afe	33 d1		 xor	 edx, ecx
  00b00	8b ca		 mov	 ecx, edx
  00b02	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  00b09	23 d1		 and	 edx, ecx
  00b0b	8b ca		 mov	 ecx, edx
  00b0d	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  00b14	33 d1		 xor	 edx, ecx
  00b16	8b ca		 mov	 ecx, edx
  00b18	8b 54 24 3c	 mov	 edx, DWORD PTR W$[rsp+28]
  00b1c	03 d0		 add	 edx, eax
  00b1e	8b c2		 mov	 eax, edx
  00b20	ba d5 5e 1c ab	 mov	 edx, -1424204075	; ffffffffab1c5ed5H
  00b25	48 8d 0c 11	 lea	 rcx, QWORD PTR [rcx+rdx]
  00b29	03 c1		 add	 eax, ecx
  00b2b	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  00b32	8b 84 24 2c 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+4]
  00b39	c1 e8 02	 shr	 eax, 2
  00b3c	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  00b43	c1 e1 1e	 shl	 ecx, 30
  00b46	0b c1		 or	 eax, ecx
  00b48	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  00b4f	c1 e9 0d	 shr	 ecx, 13
  00b52	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  00b59	c1 e2 13	 shl	 edx, 19
  00b5c	0b ca		 or	 ecx, edx
  00b5e	33 c1		 xor	 eax, ecx
  00b60	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  00b67	c1 e9 16	 shr	 ecx, 22
  00b6a	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  00b71	c1 e2 0a	 shl	 edx, 10
  00b74	0b ca		 or	 ecx, edx
  00b76	33 c1		 xor	 eax, ecx
  00b78	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  00b7f	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  00b86	0b d1		 or	 edx, ecx
  00b88	8b ca		 mov	 ecx, edx
  00b8a	23 8c 24 34 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+12]
  00b91	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  00b98	44 8b 84 24 2c
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+4]
  00ba0	44 23 c2	 and	 r8d, edx
  00ba3	41 8b d0	 mov	 edx, r8d
  00ba6	0b ca		 or	 ecx, edx
  00ba8	03 c1		 add	 eax, ecx
  00baa	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  00bb1	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  00bb8	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  00bbf	03 c8		 add	 ecx, eax
  00bc1	8b c1		 mov	 eax, ecx
  00bc3	89 84 24 38 01
	00 00		 mov	 DWORD PTR S$[rsp+16], eax
  00bca	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  00bd1	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  00bd8	03 c8		 add	 ecx, eax
  00bda	8b c1		 mov	 eax, ecx
  00bdc	89 84 24 28 01
	00 00		 mov	 DWORD PTR S$[rsp], eax

; 158  :     RND(S[0],S[1],S[2],S[3],S[4],S[5],S[6],S[7],8,0xd807aa98);

  00be3	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+16]
  00bea	c1 e8 06	 shr	 eax, 6
  00bed	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  00bf4	c1 e1 1a	 shl	 ecx, 26
  00bf7	0b c1		 or	 eax, ecx
  00bf9	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  00c00	c1 e9 0b	 shr	 ecx, 11
  00c03	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  00c0a	c1 e2 15	 shl	 edx, 21
  00c0d	0b ca		 or	 ecx, edx
  00c0f	33 c1		 xor	 eax, ecx
  00c11	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  00c18	c1 e9 19	 shr	 ecx, 25
  00c1b	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  00c22	c1 e2 07	 shl	 edx, 7
  00c25	0b ca		 or	 ecx, edx
  00c27	33 c1		 xor	 eax, ecx
  00c29	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  00c30	03 c8		 add	 ecx, eax
  00c32	8b c1		 mov	 eax, ecx
  00c34	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  00c3b	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  00c42	33 d1		 xor	 edx, ecx
  00c44	8b ca		 mov	 ecx, edx
  00c46	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  00c4d	23 d1		 and	 edx, ecx
  00c4f	8b ca		 mov	 ecx, edx
  00c51	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  00c58	33 d1		 xor	 edx, ecx
  00c5a	8b ca		 mov	 ecx, edx
  00c5c	8b 54 24 40	 mov	 edx, DWORD PTR W$[rsp+32]
  00c60	03 d0		 add	 edx, eax
  00c62	8b c2		 mov	 eax, edx
  00c64	ba 98 aa 07 d8	 mov	 edx, -670586216		; ffffffffd807aa98H
  00c69	48 8d 0c 11	 lea	 rcx, QWORD PTR [rcx+rdx]
  00c6d	03 c1		 add	 eax, ecx
  00c6f	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  00c76	8b 84 24 28 01
	00 00		 mov	 eax, DWORD PTR S$[rsp]
  00c7d	c1 e8 02	 shr	 eax, 2
  00c80	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  00c87	c1 e1 1e	 shl	 ecx, 30
  00c8a	0b c1		 or	 eax, ecx
  00c8c	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  00c93	c1 e9 0d	 shr	 ecx, 13
  00c96	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  00c9d	c1 e2 13	 shl	 edx, 19
  00ca0	0b ca		 or	 ecx, edx
  00ca2	33 c1		 xor	 eax, ecx
  00ca4	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  00cab	c1 e9 16	 shr	 ecx, 22
  00cae	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  00cb5	c1 e2 0a	 shl	 edx, 10
  00cb8	0b ca		 or	 ecx, edx
  00cba	33 c1		 xor	 eax, ecx
  00cbc	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  00cc3	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  00cca	0b d1		 or	 edx, ecx
  00ccc	8b ca		 mov	 ecx, edx
  00cce	23 8c 24 30 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+8]
  00cd5	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  00cdc	44 8b 84 24 28
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp]
  00ce4	44 23 c2	 and	 r8d, edx
  00ce7	41 8b d0	 mov	 edx, r8d
  00cea	0b ca		 or	 ecx, edx
  00cec	03 c1		 add	 eax, ecx
  00cee	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  00cf5	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  00cfc	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  00d03	03 c8		 add	 ecx, eax
  00d05	8b c1		 mov	 eax, ecx
  00d07	89 84 24 34 01
	00 00		 mov	 DWORD PTR S$[rsp+12], eax
  00d0e	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  00d15	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  00d1c	03 c8		 add	 ecx, eax
  00d1e	8b c1		 mov	 eax, ecx
  00d20	89 84 24 44 01
	00 00		 mov	 DWORD PTR S$[rsp+28], eax

; 159  :     RND(S[7],S[0],S[1],S[2],S[3],S[4],S[5],S[6],9,0x12835b01);

  00d27	8b 84 24 34 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+12]
  00d2e	c1 e8 06	 shr	 eax, 6
  00d31	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  00d38	c1 e1 1a	 shl	 ecx, 26
  00d3b	0b c1		 or	 eax, ecx
  00d3d	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  00d44	c1 e9 0b	 shr	 ecx, 11
  00d47	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  00d4e	c1 e2 15	 shl	 edx, 21
  00d51	0b ca		 or	 ecx, edx
  00d53	33 c1		 xor	 eax, ecx
  00d55	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  00d5c	c1 e9 19	 shr	 ecx, 25
  00d5f	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  00d66	c1 e2 07	 shl	 edx, 7
  00d69	0b ca		 or	 ecx, edx
  00d6b	33 c1		 xor	 eax, ecx
  00d6d	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  00d74	03 c8		 add	 ecx, eax
  00d76	8b c1		 mov	 eax, ecx
  00d78	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  00d7f	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  00d86	33 d1		 xor	 edx, ecx
  00d88	8b ca		 mov	 ecx, edx
  00d8a	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  00d91	23 d1		 and	 edx, ecx
  00d93	8b ca		 mov	 ecx, edx
  00d95	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  00d9c	33 d1		 xor	 edx, ecx
  00d9e	8b ca		 mov	 ecx, edx
  00da0	8b 54 24 44	 mov	 edx, DWORD PTR W$[rsp+36]
  00da4	03 d0		 add	 edx, eax
  00da6	8b c2		 mov	 eax, edx
  00da8	8d 84 01 01 5b
	83 12		 lea	 eax, DWORD PTR [rcx+rax+310598401]
  00daf	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  00db6	8b 84 24 44 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+28]
  00dbd	c1 e8 02	 shr	 eax, 2
  00dc0	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  00dc7	c1 e1 1e	 shl	 ecx, 30
  00dca	0b c1		 or	 eax, ecx
  00dcc	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  00dd3	c1 e9 0d	 shr	 ecx, 13
  00dd6	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  00ddd	c1 e2 13	 shl	 edx, 19
  00de0	0b ca		 or	 ecx, edx
  00de2	33 c1		 xor	 eax, ecx
  00de4	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  00deb	c1 e9 16	 shr	 ecx, 22
  00dee	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  00df5	c1 e2 0a	 shl	 edx, 10
  00df8	0b ca		 or	 ecx, edx
  00dfa	33 c1		 xor	 eax, ecx
  00dfc	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  00e03	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  00e0a	0b d1		 or	 edx, ecx
  00e0c	8b ca		 mov	 ecx, edx
  00e0e	23 8c 24 2c 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+4]
  00e15	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  00e1c	44 8b 84 24 44
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+28]
  00e24	44 23 c2	 and	 r8d, edx
  00e27	41 8b d0	 mov	 edx, r8d
  00e2a	0b ca		 or	 ecx, edx
  00e2c	03 c1		 add	 eax, ecx
  00e2e	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  00e35	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  00e3c	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  00e43	03 c8		 add	 ecx, eax
  00e45	8b c1		 mov	 eax, ecx
  00e47	89 84 24 30 01
	00 00		 mov	 DWORD PTR S$[rsp+8], eax
  00e4e	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  00e55	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  00e5c	03 c8		 add	 ecx, eax
  00e5e	8b c1		 mov	 eax, ecx
  00e60	89 84 24 40 01
	00 00		 mov	 DWORD PTR S$[rsp+24], eax

; 160  :     RND(S[6],S[7],S[0],S[1],S[2],S[3],S[4],S[5],10,0x243185be);

  00e67	8b 84 24 30 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+8]
  00e6e	c1 e8 06	 shr	 eax, 6
  00e71	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  00e78	c1 e1 1a	 shl	 ecx, 26
  00e7b	0b c1		 or	 eax, ecx
  00e7d	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  00e84	c1 e9 0b	 shr	 ecx, 11
  00e87	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  00e8e	c1 e2 15	 shl	 edx, 21
  00e91	0b ca		 or	 ecx, edx
  00e93	33 c1		 xor	 eax, ecx
  00e95	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  00e9c	c1 e9 19	 shr	 ecx, 25
  00e9f	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  00ea6	c1 e2 07	 shl	 edx, 7
  00ea9	0b ca		 or	 ecx, edx
  00eab	33 c1		 xor	 eax, ecx
  00ead	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  00eb4	03 c8		 add	 ecx, eax
  00eb6	8b c1		 mov	 eax, ecx
  00eb8	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  00ebf	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  00ec6	33 d1		 xor	 edx, ecx
  00ec8	8b ca		 mov	 ecx, edx
  00eca	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  00ed1	23 d1		 and	 edx, ecx
  00ed3	8b ca		 mov	 ecx, edx
  00ed5	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  00edc	33 d1		 xor	 edx, ecx
  00ede	8b ca		 mov	 ecx, edx
  00ee0	8b 54 24 48	 mov	 edx, DWORD PTR W$[rsp+40]
  00ee4	03 d0		 add	 edx, eax
  00ee6	8b c2		 mov	 eax, edx
  00ee8	8d 84 01 be 85
	31 24		 lea	 eax, DWORD PTR [rcx+rax+607225278]
  00eef	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  00ef6	8b 84 24 40 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+24]
  00efd	c1 e8 02	 shr	 eax, 2
  00f00	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  00f07	c1 e1 1e	 shl	 ecx, 30
  00f0a	0b c1		 or	 eax, ecx
  00f0c	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  00f13	c1 e9 0d	 shr	 ecx, 13
  00f16	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  00f1d	c1 e2 13	 shl	 edx, 19
  00f20	0b ca		 or	 ecx, edx
  00f22	33 c1		 xor	 eax, ecx
  00f24	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  00f2b	c1 e9 16	 shr	 ecx, 22
  00f2e	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  00f35	c1 e2 0a	 shl	 edx, 10
  00f38	0b ca		 or	 ecx, edx
  00f3a	33 c1		 xor	 eax, ecx
  00f3c	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  00f43	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  00f4a	0b d1		 or	 edx, ecx
  00f4c	8b ca		 mov	 ecx, edx
  00f4e	23 8c 24 28 01
	00 00		 and	 ecx, DWORD PTR S$[rsp]
  00f55	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  00f5c	44 8b 84 24 40
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+24]
  00f64	44 23 c2	 and	 r8d, edx
  00f67	41 8b d0	 mov	 edx, r8d
  00f6a	0b ca		 or	 ecx, edx
  00f6c	03 c1		 add	 eax, ecx
  00f6e	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  00f75	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  00f7c	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  00f83	03 c8		 add	 ecx, eax
  00f85	8b c1		 mov	 eax, ecx
  00f87	89 84 24 2c 01
	00 00		 mov	 DWORD PTR S$[rsp+4], eax
  00f8e	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  00f95	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  00f9c	03 c8		 add	 ecx, eax
  00f9e	8b c1		 mov	 eax, ecx
  00fa0	89 84 24 3c 01
	00 00		 mov	 DWORD PTR S$[rsp+20], eax

; 161  :     RND(S[5],S[6],S[7],S[0],S[1],S[2],S[3],S[4],11,0x550c7dc3);

  00fa7	8b 84 24 2c 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+4]
  00fae	c1 e8 06	 shr	 eax, 6
  00fb1	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  00fb8	c1 e1 1a	 shl	 ecx, 26
  00fbb	0b c1		 or	 eax, ecx
  00fbd	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  00fc4	c1 e9 0b	 shr	 ecx, 11
  00fc7	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  00fce	c1 e2 15	 shl	 edx, 21
  00fd1	0b ca		 or	 ecx, edx
  00fd3	33 c1		 xor	 eax, ecx
  00fd5	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  00fdc	c1 e9 19	 shr	 ecx, 25
  00fdf	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  00fe6	c1 e2 07	 shl	 edx, 7
  00fe9	0b ca		 or	 ecx, edx
  00feb	33 c1		 xor	 eax, ecx
  00fed	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  00ff4	03 c8		 add	 ecx, eax
  00ff6	8b c1		 mov	 eax, ecx
  00ff8	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  00fff	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  01006	33 d1		 xor	 edx, ecx
  01008	8b ca		 mov	 ecx, edx
  0100a	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  01011	23 d1		 and	 edx, ecx
  01013	8b ca		 mov	 ecx, edx
  01015	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  0101c	33 d1		 xor	 edx, ecx
  0101e	8b ca		 mov	 ecx, edx
  01020	8b 54 24 4c	 mov	 edx, DWORD PTR W$[rsp+44]
  01024	03 d0		 add	 edx, eax
  01026	8b c2		 mov	 eax, edx
  01028	8d 84 01 c3 7d
	0c 55		 lea	 eax, DWORD PTR [rcx+rax+1426881987]
  0102f	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  01036	8b 84 24 3c 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+20]
  0103d	c1 e8 02	 shr	 eax, 2
  01040	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  01047	c1 e1 1e	 shl	 ecx, 30
  0104a	0b c1		 or	 eax, ecx
  0104c	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  01053	c1 e9 0d	 shr	 ecx, 13
  01056	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  0105d	c1 e2 13	 shl	 edx, 19
  01060	0b ca		 or	 ecx, edx
  01062	33 c1		 xor	 eax, ecx
  01064	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  0106b	c1 e9 16	 shr	 ecx, 22
  0106e	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  01075	c1 e2 0a	 shl	 edx, 10
  01078	0b ca		 or	 ecx, edx
  0107a	33 c1		 xor	 eax, ecx
  0107c	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  01083	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  0108a	0b d1		 or	 edx, ecx
  0108c	8b ca		 mov	 ecx, edx
  0108e	23 8c 24 44 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+28]
  01095	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  0109c	44 8b 84 24 3c
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+20]
  010a4	44 23 c2	 and	 r8d, edx
  010a7	41 8b d0	 mov	 edx, r8d
  010aa	0b ca		 or	 ecx, edx
  010ac	03 c1		 add	 eax, ecx
  010ae	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  010b5	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  010bc	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  010c3	03 c8		 add	 ecx, eax
  010c5	8b c1		 mov	 eax, ecx
  010c7	89 84 24 28 01
	00 00		 mov	 DWORD PTR S$[rsp], eax
  010ce	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  010d5	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  010dc	03 c8		 add	 ecx, eax
  010de	8b c1		 mov	 eax, ecx
  010e0	89 84 24 38 01
	00 00		 mov	 DWORD PTR S$[rsp+16], eax

; 162  :     RND(S[4],S[5],S[6],S[7],S[0],S[1],S[2],S[3],12,0x72be5d74);

  010e7	8b 84 24 28 01
	00 00		 mov	 eax, DWORD PTR S$[rsp]
  010ee	c1 e8 06	 shr	 eax, 6
  010f1	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  010f8	c1 e1 1a	 shl	 ecx, 26
  010fb	0b c1		 or	 eax, ecx
  010fd	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  01104	c1 e9 0b	 shr	 ecx, 11
  01107	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  0110e	c1 e2 15	 shl	 edx, 21
  01111	0b ca		 or	 ecx, edx
  01113	33 c1		 xor	 eax, ecx
  01115	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  0111c	c1 e9 19	 shr	 ecx, 25
  0111f	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  01126	c1 e2 07	 shl	 edx, 7
  01129	0b ca		 or	 ecx, edx
  0112b	33 c1		 xor	 eax, ecx
  0112d	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  01134	03 c8		 add	 ecx, eax
  01136	8b c1		 mov	 eax, ecx
  01138	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  0113f	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  01146	33 d1		 xor	 edx, ecx
  01148	8b ca		 mov	 ecx, edx
  0114a	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  01151	23 d1		 and	 edx, ecx
  01153	8b ca		 mov	 ecx, edx
  01155	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  0115c	33 d1		 xor	 edx, ecx
  0115e	8b ca		 mov	 ecx, edx
  01160	8b 54 24 50	 mov	 edx, DWORD PTR W$[rsp+48]
  01164	03 d0		 add	 edx, eax
  01166	8b c2		 mov	 eax, edx
  01168	8d 84 01 74 5d
	be 72		 lea	 eax, DWORD PTR [rcx+rax+1925078388]
  0116f	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  01176	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+16]
  0117d	c1 e8 02	 shr	 eax, 2
  01180	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  01187	c1 e1 1e	 shl	 ecx, 30
  0118a	0b c1		 or	 eax, ecx
  0118c	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  01193	c1 e9 0d	 shr	 ecx, 13
  01196	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  0119d	c1 e2 13	 shl	 edx, 19
  011a0	0b ca		 or	 ecx, edx
  011a2	33 c1		 xor	 eax, ecx
  011a4	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  011ab	c1 e9 16	 shr	 ecx, 22
  011ae	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  011b5	c1 e2 0a	 shl	 edx, 10
  011b8	0b ca		 or	 ecx, edx
  011ba	33 c1		 xor	 eax, ecx
  011bc	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  011c3	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  011ca	0b d1		 or	 edx, ecx
  011cc	8b ca		 mov	 ecx, edx
  011ce	23 8c 24 40 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+24]
  011d5	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  011dc	44 8b 84 24 38
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+16]
  011e4	44 23 c2	 and	 r8d, edx
  011e7	41 8b d0	 mov	 edx, r8d
  011ea	0b ca		 or	 ecx, edx
  011ec	03 c1		 add	 eax, ecx
  011ee	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  011f5	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  011fc	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  01203	03 c8		 add	 ecx, eax
  01205	8b c1		 mov	 eax, ecx
  01207	89 84 24 44 01
	00 00		 mov	 DWORD PTR S$[rsp+28], eax
  0120e	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  01215	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  0121c	03 c8		 add	 ecx, eax
  0121e	8b c1		 mov	 eax, ecx
  01220	89 84 24 34 01
	00 00		 mov	 DWORD PTR S$[rsp+12], eax

; 163  :     RND(S[3],S[4],S[5],S[6],S[7],S[0],S[1],S[2],13,0x80deb1fe);

  01227	8b 84 24 44 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+28]
  0122e	c1 e8 06	 shr	 eax, 6
  01231	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  01238	c1 e1 1a	 shl	 ecx, 26
  0123b	0b c1		 or	 eax, ecx
  0123d	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  01244	c1 e9 0b	 shr	 ecx, 11
  01247	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  0124e	c1 e2 15	 shl	 edx, 21
  01251	0b ca		 or	 ecx, edx
  01253	33 c1		 xor	 eax, ecx
  01255	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  0125c	c1 e9 19	 shr	 ecx, 25
  0125f	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  01266	c1 e2 07	 shl	 edx, 7
  01269	0b ca		 or	 ecx, edx
  0126b	33 c1		 xor	 eax, ecx
  0126d	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  01274	03 c8		 add	 ecx, eax
  01276	8b c1		 mov	 eax, ecx
  01278	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  0127f	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  01286	33 d1		 xor	 edx, ecx
  01288	8b ca		 mov	 ecx, edx
  0128a	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  01291	23 d1		 and	 edx, ecx
  01293	8b ca		 mov	 ecx, edx
  01295	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  0129c	33 d1		 xor	 edx, ecx
  0129e	8b ca		 mov	 ecx, edx
  012a0	8b 54 24 54	 mov	 edx, DWORD PTR W$[rsp+52]
  012a4	03 d0		 add	 edx, eax
  012a6	8b c2		 mov	 eax, edx
  012a8	ba fe b1 de 80	 mov	 edx, -2132889090	; ffffffff80deb1feH
  012ad	48 8d 0c 11	 lea	 rcx, QWORD PTR [rcx+rdx]
  012b1	03 c1		 add	 eax, ecx
  012b3	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  012ba	8b 84 24 34 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+12]
  012c1	c1 e8 02	 shr	 eax, 2
  012c4	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  012cb	c1 e1 1e	 shl	 ecx, 30
  012ce	0b c1		 or	 eax, ecx
  012d0	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  012d7	c1 e9 0d	 shr	 ecx, 13
  012da	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  012e1	c1 e2 13	 shl	 edx, 19
  012e4	0b ca		 or	 ecx, edx
  012e6	33 c1		 xor	 eax, ecx
  012e8	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  012ef	c1 e9 16	 shr	 ecx, 22
  012f2	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  012f9	c1 e2 0a	 shl	 edx, 10
  012fc	0b ca		 or	 ecx, edx
  012fe	33 c1		 xor	 eax, ecx
  01300	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  01307	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  0130e	0b d1		 or	 edx, ecx
  01310	8b ca		 mov	 ecx, edx
  01312	23 8c 24 3c 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+20]
  01319	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  01320	44 8b 84 24 34
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+12]
  01328	44 23 c2	 and	 r8d, edx
  0132b	41 8b d0	 mov	 edx, r8d
  0132e	0b ca		 or	 ecx, edx
  01330	03 c1		 add	 eax, ecx
  01332	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  01339	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  01340	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  01347	03 c8		 add	 ecx, eax
  01349	8b c1		 mov	 eax, ecx
  0134b	89 84 24 40 01
	00 00		 mov	 DWORD PTR S$[rsp+24], eax
  01352	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  01359	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  01360	03 c8		 add	 ecx, eax
  01362	8b c1		 mov	 eax, ecx
  01364	89 84 24 30 01
	00 00		 mov	 DWORD PTR S$[rsp+8], eax

; 164  :     RND(S[2],S[3],S[4],S[5],S[6],S[7],S[0],S[1],14,0x9bdc06a7);

  0136b	8b 84 24 40 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+24]
  01372	c1 e8 06	 shr	 eax, 6
  01375	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  0137c	c1 e1 1a	 shl	 ecx, 26
  0137f	0b c1		 or	 eax, ecx
  01381	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  01388	c1 e9 0b	 shr	 ecx, 11
  0138b	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  01392	c1 e2 15	 shl	 edx, 21
  01395	0b ca		 or	 ecx, edx
  01397	33 c1		 xor	 eax, ecx
  01399	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  013a0	c1 e9 19	 shr	 ecx, 25
  013a3	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  013aa	c1 e2 07	 shl	 edx, 7
  013ad	0b ca		 or	 ecx, edx
  013af	33 c1		 xor	 eax, ecx
  013b1	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  013b8	03 c8		 add	 ecx, eax
  013ba	8b c1		 mov	 eax, ecx
  013bc	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  013c3	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  013ca	33 d1		 xor	 edx, ecx
  013cc	8b ca		 mov	 ecx, edx
  013ce	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  013d5	23 d1		 and	 edx, ecx
  013d7	8b ca		 mov	 ecx, edx
  013d9	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  013e0	33 d1		 xor	 edx, ecx
  013e2	8b ca		 mov	 ecx, edx
  013e4	8b 54 24 58	 mov	 edx, DWORD PTR W$[rsp+56]
  013e8	03 d0		 add	 edx, eax
  013ea	8b c2		 mov	 eax, edx
  013ec	ba a7 06 dc 9b	 mov	 edx, -1680079193	; ffffffff9bdc06a7H
  013f1	48 8d 0c 11	 lea	 rcx, QWORD PTR [rcx+rdx]
  013f5	03 c1		 add	 eax, ecx
  013f7	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  013fe	8b 84 24 30 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+8]
  01405	c1 e8 02	 shr	 eax, 2
  01408	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  0140f	c1 e1 1e	 shl	 ecx, 30
  01412	0b c1		 or	 eax, ecx
  01414	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  0141b	c1 e9 0d	 shr	 ecx, 13
  0141e	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  01425	c1 e2 13	 shl	 edx, 19
  01428	0b ca		 or	 ecx, edx
  0142a	33 c1		 xor	 eax, ecx
  0142c	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  01433	c1 e9 16	 shr	 ecx, 22
  01436	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  0143d	c1 e2 0a	 shl	 edx, 10
  01440	0b ca		 or	 ecx, edx
  01442	33 c1		 xor	 eax, ecx
  01444	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  0144b	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  01452	0b d1		 or	 edx, ecx
  01454	8b ca		 mov	 ecx, edx
  01456	23 8c 24 38 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+16]
  0145d	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  01464	44 8b 84 24 30
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+8]
  0146c	44 23 c2	 and	 r8d, edx
  0146f	41 8b d0	 mov	 edx, r8d
  01472	0b ca		 or	 ecx, edx
  01474	03 c1		 add	 eax, ecx
  01476	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  0147d	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  01484	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  0148b	03 c8		 add	 ecx, eax
  0148d	8b c1		 mov	 eax, ecx
  0148f	89 84 24 3c 01
	00 00		 mov	 DWORD PTR S$[rsp+20], eax
  01496	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  0149d	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  014a4	03 c8		 add	 ecx, eax
  014a6	8b c1		 mov	 eax, ecx
  014a8	89 84 24 2c 01
	00 00		 mov	 DWORD PTR S$[rsp+4], eax

; 165  :     RND(S[1],S[2],S[3],S[4],S[5],S[6],S[7],S[0],15,0xc19bf174);

  014af	8b 84 24 3c 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+20]
  014b6	c1 e8 06	 shr	 eax, 6
  014b9	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  014c0	c1 e1 1a	 shl	 ecx, 26
  014c3	0b c1		 or	 eax, ecx
  014c5	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  014cc	c1 e9 0b	 shr	 ecx, 11
  014cf	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  014d6	c1 e2 15	 shl	 edx, 21
  014d9	0b ca		 or	 ecx, edx
  014db	33 c1		 xor	 eax, ecx
  014dd	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  014e4	c1 e9 19	 shr	 ecx, 25
  014e7	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  014ee	c1 e2 07	 shl	 edx, 7
  014f1	0b ca		 or	 ecx, edx
  014f3	33 c1		 xor	 eax, ecx
  014f5	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  014fc	03 c8		 add	 ecx, eax
  014fe	8b c1		 mov	 eax, ecx
  01500	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  01507	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  0150e	33 d1		 xor	 edx, ecx
  01510	8b ca		 mov	 ecx, edx
  01512	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  01519	23 d1		 and	 edx, ecx
  0151b	8b ca		 mov	 ecx, edx
  0151d	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  01524	33 d1		 xor	 edx, ecx
  01526	8b ca		 mov	 ecx, edx
  01528	8b 54 24 5c	 mov	 edx, DWORD PTR W$[rsp+60]
  0152c	03 d0		 add	 edx, eax
  0152e	8b c2		 mov	 eax, edx
  01530	ba 74 f1 9b c1	 mov	 edx, -1046744716	; ffffffffc19bf174H
  01535	48 8d 0c 11	 lea	 rcx, QWORD PTR [rcx+rdx]
  01539	03 c1		 add	 eax, ecx
  0153b	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  01542	8b 84 24 2c 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+4]
  01549	c1 e8 02	 shr	 eax, 2
  0154c	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  01553	c1 e1 1e	 shl	 ecx, 30
  01556	0b c1		 or	 eax, ecx
  01558	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  0155f	c1 e9 0d	 shr	 ecx, 13
  01562	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  01569	c1 e2 13	 shl	 edx, 19
  0156c	0b ca		 or	 ecx, edx
  0156e	33 c1		 xor	 eax, ecx
  01570	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  01577	c1 e9 16	 shr	 ecx, 22
  0157a	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  01581	c1 e2 0a	 shl	 edx, 10
  01584	0b ca		 or	 ecx, edx
  01586	33 c1		 xor	 eax, ecx
  01588	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  0158f	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  01596	0b d1		 or	 edx, ecx
  01598	8b ca		 mov	 ecx, edx
  0159a	23 8c 24 34 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+12]
  015a1	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  015a8	44 8b 84 24 2c
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+4]
  015b0	44 23 c2	 and	 r8d, edx
  015b3	41 8b d0	 mov	 edx, r8d
  015b6	0b ca		 or	 ecx, edx
  015b8	03 c1		 add	 eax, ecx
  015ba	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  015c1	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  015c8	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  015cf	03 c8		 add	 ecx, eax
  015d1	8b c1		 mov	 eax, ecx
  015d3	89 84 24 38 01
	00 00		 mov	 DWORD PTR S$[rsp+16], eax
  015da	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  015e1	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  015e8	03 c8		 add	 ecx, eax
  015ea	8b c1		 mov	 eax, ecx
  015ec	89 84 24 28 01
	00 00		 mov	 DWORD PTR S$[rsp], eax

; 166  :     RND(S[0],S[1],S[2],S[3],S[4],S[5],S[6],S[7],16,0xe49b69c1);

  015f3	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+16]
  015fa	c1 e8 06	 shr	 eax, 6
  015fd	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  01604	c1 e1 1a	 shl	 ecx, 26
  01607	0b c1		 or	 eax, ecx
  01609	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  01610	c1 e9 0b	 shr	 ecx, 11
  01613	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  0161a	c1 e2 15	 shl	 edx, 21
  0161d	0b ca		 or	 ecx, edx
  0161f	33 c1		 xor	 eax, ecx
  01621	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  01628	c1 e9 19	 shr	 ecx, 25
  0162b	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  01632	c1 e2 07	 shl	 edx, 7
  01635	0b ca		 or	 ecx, edx
  01637	33 c1		 xor	 eax, ecx
  01639	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  01640	03 c8		 add	 ecx, eax
  01642	8b c1		 mov	 eax, ecx
  01644	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  0164b	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  01652	33 d1		 xor	 edx, ecx
  01654	8b ca		 mov	 ecx, edx
  01656	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  0165d	23 d1		 and	 edx, ecx
  0165f	8b ca		 mov	 ecx, edx
  01661	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  01668	33 d1		 xor	 edx, ecx
  0166a	8b ca		 mov	 ecx, edx
  0166c	8b 54 24 60	 mov	 edx, DWORD PTR W$[rsp+64]
  01670	03 d0		 add	 edx, eax
  01672	8b c2		 mov	 eax, edx
  01674	ba c1 69 9b e4	 mov	 edx, -459576895		; ffffffffe49b69c1H
  01679	48 8d 0c 11	 lea	 rcx, QWORD PTR [rcx+rdx]
  0167d	03 c1		 add	 eax, ecx
  0167f	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  01686	8b 84 24 28 01
	00 00		 mov	 eax, DWORD PTR S$[rsp]
  0168d	c1 e8 02	 shr	 eax, 2
  01690	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  01697	c1 e1 1e	 shl	 ecx, 30
  0169a	0b c1		 or	 eax, ecx
  0169c	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  016a3	c1 e9 0d	 shr	 ecx, 13
  016a6	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  016ad	c1 e2 13	 shl	 edx, 19
  016b0	0b ca		 or	 ecx, edx
  016b2	33 c1		 xor	 eax, ecx
  016b4	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  016bb	c1 e9 16	 shr	 ecx, 22
  016be	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  016c5	c1 e2 0a	 shl	 edx, 10
  016c8	0b ca		 or	 ecx, edx
  016ca	33 c1		 xor	 eax, ecx
  016cc	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  016d3	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  016da	0b d1		 or	 edx, ecx
  016dc	8b ca		 mov	 ecx, edx
  016de	23 8c 24 30 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+8]
  016e5	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  016ec	44 8b 84 24 28
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp]
  016f4	44 23 c2	 and	 r8d, edx
  016f7	41 8b d0	 mov	 edx, r8d
  016fa	0b ca		 or	 ecx, edx
  016fc	03 c1		 add	 eax, ecx
  016fe	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  01705	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  0170c	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  01713	03 c8		 add	 ecx, eax
  01715	8b c1		 mov	 eax, ecx
  01717	89 84 24 34 01
	00 00		 mov	 DWORD PTR S$[rsp+12], eax
  0171e	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  01725	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  0172c	03 c8		 add	 ecx, eax
  0172e	8b c1		 mov	 eax, ecx
  01730	89 84 24 44 01
	00 00		 mov	 DWORD PTR S$[rsp+28], eax

; 167  :     RND(S[7],S[0],S[1],S[2],S[3],S[4],S[5],S[6],17,0xefbe4786);

  01737	8b 84 24 34 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+12]
  0173e	c1 e8 06	 shr	 eax, 6
  01741	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  01748	c1 e1 1a	 shl	 ecx, 26
  0174b	0b c1		 or	 eax, ecx
  0174d	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  01754	c1 e9 0b	 shr	 ecx, 11
  01757	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  0175e	c1 e2 15	 shl	 edx, 21
  01761	0b ca		 or	 ecx, edx
  01763	33 c1		 xor	 eax, ecx
  01765	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  0176c	c1 e9 19	 shr	 ecx, 25
  0176f	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  01776	c1 e2 07	 shl	 edx, 7
  01779	0b ca		 or	 ecx, edx
  0177b	33 c1		 xor	 eax, ecx
  0177d	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  01784	03 c8		 add	 ecx, eax
  01786	8b c1		 mov	 eax, ecx
  01788	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  0178f	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  01796	33 d1		 xor	 edx, ecx
  01798	8b ca		 mov	 ecx, edx
  0179a	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  017a1	23 d1		 and	 edx, ecx
  017a3	8b ca		 mov	 ecx, edx
  017a5	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  017ac	33 d1		 xor	 edx, ecx
  017ae	8b ca		 mov	 ecx, edx
  017b0	8b 54 24 64	 mov	 edx, DWORD PTR W$[rsp+68]
  017b4	03 d0		 add	 edx, eax
  017b6	8b c2		 mov	 eax, edx
  017b8	ba 86 47 be ef	 mov	 edx, -272742522		; ffffffffefbe4786H
  017bd	48 8d 0c 11	 lea	 rcx, QWORD PTR [rcx+rdx]
  017c1	03 c1		 add	 eax, ecx
  017c3	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  017ca	8b 84 24 44 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+28]
  017d1	c1 e8 02	 shr	 eax, 2
  017d4	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  017db	c1 e1 1e	 shl	 ecx, 30
  017de	0b c1		 or	 eax, ecx
  017e0	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  017e7	c1 e9 0d	 shr	 ecx, 13
  017ea	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  017f1	c1 e2 13	 shl	 edx, 19
  017f4	0b ca		 or	 ecx, edx
  017f6	33 c1		 xor	 eax, ecx
  017f8	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  017ff	c1 e9 16	 shr	 ecx, 22
  01802	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  01809	c1 e2 0a	 shl	 edx, 10
  0180c	0b ca		 or	 ecx, edx
  0180e	33 c1		 xor	 eax, ecx
  01810	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  01817	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  0181e	0b d1		 or	 edx, ecx
  01820	8b ca		 mov	 ecx, edx
  01822	23 8c 24 2c 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+4]
  01829	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  01830	44 8b 84 24 44
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+28]
  01838	44 23 c2	 and	 r8d, edx
  0183b	41 8b d0	 mov	 edx, r8d
  0183e	0b ca		 or	 ecx, edx
  01840	03 c1		 add	 eax, ecx
  01842	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  01849	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  01850	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  01857	03 c8		 add	 ecx, eax
  01859	8b c1		 mov	 eax, ecx
  0185b	89 84 24 30 01
	00 00		 mov	 DWORD PTR S$[rsp+8], eax
  01862	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  01869	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  01870	03 c8		 add	 ecx, eax
  01872	8b c1		 mov	 eax, ecx
  01874	89 84 24 40 01
	00 00		 mov	 DWORD PTR S$[rsp+24], eax

; 168  :     RND(S[6],S[7],S[0],S[1],S[2],S[3],S[4],S[5],18,0x0fc19dc6);

  0187b	8b 84 24 30 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+8]
  01882	c1 e8 06	 shr	 eax, 6
  01885	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  0188c	c1 e1 1a	 shl	 ecx, 26
  0188f	0b c1		 or	 eax, ecx
  01891	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  01898	c1 e9 0b	 shr	 ecx, 11
  0189b	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  018a2	c1 e2 15	 shl	 edx, 21
  018a5	0b ca		 or	 ecx, edx
  018a7	33 c1		 xor	 eax, ecx
  018a9	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  018b0	c1 e9 19	 shr	 ecx, 25
  018b3	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  018ba	c1 e2 07	 shl	 edx, 7
  018bd	0b ca		 or	 ecx, edx
  018bf	33 c1		 xor	 eax, ecx
  018c1	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  018c8	03 c8		 add	 ecx, eax
  018ca	8b c1		 mov	 eax, ecx
  018cc	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  018d3	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  018da	33 d1		 xor	 edx, ecx
  018dc	8b ca		 mov	 ecx, edx
  018de	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  018e5	23 d1		 and	 edx, ecx
  018e7	8b ca		 mov	 ecx, edx
  018e9	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  018f0	33 d1		 xor	 edx, ecx
  018f2	8b ca		 mov	 ecx, edx
  018f4	8b 54 24 68	 mov	 edx, DWORD PTR W$[rsp+72]
  018f8	03 d0		 add	 edx, eax
  018fa	8b c2		 mov	 eax, edx
  018fc	8d 84 01 c6 9d
	c1 0f		 lea	 eax, DWORD PTR [rcx+rax+264347078]
  01903	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  0190a	8b 84 24 40 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+24]
  01911	c1 e8 02	 shr	 eax, 2
  01914	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  0191b	c1 e1 1e	 shl	 ecx, 30
  0191e	0b c1		 or	 eax, ecx
  01920	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  01927	c1 e9 0d	 shr	 ecx, 13
  0192a	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  01931	c1 e2 13	 shl	 edx, 19
  01934	0b ca		 or	 ecx, edx
  01936	33 c1		 xor	 eax, ecx
  01938	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  0193f	c1 e9 16	 shr	 ecx, 22
  01942	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  01949	c1 e2 0a	 shl	 edx, 10
  0194c	0b ca		 or	 ecx, edx
  0194e	33 c1		 xor	 eax, ecx
  01950	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  01957	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  0195e	0b d1		 or	 edx, ecx
  01960	8b ca		 mov	 ecx, edx
  01962	23 8c 24 28 01
	00 00		 and	 ecx, DWORD PTR S$[rsp]
  01969	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  01970	44 8b 84 24 40
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+24]
  01978	44 23 c2	 and	 r8d, edx
  0197b	41 8b d0	 mov	 edx, r8d
  0197e	0b ca		 or	 ecx, edx
  01980	03 c1		 add	 eax, ecx
  01982	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  01989	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  01990	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  01997	03 c8		 add	 ecx, eax
  01999	8b c1		 mov	 eax, ecx
  0199b	89 84 24 2c 01
	00 00		 mov	 DWORD PTR S$[rsp+4], eax
  019a2	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  019a9	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  019b0	03 c8		 add	 ecx, eax
  019b2	8b c1		 mov	 eax, ecx
  019b4	89 84 24 3c 01
	00 00		 mov	 DWORD PTR S$[rsp+20], eax

; 169  :     RND(S[5],S[6],S[7],S[0],S[1],S[2],S[3],S[4],19,0x240ca1cc);

  019bb	8b 84 24 2c 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+4]
  019c2	c1 e8 06	 shr	 eax, 6
  019c5	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  019cc	c1 e1 1a	 shl	 ecx, 26
  019cf	0b c1		 or	 eax, ecx
  019d1	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  019d8	c1 e9 0b	 shr	 ecx, 11
  019db	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  019e2	c1 e2 15	 shl	 edx, 21
  019e5	0b ca		 or	 ecx, edx
  019e7	33 c1		 xor	 eax, ecx
  019e9	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  019f0	c1 e9 19	 shr	 ecx, 25
  019f3	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  019fa	c1 e2 07	 shl	 edx, 7
  019fd	0b ca		 or	 ecx, edx
  019ff	33 c1		 xor	 eax, ecx
  01a01	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  01a08	03 c8		 add	 ecx, eax
  01a0a	8b c1		 mov	 eax, ecx
  01a0c	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  01a13	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  01a1a	33 d1		 xor	 edx, ecx
  01a1c	8b ca		 mov	 ecx, edx
  01a1e	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  01a25	23 d1		 and	 edx, ecx
  01a27	8b ca		 mov	 ecx, edx
  01a29	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  01a30	33 d1		 xor	 edx, ecx
  01a32	8b ca		 mov	 ecx, edx
  01a34	8b 54 24 6c	 mov	 edx, DWORD PTR W$[rsp+76]
  01a38	03 d0		 add	 edx, eax
  01a3a	8b c2		 mov	 eax, edx
  01a3c	8d 84 01 cc a1
	0c 24		 lea	 eax, DWORD PTR [rcx+rax+604807628]
  01a43	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  01a4a	8b 84 24 3c 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+20]
  01a51	c1 e8 02	 shr	 eax, 2
  01a54	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  01a5b	c1 e1 1e	 shl	 ecx, 30
  01a5e	0b c1		 or	 eax, ecx
  01a60	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  01a67	c1 e9 0d	 shr	 ecx, 13
  01a6a	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  01a71	c1 e2 13	 shl	 edx, 19
  01a74	0b ca		 or	 ecx, edx
  01a76	33 c1		 xor	 eax, ecx
  01a78	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  01a7f	c1 e9 16	 shr	 ecx, 22
  01a82	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  01a89	c1 e2 0a	 shl	 edx, 10
  01a8c	0b ca		 or	 ecx, edx
  01a8e	33 c1		 xor	 eax, ecx
  01a90	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  01a97	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  01a9e	0b d1		 or	 edx, ecx
  01aa0	8b ca		 mov	 ecx, edx
  01aa2	23 8c 24 44 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+28]
  01aa9	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  01ab0	44 8b 84 24 3c
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+20]
  01ab8	44 23 c2	 and	 r8d, edx
  01abb	41 8b d0	 mov	 edx, r8d
  01abe	0b ca		 or	 ecx, edx
  01ac0	03 c1		 add	 eax, ecx
  01ac2	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  01ac9	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  01ad0	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  01ad7	03 c8		 add	 ecx, eax
  01ad9	8b c1		 mov	 eax, ecx
  01adb	89 84 24 28 01
	00 00		 mov	 DWORD PTR S$[rsp], eax
  01ae2	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  01ae9	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  01af0	03 c8		 add	 ecx, eax
  01af2	8b c1		 mov	 eax, ecx
  01af4	89 84 24 38 01
	00 00		 mov	 DWORD PTR S$[rsp+16], eax

; 170  :     RND(S[4],S[5],S[6],S[7],S[0],S[1],S[2],S[3],20,0x2de92c6f);

  01afb	8b 84 24 28 01
	00 00		 mov	 eax, DWORD PTR S$[rsp]
  01b02	c1 e8 06	 shr	 eax, 6
  01b05	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  01b0c	c1 e1 1a	 shl	 ecx, 26
  01b0f	0b c1		 or	 eax, ecx
  01b11	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  01b18	c1 e9 0b	 shr	 ecx, 11
  01b1b	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  01b22	c1 e2 15	 shl	 edx, 21
  01b25	0b ca		 or	 ecx, edx
  01b27	33 c1		 xor	 eax, ecx
  01b29	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  01b30	c1 e9 19	 shr	 ecx, 25
  01b33	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  01b3a	c1 e2 07	 shl	 edx, 7
  01b3d	0b ca		 or	 ecx, edx
  01b3f	33 c1		 xor	 eax, ecx
  01b41	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  01b48	03 c8		 add	 ecx, eax
  01b4a	8b c1		 mov	 eax, ecx
  01b4c	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  01b53	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  01b5a	33 d1		 xor	 edx, ecx
  01b5c	8b ca		 mov	 ecx, edx
  01b5e	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  01b65	23 d1		 and	 edx, ecx
  01b67	8b ca		 mov	 ecx, edx
  01b69	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  01b70	33 d1		 xor	 edx, ecx
  01b72	8b ca		 mov	 ecx, edx
  01b74	8b 54 24 70	 mov	 edx, DWORD PTR W$[rsp+80]
  01b78	03 d0		 add	 edx, eax
  01b7a	8b c2		 mov	 eax, edx
  01b7c	8d 84 01 6f 2c
	e9 2d		 lea	 eax, DWORD PTR [rcx+rax+770255983]
  01b83	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  01b8a	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+16]
  01b91	c1 e8 02	 shr	 eax, 2
  01b94	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  01b9b	c1 e1 1e	 shl	 ecx, 30
  01b9e	0b c1		 or	 eax, ecx
  01ba0	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  01ba7	c1 e9 0d	 shr	 ecx, 13
  01baa	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  01bb1	c1 e2 13	 shl	 edx, 19
  01bb4	0b ca		 or	 ecx, edx
  01bb6	33 c1		 xor	 eax, ecx
  01bb8	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  01bbf	c1 e9 16	 shr	 ecx, 22
  01bc2	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  01bc9	c1 e2 0a	 shl	 edx, 10
  01bcc	0b ca		 or	 ecx, edx
  01bce	33 c1		 xor	 eax, ecx
  01bd0	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  01bd7	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  01bde	0b d1		 or	 edx, ecx
  01be0	8b ca		 mov	 ecx, edx
  01be2	23 8c 24 40 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+24]
  01be9	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  01bf0	44 8b 84 24 38
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+16]
  01bf8	44 23 c2	 and	 r8d, edx
  01bfb	41 8b d0	 mov	 edx, r8d
  01bfe	0b ca		 or	 ecx, edx
  01c00	03 c1		 add	 eax, ecx
  01c02	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  01c09	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  01c10	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  01c17	03 c8		 add	 ecx, eax
  01c19	8b c1		 mov	 eax, ecx
  01c1b	89 84 24 44 01
	00 00		 mov	 DWORD PTR S$[rsp+28], eax
  01c22	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  01c29	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  01c30	03 c8		 add	 ecx, eax
  01c32	8b c1		 mov	 eax, ecx
  01c34	89 84 24 34 01
	00 00		 mov	 DWORD PTR S$[rsp+12], eax

; 171  :     RND(S[3],S[4],S[5],S[6],S[7],S[0],S[1],S[2],21,0x4a7484aa);

  01c3b	8b 84 24 44 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+28]
  01c42	c1 e8 06	 shr	 eax, 6
  01c45	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  01c4c	c1 e1 1a	 shl	 ecx, 26
  01c4f	0b c1		 or	 eax, ecx
  01c51	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  01c58	c1 e9 0b	 shr	 ecx, 11
  01c5b	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  01c62	c1 e2 15	 shl	 edx, 21
  01c65	0b ca		 or	 ecx, edx
  01c67	33 c1		 xor	 eax, ecx
  01c69	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  01c70	c1 e9 19	 shr	 ecx, 25
  01c73	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  01c7a	c1 e2 07	 shl	 edx, 7
  01c7d	0b ca		 or	 ecx, edx
  01c7f	33 c1		 xor	 eax, ecx
  01c81	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  01c88	03 c8		 add	 ecx, eax
  01c8a	8b c1		 mov	 eax, ecx
  01c8c	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  01c93	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  01c9a	33 d1		 xor	 edx, ecx
  01c9c	8b ca		 mov	 ecx, edx
  01c9e	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  01ca5	23 d1		 and	 edx, ecx
  01ca7	8b ca		 mov	 ecx, edx
  01ca9	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  01cb0	33 d1		 xor	 edx, ecx
  01cb2	8b ca		 mov	 ecx, edx
  01cb4	8b 54 24 74	 mov	 edx, DWORD PTR W$[rsp+84]
  01cb8	03 d0		 add	 edx, eax
  01cba	8b c2		 mov	 eax, edx
  01cbc	8d 84 01 aa 84
	74 4a		 lea	 eax, DWORD PTR [rcx+rax+1249150122]
  01cc3	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  01cca	8b 84 24 34 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+12]
  01cd1	c1 e8 02	 shr	 eax, 2
  01cd4	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  01cdb	c1 e1 1e	 shl	 ecx, 30
  01cde	0b c1		 or	 eax, ecx
  01ce0	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  01ce7	c1 e9 0d	 shr	 ecx, 13
  01cea	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  01cf1	c1 e2 13	 shl	 edx, 19
  01cf4	0b ca		 or	 ecx, edx
  01cf6	33 c1		 xor	 eax, ecx
  01cf8	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  01cff	c1 e9 16	 shr	 ecx, 22
  01d02	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  01d09	c1 e2 0a	 shl	 edx, 10
  01d0c	0b ca		 or	 ecx, edx
  01d0e	33 c1		 xor	 eax, ecx
  01d10	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  01d17	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  01d1e	0b d1		 or	 edx, ecx
  01d20	8b ca		 mov	 ecx, edx
  01d22	23 8c 24 3c 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+20]
  01d29	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  01d30	44 8b 84 24 34
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+12]
  01d38	44 23 c2	 and	 r8d, edx
  01d3b	41 8b d0	 mov	 edx, r8d
  01d3e	0b ca		 or	 ecx, edx
  01d40	03 c1		 add	 eax, ecx
  01d42	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  01d49	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  01d50	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  01d57	03 c8		 add	 ecx, eax
  01d59	8b c1		 mov	 eax, ecx
  01d5b	89 84 24 40 01
	00 00		 mov	 DWORD PTR S$[rsp+24], eax
  01d62	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  01d69	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  01d70	03 c8		 add	 ecx, eax
  01d72	8b c1		 mov	 eax, ecx
  01d74	89 84 24 30 01
	00 00		 mov	 DWORD PTR S$[rsp+8], eax

; 172  :     RND(S[2],S[3],S[4],S[5],S[6],S[7],S[0],S[1],22,0x5cb0a9dc);

  01d7b	8b 84 24 40 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+24]
  01d82	c1 e8 06	 shr	 eax, 6
  01d85	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  01d8c	c1 e1 1a	 shl	 ecx, 26
  01d8f	0b c1		 or	 eax, ecx
  01d91	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  01d98	c1 e9 0b	 shr	 ecx, 11
  01d9b	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  01da2	c1 e2 15	 shl	 edx, 21
  01da5	0b ca		 or	 ecx, edx
  01da7	33 c1		 xor	 eax, ecx
  01da9	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  01db0	c1 e9 19	 shr	 ecx, 25
  01db3	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  01dba	c1 e2 07	 shl	 edx, 7
  01dbd	0b ca		 or	 ecx, edx
  01dbf	33 c1		 xor	 eax, ecx
  01dc1	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  01dc8	03 c8		 add	 ecx, eax
  01dca	8b c1		 mov	 eax, ecx
  01dcc	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  01dd3	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  01dda	33 d1		 xor	 edx, ecx
  01ddc	8b ca		 mov	 ecx, edx
  01dde	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  01de5	23 d1		 and	 edx, ecx
  01de7	8b ca		 mov	 ecx, edx
  01de9	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  01df0	33 d1		 xor	 edx, ecx
  01df2	8b ca		 mov	 ecx, edx
  01df4	8b 54 24 78	 mov	 edx, DWORD PTR W$[rsp+88]
  01df8	03 d0		 add	 edx, eax
  01dfa	8b c2		 mov	 eax, edx
  01dfc	8d 84 01 dc a9
	b0 5c		 lea	 eax, DWORD PTR [rcx+rax+1555081692]
  01e03	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  01e0a	8b 84 24 30 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+8]
  01e11	c1 e8 02	 shr	 eax, 2
  01e14	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  01e1b	c1 e1 1e	 shl	 ecx, 30
  01e1e	0b c1		 or	 eax, ecx
  01e20	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  01e27	c1 e9 0d	 shr	 ecx, 13
  01e2a	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  01e31	c1 e2 13	 shl	 edx, 19
  01e34	0b ca		 or	 ecx, edx
  01e36	33 c1		 xor	 eax, ecx
  01e38	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  01e3f	c1 e9 16	 shr	 ecx, 22
  01e42	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  01e49	c1 e2 0a	 shl	 edx, 10
  01e4c	0b ca		 or	 ecx, edx
  01e4e	33 c1		 xor	 eax, ecx
  01e50	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  01e57	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  01e5e	0b d1		 or	 edx, ecx
  01e60	8b ca		 mov	 ecx, edx
  01e62	23 8c 24 38 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+16]
  01e69	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  01e70	44 8b 84 24 30
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+8]
  01e78	44 23 c2	 and	 r8d, edx
  01e7b	41 8b d0	 mov	 edx, r8d
  01e7e	0b ca		 or	 ecx, edx
  01e80	03 c1		 add	 eax, ecx
  01e82	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  01e89	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  01e90	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  01e97	03 c8		 add	 ecx, eax
  01e99	8b c1		 mov	 eax, ecx
  01e9b	89 84 24 3c 01
	00 00		 mov	 DWORD PTR S$[rsp+20], eax
  01ea2	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  01ea9	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  01eb0	03 c8		 add	 ecx, eax
  01eb2	8b c1		 mov	 eax, ecx
  01eb4	89 84 24 2c 01
	00 00		 mov	 DWORD PTR S$[rsp+4], eax

; 173  :     RND(S[1],S[2],S[3],S[4],S[5],S[6],S[7],S[0],23,0x76f988da);

  01ebb	8b 84 24 3c 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+20]
  01ec2	c1 e8 06	 shr	 eax, 6
  01ec5	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  01ecc	c1 e1 1a	 shl	 ecx, 26
  01ecf	0b c1		 or	 eax, ecx
  01ed1	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  01ed8	c1 e9 0b	 shr	 ecx, 11
  01edb	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  01ee2	c1 e2 15	 shl	 edx, 21
  01ee5	0b ca		 or	 ecx, edx
  01ee7	33 c1		 xor	 eax, ecx
  01ee9	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  01ef0	c1 e9 19	 shr	 ecx, 25
  01ef3	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  01efa	c1 e2 07	 shl	 edx, 7
  01efd	0b ca		 or	 ecx, edx
  01eff	33 c1		 xor	 eax, ecx
  01f01	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  01f08	03 c8		 add	 ecx, eax
  01f0a	8b c1		 mov	 eax, ecx
  01f0c	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  01f13	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  01f1a	33 d1		 xor	 edx, ecx
  01f1c	8b ca		 mov	 ecx, edx
  01f1e	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  01f25	23 d1		 and	 edx, ecx
  01f27	8b ca		 mov	 ecx, edx
  01f29	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  01f30	33 d1		 xor	 edx, ecx
  01f32	8b ca		 mov	 ecx, edx
  01f34	8b 54 24 7c	 mov	 edx, DWORD PTR W$[rsp+92]
  01f38	03 d0		 add	 edx, eax
  01f3a	8b c2		 mov	 eax, edx
  01f3c	8d 84 01 da 88
	f9 76		 lea	 eax, DWORD PTR [rcx+rax+1996064986]
  01f43	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  01f4a	8b 84 24 2c 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+4]
  01f51	c1 e8 02	 shr	 eax, 2
  01f54	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  01f5b	c1 e1 1e	 shl	 ecx, 30
  01f5e	0b c1		 or	 eax, ecx
  01f60	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  01f67	c1 e9 0d	 shr	 ecx, 13
  01f6a	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  01f71	c1 e2 13	 shl	 edx, 19
  01f74	0b ca		 or	 ecx, edx
  01f76	33 c1		 xor	 eax, ecx
  01f78	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  01f7f	c1 e9 16	 shr	 ecx, 22
  01f82	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  01f89	c1 e2 0a	 shl	 edx, 10
  01f8c	0b ca		 or	 ecx, edx
  01f8e	33 c1		 xor	 eax, ecx
  01f90	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  01f97	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  01f9e	0b d1		 or	 edx, ecx
  01fa0	8b ca		 mov	 ecx, edx
  01fa2	23 8c 24 34 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+12]
  01fa9	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  01fb0	44 8b 84 24 2c
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+4]
  01fb8	44 23 c2	 and	 r8d, edx
  01fbb	41 8b d0	 mov	 edx, r8d
  01fbe	0b ca		 or	 ecx, edx
  01fc0	03 c1		 add	 eax, ecx
  01fc2	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  01fc9	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  01fd0	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  01fd7	03 c8		 add	 ecx, eax
  01fd9	8b c1		 mov	 eax, ecx
  01fdb	89 84 24 38 01
	00 00		 mov	 DWORD PTR S$[rsp+16], eax
  01fe2	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  01fe9	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  01ff0	03 c8		 add	 ecx, eax
  01ff2	8b c1		 mov	 eax, ecx
  01ff4	89 84 24 28 01
	00 00		 mov	 DWORD PTR S$[rsp], eax

; 174  :     RND(S[0],S[1],S[2],S[3],S[4],S[5],S[6],S[7],24,0x983e5152);

  01ffb	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+16]
  02002	c1 e8 06	 shr	 eax, 6
  02005	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  0200c	c1 e1 1a	 shl	 ecx, 26
  0200f	0b c1		 or	 eax, ecx
  02011	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  02018	c1 e9 0b	 shr	 ecx, 11
  0201b	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  02022	c1 e2 15	 shl	 edx, 21
  02025	0b ca		 or	 ecx, edx
  02027	33 c1		 xor	 eax, ecx
  02029	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  02030	c1 e9 19	 shr	 ecx, 25
  02033	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  0203a	c1 e2 07	 shl	 edx, 7
  0203d	0b ca		 or	 ecx, edx
  0203f	33 c1		 xor	 eax, ecx
  02041	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  02048	03 c8		 add	 ecx, eax
  0204a	8b c1		 mov	 eax, ecx
  0204c	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  02053	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  0205a	33 d1		 xor	 edx, ecx
  0205c	8b ca		 mov	 ecx, edx
  0205e	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  02065	23 d1		 and	 edx, ecx
  02067	8b ca		 mov	 ecx, edx
  02069	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  02070	33 d1		 xor	 edx, ecx
  02072	8b ca		 mov	 ecx, edx
  02074	8b 94 24 80 00
	00 00		 mov	 edx, DWORD PTR W$[rsp+96]
  0207b	03 d0		 add	 edx, eax
  0207d	8b c2		 mov	 eax, edx
  0207f	ba 52 51 3e 98	 mov	 edx, -1740746414	; ffffffff983e5152H
  02084	48 8d 0c 11	 lea	 rcx, QWORD PTR [rcx+rdx]
  02088	03 c1		 add	 eax, ecx
  0208a	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  02091	8b 84 24 28 01
	00 00		 mov	 eax, DWORD PTR S$[rsp]
  02098	c1 e8 02	 shr	 eax, 2
  0209b	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  020a2	c1 e1 1e	 shl	 ecx, 30
  020a5	0b c1		 or	 eax, ecx
  020a7	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  020ae	c1 e9 0d	 shr	 ecx, 13
  020b1	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  020b8	c1 e2 13	 shl	 edx, 19
  020bb	0b ca		 or	 ecx, edx
  020bd	33 c1		 xor	 eax, ecx
  020bf	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  020c6	c1 e9 16	 shr	 ecx, 22
  020c9	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  020d0	c1 e2 0a	 shl	 edx, 10
  020d3	0b ca		 or	 ecx, edx
  020d5	33 c1		 xor	 eax, ecx
  020d7	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  020de	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  020e5	0b d1		 or	 edx, ecx
  020e7	8b ca		 mov	 ecx, edx
  020e9	23 8c 24 30 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+8]
  020f0	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  020f7	44 8b 84 24 28
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp]
  020ff	44 23 c2	 and	 r8d, edx
  02102	41 8b d0	 mov	 edx, r8d
  02105	0b ca		 or	 ecx, edx
  02107	03 c1		 add	 eax, ecx
  02109	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  02110	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  02117	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  0211e	03 c8		 add	 ecx, eax
  02120	8b c1		 mov	 eax, ecx
  02122	89 84 24 34 01
	00 00		 mov	 DWORD PTR S$[rsp+12], eax
  02129	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  02130	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  02137	03 c8		 add	 ecx, eax
  02139	8b c1		 mov	 eax, ecx
  0213b	89 84 24 44 01
	00 00		 mov	 DWORD PTR S$[rsp+28], eax

; 175  :     RND(S[7],S[0],S[1],S[2],S[3],S[4],S[5],S[6],25,0xa831c66d);

  02142	8b 84 24 34 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+12]
  02149	c1 e8 06	 shr	 eax, 6
  0214c	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  02153	c1 e1 1a	 shl	 ecx, 26
  02156	0b c1		 or	 eax, ecx
  02158	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  0215f	c1 e9 0b	 shr	 ecx, 11
  02162	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  02169	c1 e2 15	 shl	 edx, 21
  0216c	0b ca		 or	 ecx, edx
  0216e	33 c1		 xor	 eax, ecx
  02170	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  02177	c1 e9 19	 shr	 ecx, 25
  0217a	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  02181	c1 e2 07	 shl	 edx, 7
  02184	0b ca		 or	 ecx, edx
  02186	33 c1		 xor	 eax, ecx
  02188	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  0218f	03 c8		 add	 ecx, eax
  02191	8b c1		 mov	 eax, ecx
  02193	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  0219a	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  021a1	33 d1		 xor	 edx, ecx
  021a3	8b ca		 mov	 ecx, edx
  021a5	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  021ac	23 d1		 and	 edx, ecx
  021ae	8b ca		 mov	 ecx, edx
  021b0	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  021b7	33 d1		 xor	 edx, ecx
  021b9	8b ca		 mov	 ecx, edx
  021bb	8b 94 24 84 00
	00 00		 mov	 edx, DWORD PTR W$[rsp+100]
  021c2	03 d0		 add	 edx, eax
  021c4	8b c2		 mov	 eax, edx
  021c6	ba 6d c6 31 a8	 mov	 edx, -1473132947	; ffffffffa831c66dH
  021cb	48 8d 0c 11	 lea	 rcx, QWORD PTR [rcx+rdx]
  021cf	03 c1		 add	 eax, ecx
  021d1	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  021d8	8b 84 24 44 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+28]
  021df	c1 e8 02	 shr	 eax, 2
  021e2	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  021e9	c1 e1 1e	 shl	 ecx, 30
  021ec	0b c1		 or	 eax, ecx
  021ee	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  021f5	c1 e9 0d	 shr	 ecx, 13
  021f8	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  021ff	c1 e2 13	 shl	 edx, 19
  02202	0b ca		 or	 ecx, edx
  02204	33 c1		 xor	 eax, ecx
  02206	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  0220d	c1 e9 16	 shr	 ecx, 22
  02210	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  02217	c1 e2 0a	 shl	 edx, 10
  0221a	0b ca		 or	 ecx, edx
  0221c	33 c1		 xor	 eax, ecx
  0221e	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  02225	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  0222c	0b d1		 or	 edx, ecx
  0222e	8b ca		 mov	 ecx, edx
  02230	23 8c 24 2c 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+4]
  02237	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  0223e	44 8b 84 24 44
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+28]
  02246	44 23 c2	 and	 r8d, edx
  02249	41 8b d0	 mov	 edx, r8d
  0224c	0b ca		 or	 ecx, edx
  0224e	03 c1		 add	 eax, ecx
  02250	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  02257	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  0225e	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  02265	03 c8		 add	 ecx, eax
  02267	8b c1		 mov	 eax, ecx
  02269	89 84 24 30 01
	00 00		 mov	 DWORD PTR S$[rsp+8], eax
  02270	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  02277	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  0227e	03 c8		 add	 ecx, eax
  02280	8b c1		 mov	 eax, ecx
  02282	89 84 24 40 01
	00 00		 mov	 DWORD PTR S$[rsp+24], eax

; 176  :     RND(S[6],S[7],S[0],S[1],S[2],S[3],S[4],S[5],26,0xb00327c8);

  02289	8b 84 24 30 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+8]
  02290	c1 e8 06	 shr	 eax, 6
  02293	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  0229a	c1 e1 1a	 shl	 ecx, 26
  0229d	0b c1		 or	 eax, ecx
  0229f	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  022a6	c1 e9 0b	 shr	 ecx, 11
  022a9	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  022b0	c1 e2 15	 shl	 edx, 21
  022b3	0b ca		 or	 ecx, edx
  022b5	33 c1		 xor	 eax, ecx
  022b7	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  022be	c1 e9 19	 shr	 ecx, 25
  022c1	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  022c8	c1 e2 07	 shl	 edx, 7
  022cb	0b ca		 or	 ecx, edx
  022cd	33 c1		 xor	 eax, ecx
  022cf	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  022d6	03 c8		 add	 ecx, eax
  022d8	8b c1		 mov	 eax, ecx
  022da	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  022e1	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  022e8	33 d1		 xor	 edx, ecx
  022ea	8b ca		 mov	 ecx, edx
  022ec	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  022f3	23 d1		 and	 edx, ecx
  022f5	8b ca		 mov	 ecx, edx
  022f7	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  022fe	33 d1		 xor	 edx, ecx
  02300	8b ca		 mov	 ecx, edx
  02302	8b 94 24 88 00
	00 00		 mov	 edx, DWORD PTR W$[rsp+104]
  02309	03 d0		 add	 edx, eax
  0230b	8b c2		 mov	 eax, edx
  0230d	ba c8 27 03 b0	 mov	 edx, -1341970488	; ffffffffb00327c8H
  02312	48 8d 0c 11	 lea	 rcx, QWORD PTR [rcx+rdx]
  02316	03 c1		 add	 eax, ecx
  02318	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  0231f	8b 84 24 40 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+24]
  02326	c1 e8 02	 shr	 eax, 2
  02329	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  02330	c1 e1 1e	 shl	 ecx, 30
  02333	0b c1		 or	 eax, ecx
  02335	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  0233c	c1 e9 0d	 shr	 ecx, 13
  0233f	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  02346	c1 e2 13	 shl	 edx, 19
  02349	0b ca		 or	 ecx, edx
  0234b	33 c1		 xor	 eax, ecx
  0234d	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  02354	c1 e9 16	 shr	 ecx, 22
  02357	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  0235e	c1 e2 0a	 shl	 edx, 10
  02361	0b ca		 or	 ecx, edx
  02363	33 c1		 xor	 eax, ecx
  02365	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  0236c	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  02373	0b d1		 or	 edx, ecx
  02375	8b ca		 mov	 ecx, edx
  02377	23 8c 24 28 01
	00 00		 and	 ecx, DWORD PTR S$[rsp]
  0237e	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  02385	44 8b 84 24 40
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+24]
  0238d	44 23 c2	 and	 r8d, edx
  02390	41 8b d0	 mov	 edx, r8d
  02393	0b ca		 or	 ecx, edx
  02395	03 c1		 add	 eax, ecx
  02397	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  0239e	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  023a5	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  023ac	03 c8		 add	 ecx, eax
  023ae	8b c1		 mov	 eax, ecx
  023b0	89 84 24 2c 01
	00 00		 mov	 DWORD PTR S$[rsp+4], eax
  023b7	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  023be	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  023c5	03 c8		 add	 ecx, eax
  023c7	8b c1		 mov	 eax, ecx
  023c9	89 84 24 3c 01
	00 00		 mov	 DWORD PTR S$[rsp+20], eax

; 177  :     RND(S[5],S[6],S[7],S[0],S[1],S[2],S[3],S[4],27,0xbf597fc7);

  023d0	8b 84 24 2c 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+4]
  023d7	c1 e8 06	 shr	 eax, 6
  023da	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  023e1	c1 e1 1a	 shl	 ecx, 26
  023e4	0b c1		 or	 eax, ecx
  023e6	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  023ed	c1 e9 0b	 shr	 ecx, 11
  023f0	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  023f7	c1 e2 15	 shl	 edx, 21
  023fa	0b ca		 or	 ecx, edx
  023fc	33 c1		 xor	 eax, ecx
  023fe	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  02405	c1 e9 19	 shr	 ecx, 25
  02408	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  0240f	c1 e2 07	 shl	 edx, 7
  02412	0b ca		 or	 ecx, edx
  02414	33 c1		 xor	 eax, ecx
  02416	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  0241d	03 c8		 add	 ecx, eax
  0241f	8b c1		 mov	 eax, ecx
  02421	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  02428	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  0242f	33 d1		 xor	 edx, ecx
  02431	8b ca		 mov	 ecx, edx
  02433	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  0243a	23 d1		 and	 edx, ecx
  0243c	8b ca		 mov	 ecx, edx
  0243e	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  02445	33 d1		 xor	 edx, ecx
  02447	8b ca		 mov	 ecx, edx
  02449	8b 94 24 8c 00
	00 00		 mov	 edx, DWORD PTR W$[rsp+108]
  02450	03 d0		 add	 edx, eax
  02452	8b c2		 mov	 eax, edx
  02454	ba c7 7f 59 bf	 mov	 edx, -1084653625	; ffffffffbf597fc7H
  02459	48 8d 0c 11	 lea	 rcx, QWORD PTR [rcx+rdx]
  0245d	03 c1		 add	 eax, ecx
  0245f	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  02466	8b 84 24 3c 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+20]
  0246d	c1 e8 02	 shr	 eax, 2
  02470	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  02477	c1 e1 1e	 shl	 ecx, 30
  0247a	0b c1		 or	 eax, ecx
  0247c	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  02483	c1 e9 0d	 shr	 ecx, 13
  02486	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  0248d	c1 e2 13	 shl	 edx, 19
  02490	0b ca		 or	 ecx, edx
  02492	33 c1		 xor	 eax, ecx
  02494	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  0249b	c1 e9 16	 shr	 ecx, 22
  0249e	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  024a5	c1 e2 0a	 shl	 edx, 10
  024a8	0b ca		 or	 ecx, edx
  024aa	33 c1		 xor	 eax, ecx
  024ac	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  024b3	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  024ba	0b d1		 or	 edx, ecx
  024bc	8b ca		 mov	 ecx, edx
  024be	23 8c 24 44 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+28]
  024c5	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  024cc	44 8b 84 24 3c
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+20]
  024d4	44 23 c2	 and	 r8d, edx
  024d7	41 8b d0	 mov	 edx, r8d
  024da	0b ca		 or	 ecx, edx
  024dc	03 c1		 add	 eax, ecx
  024de	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  024e5	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  024ec	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  024f3	03 c8		 add	 ecx, eax
  024f5	8b c1		 mov	 eax, ecx
  024f7	89 84 24 28 01
	00 00		 mov	 DWORD PTR S$[rsp], eax
  024fe	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  02505	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  0250c	03 c8		 add	 ecx, eax
  0250e	8b c1		 mov	 eax, ecx
  02510	89 84 24 38 01
	00 00		 mov	 DWORD PTR S$[rsp+16], eax

; 178  :     RND(S[4],S[5],S[6],S[7],S[0],S[1],S[2],S[3],28,0xc6e00bf3);

  02517	8b 84 24 28 01
	00 00		 mov	 eax, DWORD PTR S$[rsp]
  0251e	c1 e8 06	 shr	 eax, 6
  02521	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  02528	c1 e1 1a	 shl	 ecx, 26
  0252b	0b c1		 or	 eax, ecx
  0252d	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  02534	c1 e9 0b	 shr	 ecx, 11
  02537	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  0253e	c1 e2 15	 shl	 edx, 21
  02541	0b ca		 or	 ecx, edx
  02543	33 c1		 xor	 eax, ecx
  02545	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  0254c	c1 e9 19	 shr	 ecx, 25
  0254f	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  02556	c1 e2 07	 shl	 edx, 7
  02559	0b ca		 or	 ecx, edx
  0255b	33 c1		 xor	 eax, ecx
  0255d	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  02564	03 c8		 add	 ecx, eax
  02566	8b c1		 mov	 eax, ecx
  02568	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  0256f	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  02576	33 d1		 xor	 edx, ecx
  02578	8b ca		 mov	 ecx, edx
  0257a	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  02581	23 d1		 and	 edx, ecx
  02583	8b ca		 mov	 ecx, edx
  02585	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  0258c	33 d1		 xor	 edx, ecx
  0258e	8b ca		 mov	 ecx, edx
  02590	8b 94 24 90 00
	00 00		 mov	 edx, DWORD PTR W$[rsp+112]
  02597	03 d0		 add	 edx, eax
  02599	8b c2		 mov	 eax, edx
  0259b	ba f3 0b e0 c6	 mov	 edx, -958395405		; ffffffffc6e00bf3H
  025a0	48 8d 0c 11	 lea	 rcx, QWORD PTR [rcx+rdx]
  025a4	03 c1		 add	 eax, ecx
  025a6	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  025ad	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+16]
  025b4	c1 e8 02	 shr	 eax, 2
  025b7	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  025be	c1 e1 1e	 shl	 ecx, 30
  025c1	0b c1		 or	 eax, ecx
  025c3	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  025ca	c1 e9 0d	 shr	 ecx, 13
  025cd	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  025d4	c1 e2 13	 shl	 edx, 19
  025d7	0b ca		 or	 ecx, edx
  025d9	33 c1		 xor	 eax, ecx
  025db	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  025e2	c1 e9 16	 shr	 ecx, 22
  025e5	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  025ec	c1 e2 0a	 shl	 edx, 10
  025ef	0b ca		 or	 ecx, edx
  025f1	33 c1		 xor	 eax, ecx
  025f3	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  025fa	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  02601	0b d1		 or	 edx, ecx
  02603	8b ca		 mov	 ecx, edx
  02605	23 8c 24 40 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+24]
  0260c	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  02613	44 8b 84 24 38
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+16]
  0261b	44 23 c2	 and	 r8d, edx
  0261e	41 8b d0	 mov	 edx, r8d
  02621	0b ca		 or	 ecx, edx
  02623	03 c1		 add	 eax, ecx
  02625	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  0262c	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  02633	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  0263a	03 c8		 add	 ecx, eax
  0263c	8b c1		 mov	 eax, ecx
  0263e	89 84 24 44 01
	00 00		 mov	 DWORD PTR S$[rsp+28], eax
  02645	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  0264c	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  02653	03 c8		 add	 ecx, eax
  02655	8b c1		 mov	 eax, ecx
  02657	89 84 24 34 01
	00 00		 mov	 DWORD PTR S$[rsp+12], eax

; 179  :     RND(S[3],S[4],S[5],S[6],S[7],S[0],S[1],S[2],29,0xd5a79147);

  0265e	8b 84 24 44 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+28]
  02665	c1 e8 06	 shr	 eax, 6
  02668	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  0266f	c1 e1 1a	 shl	 ecx, 26
  02672	0b c1		 or	 eax, ecx
  02674	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  0267b	c1 e9 0b	 shr	 ecx, 11
  0267e	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  02685	c1 e2 15	 shl	 edx, 21
  02688	0b ca		 or	 ecx, edx
  0268a	33 c1		 xor	 eax, ecx
  0268c	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  02693	c1 e9 19	 shr	 ecx, 25
  02696	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  0269d	c1 e2 07	 shl	 edx, 7
  026a0	0b ca		 or	 ecx, edx
  026a2	33 c1		 xor	 eax, ecx
  026a4	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  026ab	03 c8		 add	 ecx, eax
  026ad	8b c1		 mov	 eax, ecx
  026af	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  026b6	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  026bd	33 d1		 xor	 edx, ecx
  026bf	8b ca		 mov	 ecx, edx
  026c1	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  026c8	23 d1		 and	 edx, ecx
  026ca	8b ca		 mov	 ecx, edx
  026cc	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  026d3	33 d1		 xor	 edx, ecx
  026d5	8b ca		 mov	 ecx, edx
  026d7	8b 94 24 94 00
	00 00		 mov	 edx, DWORD PTR W$[rsp+116]
  026de	03 d0		 add	 edx, eax
  026e0	8b c2		 mov	 eax, edx
  026e2	ba 47 91 a7 d5	 mov	 edx, -710438585		; ffffffffd5a79147H
  026e7	48 8d 0c 11	 lea	 rcx, QWORD PTR [rcx+rdx]
  026eb	03 c1		 add	 eax, ecx
  026ed	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  026f4	8b 84 24 34 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+12]
  026fb	c1 e8 02	 shr	 eax, 2
  026fe	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  02705	c1 e1 1e	 shl	 ecx, 30
  02708	0b c1		 or	 eax, ecx
  0270a	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  02711	c1 e9 0d	 shr	 ecx, 13
  02714	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  0271b	c1 e2 13	 shl	 edx, 19
  0271e	0b ca		 or	 ecx, edx
  02720	33 c1		 xor	 eax, ecx
  02722	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  02729	c1 e9 16	 shr	 ecx, 22
  0272c	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  02733	c1 e2 0a	 shl	 edx, 10
  02736	0b ca		 or	 ecx, edx
  02738	33 c1		 xor	 eax, ecx
  0273a	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  02741	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  02748	0b d1		 or	 edx, ecx
  0274a	8b ca		 mov	 ecx, edx
  0274c	23 8c 24 3c 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+20]
  02753	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  0275a	44 8b 84 24 34
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+12]
  02762	44 23 c2	 and	 r8d, edx
  02765	41 8b d0	 mov	 edx, r8d
  02768	0b ca		 or	 ecx, edx
  0276a	03 c1		 add	 eax, ecx
  0276c	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  02773	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  0277a	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  02781	03 c8		 add	 ecx, eax
  02783	8b c1		 mov	 eax, ecx
  02785	89 84 24 40 01
	00 00		 mov	 DWORD PTR S$[rsp+24], eax
  0278c	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  02793	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  0279a	03 c8		 add	 ecx, eax
  0279c	8b c1		 mov	 eax, ecx
  0279e	89 84 24 30 01
	00 00		 mov	 DWORD PTR S$[rsp+8], eax

; 180  :     RND(S[2],S[3],S[4],S[5],S[6],S[7],S[0],S[1],30,0x06ca6351);

  027a5	8b 84 24 40 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+24]
  027ac	c1 e8 06	 shr	 eax, 6
  027af	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  027b6	c1 e1 1a	 shl	 ecx, 26
  027b9	0b c1		 or	 eax, ecx
  027bb	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  027c2	c1 e9 0b	 shr	 ecx, 11
  027c5	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  027cc	c1 e2 15	 shl	 edx, 21
  027cf	0b ca		 or	 ecx, edx
  027d1	33 c1		 xor	 eax, ecx
  027d3	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  027da	c1 e9 19	 shr	 ecx, 25
  027dd	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  027e4	c1 e2 07	 shl	 edx, 7
  027e7	0b ca		 or	 ecx, edx
  027e9	33 c1		 xor	 eax, ecx
  027eb	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  027f2	03 c8		 add	 ecx, eax
  027f4	8b c1		 mov	 eax, ecx
  027f6	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  027fd	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  02804	33 d1		 xor	 edx, ecx
  02806	8b ca		 mov	 ecx, edx
  02808	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  0280f	23 d1		 and	 edx, ecx
  02811	8b ca		 mov	 ecx, edx
  02813	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  0281a	33 d1		 xor	 edx, ecx
  0281c	8b ca		 mov	 ecx, edx
  0281e	8b 94 24 98 00
	00 00		 mov	 edx, DWORD PTR W$[rsp+120]
  02825	03 d0		 add	 edx, eax
  02827	8b c2		 mov	 eax, edx
  02829	8d 84 01 51 63
	ca 06		 lea	 eax, DWORD PTR [rcx+rax+113926993]
  02830	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  02837	8b 84 24 30 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+8]
  0283e	c1 e8 02	 shr	 eax, 2
  02841	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  02848	c1 e1 1e	 shl	 ecx, 30
  0284b	0b c1		 or	 eax, ecx
  0284d	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  02854	c1 e9 0d	 shr	 ecx, 13
  02857	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  0285e	c1 e2 13	 shl	 edx, 19
  02861	0b ca		 or	 ecx, edx
  02863	33 c1		 xor	 eax, ecx
  02865	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  0286c	c1 e9 16	 shr	 ecx, 22
  0286f	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  02876	c1 e2 0a	 shl	 edx, 10
  02879	0b ca		 or	 ecx, edx
  0287b	33 c1		 xor	 eax, ecx
  0287d	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  02884	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  0288b	0b d1		 or	 edx, ecx
  0288d	8b ca		 mov	 ecx, edx
  0288f	23 8c 24 38 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+16]
  02896	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  0289d	44 8b 84 24 30
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+8]
  028a5	44 23 c2	 and	 r8d, edx
  028a8	41 8b d0	 mov	 edx, r8d
  028ab	0b ca		 or	 ecx, edx
  028ad	03 c1		 add	 eax, ecx
  028af	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  028b6	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  028bd	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  028c4	03 c8		 add	 ecx, eax
  028c6	8b c1		 mov	 eax, ecx
  028c8	89 84 24 3c 01
	00 00		 mov	 DWORD PTR S$[rsp+20], eax
  028cf	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  028d6	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  028dd	03 c8		 add	 ecx, eax
  028df	8b c1		 mov	 eax, ecx
  028e1	89 84 24 2c 01
	00 00		 mov	 DWORD PTR S$[rsp+4], eax

; 181  :     RND(S[1],S[2],S[3],S[4],S[5],S[6],S[7],S[0],31,0x14292967);

  028e8	8b 84 24 3c 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+20]
  028ef	c1 e8 06	 shr	 eax, 6
  028f2	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  028f9	c1 e1 1a	 shl	 ecx, 26
  028fc	0b c1		 or	 eax, ecx
  028fe	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  02905	c1 e9 0b	 shr	 ecx, 11
  02908	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  0290f	c1 e2 15	 shl	 edx, 21
  02912	0b ca		 or	 ecx, edx
  02914	33 c1		 xor	 eax, ecx
  02916	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  0291d	c1 e9 19	 shr	 ecx, 25
  02920	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  02927	c1 e2 07	 shl	 edx, 7
  0292a	0b ca		 or	 ecx, edx
  0292c	33 c1		 xor	 eax, ecx
  0292e	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  02935	03 c8		 add	 ecx, eax
  02937	8b c1		 mov	 eax, ecx
  02939	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  02940	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  02947	33 d1		 xor	 edx, ecx
  02949	8b ca		 mov	 ecx, edx
  0294b	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  02952	23 d1		 and	 edx, ecx
  02954	8b ca		 mov	 ecx, edx
  02956	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  0295d	33 d1		 xor	 edx, ecx
  0295f	8b ca		 mov	 ecx, edx
  02961	8b 94 24 9c 00
	00 00		 mov	 edx, DWORD PTR W$[rsp+124]
  02968	03 d0		 add	 edx, eax
  0296a	8b c2		 mov	 eax, edx
  0296c	8d 84 01 67 29
	29 14		 lea	 eax, DWORD PTR [rcx+rax+338241895]
  02973	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  0297a	8b 84 24 2c 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+4]
  02981	c1 e8 02	 shr	 eax, 2
  02984	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  0298b	c1 e1 1e	 shl	 ecx, 30
  0298e	0b c1		 or	 eax, ecx
  02990	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  02997	c1 e9 0d	 shr	 ecx, 13
  0299a	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  029a1	c1 e2 13	 shl	 edx, 19
  029a4	0b ca		 or	 ecx, edx
  029a6	33 c1		 xor	 eax, ecx
  029a8	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  029af	c1 e9 16	 shr	 ecx, 22
  029b2	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  029b9	c1 e2 0a	 shl	 edx, 10
  029bc	0b ca		 or	 ecx, edx
  029be	33 c1		 xor	 eax, ecx
  029c0	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  029c7	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  029ce	0b d1		 or	 edx, ecx
  029d0	8b ca		 mov	 ecx, edx
  029d2	23 8c 24 34 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+12]
  029d9	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  029e0	44 8b 84 24 2c
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+4]
  029e8	44 23 c2	 and	 r8d, edx
  029eb	41 8b d0	 mov	 edx, r8d
  029ee	0b ca		 or	 ecx, edx
  029f0	03 c1		 add	 eax, ecx
  029f2	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  029f9	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  02a00	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  02a07	03 c8		 add	 ecx, eax
  02a09	8b c1		 mov	 eax, ecx
  02a0b	89 84 24 38 01
	00 00		 mov	 DWORD PTR S$[rsp+16], eax
  02a12	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  02a19	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  02a20	03 c8		 add	 ecx, eax
  02a22	8b c1		 mov	 eax, ecx
  02a24	89 84 24 28 01
	00 00		 mov	 DWORD PTR S$[rsp], eax

; 182  :     RND(S[0],S[1],S[2],S[3],S[4],S[5],S[6],S[7],32,0x27b70a85);

  02a2b	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+16]
  02a32	c1 e8 06	 shr	 eax, 6
  02a35	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  02a3c	c1 e1 1a	 shl	 ecx, 26
  02a3f	0b c1		 or	 eax, ecx
  02a41	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  02a48	c1 e9 0b	 shr	 ecx, 11
  02a4b	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  02a52	c1 e2 15	 shl	 edx, 21
  02a55	0b ca		 or	 ecx, edx
  02a57	33 c1		 xor	 eax, ecx
  02a59	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  02a60	c1 e9 19	 shr	 ecx, 25
  02a63	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  02a6a	c1 e2 07	 shl	 edx, 7
  02a6d	0b ca		 or	 ecx, edx
  02a6f	33 c1		 xor	 eax, ecx
  02a71	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  02a78	03 c8		 add	 ecx, eax
  02a7a	8b c1		 mov	 eax, ecx
  02a7c	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  02a83	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  02a8a	33 d1		 xor	 edx, ecx
  02a8c	8b ca		 mov	 ecx, edx
  02a8e	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  02a95	23 d1		 and	 edx, ecx
  02a97	8b ca		 mov	 ecx, edx
  02a99	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  02aa0	33 d1		 xor	 edx, ecx
  02aa2	8b ca		 mov	 ecx, edx
  02aa4	8b 94 24 a0 00
	00 00		 mov	 edx, DWORD PTR W$[rsp+128]
  02aab	03 d0		 add	 edx, eax
  02aad	8b c2		 mov	 eax, edx
  02aaf	8d 84 01 85 0a
	b7 27		 lea	 eax, DWORD PTR [rcx+rax+666307205]
  02ab6	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  02abd	8b 84 24 28 01
	00 00		 mov	 eax, DWORD PTR S$[rsp]
  02ac4	c1 e8 02	 shr	 eax, 2
  02ac7	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  02ace	c1 e1 1e	 shl	 ecx, 30
  02ad1	0b c1		 or	 eax, ecx
  02ad3	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  02ada	c1 e9 0d	 shr	 ecx, 13
  02add	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  02ae4	c1 e2 13	 shl	 edx, 19
  02ae7	0b ca		 or	 ecx, edx
  02ae9	33 c1		 xor	 eax, ecx
  02aeb	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  02af2	c1 e9 16	 shr	 ecx, 22
  02af5	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  02afc	c1 e2 0a	 shl	 edx, 10
  02aff	0b ca		 or	 ecx, edx
  02b01	33 c1		 xor	 eax, ecx
  02b03	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  02b0a	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  02b11	0b d1		 or	 edx, ecx
  02b13	8b ca		 mov	 ecx, edx
  02b15	23 8c 24 30 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+8]
  02b1c	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  02b23	44 8b 84 24 28
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp]
  02b2b	44 23 c2	 and	 r8d, edx
  02b2e	41 8b d0	 mov	 edx, r8d
  02b31	0b ca		 or	 ecx, edx
  02b33	03 c1		 add	 eax, ecx
  02b35	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  02b3c	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  02b43	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  02b4a	03 c8		 add	 ecx, eax
  02b4c	8b c1		 mov	 eax, ecx
  02b4e	89 84 24 34 01
	00 00		 mov	 DWORD PTR S$[rsp+12], eax
  02b55	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  02b5c	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  02b63	03 c8		 add	 ecx, eax
  02b65	8b c1		 mov	 eax, ecx
  02b67	89 84 24 44 01
	00 00		 mov	 DWORD PTR S$[rsp+28], eax

; 183  :     RND(S[7],S[0],S[1],S[2],S[3],S[4],S[5],S[6],33,0x2e1b2138);

  02b6e	8b 84 24 34 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+12]
  02b75	c1 e8 06	 shr	 eax, 6
  02b78	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  02b7f	c1 e1 1a	 shl	 ecx, 26
  02b82	0b c1		 or	 eax, ecx
  02b84	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  02b8b	c1 e9 0b	 shr	 ecx, 11
  02b8e	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  02b95	c1 e2 15	 shl	 edx, 21
  02b98	0b ca		 or	 ecx, edx
  02b9a	33 c1		 xor	 eax, ecx
  02b9c	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  02ba3	c1 e9 19	 shr	 ecx, 25
  02ba6	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  02bad	c1 e2 07	 shl	 edx, 7
  02bb0	0b ca		 or	 ecx, edx
  02bb2	33 c1		 xor	 eax, ecx
  02bb4	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  02bbb	03 c8		 add	 ecx, eax
  02bbd	8b c1		 mov	 eax, ecx
  02bbf	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  02bc6	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  02bcd	33 d1		 xor	 edx, ecx
  02bcf	8b ca		 mov	 ecx, edx
  02bd1	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  02bd8	23 d1		 and	 edx, ecx
  02bda	8b ca		 mov	 ecx, edx
  02bdc	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  02be3	33 d1		 xor	 edx, ecx
  02be5	8b ca		 mov	 ecx, edx
  02be7	8b 94 24 a4 00
	00 00		 mov	 edx, DWORD PTR W$[rsp+132]
  02bee	03 d0		 add	 edx, eax
  02bf0	8b c2		 mov	 eax, edx
  02bf2	8d 84 01 38 21
	1b 2e		 lea	 eax, DWORD PTR [rcx+rax+773529912]
  02bf9	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  02c00	8b 84 24 44 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+28]
  02c07	c1 e8 02	 shr	 eax, 2
  02c0a	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  02c11	c1 e1 1e	 shl	 ecx, 30
  02c14	0b c1		 or	 eax, ecx
  02c16	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  02c1d	c1 e9 0d	 shr	 ecx, 13
  02c20	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  02c27	c1 e2 13	 shl	 edx, 19
  02c2a	0b ca		 or	 ecx, edx
  02c2c	33 c1		 xor	 eax, ecx
  02c2e	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  02c35	c1 e9 16	 shr	 ecx, 22
  02c38	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  02c3f	c1 e2 0a	 shl	 edx, 10
  02c42	0b ca		 or	 ecx, edx
  02c44	33 c1		 xor	 eax, ecx
  02c46	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  02c4d	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  02c54	0b d1		 or	 edx, ecx
  02c56	8b ca		 mov	 ecx, edx
  02c58	23 8c 24 2c 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+4]
  02c5f	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  02c66	44 8b 84 24 44
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+28]
  02c6e	44 23 c2	 and	 r8d, edx
  02c71	41 8b d0	 mov	 edx, r8d
  02c74	0b ca		 or	 ecx, edx
  02c76	03 c1		 add	 eax, ecx
  02c78	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  02c7f	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  02c86	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  02c8d	03 c8		 add	 ecx, eax
  02c8f	8b c1		 mov	 eax, ecx
  02c91	89 84 24 30 01
	00 00		 mov	 DWORD PTR S$[rsp+8], eax
  02c98	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  02c9f	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  02ca6	03 c8		 add	 ecx, eax
  02ca8	8b c1		 mov	 eax, ecx
  02caa	89 84 24 40 01
	00 00		 mov	 DWORD PTR S$[rsp+24], eax

; 184  :     RND(S[6],S[7],S[0],S[1],S[2],S[3],S[4],S[5],34,0x4d2c6dfc);

  02cb1	8b 84 24 30 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+8]
  02cb8	c1 e8 06	 shr	 eax, 6
  02cbb	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  02cc2	c1 e1 1a	 shl	 ecx, 26
  02cc5	0b c1		 or	 eax, ecx
  02cc7	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  02cce	c1 e9 0b	 shr	 ecx, 11
  02cd1	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  02cd8	c1 e2 15	 shl	 edx, 21
  02cdb	0b ca		 or	 ecx, edx
  02cdd	33 c1		 xor	 eax, ecx
  02cdf	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  02ce6	c1 e9 19	 shr	 ecx, 25
  02ce9	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  02cf0	c1 e2 07	 shl	 edx, 7
  02cf3	0b ca		 or	 ecx, edx
  02cf5	33 c1		 xor	 eax, ecx
  02cf7	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  02cfe	03 c8		 add	 ecx, eax
  02d00	8b c1		 mov	 eax, ecx
  02d02	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  02d09	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  02d10	33 d1		 xor	 edx, ecx
  02d12	8b ca		 mov	 ecx, edx
  02d14	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  02d1b	23 d1		 and	 edx, ecx
  02d1d	8b ca		 mov	 ecx, edx
  02d1f	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  02d26	33 d1		 xor	 edx, ecx
  02d28	8b ca		 mov	 ecx, edx
  02d2a	8b 94 24 a8 00
	00 00		 mov	 edx, DWORD PTR W$[rsp+136]
  02d31	03 d0		 add	 edx, eax
  02d33	8b c2		 mov	 eax, edx
  02d35	8d 84 01 fc 6d
	2c 4d		 lea	 eax, DWORD PTR [rcx+rax+1294757372]
  02d3c	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  02d43	8b 84 24 40 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+24]
  02d4a	c1 e8 02	 shr	 eax, 2
  02d4d	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  02d54	c1 e1 1e	 shl	 ecx, 30
  02d57	0b c1		 or	 eax, ecx
  02d59	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  02d60	c1 e9 0d	 shr	 ecx, 13
  02d63	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  02d6a	c1 e2 13	 shl	 edx, 19
  02d6d	0b ca		 or	 ecx, edx
  02d6f	33 c1		 xor	 eax, ecx
  02d71	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  02d78	c1 e9 16	 shr	 ecx, 22
  02d7b	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  02d82	c1 e2 0a	 shl	 edx, 10
  02d85	0b ca		 or	 ecx, edx
  02d87	33 c1		 xor	 eax, ecx
  02d89	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  02d90	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  02d97	0b d1		 or	 edx, ecx
  02d99	8b ca		 mov	 ecx, edx
  02d9b	23 8c 24 28 01
	00 00		 and	 ecx, DWORD PTR S$[rsp]
  02da2	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  02da9	44 8b 84 24 40
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+24]
  02db1	44 23 c2	 and	 r8d, edx
  02db4	41 8b d0	 mov	 edx, r8d
  02db7	0b ca		 or	 ecx, edx
  02db9	03 c1		 add	 eax, ecx
  02dbb	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  02dc2	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  02dc9	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  02dd0	03 c8		 add	 ecx, eax
  02dd2	8b c1		 mov	 eax, ecx
  02dd4	89 84 24 2c 01
	00 00		 mov	 DWORD PTR S$[rsp+4], eax
  02ddb	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  02de2	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  02de9	03 c8		 add	 ecx, eax
  02deb	8b c1		 mov	 eax, ecx
  02ded	89 84 24 3c 01
	00 00		 mov	 DWORD PTR S$[rsp+20], eax

; 185  :     RND(S[5],S[6],S[7],S[0],S[1],S[2],S[3],S[4],35,0x53380d13);

  02df4	8b 84 24 2c 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+4]
  02dfb	c1 e8 06	 shr	 eax, 6
  02dfe	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  02e05	c1 e1 1a	 shl	 ecx, 26
  02e08	0b c1		 or	 eax, ecx
  02e0a	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  02e11	c1 e9 0b	 shr	 ecx, 11
  02e14	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  02e1b	c1 e2 15	 shl	 edx, 21
  02e1e	0b ca		 or	 ecx, edx
  02e20	33 c1		 xor	 eax, ecx
  02e22	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  02e29	c1 e9 19	 shr	 ecx, 25
  02e2c	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  02e33	c1 e2 07	 shl	 edx, 7
  02e36	0b ca		 or	 ecx, edx
  02e38	33 c1		 xor	 eax, ecx
  02e3a	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  02e41	03 c8		 add	 ecx, eax
  02e43	8b c1		 mov	 eax, ecx
  02e45	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  02e4c	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  02e53	33 d1		 xor	 edx, ecx
  02e55	8b ca		 mov	 ecx, edx
  02e57	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  02e5e	23 d1		 and	 edx, ecx
  02e60	8b ca		 mov	 ecx, edx
  02e62	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  02e69	33 d1		 xor	 edx, ecx
  02e6b	8b ca		 mov	 ecx, edx
  02e6d	8b 94 24 ac 00
	00 00		 mov	 edx, DWORD PTR W$[rsp+140]
  02e74	03 d0		 add	 edx, eax
  02e76	8b c2		 mov	 eax, edx
  02e78	8d 84 01 13 0d
	38 53		 lea	 eax, DWORD PTR [rcx+rax+1396182291]
  02e7f	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  02e86	8b 84 24 3c 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+20]
  02e8d	c1 e8 02	 shr	 eax, 2
  02e90	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  02e97	c1 e1 1e	 shl	 ecx, 30
  02e9a	0b c1		 or	 eax, ecx
  02e9c	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  02ea3	c1 e9 0d	 shr	 ecx, 13
  02ea6	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  02ead	c1 e2 13	 shl	 edx, 19
  02eb0	0b ca		 or	 ecx, edx
  02eb2	33 c1		 xor	 eax, ecx
  02eb4	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  02ebb	c1 e9 16	 shr	 ecx, 22
  02ebe	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  02ec5	c1 e2 0a	 shl	 edx, 10
  02ec8	0b ca		 or	 ecx, edx
  02eca	33 c1		 xor	 eax, ecx
  02ecc	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  02ed3	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  02eda	0b d1		 or	 edx, ecx
  02edc	8b ca		 mov	 ecx, edx
  02ede	23 8c 24 44 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+28]
  02ee5	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  02eec	44 8b 84 24 3c
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+20]
  02ef4	44 23 c2	 and	 r8d, edx
  02ef7	41 8b d0	 mov	 edx, r8d
  02efa	0b ca		 or	 ecx, edx
  02efc	03 c1		 add	 eax, ecx
  02efe	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  02f05	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  02f0c	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  02f13	03 c8		 add	 ecx, eax
  02f15	8b c1		 mov	 eax, ecx
  02f17	89 84 24 28 01
	00 00		 mov	 DWORD PTR S$[rsp], eax
  02f1e	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  02f25	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  02f2c	03 c8		 add	 ecx, eax
  02f2e	8b c1		 mov	 eax, ecx
  02f30	89 84 24 38 01
	00 00		 mov	 DWORD PTR S$[rsp+16], eax

; 186  :     RND(S[4],S[5],S[6],S[7],S[0],S[1],S[2],S[3],36,0x650a7354);

  02f37	8b 84 24 28 01
	00 00		 mov	 eax, DWORD PTR S$[rsp]
  02f3e	c1 e8 06	 shr	 eax, 6
  02f41	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  02f48	c1 e1 1a	 shl	 ecx, 26
  02f4b	0b c1		 or	 eax, ecx
  02f4d	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  02f54	c1 e9 0b	 shr	 ecx, 11
  02f57	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  02f5e	c1 e2 15	 shl	 edx, 21
  02f61	0b ca		 or	 ecx, edx
  02f63	33 c1		 xor	 eax, ecx
  02f65	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  02f6c	c1 e9 19	 shr	 ecx, 25
  02f6f	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  02f76	c1 e2 07	 shl	 edx, 7
  02f79	0b ca		 or	 ecx, edx
  02f7b	33 c1		 xor	 eax, ecx
  02f7d	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  02f84	03 c8		 add	 ecx, eax
  02f86	8b c1		 mov	 eax, ecx
  02f88	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  02f8f	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  02f96	33 d1		 xor	 edx, ecx
  02f98	8b ca		 mov	 ecx, edx
  02f9a	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  02fa1	23 d1		 and	 edx, ecx
  02fa3	8b ca		 mov	 ecx, edx
  02fa5	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  02fac	33 d1		 xor	 edx, ecx
  02fae	8b ca		 mov	 ecx, edx
  02fb0	8b 94 24 b0 00
	00 00		 mov	 edx, DWORD PTR W$[rsp+144]
  02fb7	03 d0		 add	 edx, eax
  02fb9	8b c2		 mov	 eax, edx
  02fbb	8d 84 01 54 73
	0a 65		 lea	 eax, DWORD PTR [rcx+rax+1695183700]
  02fc2	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  02fc9	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+16]
  02fd0	c1 e8 02	 shr	 eax, 2
  02fd3	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  02fda	c1 e1 1e	 shl	 ecx, 30
  02fdd	0b c1		 or	 eax, ecx
  02fdf	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  02fe6	c1 e9 0d	 shr	 ecx, 13
  02fe9	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  02ff0	c1 e2 13	 shl	 edx, 19
  02ff3	0b ca		 or	 ecx, edx
  02ff5	33 c1		 xor	 eax, ecx
  02ff7	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  02ffe	c1 e9 16	 shr	 ecx, 22
  03001	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  03008	c1 e2 0a	 shl	 edx, 10
  0300b	0b ca		 or	 ecx, edx
  0300d	33 c1		 xor	 eax, ecx
  0300f	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  03016	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  0301d	0b d1		 or	 edx, ecx
  0301f	8b ca		 mov	 ecx, edx
  03021	23 8c 24 40 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+24]
  03028	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  0302f	44 8b 84 24 38
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+16]
  03037	44 23 c2	 and	 r8d, edx
  0303a	41 8b d0	 mov	 edx, r8d
  0303d	0b ca		 or	 ecx, edx
  0303f	03 c1		 add	 eax, ecx
  03041	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  03048	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  0304f	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  03056	03 c8		 add	 ecx, eax
  03058	8b c1		 mov	 eax, ecx
  0305a	89 84 24 44 01
	00 00		 mov	 DWORD PTR S$[rsp+28], eax
  03061	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  03068	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  0306f	03 c8		 add	 ecx, eax
  03071	8b c1		 mov	 eax, ecx
  03073	89 84 24 34 01
	00 00		 mov	 DWORD PTR S$[rsp+12], eax

; 187  :     RND(S[3],S[4],S[5],S[6],S[7],S[0],S[1],S[2],37,0x766a0abb);

  0307a	8b 84 24 44 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+28]
  03081	c1 e8 06	 shr	 eax, 6
  03084	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  0308b	c1 e1 1a	 shl	 ecx, 26
  0308e	0b c1		 or	 eax, ecx
  03090	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  03097	c1 e9 0b	 shr	 ecx, 11
  0309a	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  030a1	c1 e2 15	 shl	 edx, 21
  030a4	0b ca		 or	 ecx, edx
  030a6	33 c1		 xor	 eax, ecx
  030a8	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  030af	c1 e9 19	 shr	 ecx, 25
  030b2	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  030b9	c1 e2 07	 shl	 edx, 7
  030bc	0b ca		 or	 ecx, edx
  030be	33 c1		 xor	 eax, ecx
  030c0	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  030c7	03 c8		 add	 ecx, eax
  030c9	8b c1		 mov	 eax, ecx
  030cb	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  030d2	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  030d9	33 d1		 xor	 edx, ecx
  030db	8b ca		 mov	 ecx, edx
  030dd	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  030e4	23 d1		 and	 edx, ecx
  030e6	8b ca		 mov	 ecx, edx
  030e8	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  030ef	33 d1		 xor	 edx, ecx
  030f1	8b ca		 mov	 ecx, edx
  030f3	8b 94 24 b4 00
	00 00		 mov	 edx, DWORD PTR W$[rsp+148]
  030fa	03 d0		 add	 edx, eax
  030fc	8b c2		 mov	 eax, edx
  030fe	8d 84 01 bb 0a
	6a 76		 lea	 eax, DWORD PTR [rcx+rax+1986661051]
  03105	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  0310c	8b 84 24 34 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+12]
  03113	c1 e8 02	 shr	 eax, 2
  03116	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  0311d	c1 e1 1e	 shl	 ecx, 30
  03120	0b c1		 or	 eax, ecx
  03122	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  03129	c1 e9 0d	 shr	 ecx, 13
  0312c	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  03133	c1 e2 13	 shl	 edx, 19
  03136	0b ca		 or	 ecx, edx
  03138	33 c1		 xor	 eax, ecx
  0313a	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  03141	c1 e9 16	 shr	 ecx, 22
  03144	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  0314b	c1 e2 0a	 shl	 edx, 10
  0314e	0b ca		 or	 ecx, edx
  03150	33 c1		 xor	 eax, ecx
  03152	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  03159	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  03160	0b d1		 or	 edx, ecx
  03162	8b ca		 mov	 ecx, edx
  03164	23 8c 24 3c 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+20]
  0316b	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  03172	44 8b 84 24 34
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+12]
  0317a	44 23 c2	 and	 r8d, edx
  0317d	41 8b d0	 mov	 edx, r8d
  03180	0b ca		 or	 ecx, edx
  03182	03 c1		 add	 eax, ecx
  03184	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  0318b	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  03192	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  03199	03 c8		 add	 ecx, eax
  0319b	8b c1		 mov	 eax, ecx
  0319d	89 84 24 40 01
	00 00		 mov	 DWORD PTR S$[rsp+24], eax
  031a4	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  031ab	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  031b2	03 c8		 add	 ecx, eax
  031b4	8b c1		 mov	 eax, ecx
  031b6	89 84 24 30 01
	00 00		 mov	 DWORD PTR S$[rsp+8], eax

; 188  :     RND(S[2],S[3],S[4],S[5],S[6],S[7],S[0],S[1],38,0x81c2c92e);

  031bd	8b 84 24 40 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+24]
  031c4	c1 e8 06	 shr	 eax, 6
  031c7	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  031ce	c1 e1 1a	 shl	 ecx, 26
  031d1	0b c1		 or	 eax, ecx
  031d3	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  031da	c1 e9 0b	 shr	 ecx, 11
  031dd	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  031e4	c1 e2 15	 shl	 edx, 21
  031e7	0b ca		 or	 ecx, edx
  031e9	33 c1		 xor	 eax, ecx
  031eb	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  031f2	c1 e9 19	 shr	 ecx, 25
  031f5	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  031fc	c1 e2 07	 shl	 edx, 7
  031ff	0b ca		 or	 ecx, edx
  03201	33 c1		 xor	 eax, ecx
  03203	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  0320a	03 c8		 add	 ecx, eax
  0320c	8b c1		 mov	 eax, ecx
  0320e	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  03215	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  0321c	33 d1		 xor	 edx, ecx
  0321e	8b ca		 mov	 ecx, edx
  03220	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  03227	23 d1		 and	 edx, ecx
  03229	8b ca		 mov	 ecx, edx
  0322b	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  03232	33 d1		 xor	 edx, ecx
  03234	8b ca		 mov	 ecx, edx
  03236	8b 94 24 b8 00
	00 00		 mov	 edx, DWORD PTR W$[rsp+152]
  0323d	03 d0		 add	 edx, eax
  0323f	8b c2		 mov	 eax, edx
  03241	ba 2e c9 c2 81	 mov	 edx, -2117940946	; ffffffff81c2c92eH
  03246	48 8d 0c 11	 lea	 rcx, QWORD PTR [rcx+rdx]
  0324a	03 c1		 add	 eax, ecx
  0324c	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  03253	8b 84 24 30 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+8]
  0325a	c1 e8 02	 shr	 eax, 2
  0325d	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  03264	c1 e1 1e	 shl	 ecx, 30
  03267	0b c1		 or	 eax, ecx
  03269	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  03270	c1 e9 0d	 shr	 ecx, 13
  03273	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  0327a	c1 e2 13	 shl	 edx, 19
  0327d	0b ca		 or	 ecx, edx
  0327f	33 c1		 xor	 eax, ecx
  03281	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  03288	c1 e9 16	 shr	 ecx, 22
  0328b	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  03292	c1 e2 0a	 shl	 edx, 10
  03295	0b ca		 or	 ecx, edx
  03297	33 c1		 xor	 eax, ecx
  03299	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  032a0	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  032a7	0b d1		 or	 edx, ecx
  032a9	8b ca		 mov	 ecx, edx
  032ab	23 8c 24 38 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+16]
  032b2	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  032b9	44 8b 84 24 30
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+8]
  032c1	44 23 c2	 and	 r8d, edx
  032c4	41 8b d0	 mov	 edx, r8d
  032c7	0b ca		 or	 ecx, edx
  032c9	03 c1		 add	 eax, ecx
  032cb	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  032d2	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  032d9	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  032e0	03 c8		 add	 ecx, eax
  032e2	8b c1		 mov	 eax, ecx
  032e4	89 84 24 3c 01
	00 00		 mov	 DWORD PTR S$[rsp+20], eax
  032eb	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  032f2	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  032f9	03 c8		 add	 ecx, eax
  032fb	8b c1		 mov	 eax, ecx
  032fd	89 84 24 2c 01
	00 00		 mov	 DWORD PTR S$[rsp+4], eax

; 189  :     RND(S[1],S[2],S[3],S[4],S[5],S[6],S[7],S[0],39,0x92722c85);

  03304	8b 84 24 3c 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+20]
  0330b	c1 e8 06	 shr	 eax, 6
  0330e	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  03315	c1 e1 1a	 shl	 ecx, 26
  03318	0b c1		 or	 eax, ecx
  0331a	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  03321	c1 e9 0b	 shr	 ecx, 11
  03324	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  0332b	c1 e2 15	 shl	 edx, 21
  0332e	0b ca		 or	 ecx, edx
  03330	33 c1		 xor	 eax, ecx
  03332	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  03339	c1 e9 19	 shr	 ecx, 25
  0333c	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  03343	c1 e2 07	 shl	 edx, 7
  03346	0b ca		 or	 ecx, edx
  03348	33 c1		 xor	 eax, ecx
  0334a	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  03351	03 c8		 add	 ecx, eax
  03353	8b c1		 mov	 eax, ecx
  03355	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  0335c	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  03363	33 d1		 xor	 edx, ecx
  03365	8b ca		 mov	 ecx, edx
  03367	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  0336e	23 d1		 and	 edx, ecx
  03370	8b ca		 mov	 ecx, edx
  03372	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  03379	33 d1		 xor	 edx, ecx
  0337b	8b ca		 mov	 ecx, edx
  0337d	8b 94 24 bc 00
	00 00		 mov	 edx, DWORD PTR W$[rsp+156]
  03384	03 d0		 add	 edx, eax
  03386	8b c2		 mov	 eax, edx
  03388	ba 85 2c 72 92	 mov	 edx, -1838011259	; ffffffff92722c85H
  0338d	48 8d 0c 11	 lea	 rcx, QWORD PTR [rcx+rdx]
  03391	03 c1		 add	 eax, ecx
  03393	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  0339a	8b 84 24 2c 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+4]
  033a1	c1 e8 02	 shr	 eax, 2
  033a4	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  033ab	c1 e1 1e	 shl	 ecx, 30
  033ae	0b c1		 or	 eax, ecx
  033b0	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  033b7	c1 e9 0d	 shr	 ecx, 13
  033ba	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  033c1	c1 e2 13	 shl	 edx, 19
  033c4	0b ca		 or	 ecx, edx
  033c6	33 c1		 xor	 eax, ecx
  033c8	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  033cf	c1 e9 16	 shr	 ecx, 22
  033d2	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  033d9	c1 e2 0a	 shl	 edx, 10
  033dc	0b ca		 or	 ecx, edx
  033de	33 c1		 xor	 eax, ecx
  033e0	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  033e7	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  033ee	0b d1		 or	 edx, ecx
  033f0	8b ca		 mov	 ecx, edx
  033f2	23 8c 24 34 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+12]
  033f9	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  03400	44 8b 84 24 2c
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+4]
  03408	44 23 c2	 and	 r8d, edx
  0340b	41 8b d0	 mov	 edx, r8d
  0340e	0b ca		 or	 ecx, edx
  03410	03 c1		 add	 eax, ecx
  03412	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  03419	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  03420	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  03427	03 c8		 add	 ecx, eax
  03429	8b c1		 mov	 eax, ecx
  0342b	89 84 24 38 01
	00 00		 mov	 DWORD PTR S$[rsp+16], eax
  03432	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  03439	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  03440	03 c8		 add	 ecx, eax
  03442	8b c1		 mov	 eax, ecx
  03444	89 84 24 28 01
	00 00		 mov	 DWORD PTR S$[rsp], eax

; 190  :     RND(S[0],S[1],S[2],S[3],S[4],S[5],S[6],S[7],40,0xa2bfe8a1);

  0344b	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+16]
  03452	c1 e8 06	 shr	 eax, 6
  03455	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  0345c	c1 e1 1a	 shl	 ecx, 26
  0345f	0b c1		 or	 eax, ecx
  03461	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  03468	c1 e9 0b	 shr	 ecx, 11
  0346b	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  03472	c1 e2 15	 shl	 edx, 21
  03475	0b ca		 or	 ecx, edx
  03477	33 c1		 xor	 eax, ecx
  03479	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  03480	c1 e9 19	 shr	 ecx, 25
  03483	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  0348a	c1 e2 07	 shl	 edx, 7
  0348d	0b ca		 or	 ecx, edx
  0348f	33 c1		 xor	 eax, ecx
  03491	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  03498	03 c8		 add	 ecx, eax
  0349a	8b c1		 mov	 eax, ecx
  0349c	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  034a3	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  034aa	33 d1		 xor	 edx, ecx
  034ac	8b ca		 mov	 ecx, edx
  034ae	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  034b5	23 d1		 and	 edx, ecx
  034b7	8b ca		 mov	 ecx, edx
  034b9	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  034c0	33 d1		 xor	 edx, ecx
  034c2	8b ca		 mov	 ecx, edx
  034c4	8b 94 24 c0 00
	00 00		 mov	 edx, DWORD PTR W$[rsp+160]
  034cb	03 d0		 add	 edx, eax
  034cd	8b c2		 mov	 eax, edx
  034cf	ba a1 e8 bf a2	 mov	 edx, -1564481375	; ffffffffa2bfe8a1H
  034d4	48 8d 0c 11	 lea	 rcx, QWORD PTR [rcx+rdx]
  034d8	03 c1		 add	 eax, ecx
  034da	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  034e1	8b 84 24 28 01
	00 00		 mov	 eax, DWORD PTR S$[rsp]
  034e8	c1 e8 02	 shr	 eax, 2
  034eb	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  034f2	c1 e1 1e	 shl	 ecx, 30
  034f5	0b c1		 or	 eax, ecx
  034f7	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  034fe	c1 e9 0d	 shr	 ecx, 13
  03501	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  03508	c1 e2 13	 shl	 edx, 19
  0350b	0b ca		 or	 ecx, edx
  0350d	33 c1		 xor	 eax, ecx
  0350f	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  03516	c1 e9 16	 shr	 ecx, 22
  03519	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  03520	c1 e2 0a	 shl	 edx, 10
  03523	0b ca		 or	 ecx, edx
  03525	33 c1		 xor	 eax, ecx
  03527	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  0352e	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  03535	0b d1		 or	 edx, ecx
  03537	8b ca		 mov	 ecx, edx
  03539	23 8c 24 30 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+8]
  03540	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  03547	44 8b 84 24 28
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp]
  0354f	44 23 c2	 and	 r8d, edx
  03552	41 8b d0	 mov	 edx, r8d
  03555	0b ca		 or	 ecx, edx
  03557	03 c1		 add	 eax, ecx
  03559	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  03560	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  03567	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  0356e	03 c8		 add	 ecx, eax
  03570	8b c1		 mov	 eax, ecx
  03572	89 84 24 34 01
	00 00		 mov	 DWORD PTR S$[rsp+12], eax
  03579	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  03580	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  03587	03 c8		 add	 ecx, eax
  03589	8b c1		 mov	 eax, ecx
  0358b	89 84 24 44 01
	00 00		 mov	 DWORD PTR S$[rsp+28], eax

; 191  :     RND(S[7],S[0],S[1],S[2],S[3],S[4],S[5],S[6],41,0xa81a664b);

  03592	8b 84 24 34 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+12]
  03599	c1 e8 06	 shr	 eax, 6
  0359c	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  035a3	c1 e1 1a	 shl	 ecx, 26
  035a6	0b c1		 or	 eax, ecx
  035a8	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  035af	c1 e9 0b	 shr	 ecx, 11
  035b2	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  035b9	c1 e2 15	 shl	 edx, 21
  035bc	0b ca		 or	 ecx, edx
  035be	33 c1		 xor	 eax, ecx
  035c0	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  035c7	c1 e9 19	 shr	 ecx, 25
  035ca	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  035d1	c1 e2 07	 shl	 edx, 7
  035d4	0b ca		 or	 ecx, edx
  035d6	33 c1		 xor	 eax, ecx
  035d8	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  035df	03 c8		 add	 ecx, eax
  035e1	8b c1		 mov	 eax, ecx
  035e3	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  035ea	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  035f1	33 d1		 xor	 edx, ecx
  035f3	8b ca		 mov	 ecx, edx
  035f5	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  035fc	23 d1		 and	 edx, ecx
  035fe	8b ca		 mov	 ecx, edx
  03600	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  03607	33 d1		 xor	 edx, ecx
  03609	8b ca		 mov	 ecx, edx
  0360b	8b 94 24 c4 00
	00 00		 mov	 edx, DWORD PTR W$[rsp+164]
  03612	03 d0		 add	 edx, eax
  03614	8b c2		 mov	 eax, edx
  03616	ba 4b 66 1a a8	 mov	 edx, -1474664885	; ffffffffa81a664bH
  0361b	48 8d 0c 11	 lea	 rcx, QWORD PTR [rcx+rdx]
  0361f	03 c1		 add	 eax, ecx
  03621	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  03628	8b 84 24 44 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+28]
  0362f	c1 e8 02	 shr	 eax, 2
  03632	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  03639	c1 e1 1e	 shl	 ecx, 30
  0363c	0b c1		 or	 eax, ecx
  0363e	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  03645	c1 e9 0d	 shr	 ecx, 13
  03648	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  0364f	c1 e2 13	 shl	 edx, 19
  03652	0b ca		 or	 ecx, edx
  03654	33 c1		 xor	 eax, ecx
  03656	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  0365d	c1 e9 16	 shr	 ecx, 22
  03660	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  03667	c1 e2 0a	 shl	 edx, 10
  0366a	0b ca		 or	 ecx, edx
  0366c	33 c1		 xor	 eax, ecx
  0366e	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  03675	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  0367c	0b d1		 or	 edx, ecx
  0367e	8b ca		 mov	 ecx, edx
  03680	23 8c 24 2c 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+4]
  03687	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  0368e	44 8b 84 24 44
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+28]
  03696	44 23 c2	 and	 r8d, edx
  03699	41 8b d0	 mov	 edx, r8d
  0369c	0b ca		 or	 ecx, edx
  0369e	03 c1		 add	 eax, ecx
  036a0	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  036a7	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  036ae	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  036b5	03 c8		 add	 ecx, eax
  036b7	8b c1		 mov	 eax, ecx
  036b9	89 84 24 30 01
	00 00		 mov	 DWORD PTR S$[rsp+8], eax
  036c0	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  036c7	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  036ce	03 c8		 add	 ecx, eax
  036d0	8b c1		 mov	 eax, ecx
  036d2	89 84 24 40 01
	00 00		 mov	 DWORD PTR S$[rsp+24], eax

; 192  :     RND(S[6],S[7],S[0],S[1],S[2],S[3],S[4],S[5],42,0xc24b8b70);

  036d9	8b 84 24 30 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+8]
  036e0	c1 e8 06	 shr	 eax, 6
  036e3	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  036ea	c1 e1 1a	 shl	 ecx, 26
  036ed	0b c1		 or	 eax, ecx
  036ef	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  036f6	c1 e9 0b	 shr	 ecx, 11
  036f9	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  03700	c1 e2 15	 shl	 edx, 21
  03703	0b ca		 or	 ecx, edx
  03705	33 c1		 xor	 eax, ecx
  03707	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  0370e	c1 e9 19	 shr	 ecx, 25
  03711	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  03718	c1 e2 07	 shl	 edx, 7
  0371b	0b ca		 or	 ecx, edx
  0371d	33 c1		 xor	 eax, ecx
  0371f	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  03726	03 c8		 add	 ecx, eax
  03728	8b c1		 mov	 eax, ecx
  0372a	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  03731	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  03738	33 d1		 xor	 edx, ecx
  0373a	8b ca		 mov	 ecx, edx
  0373c	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  03743	23 d1		 and	 edx, ecx
  03745	8b ca		 mov	 ecx, edx
  03747	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  0374e	33 d1		 xor	 edx, ecx
  03750	8b ca		 mov	 ecx, edx
  03752	8b 94 24 c8 00
	00 00		 mov	 edx, DWORD PTR W$[rsp+168]
  03759	03 d0		 add	 edx, eax
  0375b	8b c2		 mov	 eax, edx
  0375d	ba 70 8b 4b c2	 mov	 edx, -1035236496	; ffffffffc24b8b70H
  03762	48 8d 0c 11	 lea	 rcx, QWORD PTR [rcx+rdx]
  03766	03 c1		 add	 eax, ecx
  03768	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  0376f	8b 84 24 40 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+24]
  03776	c1 e8 02	 shr	 eax, 2
  03779	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  03780	c1 e1 1e	 shl	 ecx, 30
  03783	0b c1		 or	 eax, ecx
  03785	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  0378c	c1 e9 0d	 shr	 ecx, 13
  0378f	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  03796	c1 e2 13	 shl	 edx, 19
  03799	0b ca		 or	 ecx, edx
  0379b	33 c1		 xor	 eax, ecx
  0379d	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  037a4	c1 e9 16	 shr	 ecx, 22
  037a7	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  037ae	c1 e2 0a	 shl	 edx, 10
  037b1	0b ca		 or	 ecx, edx
  037b3	33 c1		 xor	 eax, ecx
  037b5	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  037bc	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  037c3	0b d1		 or	 edx, ecx
  037c5	8b ca		 mov	 ecx, edx
  037c7	23 8c 24 28 01
	00 00		 and	 ecx, DWORD PTR S$[rsp]
  037ce	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  037d5	44 8b 84 24 40
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+24]
  037dd	44 23 c2	 and	 r8d, edx
  037e0	41 8b d0	 mov	 edx, r8d
  037e3	0b ca		 or	 ecx, edx
  037e5	03 c1		 add	 eax, ecx
  037e7	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  037ee	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  037f5	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  037fc	03 c8		 add	 ecx, eax
  037fe	8b c1		 mov	 eax, ecx
  03800	89 84 24 2c 01
	00 00		 mov	 DWORD PTR S$[rsp+4], eax
  03807	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  0380e	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  03815	03 c8		 add	 ecx, eax
  03817	8b c1		 mov	 eax, ecx
  03819	89 84 24 3c 01
	00 00		 mov	 DWORD PTR S$[rsp+20], eax

; 193  :     RND(S[5],S[6],S[7],S[0],S[1],S[2],S[3],S[4],43,0xc76c51a3);

  03820	8b 84 24 2c 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+4]
  03827	c1 e8 06	 shr	 eax, 6
  0382a	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  03831	c1 e1 1a	 shl	 ecx, 26
  03834	0b c1		 or	 eax, ecx
  03836	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  0383d	c1 e9 0b	 shr	 ecx, 11
  03840	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  03847	c1 e2 15	 shl	 edx, 21
  0384a	0b ca		 or	 ecx, edx
  0384c	33 c1		 xor	 eax, ecx
  0384e	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  03855	c1 e9 19	 shr	 ecx, 25
  03858	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  0385f	c1 e2 07	 shl	 edx, 7
  03862	0b ca		 or	 ecx, edx
  03864	33 c1		 xor	 eax, ecx
  03866	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  0386d	03 c8		 add	 ecx, eax
  0386f	8b c1		 mov	 eax, ecx
  03871	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  03878	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  0387f	33 d1		 xor	 edx, ecx
  03881	8b ca		 mov	 ecx, edx
  03883	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  0388a	23 d1		 and	 edx, ecx
  0388c	8b ca		 mov	 ecx, edx
  0388e	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  03895	33 d1		 xor	 edx, ecx
  03897	8b ca		 mov	 ecx, edx
  03899	8b 94 24 cc 00
	00 00		 mov	 edx, DWORD PTR W$[rsp+172]
  038a0	03 d0		 add	 edx, eax
  038a2	8b c2		 mov	 eax, edx
  038a4	ba a3 51 6c c7	 mov	 edx, -949202525		; ffffffffc76c51a3H
  038a9	48 8d 0c 11	 lea	 rcx, QWORD PTR [rcx+rdx]
  038ad	03 c1		 add	 eax, ecx
  038af	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  038b6	8b 84 24 3c 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+20]
  038bd	c1 e8 02	 shr	 eax, 2
  038c0	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  038c7	c1 e1 1e	 shl	 ecx, 30
  038ca	0b c1		 or	 eax, ecx
  038cc	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  038d3	c1 e9 0d	 shr	 ecx, 13
  038d6	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  038dd	c1 e2 13	 shl	 edx, 19
  038e0	0b ca		 or	 ecx, edx
  038e2	33 c1		 xor	 eax, ecx
  038e4	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  038eb	c1 e9 16	 shr	 ecx, 22
  038ee	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  038f5	c1 e2 0a	 shl	 edx, 10
  038f8	0b ca		 or	 ecx, edx
  038fa	33 c1		 xor	 eax, ecx
  038fc	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  03903	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  0390a	0b d1		 or	 edx, ecx
  0390c	8b ca		 mov	 ecx, edx
  0390e	23 8c 24 44 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+28]
  03915	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  0391c	44 8b 84 24 3c
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+20]
  03924	44 23 c2	 and	 r8d, edx
  03927	41 8b d0	 mov	 edx, r8d
  0392a	0b ca		 or	 ecx, edx
  0392c	03 c1		 add	 eax, ecx
  0392e	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  03935	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  0393c	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  03943	03 c8		 add	 ecx, eax
  03945	8b c1		 mov	 eax, ecx
  03947	89 84 24 28 01
	00 00		 mov	 DWORD PTR S$[rsp], eax
  0394e	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  03955	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  0395c	03 c8		 add	 ecx, eax
  0395e	8b c1		 mov	 eax, ecx
  03960	89 84 24 38 01
	00 00		 mov	 DWORD PTR S$[rsp+16], eax

; 194  :     RND(S[4],S[5],S[6],S[7],S[0],S[1],S[2],S[3],44,0xd192e819);

  03967	8b 84 24 28 01
	00 00		 mov	 eax, DWORD PTR S$[rsp]
  0396e	c1 e8 06	 shr	 eax, 6
  03971	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  03978	c1 e1 1a	 shl	 ecx, 26
  0397b	0b c1		 or	 eax, ecx
  0397d	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  03984	c1 e9 0b	 shr	 ecx, 11
  03987	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  0398e	c1 e2 15	 shl	 edx, 21
  03991	0b ca		 or	 ecx, edx
  03993	33 c1		 xor	 eax, ecx
  03995	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  0399c	c1 e9 19	 shr	 ecx, 25
  0399f	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  039a6	c1 e2 07	 shl	 edx, 7
  039a9	0b ca		 or	 ecx, edx
  039ab	33 c1		 xor	 eax, ecx
  039ad	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  039b4	03 c8		 add	 ecx, eax
  039b6	8b c1		 mov	 eax, ecx
  039b8	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  039bf	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  039c6	33 d1		 xor	 edx, ecx
  039c8	8b ca		 mov	 ecx, edx
  039ca	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  039d1	23 d1		 and	 edx, ecx
  039d3	8b ca		 mov	 ecx, edx
  039d5	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  039dc	33 d1		 xor	 edx, ecx
  039de	8b ca		 mov	 ecx, edx
  039e0	8b 94 24 d0 00
	00 00		 mov	 edx, DWORD PTR W$[rsp+176]
  039e7	03 d0		 add	 edx, eax
  039e9	8b c2		 mov	 eax, edx
  039eb	ba 19 e8 92 d1	 mov	 edx, -778901479		; ffffffffd192e819H
  039f0	48 8d 0c 11	 lea	 rcx, QWORD PTR [rcx+rdx]
  039f4	03 c1		 add	 eax, ecx
  039f6	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  039fd	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+16]
  03a04	c1 e8 02	 shr	 eax, 2
  03a07	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  03a0e	c1 e1 1e	 shl	 ecx, 30
  03a11	0b c1		 or	 eax, ecx
  03a13	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  03a1a	c1 e9 0d	 shr	 ecx, 13
  03a1d	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  03a24	c1 e2 13	 shl	 edx, 19
  03a27	0b ca		 or	 ecx, edx
  03a29	33 c1		 xor	 eax, ecx
  03a2b	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  03a32	c1 e9 16	 shr	 ecx, 22
  03a35	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  03a3c	c1 e2 0a	 shl	 edx, 10
  03a3f	0b ca		 or	 ecx, edx
  03a41	33 c1		 xor	 eax, ecx
  03a43	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  03a4a	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  03a51	0b d1		 or	 edx, ecx
  03a53	8b ca		 mov	 ecx, edx
  03a55	23 8c 24 40 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+24]
  03a5c	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  03a63	44 8b 84 24 38
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+16]
  03a6b	44 23 c2	 and	 r8d, edx
  03a6e	41 8b d0	 mov	 edx, r8d
  03a71	0b ca		 or	 ecx, edx
  03a73	03 c1		 add	 eax, ecx
  03a75	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  03a7c	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  03a83	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  03a8a	03 c8		 add	 ecx, eax
  03a8c	8b c1		 mov	 eax, ecx
  03a8e	89 84 24 44 01
	00 00		 mov	 DWORD PTR S$[rsp+28], eax
  03a95	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  03a9c	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  03aa3	03 c8		 add	 ecx, eax
  03aa5	8b c1		 mov	 eax, ecx
  03aa7	89 84 24 34 01
	00 00		 mov	 DWORD PTR S$[rsp+12], eax

; 195  :     RND(S[3],S[4],S[5],S[6],S[7],S[0],S[1],S[2],45,0xd6990624);

  03aae	8b 84 24 44 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+28]
  03ab5	c1 e8 06	 shr	 eax, 6
  03ab8	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  03abf	c1 e1 1a	 shl	 ecx, 26
  03ac2	0b c1		 or	 eax, ecx
  03ac4	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  03acb	c1 e9 0b	 shr	 ecx, 11
  03ace	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  03ad5	c1 e2 15	 shl	 edx, 21
  03ad8	0b ca		 or	 ecx, edx
  03ada	33 c1		 xor	 eax, ecx
  03adc	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  03ae3	c1 e9 19	 shr	 ecx, 25
  03ae6	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  03aed	c1 e2 07	 shl	 edx, 7
  03af0	0b ca		 or	 ecx, edx
  03af2	33 c1		 xor	 eax, ecx
  03af4	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  03afb	03 c8		 add	 ecx, eax
  03afd	8b c1		 mov	 eax, ecx
  03aff	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  03b06	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  03b0d	33 d1		 xor	 edx, ecx
  03b0f	8b ca		 mov	 ecx, edx
  03b11	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  03b18	23 d1		 and	 edx, ecx
  03b1a	8b ca		 mov	 ecx, edx
  03b1c	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  03b23	33 d1		 xor	 edx, ecx
  03b25	8b ca		 mov	 ecx, edx
  03b27	8b 94 24 d4 00
	00 00		 mov	 edx, DWORD PTR W$[rsp+180]
  03b2e	03 d0		 add	 edx, eax
  03b30	8b c2		 mov	 eax, edx
  03b32	ba 24 06 99 d6	 mov	 edx, -694614492		; ffffffffd6990624H
  03b37	48 8d 0c 11	 lea	 rcx, QWORD PTR [rcx+rdx]
  03b3b	03 c1		 add	 eax, ecx
  03b3d	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  03b44	8b 84 24 34 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+12]
  03b4b	c1 e8 02	 shr	 eax, 2
  03b4e	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  03b55	c1 e1 1e	 shl	 ecx, 30
  03b58	0b c1		 or	 eax, ecx
  03b5a	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  03b61	c1 e9 0d	 shr	 ecx, 13
  03b64	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  03b6b	c1 e2 13	 shl	 edx, 19
  03b6e	0b ca		 or	 ecx, edx
  03b70	33 c1		 xor	 eax, ecx
  03b72	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  03b79	c1 e9 16	 shr	 ecx, 22
  03b7c	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  03b83	c1 e2 0a	 shl	 edx, 10
  03b86	0b ca		 or	 ecx, edx
  03b88	33 c1		 xor	 eax, ecx
  03b8a	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  03b91	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  03b98	0b d1		 or	 edx, ecx
  03b9a	8b ca		 mov	 ecx, edx
  03b9c	23 8c 24 3c 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+20]
  03ba3	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  03baa	44 8b 84 24 34
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+12]
  03bb2	44 23 c2	 and	 r8d, edx
  03bb5	41 8b d0	 mov	 edx, r8d
  03bb8	0b ca		 or	 ecx, edx
  03bba	03 c1		 add	 eax, ecx
  03bbc	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  03bc3	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  03bca	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  03bd1	03 c8		 add	 ecx, eax
  03bd3	8b c1		 mov	 eax, ecx
  03bd5	89 84 24 40 01
	00 00		 mov	 DWORD PTR S$[rsp+24], eax
  03bdc	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  03be3	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  03bea	03 c8		 add	 ecx, eax
  03bec	8b c1		 mov	 eax, ecx
  03bee	89 84 24 30 01
	00 00		 mov	 DWORD PTR S$[rsp+8], eax

; 196  :     RND(S[2],S[3],S[4],S[5],S[6],S[7],S[0],S[1],46,0xf40e3585);

  03bf5	8b 84 24 40 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+24]
  03bfc	c1 e8 06	 shr	 eax, 6
  03bff	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  03c06	c1 e1 1a	 shl	 ecx, 26
  03c09	0b c1		 or	 eax, ecx
  03c0b	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  03c12	c1 e9 0b	 shr	 ecx, 11
  03c15	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  03c1c	c1 e2 15	 shl	 edx, 21
  03c1f	0b ca		 or	 ecx, edx
  03c21	33 c1		 xor	 eax, ecx
  03c23	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  03c2a	c1 e9 19	 shr	 ecx, 25
  03c2d	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  03c34	c1 e2 07	 shl	 edx, 7
  03c37	0b ca		 or	 ecx, edx
  03c39	33 c1		 xor	 eax, ecx
  03c3b	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  03c42	03 c8		 add	 ecx, eax
  03c44	8b c1		 mov	 eax, ecx
  03c46	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  03c4d	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  03c54	33 d1		 xor	 edx, ecx
  03c56	8b ca		 mov	 ecx, edx
  03c58	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  03c5f	23 d1		 and	 edx, ecx
  03c61	8b ca		 mov	 ecx, edx
  03c63	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  03c6a	33 d1		 xor	 edx, ecx
  03c6c	8b ca		 mov	 ecx, edx
  03c6e	8b 94 24 d8 00
	00 00		 mov	 edx, DWORD PTR W$[rsp+184]
  03c75	03 d0		 add	 edx, eax
  03c77	8b c2		 mov	 eax, edx
  03c79	ba 85 35 0e f4	 mov	 edx, -200395387		; fffffffff40e3585H
  03c7e	48 8d 0c 11	 lea	 rcx, QWORD PTR [rcx+rdx]
  03c82	03 c1		 add	 eax, ecx
  03c84	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  03c8b	8b 84 24 30 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+8]
  03c92	c1 e8 02	 shr	 eax, 2
  03c95	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  03c9c	c1 e1 1e	 shl	 ecx, 30
  03c9f	0b c1		 or	 eax, ecx
  03ca1	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  03ca8	c1 e9 0d	 shr	 ecx, 13
  03cab	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  03cb2	c1 e2 13	 shl	 edx, 19
  03cb5	0b ca		 or	 ecx, edx
  03cb7	33 c1		 xor	 eax, ecx
  03cb9	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  03cc0	c1 e9 16	 shr	 ecx, 22
  03cc3	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  03cca	c1 e2 0a	 shl	 edx, 10
  03ccd	0b ca		 or	 ecx, edx
  03ccf	33 c1		 xor	 eax, ecx
  03cd1	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  03cd8	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  03cdf	0b d1		 or	 edx, ecx
  03ce1	8b ca		 mov	 ecx, edx
  03ce3	23 8c 24 38 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+16]
  03cea	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  03cf1	44 8b 84 24 30
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+8]
  03cf9	44 23 c2	 and	 r8d, edx
  03cfc	41 8b d0	 mov	 edx, r8d
  03cff	0b ca		 or	 ecx, edx
  03d01	03 c1		 add	 eax, ecx
  03d03	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  03d0a	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  03d11	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  03d18	03 c8		 add	 ecx, eax
  03d1a	8b c1		 mov	 eax, ecx
  03d1c	89 84 24 3c 01
	00 00		 mov	 DWORD PTR S$[rsp+20], eax
  03d23	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  03d2a	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  03d31	03 c8		 add	 ecx, eax
  03d33	8b c1		 mov	 eax, ecx
  03d35	89 84 24 2c 01
	00 00		 mov	 DWORD PTR S$[rsp+4], eax

; 197  :     RND(S[1],S[2],S[3],S[4],S[5],S[6],S[7],S[0],47,0x106aa070);

  03d3c	8b 84 24 3c 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+20]
  03d43	c1 e8 06	 shr	 eax, 6
  03d46	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  03d4d	c1 e1 1a	 shl	 ecx, 26
  03d50	0b c1		 or	 eax, ecx
  03d52	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  03d59	c1 e9 0b	 shr	 ecx, 11
  03d5c	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  03d63	c1 e2 15	 shl	 edx, 21
  03d66	0b ca		 or	 ecx, edx
  03d68	33 c1		 xor	 eax, ecx
  03d6a	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  03d71	c1 e9 19	 shr	 ecx, 25
  03d74	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  03d7b	c1 e2 07	 shl	 edx, 7
  03d7e	0b ca		 or	 ecx, edx
  03d80	33 c1		 xor	 eax, ecx
  03d82	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  03d89	03 c8		 add	 ecx, eax
  03d8b	8b c1		 mov	 eax, ecx
  03d8d	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  03d94	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  03d9b	33 d1		 xor	 edx, ecx
  03d9d	8b ca		 mov	 ecx, edx
  03d9f	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  03da6	23 d1		 and	 edx, ecx
  03da8	8b ca		 mov	 ecx, edx
  03daa	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  03db1	33 d1		 xor	 edx, ecx
  03db3	8b ca		 mov	 ecx, edx
  03db5	8b 94 24 dc 00
	00 00		 mov	 edx, DWORD PTR W$[rsp+188]
  03dbc	03 d0		 add	 edx, eax
  03dbe	8b c2		 mov	 eax, edx
  03dc0	8d 84 01 70 a0
	6a 10		 lea	 eax, DWORD PTR [rcx+rax+275423344]
  03dc7	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  03dce	8b 84 24 2c 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+4]
  03dd5	c1 e8 02	 shr	 eax, 2
  03dd8	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  03ddf	c1 e1 1e	 shl	 ecx, 30
  03de2	0b c1		 or	 eax, ecx
  03de4	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  03deb	c1 e9 0d	 shr	 ecx, 13
  03dee	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  03df5	c1 e2 13	 shl	 edx, 19
  03df8	0b ca		 or	 ecx, edx
  03dfa	33 c1		 xor	 eax, ecx
  03dfc	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  03e03	c1 e9 16	 shr	 ecx, 22
  03e06	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  03e0d	c1 e2 0a	 shl	 edx, 10
  03e10	0b ca		 or	 ecx, edx
  03e12	33 c1		 xor	 eax, ecx
  03e14	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  03e1b	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  03e22	0b d1		 or	 edx, ecx
  03e24	8b ca		 mov	 ecx, edx
  03e26	23 8c 24 34 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+12]
  03e2d	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  03e34	44 8b 84 24 2c
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+4]
  03e3c	44 23 c2	 and	 r8d, edx
  03e3f	41 8b d0	 mov	 edx, r8d
  03e42	0b ca		 or	 ecx, edx
  03e44	03 c1		 add	 eax, ecx
  03e46	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  03e4d	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  03e54	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  03e5b	03 c8		 add	 ecx, eax
  03e5d	8b c1		 mov	 eax, ecx
  03e5f	89 84 24 38 01
	00 00		 mov	 DWORD PTR S$[rsp+16], eax
  03e66	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  03e6d	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  03e74	03 c8		 add	 ecx, eax
  03e76	8b c1		 mov	 eax, ecx
  03e78	89 84 24 28 01
	00 00		 mov	 DWORD PTR S$[rsp], eax

; 198  :     RND(S[0],S[1],S[2],S[3],S[4],S[5],S[6],S[7],48,0x19a4c116);

  03e7f	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+16]
  03e86	c1 e8 06	 shr	 eax, 6
  03e89	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  03e90	c1 e1 1a	 shl	 ecx, 26
  03e93	0b c1		 or	 eax, ecx
  03e95	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  03e9c	c1 e9 0b	 shr	 ecx, 11
  03e9f	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  03ea6	c1 e2 15	 shl	 edx, 21
  03ea9	0b ca		 or	 ecx, edx
  03eab	33 c1		 xor	 eax, ecx
  03ead	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  03eb4	c1 e9 19	 shr	 ecx, 25
  03eb7	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  03ebe	c1 e2 07	 shl	 edx, 7
  03ec1	0b ca		 or	 ecx, edx
  03ec3	33 c1		 xor	 eax, ecx
  03ec5	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  03ecc	03 c8		 add	 ecx, eax
  03ece	8b c1		 mov	 eax, ecx
  03ed0	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  03ed7	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  03ede	33 d1		 xor	 edx, ecx
  03ee0	8b ca		 mov	 ecx, edx
  03ee2	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  03ee9	23 d1		 and	 edx, ecx
  03eeb	8b ca		 mov	 ecx, edx
  03eed	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  03ef4	33 d1		 xor	 edx, ecx
  03ef6	8b ca		 mov	 ecx, edx
  03ef8	8b 94 24 e0 00
	00 00		 mov	 edx, DWORD PTR W$[rsp+192]
  03eff	03 d0		 add	 edx, eax
  03f01	8b c2		 mov	 eax, edx
  03f03	8d 84 01 16 c1
	a4 19		 lea	 eax, DWORD PTR [rcx+rax+430227734]
  03f0a	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  03f11	8b 84 24 28 01
	00 00		 mov	 eax, DWORD PTR S$[rsp]
  03f18	c1 e8 02	 shr	 eax, 2
  03f1b	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  03f22	c1 e1 1e	 shl	 ecx, 30
  03f25	0b c1		 or	 eax, ecx
  03f27	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  03f2e	c1 e9 0d	 shr	 ecx, 13
  03f31	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  03f38	c1 e2 13	 shl	 edx, 19
  03f3b	0b ca		 or	 ecx, edx
  03f3d	33 c1		 xor	 eax, ecx
  03f3f	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  03f46	c1 e9 16	 shr	 ecx, 22
  03f49	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  03f50	c1 e2 0a	 shl	 edx, 10
  03f53	0b ca		 or	 ecx, edx
  03f55	33 c1		 xor	 eax, ecx
  03f57	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  03f5e	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  03f65	0b d1		 or	 edx, ecx
  03f67	8b ca		 mov	 ecx, edx
  03f69	23 8c 24 30 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+8]
  03f70	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  03f77	44 8b 84 24 28
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp]
  03f7f	44 23 c2	 and	 r8d, edx
  03f82	41 8b d0	 mov	 edx, r8d
  03f85	0b ca		 or	 ecx, edx
  03f87	03 c1		 add	 eax, ecx
  03f89	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  03f90	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  03f97	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  03f9e	03 c8		 add	 ecx, eax
  03fa0	8b c1		 mov	 eax, ecx
  03fa2	89 84 24 34 01
	00 00		 mov	 DWORD PTR S$[rsp+12], eax
  03fa9	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  03fb0	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  03fb7	03 c8		 add	 ecx, eax
  03fb9	8b c1		 mov	 eax, ecx
  03fbb	89 84 24 44 01
	00 00		 mov	 DWORD PTR S$[rsp+28], eax

; 199  :     RND(S[7],S[0],S[1],S[2],S[3],S[4],S[5],S[6],49,0x1e376c08);

  03fc2	8b 84 24 34 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+12]
  03fc9	c1 e8 06	 shr	 eax, 6
  03fcc	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  03fd3	c1 e1 1a	 shl	 ecx, 26
  03fd6	0b c1		 or	 eax, ecx
  03fd8	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  03fdf	c1 e9 0b	 shr	 ecx, 11
  03fe2	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  03fe9	c1 e2 15	 shl	 edx, 21
  03fec	0b ca		 or	 ecx, edx
  03fee	33 c1		 xor	 eax, ecx
  03ff0	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  03ff7	c1 e9 19	 shr	 ecx, 25
  03ffa	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  04001	c1 e2 07	 shl	 edx, 7
  04004	0b ca		 or	 ecx, edx
  04006	33 c1		 xor	 eax, ecx
  04008	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  0400f	03 c8		 add	 ecx, eax
  04011	8b c1		 mov	 eax, ecx
  04013	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  0401a	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  04021	33 d1		 xor	 edx, ecx
  04023	8b ca		 mov	 ecx, edx
  04025	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  0402c	23 d1		 and	 edx, ecx
  0402e	8b ca		 mov	 ecx, edx
  04030	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  04037	33 d1		 xor	 edx, ecx
  04039	8b ca		 mov	 ecx, edx
  0403b	8b 94 24 e4 00
	00 00		 mov	 edx, DWORD PTR W$[rsp+196]
  04042	03 d0		 add	 edx, eax
  04044	8b c2		 mov	 eax, edx
  04046	8d 84 01 08 6c
	37 1e		 lea	 eax, DWORD PTR [rcx+rax+506948616]
  0404d	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  04054	8b 84 24 44 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+28]
  0405b	c1 e8 02	 shr	 eax, 2
  0405e	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  04065	c1 e1 1e	 shl	 ecx, 30
  04068	0b c1		 or	 eax, ecx
  0406a	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  04071	c1 e9 0d	 shr	 ecx, 13
  04074	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  0407b	c1 e2 13	 shl	 edx, 19
  0407e	0b ca		 or	 ecx, edx
  04080	33 c1		 xor	 eax, ecx
  04082	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  04089	c1 e9 16	 shr	 ecx, 22
  0408c	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  04093	c1 e2 0a	 shl	 edx, 10
  04096	0b ca		 or	 ecx, edx
  04098	33 c1		 xor	 eax, ecx
  0409a	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  040a1	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  040a8	0b d1		 or	 edx, ecx
  040aa	8b ca		 mov	 ecx, edx
  040ac	23 8c 24 2c 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+4]
  040b3	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  040ba	44 8b 84 24 44
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+28]
  040c2	44 23 c2	 and	 r8d, edx
  040c5	41 8b d0	 mov	 edx, r8d
  040c8	0b ca		 or	 ecx, edx
  040ca	03 c1		 add	 eax, ecx
  040cc	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  040d3	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  040da	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  040e1	03 c8		 add	 ecx, eax
  040e3	8b c1		 mov	 eax, ecx
  040e5	89 84 24 30 01
	00 00		 mov	 DWORD PTR S$[rsp+8], eax
  040ec	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  040f3	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  040fa	03 c8		 add	 ecx, eax
  040fc	8b c1		 mov	 eax, ecx
  040fe	89 84 24 40 01
	00 00		 mov	 DWORD PTR S$[rsp+24], eax

; 200  :     RND(S[6],S[7],S[0],S[1],S[2],S[3],S[4],S[5],50,0x2748774c);

  04105	8b 84 24 30 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+8]
  0410c	c1 e8 06	 shr	 eax, 6
  0410f	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  04116	c1 e1 1a	 shl	 ecx, 26
  04119	0b c1		 or	 eax, ecx
  0411b	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  04122	c1 e9 0b	 shr	 ecx, 11
  04125	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  0412c	c1 e2 15	 shl	 edx, 21
  0412f	0b ca		 or	 ecx, edx
  04131	33 c1		 xor	 eax, ecx
  04133	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  0413a	c1 e9 19	 shr	 ecx, 25
  0413d	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  04144	c1 e2 07	 shl	 edx, 7
  04147	0b ca		 or	 ecx, edx
  04149	33 c1		 xor	 eax, ecx
  0414b	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  04152	03 c8		 add	 ecx, eax
  04154	8b c1		 mov	 eax, ecx
  04156	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  0415d	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  04164	33 d1		 xor	 edx, ecx
  04166	8b ca		 mov	 ecx, edx
  04168	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  0416f	23 d1		 and	 edx, ecx
  04171	8b ca		 mov	 ecx, edx
  04173	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  0417a	33 d1		 xor	 edx, ecx
  0417c	8b ca		 mov	 ecx, edx
  0417e	8b 94 24 e8 00
	00 00		 mov	 edx, DWORD PTR W$[rsp+200]
  04185	03 d0		 add	 edx, eax
  04187	8b c2		 mov	 eax, edx
  04189	8d 84 01 4c 77
	48 27		 lea	 eax, DWORD PTR [rcx+rax+659060556]
  04190	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  04197	8b 84 24 40 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+24]
  0419e	c1 e8 02	 shr	 eax, 2
  041a1	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  041a8	c1 e1 1e	 shl	 ecx, 30
  041ab	0b c1		 or	 eax, ecx
  041ad	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  041b4	c1 e9 0d	 shr	 ecx, 13
  041b7	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  041be	c1 e2 13	 shl	 edx, 19
  041c1	0b ca		 or	 ecx, edx
  041c3	33 c1		 xor	 eax, ecx
  041c5	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  041cc	c1 e9 16	 shr	 ecx, 22
  041cf	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  041d6	c1 e2 0a	 shl	 edx, 10
  041d9	0b ca		 or	 ecx, edx
  041db	33 c1		 xor	 eax, ecx
  041dd	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  041e4	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  041eb	0b d1		 or	 edx, ecx
  041ed	8b ca		 mov	 ecx, edx
  041ef	23 8c 24 28 01
	00 00		 and	 ecx, DWORD PTR S$[rsp]
  041f6	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  041fd	44 8b 84 24 40
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+24]
  04205	44 23 c2	 and	 r8d, edx
  04208	41 8b d0	 mov	 edx, r8d
  0420b	0b ca		 or	 ecx, edx
  0420d	03 c1		 add	 eax, ecx
  0420f	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  04216	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  0421d	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  04224	03 c8		 add	 ecx, eax
  04226	8b c1		 mov	 eax, ecx
  04228	89 84 24 2c 01
	00 00		 mov	 DWORD PTR S$[rsp+4], eax
  0422f	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  04236	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  0423d	03 c8		 add	 ecx, eax
  0423f	8b c1		 mov	 eax, ecx
  04241	89 84 24 3c 01
	00 00		 mov	 DWORD PTR S$[rsp+20], eax

; 201  :     RND(S[5],S[6],S[7],S[0],S[1],S[2],S[3],S[4],51,0x34b0bcb5);

  04248	8b 84 24 2c 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+4]
  0424f	c1 e8 06	 shr	 eax, 6
  04252	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  04259	c1 e1 1a	 shl	 ecx, 26
  0425c	0b c1		 or	 eax, ecx
  0425e	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  04265	c1 e9 0b	 shr	 ecx, 11
  04268	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  0426f	c1 e2 15	 shl	 edx, 21
  04272	0b ca		 or	 ecx, edx
  04274	33 c1		 xor	 eax, ecx
  04276	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  0427d	c1 e9 19	 shr	 ecx, 25
  04280	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  04287	c1 e2 07	 shl	 edx, 7
  0428a	0b ca		 or	 ecx, edx
  0428c	33 c1		 xor	 eax, ecx
  0428e	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  04295	03 c8		 add	 ecx, eax
  04297	8b c1		 mov	 eax, ecx
  04299	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  042a0	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  042a7	33 d1		 xor	 edx, ecx
  042a9	8b ca		 mov	 ecx, edx
  042ab	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  042b2	23 d1		 and	 edx, ecx
  042b4	8b ca		 mov	 ecx, edx
  042b6	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  042bd	33 d1		 xor	 edx, ecx
  042bf	8b ca		 mov	 ecx, edx
  042c1	8b 94 24 ec 00
	00 00		 mov	 edx, DWORD PTR W$[rsp+204]
  042c8	03 d0		 add	 edx, eax
  042ca	8b c2		 mov	 eax, edx
  042cc	8d 84 01 b5 bc
	b0 34		 lea	 eax, DWORD PTR [rcx+rax+883997877]
  042d3	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  042da	8b 84 24 3c 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+20]
  042e1	c1 e8 02	 shr	 eax, 2
  042e4	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  042eb	c1 e1 1e	 shl	 ecx, 30
  042ee	0b c1		 or	 eax, ecx
  042f0	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  042f7	c1 e9 0d	 shr	 ecx, 13
  042fa	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  04301	c1 e2 13	 shl	 edx, 19
  04304	0b ca		 or	 ecx, edx
  04306	33 c1		 xor	 eax, ecx
  04308	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  0430f	c1 e9 16	 shr	 ecx, 22
  04312	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  04319	c1 e2 0a	 shl	 edx, 10
  0431c	0b ca		 or	 ecx, edx
  0431e	33 c1		 xor	 eax, ecx
  04320	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  04327	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  0432e	0b d1		 or	 edx, ecx
  04330	8b ca		 mov	 ecx, edx
  04332	23 8c 24 44 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+28]
  04339	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  04340	44 8b 84 24 3c
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+20]
  04348	44 23 c2	 and	 r8d, edx
  0434b	41 8b d0	 mov	 edx, r8d
  0434e	0b ca		 or	 ecx, edx
  04350	03 c1		 add	 eax, ecx
  04352	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  04359	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  04360	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  04367	03 c8		 add	 ecx, eax
  04369	8b c1		 mov	 eax, ecx
  0436b	89 84 24 28 01
	00 00		 mov	 DWORD PTR S$[rsp], eax
  04372	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  04379	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  04380	03 c8		 add	 ecx, eax
  04382	8b c1		 mov	 eax, ecx
  04384	89 84 24 38 01
	00 00		 mov	 DWORD PTR S$[rsp+16], eax

; 202  :     RND(S[4],S[5],S[6],S[7],S[0],S[1],S[2],S[3],52,0x391c0cb3);

  0438b	8b 84 24 28 01
	00 00		 mov	 eax, DWORD PTR S$[rsp]
  04392	c1 e8 06	 shr	 eax, 6
  04395	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  0439c	c1 e1 1a	 shl	 ecx, 26
  0439f	0b c1		 or	 eax, ecx
  043a1	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  043a8	c1 e9 0b	 shr	 ecx, 11
  043ab	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  043b2	c1 e2 15	 shl	 edx, 21
  043b5	0b ca		 or	 ecx, edx
  043b7	33 c1		 xor	 eax, ecx
  043b9	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  043c0	c1 e9 19	 shr	 ecx, 25
  043c3	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  043ca	c1 e2 07	 shl	 edx, 7
  043cd	0b ca		 or	 ecx, edx
  043cf	33 c1		 xor	 eax, ecx
  043d1	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  043d8	03 c8		 add	 ecx, eax
  043da	8b c1		 mov	 eax, ecx
  043dc	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  043e3	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  043ea	33 d1		 xor	 edx, ecx
  043ec	8b ca		 mov	 ecx, edx
  043ee	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  043f5	23 d1		 and	 edx, ecx
  043f7	8b ca		 mov	 ecx, edx
  043f9	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  04400	33 d1		 xor	 edx, ecx
  04402	8b ca		 mov	 ecx, edx
  04404	8b 94 24 f0 00
	00 00		 mov	 edx, DWORD PTR W$[rsp+208]
  0440b	03 d0		 add	 edx, eax
  0440d	8b c2		 mov	 eax, edx
  0440f	8d 84 01 b3 0c
	1c 39		 lea	 eax, DWORD PTR [rcx+rax+958139571]
  04416	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  0441d	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+16]
  04424	c1 e8 02	 shr	 eax, 2
  04427	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  0442e	c1 e1 1e	 shl	 ecx, 30
  04431	0b c1		 or	 eax, ecx
  04433	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  0443a	c1 e9 0d	 shr	 ecx, 13
  0443d	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  04444	c1 e2 13	 shl	 edx, 19
  04447	0b ca		 or	 ecx, edx
  04449	33 c1		 xor	 eax, ecx
  0444b	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  04452	c1 e9 16	 shr	 ecx, 22
  04455	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  0445c	c1 e2 0a	 shl	 edx, 10
  0445f	0b ca		 or	 ecx, edx
  04461	33 c1		 xor	 eax, ecx
  04463	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  0446a	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  04471	0b d1		 or	 edx, ecx
  04473	8b ca		 mov	 ecx, edx
  04475	23 8c 24 40 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+24]
  0447c	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  04483	44 8b 84 24 38
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+16]
  0448b	44 23 c2	 and	 r8d, edx
  0448e	41 8b d0	 mov	 edx, r8d
  04491	0b ca		 or	 ecx, edx
  04493	03 c1		 add	 eax, ecx
  04495	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  0449c	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  044a3	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  044aa	03 c8		 add	 ecx, eax
  044ac	8b c1		 mov	 eax, ecx
  044ae	89 84 24 44 01
	00 00		 mov	 DWORD PTR S$[rsp+28], eax
  044b5	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  044bc	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  044c3	03 c8		 add	 ecx, eax
  044c5	8b c1		 mov	 eax, ecx
  044c7	89 84 24 34 01
	00 00		 mov	 DWORD PTR S$[rsp+12], eax

; 203  :     RND(S[3],S[4],S[5],S[6],S[7],S[0],S[1],S[2],53,0x4ed8aa4a);

  044ce	8b 84 24 44 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+28]
  044d5	c1 e8 06	 shr	 eax, 6
  044d8	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  044df	c1 e1 1a	 shl	 ecx, 26
  044e2	0b c1		 or	 eax, ecx
  044e4	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  044eb	c1 e9 0b	 shr	 ecx, 11
  044ee	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  044f5	c1 e2 15	 shl	 edx, 21
  044f8	0b ca		 or	 ecx, edx
  044fa	33 c1		 xor	 eax, ecx
  044fc	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  04503	c1 e9 19	 shr	 ecx, 25
  04506	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  0450d	c1 e2 07	 shl	 edx, 7
  04510	0b ca		 or	 ecx, edx
  04512	33 c1		 xor	 eax, ecx
  04514	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  0451b	03 c8		 add	 ecx, eax
  0451d	8b c1		 mov	 eax, ecx
  0451f	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  04526	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  0452d	33 d1		 xor	 edx, ecx
  0452f	8b ca		 mov	 ecx, edx
  04531	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  04538	23 d1		 and	 edx, ecx
  0453a	8b ca		 mov	 ecx, edx
  0453c	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  04543	33 d1		 xor	 edx, ecx
  04545	8b ca		 mov	 ecx, edx
  04547	8b 94 24 f4 00
	00 00		 mov	 edx, DWORD PTR W$[rsp+212]
  0454e	03 d0		 add	 edx, eax
  04550	8b c2		 mov	 eax, edx
  04552	8d 84 01 4a aa
	d8 4e		 lea	 eax, DWORD PTR [rcx+rax+1322822218]
  04559	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  04560	8b 84 24 34 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+12]
  04567	c1 e8 02	 shr	 eax, 2
  0456a	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  04571	c1 e1 1e	 shl	 ecx, 30
  04574	0b c1		 or	 eax, ecx
  04576	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  0457d	c1 e9 0d	 shr	 ecx, 13
  04580	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  04587	c1 e2 13	 shl	 edx, 19
  0458a	0b ca		 or	 ecx, edx
  0458c	33 c1		 xor	 eax, ecx
  0458e	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  04595	c1 e9 16	 shr	 ecx, 22
  04598	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  0459f	c1 e2 0a	 shl	 edx, 10
  045a2	0b ca		 or	 ecx, edx
  045a4	33 c1		 xor	 eax, ecx
  045a6	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  045ad	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  045b4	0b d1		 or	 edx, ecx
  045b6	8b ca		 mov	 ecx, edx
  045b8	23 8c 24 3c 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+20]
  045bf	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  045c6	44 8b 84 24 34
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+12]
  045ce	44 23 c2	 and	 r8d, edx
  045d1	41 8b d0	 mov	 edx, r8d
  045d4	0b ca		 or	 ecx, edx
  045d6	03 c1		 add	 eax, ecx
  045d8	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  045df	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  045e6	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  045ed	03 c8		 add	 ecx, eax
  045ef	8b c1		 mov	 eax, ecx
  045f1	89 84 24 40 01
	00 00		 mov	 DWORD PTR S$[rsp+24], eax
  045f8	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  045ff	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  04606	03 c8		 add	 ecx, eax
  04608	8b c1		 mov	 eax, ecx
  0460a	89 84 24 30 01
	00 00		 mov	 DWORD PTR S$[rsp+8], eax

; 204  :     RND(S[2],S[3],S[4],S[5],S[6],S[7],S[0],S[1],54,0x5b9cca4f);

  04611	8b 84 24 40 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+24]
  04618	c1 e8 06	 shr	 eax, 6
  0461b	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  04622	c1 e1 1a	 shl	 ecx, 26
  04625	0b c1		 or	 eax, ecx
  04627	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  0462e	c1 e9 0b	 shr	 ecx, 11
  04631	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  04638	c1 e2 15	 shl	 edx, 21
  0463b	0b ca		 or	 ecx, edx
  0463d	33 c1		 xor	 eax, ecx
  0463f	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  04646	c1 e9 19	 shr	 ecx, 25
  04649	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  04650	c1 e2 07	 shl	 edx, 7
  04653	0b ca		 or	 ecx, edx
  04655	33 c1		 xor	 eax, ecx
  04657	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  0465e	03 c8		 add	 ecx, eax
  04660	8b c1		 mov	 eax, ecx
  04662	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  04669	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  04670	33 d1		 xor	 edx, ecx
  04672	8b ca		 mov	 ecx, edx
  04674	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  0467b	23 d1		 and	 edx, ecx
  0467d	8b ca		 mov	 ecx, edx
  0467f	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  04686	33 d1		 xor	 edx, ecx
  04688	8b ca		 mov	 ecx, edx
  0468a	8b 94 24 f8 00
	00 00		 mov	 edx, DWORD PTR W$[rsp+216]
  04691	03 d0		 add	 edx, eax
  04693	8b c2		 mov	 eax, edx
  04695	8d 84 01 4f ca
	9c 5b		 lea	 eax, DWORD PTR [rcx+rax+1537002063]
  0469c	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  046a3	8b 84 24 30 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+8]
  046aa	c1 e8 02	 shr	 eax, 2
  046ad	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  046b4	c1 e1 1e	 shl	 ecx, 30
  046b7	0b c1		 or	 eax, ecx
  046b9	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  046c0	c1 e9 0d	 shr	 ecx, 13
  046c3	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  046ca	c1 e2 13	 shl	 edx, 19
  046cd	0b ca		 or	 ecx, edx
  046cf	33 c1		 xor	 eax, ecx
  046d1	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  046d8	c1 e9 16	 shr	 ecx, 22
  046db	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  046e2	c1 e2 0a	 shl	 edx, 10
  046e5	0b ca		 or	 ecx, edx
  046e7	33 c1		 xor	 eax, ecx
  046e9	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  046f0	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  046f7	0b d1		 or	 edx, ecx
  046f9	8b ca		 mov	 ecx, edx
  046fb	23 8c 24 38 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+16]
  04702	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  04709	44 8b 84 24 30
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+8]
  04711	44 23 c2	 and	 r8d, edx
  04714	41 8b d0	 mov	 edx, r8d
  04717	0b ca		 or	 ecx, edx
  04719	03 c1		 add	 eax, ecx
  0471b	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  04722	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  04729	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  04730	03 c8		 add	 ecx, eax
  04732	8b c1		 mov	 eax, ecx
  04734	89 84 24 3c 01
	00 00		 mov	 DWORD PTR S$[rsp+20], eax
  0473b	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  04742	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  04749	03 c8		 add	 ecx, eax
  0474b	8b c1		 mov	 eax, ecx
  0474d	89 84 24 2c 01
	00 00		 mov	 DWORD PTR S$[rsp+4], eax

; 205  :     RND(S[1],S[2],S[3],S[4],S[5],S[6],S[7],S[0],55,0x682e6ff3);

  04754	8b 84 24 3c 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+20]
  0475b	c1 e8 06	 shr	 eax, 6
  0475e	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  04765	c1 e1 1a	 shl	 ecx, 26
  04768	0b c1		 or	 eax, ecx
  0476a	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  04771	c1 e9 0b	 shr	 ecx, 11
  04774	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  0477b	c1 e2 15	 shl	 edx, 21
  0477e	0b ca		 or	 ecx, edx
  04780	33 c1		 xor	 eax, ecx
  04782	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  04789	c1 e9 19	 shr	 ecx, 25
  0478c	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  04793	c1 e2 07	 shl	 edx, 7
  04796	0b ca		 or	 ecx, edx
  04798	33 c1		 xor	 eax, ecx
  0479a	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  047a1	03 c8		 add	 ecx, eax
  047a3	8b c1		 mov	 eax, ecx
  047a5	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  047ac	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  047b3	33 d1		 xor	 edx, ecx
  047b5	8b ca		 mov	 ecx, edx
  047b7	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  047be	23 d1		 and	 edx, ecx
  047c0	8b ca		 mov	 ecx, edx
  047c2	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  047c9	33 d1		 xor	 edx, ecx
  047cb	8b ca		 mov	 ecx, edx
  047cd	8b 94 24 fc 00
	00 00		 mov	 edx, DWORD PTR W$[rsp+220]
  047d4	03 d0		 add	 edx, eax
  047d6	8b c2		 mov	 eax, edx
  047d8	8d 84 01 f3 6f
	2e 68		 lea	 eax, DWORD PTR [rcx+rax+1747873779]
  047df	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  047e6	8b 84 24 2c 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+4]
  047ed	c1 e8 02	 shr	 eax, 2
  047f0	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  047f7	c1 e1 1e	 shl	 ecx, 30
  047fa	0b c1		 or	 eax, ecx
  047fc	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  04803	c1 e9 0d	 shr	 ecx, 13
  04806	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  0480d	c1 e2 13	 shl	 edx, 19
  04810	0b ca		 or	 ecx, edx
  04812	33 c1		 xor	 eax, ecx
  04814	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  0481b	c1 e9 16	 shr	 ecx, 22
  0481e	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  04825	c1 e2 0a	 shl	 edx, 10
  04828	0b ca		 or	 ecx, edx
  0482a	33 c1		 xor	 eax, ecx
  0482c	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  04833	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  0483a	0b d1		 or	 edx, ecx
  0483c	8b ca		 mov	 ecx, edx
  0483e	23 8c 24 34 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+12]
  04845	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  0484c	44 8b 84 24 2c
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+4]
  04854	44 23 c2	 and	 r8d, edx
  04857	41 8b d0	 mov	 edx, r8d
  0485a	0b ca		 or	 ecx, edx
  0485c	03 c1		 add	 eax, ecx
  0485e	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  04865	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  0486c	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  04873	03 c8		 add	 ecx, eax
  04875	8b c1		 mov	 eax, ecx
  04877	89 84 24 38 01
	00 00		 mov	 DWORD PTR S$[rsp+16], eax
  0487e	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  04885	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  0488c	03 c8		 add	 ecx, eax
  0488e	8b c1		 mov	 eax, ecx
  04890	89 84 24 28 01
	00 00		 mov	 DWORD PTR S$[rsp], eax

; 206  :     RND(S[0],S[1],S[2],S[3],S[4],S[5],S[6],S[7],56,0x748f82ee);

  04897	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+16]
  0489e	c1 e8 06	 shr	 eax, 6
  048a1	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  048a8	c1 e1 1a	 shl	 ecx, 26
  048ab	0b c1		 or	 eax, ecx
  048ad	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  048b4	c1 e9 0b	 shr	 ecx, 11
  048b7	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  048be	c1 e2 15	 shl	 edx, 21
  048c1	0b ca		 or	 ecx, edx
  048c3	33 c1		 xor	 eax, ecx
  048c5	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  048cc	c1 e9 19	 shr	 ecx, 25
  048cf	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  048d6	c1 e2 07	 shl	 edx, 7
  048d9	0b ca		 or	 ecx, edx
  048db	33 c1		 xor	 eax, ecx
  048dd	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  048e4	03 c8		 add	 ecx, eax
  048e6	8b c1		 mov	 eax, ecx
  048e8	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  048ef	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  048f6	33 d1		 xor	 edx, ecx
  048f8	8b ca		 mov	 ecx, edx
  048fa	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  04901	23 d1		 and	 edx, ecx
  04903	8b ca		 mov	 ecx, edx
  04905	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  0490c	33 d1		 xor	 edx, ecx
  0490e	8b ca		 mov	 ecx, edx
  04910	8b 94 24 00 01
	00 00		 mov	 edx, DWORD PTR W$[rsp+224]
  04917	03 d0		 add	 edx, eax
  04919	8b c2		 mov	 eax, edx
  0491b	8d 84 01 ee 82
	8f 74		 lea	 eax, DWORD PTR [rcx+rax+1955562222]
  04922	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  04929	8b 84 24 28 01
	00 00		 mov	 eax, DWORD PTR S$[rsp]
  04930	c1 e8 02	 shr	 eax, 2
  04933	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  0493a	c1 e1 1e	 shl	 ecx, 30
  0493d	0b c1		 or	 eax, ecx
  0493f	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  04946	c1 e9 0d	 shr	 ecx, 13
  04949	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  04950	c1 e2 13	 shl	 edx, 19
  04953	0b ca		 or	 ecx, edx
  04955	33 c1		 xor	 eax, ecx
  04957	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  0495e	c1 e9 16	 shr	 ecx, 22
  04961	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  04968	c1 e2 0a	 shl	 edx, 10
  0496b	0b ca		 or	 ecx, edx
  0496d	33 c1		 xor	 eax, ecx
  0496f	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  04976	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  0497d	0b d1		 or	 edx, ecx
  0497f	8b ca		 mov	 ecx, edx
  04981	23 8c 24 30 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+8]
  04988	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  0498f	44 8b 84 24 28
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp]
  04997	44 23 c2	 and	 r8d, edx
  0499a	41 8b d0	 mov	 edx, r8d
  0499d	0b ca		 or	 ecx, edx
  0499f	03 c1		 add	 eax, ecx
  049a1	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  049a8	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  049af	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  049b6	03 c8		 add	 ecx, eax
  049b8	8b c1		 mov	 eax, ecx
  049ba	89 84 24 34 01
	00 00		 mov	 DWORD PTR S$[rsp+12], eax
  049c1	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  049c8	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  049cf	03 c8		 add	 ecx, eax
  049d1	8b c1		 mov	 eax, ecx
  049d3	89 84 24 44 01
	00 00		 mov	 DWORD PTR S$[rsp+28], eax

; 207  :     RND(S[7],S[0],S[1],S[2],S[3],S[4],S[5],S[6],57,0x78a5636f);

  049da	8b 84 24 34 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+12]
  049e1	c1 e8 06	 shr	 eax, 6
  049e4	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  049eb	c1 e1 1a	 shl	 ecx, 26
  049ee	0b c1		 or	 eax, ecx
  049f0	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  049f7	c1 e9 0b	 shr	 ecx, 11
  049fa	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  04a01	c1 e2 15	 shl	 edx, 21
  04a04	0b ca		 or	 ecx, edx
  04a06	33 c1		 xor	 eax, ecx
  04a08	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  04a0f	c1 e9 19	 shr	 ecx, 25
  04a12	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  04a19	c1 e2 07	 shl	 edx, 7
  04a1c	0b ca		 or	 ecx, edx
  04a1e	33 c1		 xor	 eax, ecx
  04a20	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  04a27	03 c8		 add	 ecx, eax
  04a29	8b c1		 mov	 eax, ecx
  04a2b	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  04a32	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  04a39	33 d1		 xor	 edx, ecx
  04a3b	8b ca		 mov	 ecx, edx
  04a3d	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  04a44	23 d1		 and	 edx, ecx
  04a46	8b ca		 mov	 ecx, edx
  04a48	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  04a4f	33 d1		 xor	 edx, ecx
  04a51	8b ca		 mov	 ecx, edx
  04a53	8b 94 24 04 01
	00 00		 mov	 edx, DWORD PTR W$[rsp+228]
  04a5a	03 d0		 add	 edx, eax
  04a5c	8b c2		 mov	 eax, edx
  04a5e	8d 84 01 6f 63
	a5 78		 lea	 eax, DWORD PTR [rcx+rax+2024104815]
  04a65	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  04a6c	8b 84 24 44 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+28]
  04a73	c1 e8 02	 shr	 eax, 2
  04a76	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  04a7d	c1 e1 1e	 shl	 ecx, 30
  04a80	0b c1		 or	 eax, ecx
  04a82	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  04a89	c1 e9 0d	 shr	 ecx, 13
  04a8c	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  04a93	c1 e2 13	 shl	 edx, 19
  04a96	0b ca		 or	 ecx, edx
  04a98	33 c1		 xor	 eax, ecx
  04a9a	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  04aa1	c1 e9 16	 shr	 ecx, 22
  04aa4	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  04aab	c1 e2 0a	 shl	 edx, 10
  04aae	0b ca		 or	 ecx, edx
  04ab0	33 c1		 xor	 eax, ecx
  04ab2	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  04ab9	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  04ac0	0b d1		 or	 edx, ecx
  04ac2	8b ca		 mov	 ecx, edx
  04ac4	23 8c 24 2c 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+4]
  04acb	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  04ad2	44 8b 84 24 44
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+28]
  04ada	44 23 c2	 and	 r8d, edx
  04add	41 8b d0	 mov	 edx, r8d
  04ae0	0b ca		 or	 ecx, edx
  04ae2	03 c1		 add	 eax, ecx
  04ae4	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  04aeb	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  04af2	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  04af9	03 c8		 add	 ecx, eax
  04afb	8b c1		 mov	 eax, ecx
  04afd	89 84 24 30 01
	00 00		 mov	 DWORD PTR S$[rsp+8], eax
  04b04	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  04b0b	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  04b12	03 c8		 add	 ecx, eax
  04b14	8b c1		 mov	 eax, ecx
  04b16	89 84 24 40 01
	00 00		 mov	 DWORD PTR S$[rsp+24], eax

; 208  :     RND(S[6],S[7],S[0],S[1],S[2],S[3],S[4],S[5],58,0x84c87814);

  04b1d	8b 84 24 30 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+8]
  04b24	c1 e8 06	 shr	 eax, 6
  04b27	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  04b2e	c1 e1 1a	 shl	 ecx, 26
  04b31	0b c1		 or	 eax, ecx
  04b33	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  04b3a	c1 e9 0b	 shr	 ecx, 11
  04b3d	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  04b44	c1 e2 15	 shl	 edx, 21
  04b47	0b ca		 or	 ecx, edx
  04b49	33 c1		 xor	 eax, ecx
  04b4b	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  04b52	c1 e9 19	 shr	 ecx, 25
  04b55	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  04b5c	c1 e2 07	 shl	 edx, 7
  04b5f	0b ca		 or	 ecx, edx
  04b61	33 c1		 xor	 eax, ecx
  04b63	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  04b6a	03 c8		 add	 ecx, eax
  04b6c	8b c1		 mov	 eax, ecx
  04b6e	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  04b75	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  04b7c	33 d1		 xor	 edx, ecx
  04b7e	8b ca		 mov	 ecx, edx
  04b80	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  04b87	23 d1		 and	 edx, ecx
  04b89	8b ca		 mov	 ecx, edx
  04b8b	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  04b92	33 d1		 xor	 edx, ecx
  04b94	8b ca		 mov	 ecx, edx
  04b96	8b 94 24 08 01
	00 00		 mov	 edx, DWORD PTR W$[rsp+232]
  04b9d	03 d0		 add	 edx, eax
  04b9f	8b c2		 mov	 eax, edx
  04ba1	ba 14 78 c8 84	 mov	 edx, -2067236844	; ffffffff84c87814H
  04ba6	48 8d 0c 11	 lea	 rcx, QWORD PTR [rcx+rdx]
  04baa	03 c1		 add	 eax, ecx
  04bac	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  04bb3	8b 84 24 40 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+24]
  04bba	c1 e8 02	 shr	 eax, 2
  04bbd	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  04bc4	c1 e1 1e	 shl	 ecx, 30
  04bc7	0b c1		 or	 eax, ecx
  04bc9	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  04bd0	c1 e9 0d	 shr	 ecx, 13
  04bd3	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  04bda	c1 e2 13	 shl	 edx, 19
  04bdd	0b ca		 or	 ecx, edx
  04bdf	33 c1		 xor	 eax, ecx
  04be1	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  04be8	c1 e9 16	 shr	 ecx, 22
  04beb	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  04bf2	c1 e2 0a	 shl	 edx, 10
  04bf5	0b ca		 or	 ecx, edx
  04bf7	33 c1		 xor	 eax, ecx
  04bf9	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  04c00	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  04c07	0b d1		 or	 edx, ecx
  04c09	8b ca		 mov	 ecx, edx
  04c0b	23 8c 24 28 01
	00 00		 and	 ecx, DWORD PTR S$[rsp]
  04c12	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  04c19	44 8b 84 24 40
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+24]
  04c21	44 23 c2	 and	 r8d, edx
  04c24	41 8b d0	 mov	 edx, r8d
  04c27	0b ca		 or	 ecx, edx
  04c29	03 c1		 add	 eax, ecx
  04c2b	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  04c32	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  04c39	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  04c40	03 c8		 add	 ecx, eax
  04c42	8b c1		 mov	 eax, ecx
  04c44	89 84 24 2c 01
	00 00		 mov	 DWORD PTR S$[rsp+4], eax
  04c4b	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  04c52	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  04c59	03 c8		 add	 ecx, eax
  04c5b	8b c1		 mov	 eax, ecx
  04c5d	89 84 24 3c 01
	00 00		 mov	 DWORD PTR S$[rsp+20], eax

; 209  :     RND(S[5],S[6],S[7],S[0],S[1],S[2],S[3],S[4],59,0x8cc70208);

  04c64	8b 84 24 2c 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+4]
  04c6b	c1 e8 06	 shr	 eax, 6
  04c6e	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  04c75	c1 e1 1a	 shl	 ecx, 26
  04c78	0b c1		 or	 eax, ecx
  04c7a	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  04c81	c1 e9 0b	 shr	 ecx, 11
  04c84	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  04c8b	c1 e2 15	 shl	 edx, 21
  04c8e	0b ca		 or	 ecx, edx
  04c90	33 c1		 xor	 eax, ecx
  04c92	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  04c99	c1 e9 19	 shr	 ecx, 25
  04c9c	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  04ca3	c1 e2 07	 shl	 edx, 7
  04ca6	0b ca		 or	 ecx, edx
  04ca8	33 c1		 xor	 eax, ecx
  04caa	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  04cb1	03 c8		 add	 ecx, eax
  04cb3	8b c1		 mov	 eax, ecx
  04cb5	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  04cbc	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  04cc3	33 d1		 xor	 edx, ecx
  04cc5	8b ca		 mov	 ecx, edx
  04cc7	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  04cce	23 d1		 and	 edx, ecx
  04cd0	8b ca		 mov	 ecx, edx
  04cd2	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  04cd9	33 d1		 xor	 edx, ecx
  04cdb	8b ca		 mov	 ecx, edx
  04cdd	8b 94 24 0c 01
	00 00		 mov	 edx, DWORD PTR W$[rsp+236]
  04ce4	03 d0		 add	 edx, eax
  04ce6	8b c2		 mov	 eax, edx
  04ce8	ba 08 02 c7 8c	 mov	 edx, -1933114872	; ffffffff8cc70208H
  04ced	48 8d 0c 11	 lea	 rcx, QWORD PTR [rcx+rdx]
  04cf1	03 c1		 add	 eax, ecx
  04cf3	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  04cfa	8b 84 24 3c 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+20]
  04d01	c1 e8 02	 shr	 eax, 2
  04d04	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  04d0b	c1 e1 1e	 shl	 ecx, 30
  04d0e	0b c1		 or	 eax, ecx
  04d10	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  04d17	c1 e9 0d	 shr	 ecx, 13
  04d1a	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  04d21	c1 e2 13	 shl	 edx, 19
  04d24	0b ca		 or	 ecx, edx
  04d26	33 c1		 xor	 eax, ecx
  04d28	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  04d2f	c1 e9 16	 shr	 ecx, 22
  04d32	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  04d39	c1 e2 0a	 shl	 edx, 10
  04d3c	0b ca		 or	 ecx, edx
  04d3e	33 c1		 xor	 eax, ecx
  04d40	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  04d47	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  04d4e	0b d1		 or	 edx, ecx
  04d50	8b ca		 mov	 ecx, edx
  04d52	23 8c 24 44 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+28]
  04d59	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  04d60	44 8b 84 24 3c
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+20]
  04d68	44 23 c2	 and	 r8d, edx
  04d6b	41 8b d0	 mov	 edx, r8d
  04d6e	0b ca		 or	 ecx, edx
  04d70	03 c1		 add	 eax, ecx
  04d72	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  04d79	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  04d80	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  04d87	03 c8		 add	 ecx, eax
  04d89	8b c1		 mov	 eax, ecx
  04d8b	89 84 24 28 01
	00 00		 mov	 DWORD PTR S$[rsp], eax
  04d92	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  04d99	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  04da0	03 c8		 add	 ecx, eax
  04da2	8b c1		 mov	 eax, ecx
  04da4	89 84 24 38 01
	00 00		 mov	 DWORD PTR S$[rsp+16], eax

; 210  :     RND(S[4],S[5],S[6],S[7],S[0],S[1],S[2],S[3],60,0x90befffa);

  04dab	8b 84 24 28 01
	00 00		 mov	 eax, DWORD PTR S$[rsp]
  04db2	c1 e8 06	 shr	 eax, 6
  04db5	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  04dbc	c1 e1 1a	 shl	 ecx, 26
  04dbf	0b c1		 or	 eax, ecx
  04dc1	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  04dc8	c1 e9 0b	 shr	 ecx, 11
  04dcb	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  04dd2	c1 e2 15	 shl	 edx, 21
  04dd5	0b ca		 or	 ecx, edx
  04dd7	33 c1		 xor	 eax, ecx
  04dd9	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  04de0	c1 e9 19	 shr	 ecx, 25
  04de3	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  04dea	c1 e2 07	 shl	 edx, 7
  04ded	0b ca		 or	 ecx, edx
  04def	33 c1		 xor	 eax, ecx
  04df1	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  04df8	03 c8		 add	 ecx, eax
  04dfa	8b c1		 mov	 eax, ecx
  04dfc	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  04e03	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  04e0a	33 d1		 xor	 edx, ecx
  04e0c	8b ca		 mov	 ecx, edx
  04e0e	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  04e15	23 d1		 and	 edx, ecx
  04e17	8b ca		 mov	 ecx, edx
  04e19	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  04e20	33 d1		 xor	 edx, ecx
  04e22	8b ca		 mov	 ecx, edx
  04e24	8b 94 24 10 01
	00 00		 mov	 edx, DWORD PTR W$[rsp+240]
  04e2b	03 d0		 add	 edx, eax
  04e2d	8b c2		 mov	 eax, edx
  04e2f	ba fa ff be 90	 mov	 edx, -1866530822	; ffffffff90befffaH
  04e34	48 8d 0c 11	 lea	 rcx, QWORD PTR [rcx+rdx]
  04e38	03 c1		 add	 eax, ecx
  04e3a	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  04e41	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+16]
  04e48	c1 e8 02	 shr	 eax, 2
  04e4b	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  04e52	c1 e1 1e	 shl	 ecx, 30
  04e55	0b c1		 or	 eax, ecx
  04e57	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  04e5e	c1 e9 0d	 shr	 ecx, 13
  04e61	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  04e68	c1 e2 13	 shl	 edx, 19
  04e6b	0b ca		 or	 ecx, edx
  04e6d	33 c1		 xor	 eax, ecx
  04e6f	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  04e76	c1 e9 16	 shr	 ecx, 22
  04e79	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  04e80	c1 e2 0a	 shl	 edx, 10
  04e83	0b ca		 or	 ecx, edx
  04e85	33 c1		 xor	 eax, ecx
  04e87	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  04e8e	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  04e95	0b d1		 or	 edx, ecx
  04e97	8b ca		 mov	 ecx, edx
  04e99	23 8c 24 40 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+24]
  04ea0	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  04ea7	44 8b 84 24 38
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+16]
  04eaf	44 23 c2	 and	 r8d, edx
  04eb2	41 8b d0	 mov	 edx, r8d
  04eb5	0b ca		 or	 ecx, edx
  04eb7	03 c1		 add	 eax, ecx
  04eb9	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  04ec0	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  04ec7	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  04ece	03 c8		 add	 ecx, eax
  04ed0	8b c1		 mov	 eax, ecx
  04ed2	89 84 24 44 01
	00 00		 mov	 DWORD PTR S$[rsp+28], eax
  04ed9	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  04ee0	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  04ee7	03 c8		 add	 ecx, eax
  04ee9	8b c1		 mov	 eax, ecx
  04eeb	89 84 24 34 01
	00 00		 mov	 DWORD PTR S$[rsp+12], eax

; 211  :     RND(S[3],S[4],S[5],S[6],S[7],S[0],S[1],S[2],61,0xa4506ceb);

  04ef2	8b 84 24 44 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+28]
  04ef9	c1 e8 06	 shr	 eax, 6
  04efc	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  04f03	c1 e1 1a	 shl	 ecx, 26
  04f06	0b c1		 or	 eax, ecx
  04f08	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  04f0f	c1 e9 0b	 shr	 ecx, 11
  04f12	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  04f19	c1 e2 15	 shl	 edx, 21
  04f1c	0b ca		 or	 ecx, edx
  04f1e	33 c1		 xor	 eax, ecx
  04f20	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  04f27	c1 e9 19	 shr	 ecx, 25
  04f2a	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  04f31	c1 e2 07	 shl	 edx, 7
  04f34	0b ca		 or	 ecx, edx
  04f36	33 c1		 xor	 eax, ecx
  04f38	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  04f3f	03 c8		 add	 ecx, eax
  04f41	8b c1		 mov	 eax, ecx
  04f43	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  04f4a	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  04f51	33 d1		 xor	 edx, ecx
  04f53	8b ca		 mov	 ecx, edx
  04f55	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  04f5c	23 d1		 and	 edx, ecx
  04f5e	8b ca		 mov	 ecx, edx
  04f60	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  04f67	33 d1		 xor	 edx, ecx
  04f69	8b ca		 mov	 ecx, edx
  04f6b	8b 94 24 14 01
	00 00		 mov	 edx, DWORD PTR W$[rsp+244]
  04f72	03 d0		 add	 edx, eax
  04f74	8b c2		 mov	 eax, edx
  04f76	ba eb 6c 50 a4	 mov	 edx, -1538233109	; ffffffffa4506cebH
  04f7b	48 8d 0c 11	 lea	 rcx, QWORD PTR [rcx+rdx]
  04f7f	03 c1		 add	 eax, ecx
  04f81	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  04f88	8b 84 24 34 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+12]
  04f8f	c1 e8 02	 shr	 eax, 2
  04f92	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  04f99	c1 e1 1e	 shl	 ecx, 30
  04f9c	0b c1		 or	 eax, ecx
  04f9e	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  04fa5	c1 e9 0d	 shr	 ecx, 13
  04fa8	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  04faf	c1 e2 13	 shl	 edx, 19
  04fb2	0b ca		 or	 ecx, edx
  04fb4	33 c1		 xor	 eax, ecx
  04fb6	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  04fbd	c1 e9 16	 shr	 ecx, 22
  04fc0	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  04fc7	c1 e2 0a	 shl	 edx, 10
  04fca	0b ca		 or	 ecx, edx
  04fcc	33 c1		 xor	 eax, ecx
  04fce	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  04fd5	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  04fdc	0b d1		 or	 edx, ecx
  04fde	8b ca		 mov	 ecx, edx
  04fe0	23 8c 24 3c 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+20]
  04fe7	8b 94 24 38 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+16]
  04fee	44 8b 84 24 34
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+12]
  04ff6	44 23 c2	 and	 r8d, edx
  04ff9	41 8b d0	 mov	 edx, r8d
  04ffc	0b ca		 or	 ecx, edx
  04ffe	03 c1		 add	 eax, ecx
  05000	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  05007	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  0500e	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  05015	03 c8		 add	 ecx, eax
  05017	8b c1		 mov	 eax, ecx
  05019	89 84 24 40 01
	00 00		 mov	 DWORD PTR S$[rsp+24], eax
  05020	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  05027	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  0502e	03 c8		 add	 ecx, eax
  05030	8b c1		 mov	 eax, ecx
  05032	89 84 24 30 01
	00 00		 mov	 DWORD PTR S$[rsp+8], eax

; 212  :     RND(S[2],S[3],S[4],S[5],S[6],S[7],S[0],S[1],62,0xbef9a3f7);

  05039	8b 84 24 40 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+24]
  05040	c1 e8 06	 shr	 eax, 6
  05043	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  0504a	c1 e1 1a	 shl	 ecx, 26
  0504d	0b c1		 or	 eax, ecx
  0504f	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  05056	c1 e9 0b	 shr	 ecx, 11
  05059	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  05060	c1 e2 15	 shl	 edx, 21
  05063	0b ca		 or	 ecx, edx
  05065	33 c1		 xor	 eax, ecx
  05067	8b 8c 24 40 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+24]
  0506e	c1 e9 19	 shr	 ecx, 25
  05071	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  05078	c1 e2 07	 shl	 edx, 7
  0507b	0b ca		 or	 ecx, edx
  0507d	33 c1		 xor	 eax, ecx
  0507f	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  05086	03 c8		 add	 ecx, eax
  05088	8b c1		 mov	 eax, ecx
  0508a	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  05091	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  05098	33 d1		 xor	 edx, ecx
  0509a	8b ca		 mov	 ecx, edx
  0509c	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  050a3	23 d1		 and	 edx, ecx
  050a5	8b ca		 mov	 ecx, edx
  050a7	8b 94 24 28 01
	00 00		 mov	 edx, DWORD PTR S$[rsp]
  050ae	33 d1		 xor	 edx, ecx
  050b0	8b ca		 mov	 ecx, edx
  050b2	8b 94 24 18 01
	00 00		 mov	 edx, DWORD PTR W$[rsp+248]
  050b9	03 d0		 add	 edx, eax
  050bb	8b c2		 mov	 eax, edx
  050bd	ba f7 a3 f9 be	 mov	 edx, -1090935817	; ffffffffbef9a3f7H
  050c2	48 8d 0c 11	 lea	 rcx, QWORD PTR [rcx+rdx]
  050c6	03 c1		 add	 eax, ecx
  050c8	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  050cf	8b 84 24 30 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+8]
  050d6	c1 e8 02	 shr	 eax, 2
  050d9	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  050e0	c1 e1 1e	 shl	 ecx, 30
  050e3	0b c1		 or	 eax, ecx
  050e5	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  050ec	c1 e9 0d	 shr	 ecx, 13
  050ef	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  050f6	c1 e2 13	 shl	 edx, 19
  050f9	0b ca		 or	 ecx, edx
  050fb	33 c1		 xor	 eax, ecx
  050fd	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  05104	c1 e9 16	 shr	 ecx, 22
  05107	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  0510e	c1 e2 0a	 shl	 edx, 10
  05111	0b ca		 or	 ecx, edx
  05113	33 c1		 xor	 eax, ecx
  05115	8b 8c 24 34 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+12]
  0511c	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  05123	0b d1		 or	 edx, ecx
  05125	8b ca		 mov	 ecx, edx
  05127	23 8c 24 38 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+16]
  0512e	8b 94 24 34 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+12]
  05135	44 8b 84 24 30
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+8]
  0513d	44 23 c2	 and	 r8d, edx
  05140	41 8b d0	 mov	 edx, r8d
  05143	0b ca		 or	 ecx, edx
  05145	03 c1		 add	 eax, ecx
  05147	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  0514e	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  05155	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  0515c	03 c8		 add	 ecx, eax
  0515e	8b c1		 mov	 eax, ecx
  05160	89 84 24 3c 01
	00 00		 mov	 DWORD PTR S$[rsp+20], eax
  05167	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  0516e	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  05175	03 c8		 add	 ecx, eax
  05177	8b c1		 mov	 eax, ecx
  05179	89 84 24 2c 01
	00 00		 mov	 DWORD PTR S$[rsp+4], eax

; 213  :     RND(S[1],S[2],S[3],S[4],S[5],S[6],S[7],S[0],63,0xc67178f2);

  05180	8b 84 24 3c 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+20]
  05187	c1 e8 06	 shr	 eax, 6
  0518a	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  05191	c1 e1 1a	 shl	 ecx, 26
  05194	0b c1		 or	 eax, ecx
  05196	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  0519d	c1 e9 0b	 shr	 ecx, 11
  051a0	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  051a7	c1 e2 15	 shl	 edx, 21
  051aa	0b ca		 or	 ecx, edx
  051ac	33 c1		 xor	 eax, ecx
  051ae	8b 8c 24 3c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+20]
  051b5	c1 e9 19	 shr	 ecx, 25
  051b8	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  051bf	c1 e2 07	 shl	 edx, 7
  051c2	0b ca		 or	 ecx, edx
  051c4	33 c1		 xor	 eax, ecx
  051c6	8b 8c 24 28 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp]
  051cd	03 c8		 add	 ecx, eax
  051cf	8b c1		 mov	 eax, ecx
  051d1	8b 8c 24 44 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+28]
  051d8	8b 94 24 40 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+24]
  051df	33 d1		 xor	 edx, ecx
  051e1	8b ca		 mov	 ecx, edx
  051e3	8b 94 24 3c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+20]
  051ea	23 d1		 and	 edx, ecx
  051ec	8b ca		 mov	 ecx, edx
  051ee	8b 94 24 44 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+28]
  051f5	33 d1		 xor	 edx, ecx
  051f7	8b ca		 mov	 ecx, edx
  051f9	8b 94 24 1c 01
	00 00		 mov	 edx, DWORD PTR W$[rsp+252]
  05200	03 d0		 add	 edx, eax
  05202	8b c2		 mov	 eax, edx
  05204	ba f2 78 71 c6	 mov	 edx, -965641998		; ffffffffc67178f2H
  05209	48 8d 0c 11	 lea	 rcx, QWORD PTR [rcx+rdx]
  0520d	03 c1		 add	 eax, ecx
  0520f	89 84 24 4c 01
	00 00		 mov	 DWORD PTR t0$[rsp], eax
  05216	8b 84 24 2c 01
	00 00		 mov	 eax, DWORD PTR S$[rsp+4]
  0521d	c1 e8 02	 shr	 eax, 2
  05220	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  05227	c1 e1 1e	 shl	 ecx, 30
  0522a	0b c1		 or	 eax, ecx
  0522c	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  05233	c1 e9 0d	 shr	 ecx, 13
  05236	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  0523d	c1 e2 13	 shl	 edx, 19
  05240	0b ca		 or	 ecx, edx
  05242	33 c1		 xor	 eax, ecx
  05244	8b 8c 24 2c 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+4]
  0524b	c1 e9 16	 shr	 ecx, 22
  0524e	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  05255	c1 e2 0a	 shl	 edx, 10
  05258	0b ca		 or	 ecx, edx
  0525a	33 c1		 xor	 eax, ecx
  0525c	8b 8c 24 30 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+8]
  05263	8b 94 24 2c 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+4]
  0526a	0b d1		 or	 edx, ecx
  0526c	8b ca		 mov	 ecx, edx
  0526e	23 8c 24 34 01
	00 00		 and	 ecx, DWORD PTR S$[rsp+12]
  05275	8b 94 24 30 01
	00 00		 mov	 edx, DWORD PTR S$[rsp+8]
  0527c	44 8b 84 24 2c
	01 00 00	 mov	 r8d, DWORD PTR S$[rsp+4]
  05284	44 23 c2	 and	 r8d, edx
  05287	41 8b d0	 mov	 edx, r8d
  0528a	0b ca		 or	 ecx, edx
  0528c	03 c1		 add	 eax, ecx
  0528e	89 84 24 48 01
	00 00		 mov	 DWORD PTR t1$[rsp], eax
  05295	8b 84 24 4c 01
	00 00		 mov	 eax, DWORD PTR t0$[rsp]
  0529c	8b 8c 24 38 01
	00 00		 mov	 ecx, DWORD PTR S$[rsp+16]
  052a3	03 c8		 add	 ecx, eax
  052a5	8b c1		 mov	 eax, ecx
  052a7	89 84 24 38 01
	00 00		 mov	 DWORD PTR S$[rsp+16], eax
  052ae	8b 84 24 48 01
	00 00		 mov	 eax, DWORD PTR t1$[rsp]
  052b5	8b 8c 24 4c 01
	00 00		 mov	 ecx, DWORD PTR t0$[rsp]
  052bc	03 c8		 add	 ecx, eax
  052be	8b c1		 mov	 eax, ecx
  052c0	89 84 24 28 01
	00 00		 mov	 DWORD PTR S$[rsp], eax

; 214  : 
; 215  : #undef RND
; 216  : 
; 217  :     /* feedback */
; 218  :     for (i = 0; i < 8; i++) {

  052c7	c7 84 24 20 01
	00 00 00 00 00
	00		 mov	 DWORD PTR i$[rsp], 0
  052d2	eb 10		 jmp	 SHORT $LN3@sha_transf
$LN2@sha_transf:
  052d4	8b 84 24 20 01
	00 00		 mov	 eax, DWORD PTR i$[rsp]
  052db	ff c0		 inc	 eax
  052dd	89 84 24 20 01
	00 00		 mov	 DWORD PTR i$[rsp], eax
$LN3@sha_transf:
  052e4	83 bc 24 20 01
	00 00 08	 cmp	 DWORD PTR i$[rsp], 8
  052ec	7d 39		 jge	 SHORT $LN1@sha_transf

; 219  :         sha_info->digest[i] = sha_info->digest[i] + S[i];

  052ee	48 63 84 24 20
	01 00 00	 movsxd	 rax, DWORD PTR i$[rsp]
  052f6	48 63 8c 24 20
	01 00 00	 movsxd	 rcx, DWORD PTR i$[rsp]
  052fe	48 8b 94 24 60
	01 00 00	 mov	 rdx, QWORD PTR sha_info$[rsp]
  05306	8b 44 82 60	 mov	 eax, DWORD PTR [rdx+rax*4+96]
  0530a	03 84 8c 28 01
	00 00		 add	 eax, DWORD PTR S$[rsp+rcx*4]
  05311	48 63 8c 24 20
	01 00 00	 movsxd	 rcx, DWORD PTR i$[rsp]
  05319	48 8b 94 24 60
	01 00 00	 mov	 rdx, QWORD PTR sha_info$[rsp]
  05321	89 44 8a 60	 mov	 DWORD PTR [rdx+rcx*4+96], eax

; 220  :     }

  05325	eb ad		 jmp	 SHORT $LN2@sha_transf
$LN1@sha_transf:

; 221  : 
; 222  : }

  05327	48 81 c4 58 01
	00 00		 add	 rsp, 344		; 00000158H
  0532e	c3		 ret	 0
sha_transform ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$longReverse DD imagerel longReverse
	DD	imagerel longReverse+144
	DD	imagerel $unwind$longReverse
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$longReverse DD 011201H
	DD	02212H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT longReverse
_TEXT	SEGMENT
value$ = 0
buffer$ = 32
byteCount$ = 40
Endianness$ = 48
longReverse PROC					; COMDAT

; 62   : {

  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	48 83 ec 18	 sub	 rsp, 24

; 63   :     SHA_INT32 value;
; 64   : 
; 65   :     if ( Endianness == PCT_BIG_ENDIAN )

  00012	83 7c 24 30 00	 cmp	 DWORD PTR Endianness$[rsp], 0
  00017	75 02		 jne	 SHORT $LN3@longRevers

; 66   :         return;

  00019	eb 70		 jmp	 SHORT $LN4@longRevers
$LN3@longRevers:

; 67   : 
; 68   :     byteCount /= sizeof(*buffer);

  0001b	48 63 44 24 28	 movsxd	 rax, DWORD PTR byteCount$[rsp]
  00020	33 d2		 xor	 edx, edx
  00022	b9 04 00 00 00	 mov	 ecx, 4
  00027	48 f7 f1	 div	 rcx
  0002a	89 44 24 28	 mov	 DWORD PTR byteCount$[rsp], eax
$LN2@longRevers:

; 69   :     while (byteCount--) {

  0002e	8b 44 24 28	 mov	 eax, DWORD PTR byteCount$[rsp]
  00032	8b 4c 24 28	 mov	 ecx, DWORD PTR byteCount$[rsp]
  00036	ff c9		 dec	 ecx
  00038	89 4c 24 28	 mov	 DWORD PTR byteCount$[rsp], ecx
  0003c	85 c0		 test	 eax, eax
  0003e	74 4b		 je	 SHORT $LN1@longRevers

; 70   :         value = *buffer;

  00040	48 8b 44 24 20	 mov	 rax, QWORD PTR buffer$[rsp]
  00045	8b 00		 mov	 eax, DWORD PTR [rax]
  00047	89 04 24	 mov	 DWORD PTR value$[rsp], eax

; 71   :         value = ( ( value & 0xFF00FF00L ) >> 8  ) | \
; 72   :                 ( ( value & 0x00FF00FFL ) << 8 );

  0004a	8b 04 24	 mov	 eax, DWORD PTR value$[rsp]
  0004d	25 00 ff 00 ff	 and	 eax, -16711936		; ff00ff00H
  00052	c1 e8 08	 shr	 eax, 8
  00055	8b 0c 24	 mov	 ecx, DWORD PTR value$[rsp]
  00058	81 e1 ff 00 ff
	00		 and	 ecx, 16711935		; 00ff00ffH
  0005e	c1 e1 08	 shl	 ecx, 8
  00061	0b c1		 or	 eax, ecx
  00063	89 04 24	 mov	 DWORD PTR value$[rsp], eax

; 73   :         *buffer++ = ( value << 16 ) | ( value >> 16 );

  00066	8b 04 24	 mov	 eax, DWORD PTR value$[rsp]
  00069	c1 e0 10	 shl	 eax, 16
  0006c	8b 0c 24	 mov	 ecx, DWORD PTR value$[rsp]
  0006f	c1 e9 10	 shr	 ecx, 16
  00072	0b c1		 or	 eax, ecx
  00074	48 8b 4c 24 20	 mov	 rcx, QWORD PTR buffer$[rsp]
  00079	89 01		 mov	 DWORD PTR [rcx], eax
  0007b	48 8b 44 24 20	 mov	 rax, QWORD PTR buffer$[rsp]
  00080	48 83 c0 04	 add	 rax, 4
  00084	48 89 44 24 20	 mov	 QWORD PTR buffer$[rsp], rax

; 74   :     }

  00089	eb a3		 jmp	 SHORT $LN2@longRevers
$LN1@longRevers:
$LN4@longRevers:

; 75   : }

  0008b	48 83 c4 18	 add	 rsp, 24
  0008f	c3		 ret	 0
longReverse ENDP
_TEXT	ENDS
PUBLIC	??_C@_1EO@BJKIFCAJ@?$AA_?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AAC?$AAo?$AAn?$AAs?$AAi?$AAs?$AAt?$AAe?$AAn?$AAc?$AAy?$AA?$CI?$AAr?$AAe?$AAt?$AAv@ ; `string'
PUBLIC	??_C@_1EO@LALHLELK@?$AA?$CI?$AA?$CI?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?$CK?$AA?$CJ?$AA?$CI?$AAr?$AAe?$AAt?$AAv?$AAa?$AAl?$AA?$CJ?$AA?$CJ?$AA?9?$AA?$DO?$AAd?$AAa@ ; `string'
PUBLIC	??_C@_1DG@MMKMIIBJ@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAI?$AAS?$AA_?$AAR?$AAE?$AAA?$AAD?$AAY?$AA?$CI?$AAr?$AAe?$AAt?$AAv?$AAa?$AAl?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DA@FHOAPDMD@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAr?$AAe?$AAt?$AAv?$AAa?$AAl?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DE@LHALCNDM@?$AA?4?$AA?4?$AA?2?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AAs?$AA?2?$AAs?$AAh?$AAa?$AA2?$AA5?$AA6?$AAm?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?4?$AAc?$AA?$AA@ ; `string'
EXTRN	_PyUnicode_CheckConsistency:PROC
EXTRN	Py_hexdigits:QWORD
EXTRN	__imp__wassert:PROC
EXTRN	PyUnicode_New:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$SHA256_hexdigest DD imagerel SHA256_hexdigest
	DD	imagerel SHA256_hexdigest+713
	DD	imagerel $unwind$SHA256_hexdigest
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SHA256_hexdigest DD 021101H
	DD	02b0111H
xdata	ENDS
;	COMDAT ??_C@_1EO@BJKIFCAJ@?$AA_?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AAC?$AAo?$AAn?$AAs?$AAi?$AAs?$AAt?$AAe?$AAn?$AAc?$AAy?$AA?$CI?$AAr?$AAe?$AAt?$AAv@
CONST	SEGMENT
??_C@_1EO@BJKIFCAJ@?$AA_?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AAC?$AAo?$AAn?$AAs?$AAi?$AAs?$AAt?$AAe?$AAn?$AAc?$AAy?$AA?$CI?$AAr?$AAe?$AAt?$AAv@ DB '_'
	DB	00H, 'P', 00H, 'y', 00H, 'U', 00H, 'n', 00H, 'i', 00H, 'c', 00H
	DB	'o', 00H, 'd', 00H, 'e', 00H, '_', 00H, 'C', 00H, 'h', 00H, 'e'
	DB	00H, 'c', 00H, 'k', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 's', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'y'
	DB	00H, '(', 00H, 'r', 00H, 'e', 00H, 't', 00H, 'v', 00H, 'a', 00H
	DB	'l', 00H, ',', 00H, ' ', 00H, '1', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@LALHLELK@?$AA?$CI?$AA?$CI?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?$CK?$AA?$CJ?$AA?$CI?$AAr?$AAe?$AAt?$AAv?$AAa?$AAl?$AA?$CJ?$AA?$CJ?$AA?9?$AA?$DO?$AAd?$AAa@
CONST	SEGMENT
??_C@_1EO@LALHLELK@?$AA?$CI?$AA?$CI?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?$CK?$AA?$CJ?$AA?$CI?$AAr?$AAe?$AAt?$AAv?$AAa?$AAl?$AA?$CJ?$AA?$CJ?$AA?9?$AA?$DO?$AAd?$AAa@ DB '('
	DB	00H, '(', 00H, 'P', 00H, 'y', 00H, 'U', 00H, 'n', 00H, 'i', 00H
	DB	'c', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, '*', 00H, ')', 00H, '(', 00H
	DB	'r', 00H, 'e', 00H, 't', 00H, 'v', 00H, 'a', 00H, 'l', 00H, ')'
	DB	00H, ')', 00H, '-', 00H, '>', 00H, 'd', 00H, 'a', 00H, 't', 00H
	DB	'a', 00H, '.', 00H, 'a', 00H, 'n', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@MMKMIIBJ@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAI?$AAS?$AA_?$AAR?$AAE?$AAA?$AAD?$AAY?$AA?$CI?$AAr?$AAe?$AAt?$AAv?$AAa?$AAl?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1DG@MMKMIIBJ@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAI?$AAS?$AA_?$AAR?$AAE?$AAA?$AAD?$AAY?$AA?$CI?$AAr?$AAe?$AAt?$AAv?$AAa?$AAl?$AA?$CJ?$AA?$AA@ DB 'P'
	DB	00H, 'y', 00H, 'U', 00H, 'n', 00H, 'i', 00H, 'c', 00H, 'o', 00H
	DB	'd', 00H, 'e', 00H, '_', 00H, 'I', 00H, 'S', 00H, '_', 00H, 'R'
	DB	00H, 'E', 00H, 'A', 00H, 'D', 00H, 'Y', 00H, '(', 00H, 'r', 00H
	DB	'e', 00H, 't', 00H, 'v', 00H, 'a', 00H, 'l', 00H, ')', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1DA@FHOAPDMD@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAr?$AAe?$AAt?$AAv?$AAa?$AAl?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1DA@FHOAPDMD@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAr?$AAe?$AAt?$AAv?$AAa?$AAl?$AA?$CJ?$AA?$AA@ DB 'P'
	DB	00H, 'y', 00H, 'U', 00H, 'n', 00H, 'i', 00H, 'c', 00H, 'o', 00H
	DB	'd', 00H, 'e', 00H, '_', 00H, 'C', 00H, 'h', 00H, 'e', 00H, 'c'
	DB	00H, 'k', 00H, '(', 00H, 'r', 00H, 'e', 00H, 't', 00H, 'v', 00H
	DB	'a', 00H, 'l', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DE@LHALCNDM@?$AA?4?$AA?4?$AA?2?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AAs?$AA?2?$AAs?$AAh?$AAa?$AA2?$AA5?$AA6?$AAm?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?4?$AAc?$AA?$AA@
CONST	SEGMENT
??_C@_1DE@LHALCNDM@?$AA?4?$AA?4?$AA?2?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AAs?$AA?2?$AAs?$AAh?$AAa?$AA2?$AA5?$AA6?$AAm?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?4?$AAc?$AA?$AA@ DB '.'
	DB	00H, '.', 00H, '\', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'u', 00H
	DB	'l', 00H, 'e', 00H, 's', 00H, '\', 00H, 's', 00H, 'h', 00H, 'a'
	DB	00H, '2', 00H, '5', 00H, '6', 00H, 'm', 00H, 'o', 00H, 'd', 00H
	DB	'u', 00H, 'l', 00H, 'e', 00H, '.', 00H, 'c', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT SHA256_hexdigest
_TEXT	SEGMENT
i$ = 32
retval$ = 40
temp$ = 48
digest$ = 272
hex_digest$ = 304
j$ = 312
c$22112 = 316
tv140 = 320
tv149 = 328
self$ = 352
unused$ = 360
SHA256_hexdigest PROC					; COMDAT

; 444  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 81 ec 58 01
	00 00		 sub	 rsp, 344		; 00000158H

; 445  :     unsigned char digest[SHA_DIGESTSIZE];
; 446  :     SHAobject temp;
; 447  :     PyObject *retval;
; 448  :     Py_UCS1 *hex_digest;
; 449  :     int i, j;
; 450  : 
; 451  :     /* Get the raw (binary) digest value */
; 452  :     SHAcopy(self, &temp);

  00011	48 8d 54 24 30	 lea	 rdx, QWORD PTR temp$[rsp]
  00016	48 8b 8c 24 60
	01 00 00	 mov	 rcx, QWORD PTR self$[rsp]
  0001e	e8 00 00 00 00	 call	 SHAcopy

; 453  :     sha_final(digest, &temp);

  00023	48 8d 54 24 30	 lea	 rdx, QWORD PTR temp$[rsp]
  00028	48 8d 8c 24 10
	01 00 00	 lea	 rcx, QWORD PTR digest$[rsp]
  00030	e8 00 00 00 00	 call	 sha_final

; 454  : 
; 455  :     /* Create a new string */
; 456  :     retval = PyUnicode_New(self->digestsize * 2, 127);

  00035	48 8b 84 24 60
	01 00 00	 mov	 rax, QWORD PTR self$[rsp]
  0003d	8b 80 d0 00 00
	00		 mov	 eax, DWORD PTR [rax+208]
  00043	d1 e0		 shl	 eax, 1
  00045	48 98		 cdqe
  00047	ba 7f 00 00 00	 mov	 edx, 127		; 0000007fH
  0004c	48 8b c8	 mov	 rcx, rax
  0004f	e8 00 00 00 00	 call	 PyUnicode_New
  00054	48 89 44 24 28	 mov	 QWORD PTR retval$[rsp], rax

; 457  :     if (!retval)

  00059	48 83 7c 24 28
	00		 cmp	 QWORD PTR retval$[rsp], 0
  0005f	75 07		 jne	 SHORT $LN4@SHA256_hex

; 458  :             return NULL;

  00061	33 c0		 xor	 eax, eax
  00063	e9 59 02 00 00	 jmp	 $LN5@SHA256_hex
$LN4@SHA256_hex:

; 459  :     hex_digest = PyUnicode_1BYTE_DATA(retval);

  00068	48 8b 44 24 28	 mov	 rax, QWORD PTR retval$[rsp]
  0006d	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00071	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  00077	25 00 00 00 10	 and	 eax, 268435456		; 10000000H
  0007c	85 c0		 test	 eax, eax
  0007e	75 1c		 jne	 SHORT $LN7@SHA256_hex
  00080	41 b8 cb 01 00
	00		 mov	 r8d, 459		; 000001cbH
  00086	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DE@LHALCNDM@?$AA?4?$AA?4?$AA?2?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AAs?$AA?2?$AAs?$AAh?$AAa?$AA2?$AA5?$AA6?$AAm?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?4?$AAc?$AA?$AA@
  0008d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DA@FHOAPDMD@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAr?$AAe?$AAt?$AAv?$AAa?$AAl?$AA?$CJ?$AA?$AA@
  00094	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  0009a	33 c0		 xor	 eax, eax
$LN7@SHA256_hex:
  0009c	48 8b 44 24 28	 mov	 rax, QWORD PTR retval$[rsp]
  000a1	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  000a4	c1 e8 05	 shr	 eax, 5
  000a7	83 e0 01	 and	 eax, 1
  000aa	85 c0		 test	 eax, eax
  000ac	0f 84 ae 00 00
	00		 je	 $LN13@SHA256_hex
  000b2	48 8b 44 24 28	 mov	 rax, QWORD PTR retval$[rsp]
  000b7	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  000bb	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  000c1	25 00 00 00 10	 and	 eax, 268435456		; 10000000H
  000c6	85 c0		 test	 eax, eax
  000c8	75 1c		 jne	 SHORT $LN8@SHA256_hex
  000ca	41 b8 cb 01 00
	00		 mov	 r8d, 459		; 000001cbH
  000d0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DE@LHALCNDM@?$AA?4?$AA?4?$AA?2?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AAs?$AA?2?$AAs?$AAh?$AAa?$AA2?$AA5?$AA6?$AAm?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?4?$AAc?$AA?$AA@
  000d7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DA@FHOAPDMD@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAr?$AAe?$AAt?$AAv?$AAa?$AAl?$AA?$CJ?$AA?$AA@
  000de	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  000e4	33 c0		 xor	 eax, eax
$LN8@SHA256_hex:
  000e6	48 8b 44 24 28	 mov	 rax, QWORD PTR retval$[rsp]
  000eb	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  000ee	c1 e8 07	 shr	 eax, 7
  000f1	83 e0 01	 and	 eax, 1
  000f4	85 c0		 test	 eax, eax
  000f6	75 1c		 jne	 SHORT $LN9@SHA256_hex
  000f8	41 b8 cb 01 00
	00		 mov	 r8d, 459		; 000001cbH
  000fe	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DE@LHALCNDM@?$AA?4?$AA?4?$AA?2?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AAs?$AA?2?$AAs?$AAh?$AAa?$AA2?$AA5?$AA6?$AAm?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?4?$AAc?$AA?$AA@
  00105	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DG@MMKMIIBJ@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAI?$AAS?$AA_?$AAR?$AAE?$AAA?$AAD?$AAY?$AA?$CI?$AAr?$AAe?$AAt?$AAv?$AAa?$AAl?$AA?$CJ?$AA?$AA@
  0010c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  00112	33 c0		 xor	 eax, eax
$LN9@SHA256_hex:
  00114	48 8b 44 24 28	 mov	 rax, QWORD PTR retval$[rsp]
  00119	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  0011c	c1 e8 06	 shr	 eax, 6
  0011f	83 e0 01	 and	 eax, 1
  00122	85 c0		 test	 eax, eax
  00124	74 15		 je	 SHORT $LN10@SHA256_hex
  00126	48 8b 44 24 28	 mov	 rax, QWORD PTR retval$[rsp]
  0012b	48 05 80 00 00
	00		 add	 rax, 128		; 00000080H
  00131	48 89 84 24 40
	01 00 00	 mov	 QWORD PTR tv140[rsp], rax
  00139	eb 13		 jmp	 SHORT $LN11@SHA256_hex
$LN10@SHA256_hex:
  0013b	48 8b 44 24 28	 mov	 rax, QWORD PTR retval$[rsp]
  00140	48 05 a0 00 00
	00		 add	 rax, 160		; 000000a0H
  00146	48 89 84 24 40
	01 00 00	 mov	 QWORD PTR tv140[rsp], rax
$LN11@SHA256_hex:
  0014e	48 8b 84 24 40
	01 00 00	 mov	 rax, QWORD PTR tv140[rsp]
  00156	48 89 84 24 48
	01 00 00	 mov	 QWORD PTR tv149[rsp], rax
  0015e	eb 3f		 jmp	 SHORT $LN14@SHA256_hex
$LN13@SHA256_hex:
  00160	48 8b 44 24 28	 mov	 rax, QWORD PTR retval$[rsp]
  00165	48 83 b8 a0 00
	00 00 00	 cmp	 QWORD PTR [rax+160], 0
  0016d	75 1c		 jne	 SHORT $LN12@SHA256_hex
  0016f	41 b8 cb 01 00
	00		 mov	 r8d, 459		; 000001cbH
  00175	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DE@LHALCNDM@?$AA?4?$AA?4?$AA?2?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AAs?$AA?2?$AAs?$AAh?$AAa?$AA2?$AA5?$AA6?$AAm?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?4?$AAc?$AA?$AA@
  0017c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EO@LALHLELK@?$AA?$CI?$AA?$CI?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?$CK?$AA?$CJ?$AA?$CI?$AAr?$AAe?$AAt?$AAv?$AAa?$AAl?$AA?$CJ?$AA?$CJ?$AA?9?$AA?$DO?$AAd?$AAa@
  00183	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  00189	33 c0		 xor	 eax, eax
$LN12@SHA256_hex:
  0018b	48 8b 44 24 28	 mov	 rax, QWORD PTR retval$[rsp]
  00190	48 8b 80 a0 00
	00 00		 mov	 rax, QWORD PTR [rax+160]
  00197	48 89 84 24 48
	01 00 00	 mov	 QWORD PTR tv149[rsp], rax
$LN14@SHA256_hex:
  0019f	48 8b 84 24 48
	01 00 00	 mov	 rax, QWORD PTR tv149[rsp]
  001a7	48 89 84 24 30
	01 00 00	 mov	 QWORD PTR hex_digest$[rsp], rax

; 460  : 
; 461  :     /* Make hex version of the digest */
; 462  :     for(i=j=0; i<self->digestsize; i++) {

  001af	c7 84 24 38 01
	00 00 00 00 00
	00		 mov	 DWORD PTR j$[rsp], 0
  001ba	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR j$[rsp]
  001c1	89 44 24 20	 mov	 DWORD PTR i$[rsp], eax
  001c5	eb 0a		 jmp	 SHORT $LN3@SHA256_hex
$LN2@SHA256_hex:
  001c7	8b 44 24 20	 mov	 eax, DWORD PTR i$[rsp]
  001cb	ff c0		 inc	 eax
  001cd	89 44 24 20	 mov	 DWORD PTR i$[rsp], eax
$LN3@SHA256_hex:
  001d1	48 8b 84 24 60
	01 00 00	 mov	 rax, QWORD PTR self$[rsp]
  001d9	8b 80 d0 00 00
	00		 mov	 eax, DWORD PTR [rax+208]
  001df	39 44 24 20	 cmp	 DWORD PTR i$[rsp], eax
  001e3	0f 8d a4 00 00
	00		 jge	 $LN1@SHA256_hex

; 463  :         unsigned char c;
; 464  :         c = (digest[i] >> 4) & 0xf;

  001e9	48 63 44 24 20	 movsxd	 rax, DWORD PTR i$[rsp]
  001ee	0f b6 84 04 10
	01 00 00	 movzx	 eax, BYTE PTR digest$[rsp+rax]
  001f6	c1 f8 04	 sar	 eax, 4
  001f9	83 e0 0f	 and	 eax, 15
  001fc	88 84 24 3c 01
	00 00		 mov	 BYTE PTR c$22112[rsp], al

; 465  :         hex_digest[j++] = Py_hexdigits[c];

  00203	0f b6 84 24 3c
	01 00 00	 movzx	 eax, BYTE PTR c$22112[rsp]
  0020b	48 63 8c 24 38
	01 00 00	 movsxd	 rcx, DWORD PTR j$[rsp]
  00213	48 8b 94 24 30
	01 00 00	 mov	 rdx, QWORD PTR hex_digest$[rsp]
  0021b	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR Py_hexdigits
  00222	41 0f b6 04 00	 movzx	 eax, BYTE PTR [r8+rax]
  00227	88 04 0a	 mov	 BYTE PTR [rdx+rcx], al
  0022a	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR j$[rsp]
  00231	ff c0		 inc	 eax
  00233	89 84 24 38 01
	00 00		 mov	 DWORD PTR j$[rsp], eax

; 466  :         c = (digest[i] & 0xf);

  0023a	48 63 44 24 20	 movsxd	 rax, DWORD PTR i$[rsp]
  0023f	0f b6 84 04 10
	01 00 00	 movzx	 eax, BYTE PTR digest$[rsp+rax]
  00247	83 e0 0f	 and	 eax, 15
  0024a	88 84 24 3c 01
	00 00		 mov	 BYTE PTR c$22112[rsp], al

; 467  :         hex_digest[j++] = Py_hexdigits[c];

  00251	0f b6 84 24 3c
	01 00 00	 movzx	 eax, BYTE PTR c$22112[rsp]
  00259	48 63 8c 24 38
	01 00 00	 movsxd	 rcx, DWORD PTR j$[rsp]
  00261	48 8b 94 24 30
	01 00 00	 mov	 rdx, QWORD PTR hex_digest$[rsp]
  00269	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR Py_hexdigits
  00270	41 0f b6 04 00	 movzx	 eax, BYTE PTR [r8+rax]
  00275	88 04 0a	 mov	 BYTE PTR [rdx+rcx], al
  00278	8b 84 24 38 01
	00 00		 mov	 eax, DWORD PTR j$[rsp]
  0027f	ff c0		 inc	 eax
  00281	89 84 24 38 01
	00 00		 mov	 DWORD PTR j$[rsp], eax

; 468  :     }

  00288	e9 3a ff ff ff	 jmp	 $LN2@SHA256_hex
$LN1@SHA256_hex:

; 469  : #ifdef Py_DEBUG
; 470  :     assert(_PyUnicode_CheckConsistency(retval, 1));

  0028d	ba 01 00 00 00	 mov	 edx, 1
  00292	48 8b 4c 24 28	 mov	 rcx, QWORD PTR retval$[rsp]
  00297	e8 00 00 00 00	 call	 _PyUnicode_CheckConsistency
  0029c	85 c0		 test	 eax, eax
  0029e	75 1c		 jne	 SHORT $LN15@SHA256_hex
  002a0	41 b8 d6 01 00
	00		 mov	 r8d, 470		; 000001d6H
  002a6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DE@LHALCNDM@?$AA?4?$AA?4?$AA?2?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AAs?$AA?2?$AAs?$AAh?$AAa?$AA2?$AA5?$AA6?$AAm?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?4?$AAc?$AA?$AA@
  002ad	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EO@BJKIFCAJ@?$AA_?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AAC?$AAo?$AAn?$AAs?$AAi?$AAs?$AAt?$AAe?$AAn?$AAc?$AAy?$AA?$CI?$AAr?$AAe?$AAt?$AAv@
  002b4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  002ba	33 c0		 xor	 eax, eax
$LN15@SHA256_hex:

; 471  : #endif
; 472  :     return retval;

  002bc	48 8b 44 24 28	 mov	 rax, QWORD PTR retval$[rsp]
$LN5@SHA256_hex:

; 473  : }

  002c1	48 81 c4 58 01
	00 00		 add	 rsp, 344		; 00000158H
  002c8	c3		 ret	 0
SHA256_hexdigest ENDP
_TEXT	ENDS
PUBLIC	_Py_IncRef
PUBLIC	??_C@_0CA@DGKHNIN@Buffer?5must?5be?5single?5dimension?$AA@ ; `string'
PUBLIC	??_C@_0CK@NHOOCGGK@object?5supporting?5the?5buffer?5API@ ; `string'
PUBLIC	??_C@_0CP@IBHDLOCD@Unicode?9objects?5must?5be?5encoded?5@ ; `string'
PUBLIC	??_C@_08BNPIIEPK@O?3update?$AA@			; `string'
EXTRN	_Py_NoneStruct:BYTE
EXTRN	PyBuffer_Release:PROC
EXTRN	PyExc_BufferError:QWORD
EXTRN	PyObject_GetBuffer:PROC
EXTRN	PyErr_SetString:PROC
EXTRN	PyExc_TypeError:QWORD
EXTRN	PyArg_ParseTuple:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$SHA256_update DD imagerel SHA256_update
	DD	imagerel SHA256_update+307
	DD	imagerel $unwind$SHA256_update
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SHA256_update DD 021101H
	DD	0110111H
xdata	ENDS
;	COMDAT ??_C@_0CA@DGKHNIN@Buffer?5must?5be?5single?5dimension?$AA@
CONST	SEGMENT
??_C@_0CA@DGKHNIN@Buffer?5must?5be?5single?5dimension?$AA@ DB 'Buffer mus'
	DB	't be single dimension', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@NHOOCGGK@object?5supporting?5the?5buffer?5API@
CONST	SEGMENT
??_C@_0CK@NHOOCGGK@object?5supporting?5the?5buffer?5API@ DB 'object suppo'
	DB	'rting the buffer API required', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@IBHDLOCD@Unicode?9objects?5must?5be?5encoded?5@
CONST	SEGMENT
??_C@_0CP@IBHDLOCD@Unicode?9objects?5must?5be?5encoded?5@ DB 'Unicode-obj'
	DB	'ects must be encoded before hashing', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08BNPIIEPK@O?3update?$AA@
CONST	SEGMENT
??_C@_08BNPIIEPK@O?3update?$AA@ DB 'O:update', 00H	; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT SHA256_update
_TEXT	SEGMENT
buf$ = 32
obj$ = 112
self$ = 144
args$ = 152
SHA256_update PROC					; COMDAT

; 480  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 81 ec 88 00
	00 00		 sub	 rsp, 136		; 00000088H

; 481  :     PyObject *obj;
; 482  :     Py_buffer buf;
; 483  : 
; 484  :     if (!PyArg_ParseTuple(args, "O:update", &obj))

  00011	4c 8d 44 24 70	 lea	 r8, QWORD PTR obj$[rsp]
  00016	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_08BNPIIEPK@O?3update?$AA@
  0001d	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR args$[rsp]
  00025	e8 00 00 00 00	 call	 PyArg_ParseTuple
  0002a	85 c0		 test	 eax, eax
  0002c	75 07		 jne	 SHORT $LN9@SHA256_upd

; 485  :         return NULL;

  0002e	33 c0		 xor	 eax, eax
  00030	e9 f6 00 00 00	 jmp	 $LN10@SHA256_upd
$LN9@SHA256_upd:
$LN8@SHA256_upd:

; 486  : 
; 487  :     GET_BUFFER_VIEW_OR_ERROUT(obj, &buf);

  00035	48 8b 44 24 70	 mov	 rax, QWORD PTR obj$[rsp]
  0003a	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  0003e	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  00044	25 00 00 00 10	 and	 eax, 268435456		; 10000000H
  00049	85 c0		 test	 eax, eax
  0004b	74 1a		 je	 SHORT $LN5@SHA256_upd
  0004d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CP@IBHDLOCD@Unicode?9objects?5must?5be?5encoded?5@
  00054	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  0005b	e8 00 00 00 00	 call	 PyErr_SetString
  00060	33 c0		 xor	 eax, eax
  00062	e9 c4 00 00 00	 jmp	 $LN10@SHA256_upd
$LN5@SHA256_upd:
  00067	48 8b 44 24 70	 mov	 rax, QWORD PTR obj$[rsp]
  0006c	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00070	48 83 b8 f8 00
	00 00 00	 cmp	 QWORD PTR [rax+248], 0
  00078	74 16		 je	 SHORT $LN3@SHA256_upd
  0007a	48 8b 44 24 70	 mov	 rax, QWORD PTR obj$[rsp]
  0007f	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00083	48 8b 80 f8 00
	00 00		 mov	 rax, QWORD PTR [rax+248]
  0008a	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0008e	75 1a		 jne	 SHORT $LN4@SHA256_upd
$LN3@SHA256_upd:
  00090	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CK@NHOOCGGK@object?5supporting?5the?5buffer?5API@
  00097	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  0009e	e8 00 00 00 00	 call	 PyErr_SetString
  000a3	33 c0		 xor	 eax, eax
  000a5	e9 81 00 00 00	 jmp	 $LN10@SHA256_upd
$LN4@SHA256_upd:
  000aa	45 33 c0	 xor	 r8d, r8d
  000ad	48 8d 54 24 20	 lea	 rdx, QWORD PTR buf$[rsp]
  000b2	48 8b 4c 24 70	 mov	 rcx, QWORD PTR obj$[rsp]
  000b7	e8 00 00 00 00	 call	 PyObject_GetBuffer
  000bc	83 f8 ff	 cmp	 eax, -1
  000bf	75 04		 jne	 SHORT $LN2@SHA256_upd
  000c1	33 c0		 xor	 eax, eax
  000c3	eb 66		 jmp	 SHORT $LN10@SHA256_upd
$LN2@SHA256_upd:
  000c5	83 7c 24 44 01	 cmp	 DWORD PTR buf$[rsp+36], 1
  000ca	7e 21		 jle	 SHORT $LN1@SHA256_upd
  000cc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CA@DGKHNIN@Buffer?5must?5be?5single?5dimension?$AA@
  000d3	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_BufferError
  000da	e8 00 00 00 00	 call	 PyErr_SetString
  000df	48 8d 4c 24 20	 lea	 rcx, QWORD PTR buf$[rsp]
  000e4	e8 00 00 00 00	 call	 PyBuffer_Release
  000e9	33 c0		 xor	 eax, eax
  000eb	eb 3e		 jmp	 SHORT $LN10@SHA256_upd
$LN1@SHA256_upd:
  000ed	33 c0		 xor	 eax, eax
  000ef	85 c0		 test	 eax, eax
  000f1	0f 85 3e ff ff
	ff		 jne	 $LN8@SHA256_upd

; 488  : 
; 489  :     sha_update(self, buf.buf, buf.len);

  000f7	4c 8b 44 24 30	 mov	 r8, QWORD PTR buf$[rsp+16]
  000fc	48 8b 54 24 20	 mov	 rdx, QWORD PTR buf$[rsp]
  00101	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR self$[rsp]
  00109	e8 00 00 00 00	 call	 sha_update

; 490  : 
; 491  :     PyBuffer_Release(&buf);

  0010e	48 8d 4c 24 20	 lea	 rcx, QWORD PTR buf$[rsp]
  00113	e8 00 00 00 00	 call	 PyBuffer_Release

; 492  :     Py_INCREF(Py_None);

  00118	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_Py_NoneStruct
  0011f	e8 00 00 00 00	 call	 _Py_IncRef

; 493  :     return Py_None;

  00124	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_NoneStruct
$LN10@SHA256_upd:

; 494  : }

  0012b	48 81 c4 88 00
	00 00		 add	 rsp, 136		; 00000088H
  00132	c3		 ret	 0
SHA256_update ENDP
_TEXT	ENDS
PUBLIC	??_C@_0L@DHGMCEID@_Py_IncRef?$AA@		; `string'
PUBLIC	??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@ ; `string'
EXTRN	_Py_RefTotal:QWORD
EXTRN	_PyParallel_Guard:PROC
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$_Py_IncRef DD imagerel $LN7
	DD	imagerel $LN7+132
	DD	imagerel $unwind$_Py_IncRef
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_Py_IncRef DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT ??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
CONST	SEGMENT
??_C@_0L@DHGMCEID@_Py_IncRef?$AA@ DB '_Py_IncRef', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
CONST	SEGMENT
??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@ DB 'c:\src\pypa'
	DB	'rallel\include\object.h', 00H		; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT _Py_IncRef
_TEXT	SEGMENT
op$ = 64
_Py_IncRef PROC						; COMDAT

; 904  : {

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 905  :     if ((!Py_PXCTX && (Py_ISPY(op) || Px_PERSISTED(op)))) {

  00009	e8 00 00 00 00	 call	 _Py_PXCTX
  0000e	85 c0		 test	 eax, eax
  00010	75 6d		 jne	 SHORT $LN2@Py_IncRef
  00012	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  0001a	4c 8b 4c 24 40	 mov	 r9, QWORD PTR op$[rsp]
  0001f	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00025	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0002c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00033	e8 00 00 00 00	 call	 _PyParallel_Guard
  00038	85 c0		 test	 eax, eax
  0003a	75 12		 jne	 SHORT $LN1@Py_IncRef
  0003c	48 8b 44 24 40	 mov	 rax, QWORD PTR op$[rsp]
  00041	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00045	48 83 e0 20	 and	 rax, 32			; 00000020H
  00049	48 85 c0	 test	 rax, rax
  0004c	74 31		 je	 SHORT $LN2@Py_IncRef
$LN1@Py_IncRef:

; 906  :         _Py_INC_REFTOTAL;

  0004e	e8 00 00 00 00	 call	 _Py_PXCTX
  00053	85 c0		 test	 eax, eax
  00055	74 02		 je	 SHORT $LN5@Py_IncRef
  00057	eb 11		 jmp	 SHORT $LN6@Py_IncRef
$LN5@Py_IncRef:
  00059	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR _Py_RefTotal
  00060	48 ff c0	 inc	 rax
  00063	48 89 05 00 00
	00 00		 mov	 QWORD PTR _Py_RefTotal, rax
$LN6@Py_IncRef:

; 907  :         (((PyObject*)(op))->ob_refcnt++);

  0006a	48 8b 44 24 40	 mov	 rax, QWORD PTR op$[rsp]
  0006f	48 8b 40 50	 mov	 rax, QWORD PTR [rax+80]
  00073	48 ff c0	 inc	 rax
  00076	48 8b 4c 24 40	 mov	 rcx, QWORD PTR op$[rsp]
  0007b	48 89 41 50	 mov	 QWORD PTR [rcx+80], rax
$LN2@Py_IncRef:

; 908  :     }
; 909  : }

  0007f	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00083	c3		 ret	 0
_Py_IncRef ENDP
_TEXT	ENDS
;	COMDAT pdata
; File c:\src\pyparallel\modules\sha256module.c
pdata	SEGMENT
$pdata$sha_update DD imagerel sha_update
	DD	imagerel sha_update+459
	DD	imagerel $unwind$sha_update
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$sha_update DD 011301H
	DD	06213H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT sha_update
_TEXT	SEGMENT
clo$ = 32
i$ = 40
sha_info$ = 64
buffer$ = 72
count$ = 80
sha_update PROC						; COMDAT

; 269  : {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 270  :     Py_ssize_t i;
; 271  :     SHA_INT32 clo;
; 272  : 
; 273  :     clo = sha_info->count_lo + ((SHA_INT32) count << 3);

  00013	48 8b 44 24 40	 mov	 rax, QWORD PTR sha_info$[rsp]
  00018	8b 80 80 00 00
	00		 mov	 eax, DWORD PTR [rax+128]
  0001e	8b 4c 24 50	 mov	 ecx, DWORD PTR count$[rsp]
  00022	8d 04 c8	 lea	 eax, DWORD PTR [rax+rcx*8]
  00025	89 44 24 20	 mov	 DWORD PTR clo$[rsp], eax

; 274  :     if (clo < sha_info->count_lo) {

  00029	48 8b 44 24 40	 mov	 rax, QWORD PTR sha_info$[rsp]
  0002e	8b 80 80 00 00
	00		 mov	 eax, DWORD PTR [rax+128]
  00034	39 44 24 20	 cmp	 DWORD PTR clo$[rsp], eax
  00038	73 18		 jae	 SHORT $LN7@sha_update

; 275  :         ++sha_info->count_hi;

  0003a	48 8b 44 24 40	 mov	 rax, QWORD PTR sha_info$[rsp]
  0003f	8b 80 84 00 00
	00		 mov	 eax, DWORD PTR [rax+132]
  00045	ff c0		 inc	 eax
  00047	48 8b 4c 24 40	 mov	 rcx, QWORD PTR sha_info$[rsp]
  0004c	89 81 84 00 00
	00		 mov	 DWORD PTR [rcx+132], eax
$LN7@sha_update:

; 276  :     }
; 277  :     sha_info->count_lo = clo;

  00052	48 8b 44 24 40	 mov	 rax, QWORD PTR sha_info$[rsp]
  00057	8b 4c 24 20	 mov	 ecx, DWORD PTR clo$[rsp]
  0005b	89 88 80 00 00
	00		 mov	 DWORD PTR [rax+128], ecx

; 278  :     sha_info->count_hi += (SHA_INT32) count >> 29;

  00061	8b 44 24 50	 mov	 eax, DWORD PTR count$[rsp]
  00065	c1 e8 1d	 shr	 eax, 29
  00068	48 8b 4c 24 40	 mov	 rcx, QWORD PTR sha_info$[rsp]
  0006d	03 81 84 00 00
	00		 add	 eax, DWORD PTR [rcx+132]
  00073	48 8b 4c 24 40	 mov	 rcx, QWORD PTR sha_info$[rsp]
  00078	89 81 84 00 00
	00		 mov	 DWORD PTR [rcx+132], eax

; 279  :     if (sha_info->local) {

  0007e	48 8b 44 24 40	 mov	 rax, QWORD PTR sha_info$[rsp]
  00083	83 b8 cc 00 00
	00 00		 cmp	 DWORD PTR [rax+204], 0
  0008a	0f 84 bc 00 00
	00		 je	 $LN6@sha_update

; 280  :         i = SHA_BLOCKSIZE - sha_info->local;

  00090	48 8b 44 24 40	 mov	 rax, QWORD PTR sha_info$[rsp]
  00095	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  0009a	2b 88 cc 00 00
	00		 sub	 ecx, DWORD PTR [rax+204]
  000a0	8b c1		 mov	 eax, ecx
  000a2	48 98		 cdqe
  000a4	48 89 44 24 28	 mov	 QWORD PTR i$[rsp], rax

; 281  :         if (i > count) {

  000a9	48 8b 44 24 50	 mov	 rax, QWORD PTR count$[rsp]
  000ae	48 39 44 24 28	 cmp	 QWORD PTR i$[rsp], rax
  000b3	7e 0a		 jle	 SHORT $LN5@sha_update

; 282  :             i = count;

  000b5	48 8b 44 24 50	 mov	 rax, QWORD PTR count$[rsp]
  000ba	48 89 44 24 28	 mov	 QWORD PTR i$[rsp], rax
$LN5@sha_update:

; 283  :         }
; 284  :         memcpy(((SHA_BYTE *) sha_info->data) + sha_info->local, buffer, i);

  000bf	48 8b 44 24 40	 mov	 rax, QWORD PTR sha_info$[rsp]
  000c4	48 63 80 cc 00
	00 00		 movsxd	 rax, DWORD PTR [rax+204]
  000cb	48 8b 4c 24 40	 mov	 rcx, QWORD PTR sha_info$[rsp]
  000d0	48 8d 84 01 88
	00 00 00	 lea	 rax, QWORD PTR [rcx+rax+136]
  000d8	4c 8b 44 24 28	 mov	 r8, QWORD PTR i$[rsp]
  000dd	48 8b 54 24 48	 mov	 rdx, QWORD PTR buffer$[rsp]
  000e2	48 8b c8	 mov	 rcx, rax
  000e5	e8 00 00 00 00	 call	 memcpy

; 285  :         count -= i;

  000ea	48 8b 44 24 28	 mov	 rax, QWORD PTR i$[rsp]
  000ef	48 8b 4c 24 50	 mov	 rcx, QWORD PTR count$[rsp]
  000f4	48 2b c8	 sub	 rcx, rax
  000f7	48 8b c1	 mov	 rax, rcx
  000fa	48 89 44 24 50	 mov	 QWORD PTR count$[rsp], rax

; 286  :         buffer += i;

  000ff	48 8b 44 24 28	 mov	 rax, QWORD PTR i$[rsp]
  00104	48 8b 4c 24 48	 mov	 rcx, QWORD PTR buffer$[rsp]
  00109	48 03 c8	 add	 rcx, rax
  0010c	48 8b c1	 mov	 rax, rcx
  0010f	48 89 44 24 48	 mov	 QWORD PTR buffer$[rsp], rax

; 287  :         sha_info->local += i;

  00114	48 8b 44 24 40	 mov	 rax, QWORD PTR sha_info$[rsp]
  00119	48 63 80 cc 00
	00 00		 movsxd	 rax, DWORD PTR [rax+204]
  00120	48 03 44 24 28	 add	 rax, QWORD PTR i$[rsp]
  00125	48 8b 4c 24 40	 mov	 rcx, QWORD PTR sha_info$[rsp]
  0012a	89 81 cc 00 00
	00		 mov	 DWORD PTR [rcx+204], eax

; 288  :         if (sha_info->local == SHA_BLOCKSIZE) {

  00130	48 8b 44 24 40	 mov	 rax, QWORD PTR sha_info$[rsp]
  00135	83 b8 cc 00 00
	00 40		 cmp	 DWORD PTR [rax+204], 64	; 00000040H
  0013c	75 0c		 jne	 SHORT $LN4@sha_update

; 289  :             sha_transform(sha_info);

  0013e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR sha_info$[rsp]
  00143	e8 00 00 00 00	 call	 sha_transform

; 290  :         }
; 291  :         else {

  00148	eb 02		 jmp	 SHORT $LN3@sha_update
$LN4@sha_update:

; 292  :             return;

  0014a	eb 7a		 jmp	 SHORT $LN8@sha_update
$LN3@sha_update:
$LN6@sha_update:
$LN2@sha_update:

; 293  :         }
; 294  :     }
; 295  :     while (count >= SHA_BLOCKSIZE) {

  0014c	48 83 7c 24 50
	40		 cmp	 QWORD PTR count$[rsp], 64 ; 00000040H
  00152	7c 46		 jl	 SHORT $LN1@sha_update

; 296  :         memcpy(sha_info->data, buffer, SHA_BLOCKSIZE);

  00154	48 8b 44 24 40	 mov	 rax, QWORD PTR sha_info$[rsp]
  00159	48 05 88 00 00
	00		 add	 rax, 136		; 00000088H
  0015f	41 b8 40 00 00
	00		 mov	 r8d, 64			; 00000040H
  00165	48 8b 54 24 48	 mov	 rdx, QWORD PTR buffer$[rsp]
  0016a	48 8b c8	 mov	 rcx, rax
  0016d	e8 00 00 00 00	 call	 memcpy

; 297  :         buffer += SHA_BLOCKSIZE;

  00172	48 8b 44 24 48	 mov	 rax, QWORD PTR buffer$[rsp]
  00177	48 83 c0 40	 add	 rax, 64			; 00000040H
  0017b	48 89 44 24 48	 mov	 QWORD PTR buffer$[rsp], rax

; 298  :         count -= SHA_BLOCKSIZE;

  00180	48 8b 44 24 50	 mov	 rax, QWORD PTR count$[rsp]
  00185	48 83 e8 40	 sub	 rax, 64			; 00000040H
  00189	48 89 44 24 50	 mov	 QWORD PTR count$[rsp], rax

; 299  :         sha_transform(sha_info);

  0018e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR sha_info$[rsp]
  00193	e8 00 00 00 00	 call	 sha_transform

; 300  :     }

  00198	eb b2		 jmp	 SHORT $LN2@sha_update
$LN1@sha_update:

; 301  :     memcpy(sha_info->data, buffer, count);

  0019a	48 8b 44 24 40	 mov	 rax, QWORD PTR sha_info$[rsp]
  0019f	48 05 88 00 00
	00		 add	 rax, 136		; 00000088H
  001a5	4c 8b 44 24 50	 mov	 r8, QWORD PTR count$[rsp]
  001aa	48 8b 54 24 48	 mov	 rdx, QWORD PTR buffer$[rsp]
  001af	48 8b c8	 mov	 rcx, rax
  001b2	e8 00 00 00 00	 call	 memcpy

; 302  :     sha_info->local = count;

  001b7	48 8b 44 24 40	 mov	 rax, QWORD PTR sha_info$[rsp]
  001bc	8b 4c 24 50	 mov	 ecx, DWORD PTR count$[rsp]
  001c0	89 88 cc 00 00
	00		 mov	 DWORD PTR [rax+204], ecx
$LN8@sha_update:

; 303  : }

  001c6	48 83 c4 38	 add	 rsp, 56			; 00000038H
  001ca	c3		 ret	 0
sha_update ENDP
_TEXT	ENDS
EXTRN	PyLong_FromLong:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$SHA256_get_block_size DD imagerel SHA256_get_block_size
	DD	imagerel SHA256_get_block_size+29
	DD	imagerel $unwind$SHA256_get_block_size
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SHA256_get_block_size DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT SHA256_get_block_size
_TEXT	SEGMENT
self$ = 48
closure$ = 56
SHA256_get_block_size PROC				; COMDAT

; 506  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 507  :     return PyLong_FromLong(SHA_BLOCKSIZE);

  0000e	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  00013	e8 00 00 00 00	 call	 PyLong_FromLong

; 508  : }

  00018	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001c	c3		 ret	 0
SHA256_get_block_size ENDP
_TEXT	ENDS
PUBLIC	??_C@_06DANBNIHA@SHA224?$AA@			; `string'
PUBLIC	??_C@_06HKIKMHH@SHA256?$AA@			; `string'
EXTRN	PyUnicode_FromStringAndSize:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$SHA256_get_name DD imagerel SHA256_get_name
	DD	imagerel SHA256_get_name+71
	DD	imagerel $unwind$SHA256_get_name
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SHA256_get_name DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT ??_C@_06DANBNIHA@SHA224?$AA@
CONST	SEGMENT
??_C@_06DANBNIHA@SHA224?$AA@ DB 'SHA224', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06HKIKMHH@SHA256?$AA@
CONST	SEGMENT
??_C@_06HKIKMHH@SHA256?$AA@ DB 'SHA256', 00H		; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT SHA256_get_name
_TEXT	SEGMENT
self$ = 48
closure$ = 56
SHA256_get_name PROC					; COMDAT

; 512  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 513  :     if (((SHAobject *)self)->digestsize == 32)

  0000e	48 8b 44 24 30	 mov	 rax, QWORD PTR self$[rsp]
  00013	83 b8 d0 00 00
	00 20		 cmp	 DWORD PTR [rax+208], 32	; 00000020H
  0001a	75 15		 jne	 SHORT $LN2@SHA256_get

; 514  :         return PyUnicode_FromStringAndSize("SHA256", 6);

  0001c	ba 06 00 00 00	 mov	 edx, 6
  00021	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_06HKIKMHH@SHA256?$AA@
  00028	e8 00 00 00 00	 call	 PyUnicode_FromStringAndSize
  0002d	eb 13		 jmp	 SHORT $LN3@SHA256_get

; 515  :     else

  0002f	eb 11		 jmp	 SHORT $LN1@SHA256_get
$LN2@SHA256_get:

; 516  :         return PyUnicode_FromStringAndSize("SHA224", 6);

  00031	ba 06 00 00 00	 mov	 edx, 6
  00036	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_06DANBNIHA@SHA224?$AA@
  0003d	e8 00 00 00 00	 call	 PyUnicode_FromStringAndSize
$LN1@SHA256_get:
$LN3@SHA256_get:

; 517  : }

  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	c3		 ret	 0
SHA256_get_name ENDP
_TEXT	ENDS
PUBLIC	_Py_DecRef
PUBLIC	??_C@_06KJFPOEIK@?$HMO?3new?$AA@		; `string'
EXTRN	PyErr_Occurred:PROC
EXTRN	PyArg_ParseTupleAndKeywords:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$SHA256_new DD imagerel SHA256_new
	DD	imagerel SHA256_new+460
	DD	imagerel $unwind$SHA256_new
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SHA256_new DD 021601H
	DD	0150116H
xdata	ENDS
;	COMDAT ??_C@_06KJFPOEIK@?$HMO?3new?$AA@
CONST	SEGMENT
??_C@_06KJFPOEIK@?$HMO?3new?$AA@ DB '|O:new', 00H	; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT SHA256_new
_TEXT	SEGMENT
data_obj$ = 48
buf$ = 64
new$ = 144
self$ = 176
args$ = 184
kwdict$ = 192
SHA256_new PROC						; COMDAT

; 612  : {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 81 ec a8 00
	00 00		 sub	 rsp, 168		; 000000a8H

; 613  :     static char *kwlist[] = {"string", NULL};
; 614  :     SHAobject *new;
; 615  :     PyObject *data_obj = NULL;

  00016	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR data_obj$[rsp], 0

; 616  :     Py_buffer buf;
; 617  : 
; 618  :     if (!PyArg_ParseTupleAndKeywords(args, kwdict, "|O:new", kwlist,
; 619  :                                      &data_obj)) {

  0001f	48 8d 44 24 30	 lea	 rax, QWORD PTR data_obj$[rsp]
  00024	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00029	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:?kwlist@?1??SHA256_new@@9@9
  00030	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_06KJFPOEIK@?$HMO?3new?$AA@
  00037	48 8b 94 24 c0
	00 00 00	 mov	 rdx, QWORD PTR kwdict$[rsp]
  0003f	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR args$[rsp]
  00047	e8 00 00 00 00	 call	 PyArg_ParseTupleAndKeywords
  0004c	85 c0		 test	 eax, eax
  0004e	75 07		 jne	 SHORT $LN15@SHA256_new

; 620  :         return NULL;

  00050	33 c0		 xor	 eax, eax
  00052	e9 6d 01 00 00	 jmp	 $LN16@SHA256_new
$LN15@SHA256_new:

; 621  :     }
; 622  : 
; 623  :     if (data_obj)

  00057	48 83 7c 24 30
	00		 cmp	 QWORD PTR data_obj$[rsp], 0
  0005d	0f 84 c8 00 00
	00		 je	 $LN14@SHA256_new
$LN13@SHA256_new:

; 624  :         GET_BUFFER_VIEW_OR_ERROUT(data_obj, &buf);

  00063	48 8b 44 24 30	 mov	 rax, QWORD PTR data_obj$[rsp]
  00068	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  0006c	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  00072	25 00 00 00 10	 and	 eax, 268435456		; 10000000H
  00077	85 c0		 test	 eax, eax
  00079	74 1a		 je	 SHORT $LN10@SHA256_new
  0007b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CP@IBHDLOCD@Unicode?9objects?5must?5be?5encoded?5@
  00082	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  00089	e8 00 00 00 00	 call	 PyErr_SetString
  0008e	33 c0		 xor	 eax, eax
  00090	e9 2f 01 00 00	 jmp	 $LN16@SHA256_new
$LN10@SHA256_new:
  00095	48 8b 44 24 30	 mov	 rax, QWORD PTR data_obj$[rsp]
  0009a	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  0009e	48 83 b8 f8 00
	00 00 00	 cmp	 QWORD PTR [rax+248], 0
  000a6	74 16		 je	 SHORT $LN8@SHA256_new
  000a8	48 8b 44 24 30	 mov	 rax, QWORD PTR data_obj$[rsp]
  000ad	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  000b1	48 8b 80 f8 00
	00 00		 mov	 rax, QWORD PTR [rax+248]
  000b8	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  000bc	75 1a		 jne	 SHORT $LN9@SHA256_new
$LN8@SHA256_new:
  000be	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CK@NHOOCGGK@object?5supporting?5the?5buffer?5API@
  000c5	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  000cc	e8 00 00 00 00	 call	 PyErr_SetString
  000d1	33 c0		 xor	 eax, eax
  000d3	e9 ec 00 00 00	 jmp	 $LN16@SHA256_new
$LN9@SHA256_new:
  000d8	45 33 c0	 xor	 r8d, r8d
  000db	48 8d 54 24 40	 lea	 rdx, QWORD PTR buf$[rsp]
  000e0	48 8b 4c 24 30	 mov	 rcx, QWORD PTR data_obj$[rsp]
  000e5	e8 00 00 00 00	 call	 PyObject_GetBuffer
  000ea	83 f8 ff	 cmp	 eax, -1
  000ed	75 07		 jne	 SHORT $LN7@SHA256_new
  000ef	33 c0		 xor	 eax, eax
  000f1	e9 ce 00 00 00	 jmp	 $LN16@SHA256_new
$LN7@SHA256_new:
  000f6	83 7c 24 64 01	 cmp	 DWORD PTR buf$[rsp+36], 1
  000fb	7e 24		 jle	 SHORT $LN6@SHA256_new
  000fd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CA@DGKHNIN@Buffer?5must?5be?5single?5dimension?$AA@
  00104	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_BufferError
  0010b	e8 00 00 00 00	 call	 PyErr_SetString
  00110	48 8d 4c 24 40	 lea	 rcx, QWORD PTR buf$[rsp]
  00115	e8 00 00 00 00	 call	 PyBuffer_Release
  0011a	33 c0		 xor	 eax, eax
  0011c	e9 a3 00 00 00	 jmp	 $LN16@SHA256_new
$LN6@SHA256_new:
  00121	33 c0		 xor	 eax, eax
  00123	85 c0		 test	 eax, eax
  00125	0f 85 38 ff ff
	ff		 jne	 $LN13@SHA256_new
$LN14@SHA256_new:

; 625  : 
; 626  :     if ((new = newSHA256object()) == NULL) {

  0012b	e8 00 00 00 00	 call	 newSHA256object
  00130	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR new$[rsp], rax
  00138	48 83 bc 24 90
	00 00 00 00	 cmp	 QWORD PTR new$[rsp], 0
  00141	75 16		 jne	 SHORT $LN5@SHA256_new

; 627  :         if (data_obj)

  00143	48 83 7c 24 30
	00		 cmp	 QWORD PTR data_obj$[rsp], 0
  00149	74 0a		 je	 SHORT $LN4@SHA256_new

; 628  :             PyBuffer_Release(&buf);

  0014b	48 8d 4c 24 40	 lea	 rcx, QWORD PTR buf$[rsp]
  00150	e8 00 00 00 00	 call	 PyBuffer_Release
$LN4@SHA256_new:

; 629  :         return NULL;

  00155	33 c0		 xor	 eax, eax
  00157	eb 6b		 jmp	 SHORT $LN16@SHA256_new
$LN5@SHA256_new:

; 630  :     }
; 631  : 
; 632  :     sha_init(new);

  00159	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR new$[rsp]
  00161	e8 00 00 00 00	 call	 sha_init

; 633  : 
; 634  :     if (PyErr_Occurred()) {

  00166	e8 00 00 00 00	 call	 PyErr_Occurred
  0016b	48 85 c0	 test	 rax, rax
  0016e	74 23		 je	 SHORT $LN3@SHA256_new

; 635  :         Py_DECREF(new);

  00170	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR new$[rsp]
  00178	e8 00 00 00 00	 call	 _Py_DecRef

; 636  :         if (data_obj)

  0017d	48 83 7c 24 30
	00		 cmp	 QWORD PTR data_obj$[rsp], 0
  00183	74 0a		 je	 SHORT $LN2@SHA256_new

; 637  :             PyBuffer_Release(&buf);

  00185	48 8d 4c 24 40	 lea	 rcx, QWORD PTR buf$[rsp]
  0018a	e8 00 00 00 00	 call	 PyBuffer_Release
$LN2@SHA256_new:

; 638  :         return NULL;

  0018f	33 c0		 xor	 eax, eax
  00191	eb 31		 jmp	 SHORT $LN16@SHA256_new
$LN3@SHA256_new:

; 639  :     }
; 640  :     if (data_obj) {

  00193	48 83 7c 24 30
	00		 cmp	 QWORD PTR data_obj$[rsp], 0
  00199	74 21		 je	 SHORT $LN1@SHA256_new

; 641  :         sha_update(new, buf.buf, buf.len);

  0019b	4c 8b 44 24 50	 mov	 r8, QWORD PTR buf$[rsp+16]
  001a0	48 8b 54 24 40	 mov	 rdx, QWORD PTR buf$[rsp]
  001a5	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR new$[rsp]
  001ad	e8 00 00 00 00	 call	 sha_update

; 642  :         PyBuffer_Release(&buf);

  001b2	48 8d 4c 24 40	 lea	 rcx, QWORD PTR buf$[rsp]
  001b7	e8 00 00 00 00	 call	 PyBuffer_Release
$LN1@SHA256_new:

; 643  :     }
; 644  : 
; 645  :     return (PyObject *)new;

  001bc	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR new$[rsp]
$LN16@SHA256_new:

; 646  : }

  001c4	48 81 c4 a8 00
	00 00		 add	 rsp, 168		; 000000a8H
  001cb	c3		 ret	 0
SHA256_new ENDP
_TEXT	ENDS
PUBLIC	??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@		; `string'
EXTRN	_Py_Dealloc:PROC
EXTRN	_Py_NegativeRefcount:PROC
EXTRN	Px_DecRef:PROC
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$_Py_DecRef DD imagerel $LN13
	DD	imagerel $LN13+257
	DD	imagerel $unwind$_Py_DecRef
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_Py_DecRef DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT ??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
CONST	SEGMENT
??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@ DB '_Py_DecRef', 00H	; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT _Py_DecRef
_TEXT	SEGMENT
tv81 = 48
op$ = 80
_Py_DecRef PROC						; COMDAT

; 923  : {

$LN13:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 924  :     if (!Py_PXCTX) {

  00009	e8 00 00 00 00	 call	 _Py_PXCTX
  0000e	85 c0		 test	 eax, eax
  00010	0f 85 e6 00 00
	00		 jne	 $LN8@Py_DecRef

; 925  :         if (Px_PERSISTED(op) || Px_CLONED(op))

  00016	48 8b 44 24 50	 mov	 rax, QWORD PTR op$[rsp]
  0001b	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0001f	48 83 e0 20	 and	 rax, 32			; 00000020H
  00023	48 85 c0	 test	 rax, rax
  00026	75 14		 jne	 SHORT $LN6@Py_DecRef
  00028	48 8b 44 24 50	 mov	 rax, QWORD PTR op$[rsp]
  0002d	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00031	48 25 80 00 00
	00		 and	 rax, 128		; 00000080H
  00037	48 85 c0	 test	 rax, rax
  0003a	74 0f		 je	 SHORT $LN7@Py_DecRef
$LN6@Py_DecRef:

; 926  :             Px_DECREF(op);

  0003c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR op$[rsp]
  00041	e8 00 00 00 00	 call	 Px_DecRef
  00046	e9 b1 00 00 00	 jmp	 $LN5@Py_DecRef
$LN7@Py_DecRef:

; 927  :         else if (!Px_ISPX(op)) {

  0004b	48 8b 44 24 50	 mov	 rax, QWORD PTR op$[rsp]
  00050	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00054	48 83 e0 02	 and	 rax, 2
  00058	48 85 c0	 test	 rax, rax
  0005b	0f 85 9b 00 00
	00		 jne	 $LN4@Py_DecRef

; 928  :             _Py_DEC_REFTOTAL;

  00061	e8 00 00 00 00	 call	 _Py_PXCTX
  00066	85 c0		 test	 eax, eax
  00068	74 02		 je	 SHORT $LN11@Py_DecRef
  0006a	eb 11		 jmp	 SHORT $LN12@Py_DecRef
$LN11@Py_DecRef:
  0006c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR _Py_RefTotal
  00073	48 ff c8	 dec	 rax
  00076	48 89 05 00 00
	00 00		 mov	 QWORD PTR _Py_RefTotal, rax
$LN12@Py_DecRef:

; 929  :             if ((--((PyObject *)(op))->ob_refcnt) != 0) {

  0007d	48 8b 44 24 50	 mov	 rax, QWORD PTR op$[rsp]
  00082	48 8b 40 50	 mov	 rax, QWORD PTR [rax+80]
  00086	48 ff c8	 dec	 rax
  00089	48 89 44 24 30	 mov	 QWORD PTR tv81[rsp], rax
  0008e	48 8b 44 24 50	 mov	 rax, QWORD PTR op$[rsp]
  00093	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv81[rsp]
  00098	48 89 48 50	 mov	 QWORD PTR [rax+80], rcx
  0009c	48 83 7c 24 30
	00		 cmp	 QWORD PTR tv81[rsp], 0
  000a2	74 4e		 je	 SHORT $LN3@Py_DecRef

; 930  :                 _Py_CHECK_REFCNT(op);

  000a4	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  000ac	4c 8b 4c 24 50	 mov	 r9, QWORD PTR op$[rsp]
  000b1	41 b8 a2 03 00
	00		 mov	 r8d, 930		; 000003a2H
  000b7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  000be	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  000c5	e8 00 00 00 00	 call	 _PyParallel_Guard
  000ca	85 c0		 test	 eax, eax
  000cc	75 22		 jne	 SHORT $LN2@Py_DecRef
  000ce	48 8b 44 24 50	 mov	 rax, QWORD PTR op$[rsp]
  000d3	48 83 78 50 00	 cmp	 QWORD PTR [rax+80], 0
  000d8	7d 16		 jge	 SHORT $LN2@Py_DecRef
  000da	4c 8b 44 24 50	 mov	 r8, QWORD PTR op$[rsp]
  000df	ba a2 03 00 00	 mov	 edx, 930		; 000003a2H
  000e4	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  000eb	e8 00 00 00 00	 call	 _Py_NegativeRefcount
$LN2@Py_DecRef:

; 931  :             } else

  000f0	eb 0a		 jmp	 SHORT $LN1@Py_DecRef
$LN3@Py_DecRef:

; 932  :                 _Py_Dealloc((PyObject *)(op));

  000f2	48 8b 4c 24 50	 mov	 rcx, QWORD PTR op$[rsp]
  000f7	e8 00 00 00 00	 call	 _Py_Dealloc
$LN1@Py_DecRef:
$LN4@Py_DecRef:
$LN5@Py_DecRef:
$LN8@Py_DecRef:

; 933  :         }
; 934  :     }
; 935  : }

  000fc	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00100	c3		 ret	 0
_Py_DecRef ENDP
_TEXT	ENDS
;	COMDAT pdata
; File c:\src\pyparallel\modules\sha256module.c
pdata	SEGMENT
$pdata$sha_init DD imagerel sha_init
	DD	imagerel sha_init+216
	DD	imagerel $unwind$sha_init
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$sha_init DD 010901H
	DD	02209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT sha_init
_TEXT	SEGMENT
i$21949 = 0
sha_info$ = 32
sha_init PROC						; COMDAT

; 230  : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24

; 231  :     TestEndianness(sha_info->Endianness)

  00009	c7 04 24 01 00
	00 00		 mov	 DWORD PTR i$21949[rsp], 1
  00010	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  00015	c7 80 c8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+200], 0
  0001f	0f be 04 24	 movsx	 eax, BYTE PTR i$21949[rsp]
  00023	83 f8 01	 cmp	 eax, 1
  00026	75 0f		 jne	 SHORT $LN1@sha_init
  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  0002d	c7 80 c8 00 00
	00 01 00 00 00	 mov	 DWORD PTR [rax+200], 1
$LN1@sha_init:

; 232  :     sha_info->digest[0] = 0x6A09E667L;

  00037	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  0003c	c7 40 60 67 e6
	09 6a		 mov	 DWORD PTR [rax+96], 1779033703 ; 6a09e667H

; 233  :     sha_info->digest[1] = 0xBB67AE85L;

  00043	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  00048	c7 40 64 85 ae
	67 bb		 mov	 DWORD PTR [rax+100], -1150833019 ; bb67ae85H

; 234  :     sha_info->digest[2] = 0x3C6EF372L;

  0004f	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  00054	c7 40 68 72 f3
	6e 3c		 mov	 DWORD PTR [rax+104], 1013904242 ; 3c6ef372H

; 235  :     sha_info->digest[3] = 0xA54FF53AL;

  0005b	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  00060	c7 40 6c 3a f5
	4f a5		 mov	 DWORD PTR [rax+108], -1521486534 ; a54ff53aH

; 236  :     sha_info->digest[4] = 0x510E527FL;

  00067	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  0006c	c7 40 70 7f 52
	0e 51		 mov	 DWORD PTR [rax+112], 1359893119 ; 510e527fH

; 237  :     sha_info->digest[5] = 0x9B05688CL;

  00073	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  00078	c7 40 74 8c 68
	05 9b		 mov	 DWORD PTR [rax+116], -1694144372 ; 9b05688cH

; 238  :     sha_info->digest[6] = 0x1F83D9ABL;

  0007f	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  00084	c7 40 78 ab d9
	83 1f		 mov	 DWORD PTR [rax+120], 528734635 ; 1f83d9abH

; 239  :     sha_info->digest[7] = 0x5BE0CD19L;

  0008b	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  00090	c7 40 7c 19 cd
	e0 5b		 mov	 DWORD PTR [rax+124], 1541459225 ; 5be0cd19H

; 240  :     sha_info->count_lo = 0L;

  00097	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  0009c	c7 80 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+128], 0

; 241  :     sha_info->count_hi = 0L;

  000a6	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  000ab	c7 80 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+132], 0

; 242  :     sha_info->local = 0;

  000b5	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  000ba	c7 80 cc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+204], 0

; 243  :     sha_info->digestsize = 32;

  000c4	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  000c9	c7 80 d0 00 00
	00 20 00 00 00	 mov	 DWORD PTR [rax+208], 32	; 00000020H

; 244  : }

  000d3	48 83 c4 18	 add	 rsp, 24
  000d7	c3		 ret	 0
sha_init ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$SHA224_new DD imagerel SHA224_new
	DD	imagerel SHA224_new+460
	DD	imagerel $unwind$SHA224_new
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SHA224_new DD 021601H
	DD	0150116H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT SHA224_new
_TEXT	SEGMENT
data_obj$ = 48
buf$ = 64
new$ = 144
self$ = 176
args$ = 184
kwdict$ = 192
SHA224_new PROC						; COMDAT

; 653  : {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 81 ec a8 00
	00 00		 sub	 rsp, 168		; 000000a8H

; 654  :     static char *kwlist[] = {"string", NULL};
; 655  :     SHAobject *new;
; 656  :     PyObject *data_obj = NULL;

  00016	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR data_obj$[rsp], 0

; 657  :     Py_buffer buf;
; 658  : 
; 659  :     if (!PyArg_ParseTupleAndKeywords(args, kwdict, "|O:new", kwlist,
; 660  :                                      &data_obj)) {

  0001f	48 8d 44 24 30	 lea	 rax, QWORD PTR data_obj$[rsp]
  00024	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00029	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:?kwlist@?1??SHA224_new@@9@9
  00030	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_06KJFPOEIK@?$HMO?3new?$AA@
  00037	48 8b 94 24 c0
	00 00 00	 mov	 rdx, QWORD PTR kwdict$[rsp]
  0003f	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR args$[rsp]
  00047	e8 00 00 00 00	 call	 PyArg_ParseTupleAndKeywords
  0004c	85 c0		 test	 eax, eax
  0004e	75 07		 jne	 SHORT $LN15@SHA224_new

; 661  :         return NULL;

  00050	33 c0		 xor	 eax, eax
  00052	e9 6d 01 00 00	 jmp	 $LN16@SHA224_new
$LN15@SHA224_new:

; 662  :     }
; 663  : 
; 664  :     if (data_obj)

  00057	48 83 7c 24 30
	00		 cmp	 QWORD PTR data_obj$[rsp], 0
  0005d	0f 84 c8 00 00
	00		 je	 $LN14@SHA224_new
$LN13@SHA224_new:

; 665  :         GET_BUFFER_VIEW_OR_ERROUT(data_obj, &buf);

  00063	48 8b 44 24 30	 mov	 rax, QWORD PTR data_obj$[rsp]
  00068	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  0006c	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  00072	25 00 00 00 10	 and	 eax, 268435456		; 10000000H
  00077	85 c0		 test	 eax, eax
  00079	74 1a		 je	 SHORT $LN10@SHA224_new
  0007b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CP@IBHDLOCD@Unicode?9objects?5must?5be?5encoded?5@
  00082	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  00089	e8 00 00 00 00	 call	 PyErr_SetString
  0008e	33 c0		 xor	 eax, eax
  00090	e9 2f 01 00 00	 jmp	 $LN16@SHA224_new
$LN10@SHA224_new:
  00095	48 8b 44 24 30	 mov	 rax, QWORD PTR data_obj$[rsp]
  0009a	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  0009e	48 83 b8 f8 00
	00 00 00	 cmp	 QWORD PTR [rax+248], 0
  000a6	74 16		 je	 SHORT $LN8@SHA224_new
  000a8	48 8b 44 24 30	 mov	 rax, QWORD PTR data_obj$[rsp]
  000ad	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  000b1	48 8b 80 f8 00
	00 00		 mov	 rax, QWORD PTR [rax+248]
  000b8	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  000bc	75 1a		 jne	 SHORT $LN9@SHA224_new
$LN8@SHA224_new:
  000be	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CK@NHOOCGGK@object?5supporting?5the?5buffer?5API@
  000c5	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  000cc	e8 00 00 00 00	 call	 PyErr_SetString
  000d1	33 c0		 xor	 eax, eax
  000d3	e9 ec 00 00 00	 jmp	 $LN16@SHA224_new
$LN9@SHA224_new:
  000d8	45 33 c0	 xor	 r8d, r8d
  000db	48 8d 54 24 40	 lea	 rdx, QWORD PTR buf$[rsp]
  000e0	48 8b 4c 24 30	 mov	 rcx, QWORD PTR data_obj$[rsp]
  000e5	e8 00 00 00 00	 call	 PyObject_GetBuffer
  000ea	83 f8 ff	 cmp	 eax, -1
  000ed	75 07		 jne	 SHORT $LN7@SHA224_new
  000ef	33 c0		 xor	 eax, eax
  000f1	e9 ce 00 00 00	 jmp	 $LN16@SHA224_new
$LN7@SHA224_new:
  000f6	83 7c 24 64 01	 cmp	 DWORD PTR buf$[rsp+36], 1
  000fb	7e 24		 jle	 SHORT $LN6@SHA224_new
  000fd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CA@DGKHNIN@Buffer?5must?5be?5single?5dimension?$AA@
  00104	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_BufferError
  0010b	e8 00 00 00 00	 call	 PyErr_SetString
  00110	48 8d 4c 24 40	 lea	 rcx, QWORD PTR buf$[rsp]
  00115	e8 00 00 00 00	 call	 PyBuffer_Release
  0011a	33 c0		 xor	 eax, eax
  0011c	e9 a3 00 00 00	 jmp	 $LN16@SHA224_new
$LN6@SHA224_new:
  00121	33 c0		 xor	 eax, eax
  00123	85 c0		 test	 eax, eax
  00125	0f 85 38 ff ff
	ff		 jne	 $LN13@SHA224_new
$LN14@SHA224_new:

; 666  : 
; 667  :     if ((new = newSHA224object()) == NULL) {

  0012b	e8 00 00 00 00	 call	 newSHA224object
  00130	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR new$[rsp], rax
  00138	48 83 bc 24 90
	00 00 00 00	 cmp	 QWORD PTR new$[rsp], 0
  00141	75 16		 jne	 SHORT $LN5@SHA224_new

; 668  :         if (data_obj)

  00143	48 83 7c 24 30
	00		 cmp	 QWORD PTR data_obj$[rsp], 0
  00149	74 0a		 je	 SHORT $LN4@SHA224_new

; 669  :             PyBuffer_Release(&buf);

  0014b	48 8d 4c 24 40	 lea	 rcx, QWORD PTR buf$[rsp]
  00150	e8 00 00 00 00	 call	 PyBuffer_Release
$LN4@SHA224_new:

; 670  :         return NULL;

  00155	33 c0		 xor	 eax, eax
  00157	eb 6b		 jmp	 SHORT $LN16@SHA224_new
$LN5@SHA224_new:

; 671  :     }
; 672  : 
; 673  :     sha224_init(new);

  00159	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR new$[rsp]
  00161	e8 00 00 00 00	 call	 sha224_init

; 674  : 
; 675  :     if (PyErr_Occurred()) {

  00166	e8 00 00 00 00	 call	 PyErr_Occurred
  0016b	48 85 c0	 test	 rax, rax
  0016e	74 23		 je	 SHORT $LN3@SHA224_new

; 676  :         Py_DECREF(new);

  00170	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR new$[rsp]
  00178	e8 00 00 00 00	 call	 _Py_DecRef

; 677  :         if (data_obj)

  0017d	48 83 7c 24 30
	00		 cmp	 QWORD PTR data_obj$[rsp], 0
  00183	74 0a		 je	 SHORT $LN2@SHA224_new

; 678  :             PyBuffer_Release(&buf);

  00185	48 8d 4c 24 40	 lea	 rcx, QWORD PTR buf$[rsp]
  0018a	e8 00 00 00 00	 call	 PyBuffer_Release
$LN2@SHA224_new:

; 679  :         return NULL;

  0018f	33 c0		 xor	 eax, eax
  00191	eb 31		 jmp	 SHORT $LN16@SHA224_new
$LN3@SHA224_new:

; 680  :     }
; 681  :     if (data_obj) {

  00193	48 83 7c 24 30
	00		 cmp	 QWORD PTR data_obj$[rsp], 0
  00199	74 21		 je	 SHORT $LN1@SHA224_new

; 682  :         sha_update(new, buf.buf, buf.len);

  0019b	4c 8b 44 24 50	 mov	 r8, QWORD PTR buf$[rsp+16]
  001a0	48 8b 54 24 40	 mov	 rdx, QWORD PTR buf$[rsp]
  001a5	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR new$[rsp]
  001ad	e8 00 00 00 00	 call	 sha_update

; 683  :         PyBuffer_Release(&buf);

  001b2	48 8d 4c 24 40	 lea	 rcx, QWORD PTR buf$[rsp]
  001b7	e8 00 00 00 00	 call	 PyBuffer_Release
$LN1@SHA224_new:

; 684  :     }
; 685  : 
; 686  :     return (PyObject *)new;

  001bc	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR new$[rsp]
$LN16@SHA224_new:

; 687  : }

  001c4	48 81 c4 a8 00
	00 00		 add	 rsp, 168		; 000000a8H
  001cb	c3		 ret	 0
SHA224_new ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$sha224_init DD imagerel sha224_init
	DD	imagerel sha224_init+216
	DD	imagerel $unwind$sha224_init
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$sha224_init DD 010901H
	DD	02209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT sha224_init
_TEXT	SEGMENT
i$21956 = 0
sha_info$ = 32
sha224_init PROC					; COMDAT

; 248  : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24

; 249  :     TestEndianness(sha_info->Endianness)

  00009	c7 04 24 01 00
	00 00		 mov	 DWORD PTR i$21956[rsp], 1
  00010	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  00015	c7 80 c8 00 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+200], 0
  0001f	0f be 04 24	 movsx	 eax, BYTE PTR i$21956[rsp]
  00023	83 f8 01	 cmp	 eax, 1
  00026	75 0f		 jne	 SHORT $LN1@sha224_ini
  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  0002d	c7 80 c8 00 00
	00 01 00 00 00	 mov	 DWORD PTR [rax+200], 1
$LN1@sha224_ini:

; 250  :     sha_info->digest[0] = 0xc1059ed8L;

  00037	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  0003c	c7 40 60 d8 9e
	05 c1		 mov	 DWORD PTR [rax+96], -1056596264 ; c1059ed8H

; 251  :     sha_info->digest[1] = 0x367cd507L;

  00043	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  00048	c7 40 64 07 d5
	7c 36		 mov	 DWORD PTR [rax+100], 914150663 ; 367cd507H

; 252  :     sha_info->digest[2] = 0x3070dd17L;

  0004f	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  00054	c7 40 68 17 dd
	70 30		 mov	 DWORD PTR [rax+104], 812702999 ; 3070dd17H

; 253  :     sha_info->digest[3] = 0xf70e5939L;

  0005b	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  00060	c7 40 6c 39 59
	0e f7		 mov	 DWORD PTR [rax+108], -150054599 ; f70e5939H

; 254  :     sha_info->digest[4] = 0xffc00b31L;

  00067	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  0006c	c7 40 70 31 0b
	c0 ff		 mov	 DWORD PTR [rax+112], -4191439 ; ffc00b31H

; 255  :     sha_info->digest[5] = 0x68581511L;

  00073	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  00078	c7 40 74 11 15
	58 68		 mov	 DWORD PTR [rax+116], 1750603025 ; 68581511H

; 256  :     sha_info->digest[6] = 0x64f98fa7L;

  0007f	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  00084	c7 40 78 a7 8f
	f9 64		 mov	 DWORD PTR [rax+120], 1694076839 ; 64f98fa7H

; 257  :     sha_info->digest[7] = 0xbefa4fa4L;

  0008b	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  00090	c7 40 7c a4 4f
	fa be		 mov	 DWORD PTR [rax+124], -1090891868 ; befa4fa4H

; 258  :     sha_info->count_lo = 0L;

  00097	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  0009c	c7 80 80 00 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+128], 0

; 259  :     sha_info->count_hi = 0L;

  000a6	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  000ab	c7 80 84 00 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+132], 0

; 260  :     sha_info->local = 0;

  000b5	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  000ba	c7 80 cc 00 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+204], 0

; 261  :     sha_info->digestsize = 28;

  000c4	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  000c9	c7 80 d0 00 00
	00 1c 00 00 00	 mov	 DWORD PTR [rax+208], 28

; 262  : }

  000d3	48 83 c4 18	 add	 rsp, 24
  000d7	c3		 ret	 0
sha224_init ENDP
_TEXT	ENDS
PUBLIC	PyInit__sha256
EXTRN	PyModule_Create2TraceRefs:PROC
EXTRN	PyType_Ready:PROC
EXTRN	PyType_Type:BYTE
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyInit__sha256 DD imagerel $LN5
	DD	imagerel $LN5+94
	DD	imagerel $unwind$PyInit__sha256
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyInit__sha256 DD 010401H
	DD	04204H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT PyInit__sha256
_TEXT	SEGMENT
PyInit__sha256 PROC					; COMDAT

; 718  : {

$LN5:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 719  :     Py_TYPE(&SHA224type) = &PyType_Type;

  00004	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:PyType_Type
  0000b	48 89 05 58 00
	00 00		 mov	 QWORD PTR SHA224type+88, rax

; 720  :     if (PyType_Ready(&SHA224type) < 0)

  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:SHA224type
  00019	e8 00 00 00 00	 call	 PyType_Ready
  0001e	85 c0		 test	 eax, eax
  00020	7d 04		 jge	 SHORT $LN2@PyInit__sh

; 721  :         return NULL;

  00022	33 c0		 xor	 eax, eax
  00024	eb 33		 jmp	 SHORT $LN3@PyInit__sh
$LN2@PyInit__sh:

; 722  :     Py_TYPE(&SHA256type) = &PyType_Type;

  00026	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:PyType_Type
  0002d	48 89 05 58 00
	00 00		 mov	 QWORD PTR SHA256type+88, rax

; 723  :     if (PyType_Ready(&SHA256type) < 0)

  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:SHA256type
  0003b	e8 00 00 00 00	 call	 PyType_Ready
  00040	85 c0		 test	 eax, eax
  00042	7d 04		 jge	 SHORT $LN1@PyInit__sh

; 724  :         return NULL;

  00044	33 c0		 xor	 eax, eax
  00046	eb 11		 jmp	 SHORT $LN3@PyInit__sh
$LN1@PyInit__sh:

; 725  :     return PyModule_Create(&_sha256module);

  00048	ba f5 03 00 00	 mov	 edx, 1013		; 000003f5H
  0004d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_sha256module
  00054	e8 00 00 00 00	 call	 PyModule_Create2TraceRefs
$LN3@PyInit__sh:

; 726  : }

  00059	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0005d	c3		 ret	 0
PyInit__sha256 ENDP
_TEXT	ENDS
END
