; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	__real@3ff0000000000000
PUBLIC	__real@3fe0000000000000
PUBLIC	round
EXTRN	__imp__copysign:PROC
EXTRN	__imp_floor:PROC
EXTRN	fabs:PROC
EXTRN	_fltused:DWORD
;	COMDAT pdata
; File c:\src\pyparallel\python\pymath.c
pdata	SEGMENT
$pdata$round DD	imagerel $LN4
	DD	imagerel $LN4+110
	DD	imagerel $unwind$round
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$round DD 010a01H
	DD	0620aH
xdata	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT round
_TEXT	SEGMENT
y$ = 32
absx$ = 40
x$ = 64
round	PROC						; COMDAT

; 71   : {

$LN4:
  00000	f2 0f 11 44 24
	08		 movsdx	 QWORD PTR [rsp+8], xmm0
  00006	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 72   :     double absx, y;
; 73   :     absx = fabs(x);

  0000a	f2 0f 10 44 24
	40		 movsdx	 xmm0, QWORD PTR x$[rsp]
  00010	e8 00 00 00 00	 call	 fabs
  00015	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR absx$[rsp], xmm0

; 74   :     y = floor(absx);

  0001b	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR absx$[rsp]
  00021	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_floor
  00027	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR y$[rsp], xmm0

; 75   :     if (absx - y >= 0.5)

  0002d	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR absx$[rsp]
  00033	f2 0f 5c 44 24
	20		 subsd	 xmm0, QWORD PTR y$[rsp]
  00039	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fe0000000000000
  00041	72 14		 jb	 SHORT $LN1@round

; 76   :     y += 1.0;

  00043	f2 0f 10 44 24
	20		 movsdx	 xmm0, QWORD PTR y$[rsp]
  00049	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00051	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR y$[rsp], xmm0
$LN1@round:

; 77   :     return copysign(y, x);

  00057	f2 0f 10 4c 24
	40		 movsdx	 xmm1, QWORD PTR x$[rsp]
  0005d	f2 0f 10 44 24
	20		 movsdx	 xmm0, QWORD PTR y$[rsp]
  00063	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign

; 78   : }

  00069	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0006d	c3		 ret	 0
round	ENDP
_TEXT	ENDS
END
