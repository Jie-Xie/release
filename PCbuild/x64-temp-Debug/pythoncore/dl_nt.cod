; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	dllVersionBuffer
PUBLIC	PyWin_DLLhModule
PUBLIC	PyWin_DLLVersionString
_BSS	SEGMENT
dllVersionBuffer DB 010H DUP (?)
PyWin_DLLhModule DQ 01H DUP (?)
_BSS	ENDS
_DATA	SEGMENT
PyWin_DLLVersionString DQ FLAT:dllVersionBuffer
_DATA	ENDS
PUBLIC	DllMain
EXTRN	__imp_LoadStringA:PROC
;	COMDAT pdata
; File c:\src\pyparallel\pc\dl_nt.c
pdata	SEGMENT
$pdata$DllMain DD imagerel $LN7
	DD	imagerel $LN7+86
	DD	imagerel $unwind$DllMain
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$DllMain DD 011201H
	DD	06212H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT DllMain
_TEXT	SEGMENT
tv64 = 32
hInst$ = 64
ul_reason_for_call$ = 72
lpReserved$ = 80
DllMain	PROC						; COMDAT

; 86   : {

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 87   :     switch (ul_reason_for_call)

  00012	8b 44 24 48	 mov	 eax, DWORD PTR ul_reason_for_call$[rsp]
  00016	89 44 24 20	 mov	 DWORD PTR tv64[rsp], eax
  0001a	83 7c 24 20 01	 cmp	 DWORD PTR tv64[rsp], 1
  0001f	74 02		 je	 SHORT $LN2@DllMain
  00021	eb 29		 jmp	 SHORT $LN3@DllMain
$LN2@DllMain:

; 88   :     {
; 89   :         case DLL_PROCESS_ATTACH:
; 90   :             PyWin_DLLhModule = hInst;

  00023	48 8b 44 24 40	 mov	 rax, QWORD PTR hInst$[rsp]
  00028	48 89 05 00 00
	00 00		 mov	 QWORD PTR PyWin_DLLhModule, rax

; 91   :             // 1000 is a magic number I picked out of the air.  Could do with a #define, I spose...
; 92   :             LoadString(hInst, 1000, dllVersionBuffer, sizeof(dllVersionBuffer));

  0002f	41 b9 10 00 00
	00		 mov	 r9d, 16
  00035	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:dllVersionBuffer
  0003c	ba e8 03 00 00	 mov	 edx, 1000		; 000003e8H
  00041	48 8b 4c 24 40	 mov	 rcx, QWORD PTR hInst$[rsp]
  00046	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_LoadStringA
$LN3@DllMain:

; 93   : 
; 94   : #if HAVE_SXS
; 95   :             // and capture our activation context for use when loading extensions.
; 96   :             _LoadActCtxPointers();
; 97   :             if (pfnGetCurrentActCtx && pfnAddRefActCtx)
; 98   :                 if ((*pfnGetCurrentActCtx)(&PyWin_DLLhActivationContext))
; 99   :                     if (!(*pfnAddRefActCtx)(PyWin_DLLhActivationContext))
; 100  :                         OutputDebugString("Python failed to load the default activation context\n");
; 101  : #endif
; 102  :             break;
; 103  : 
; 104  :         case DLL_PROCESS_DETACH:
; 105  : #if HAVE_SXS
; 106  :             if (pfnReleaseActCtx)
; 107  :                 (*pfnReleaseActCtx)(PyWin_DLLhActivationContext);
; 108  : #endif
; 109  :             break;
; 110  :     }
; 111  :     return TRUE;

  0004c	b8 01 00 00 00	 mov	 eax, 1

; 112  : }

  00051	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00055	c3		 ret	 0
DllMain	ENDP
_TEXT	ENDS
END
