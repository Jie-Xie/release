; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_09MDEEIMMG@PyCapsule?$AA@			; `string'
PUBLIC	PyCapsule_Type
EXTRN	PyType_Type:BYTE
;	COMDAT ??_C@_09MDEEIMMG@PyCapsule?$AA@
CONST	SEGMENT
??_C@_09MDEEIMMG@PyCapsule?$AA@ DB 'PyCapsule', 00H	; `string'
CONST	ENDS
_DATA	SEGMENT
PyCapsule_Type__doc__ DB 'Capsule objects let you wrap a C "void *" point'
	DB	'er in a Python', 0aH, 'object.  They''re a way of passing dat'
	DB	'a through the Python interpreter', 0aH, 'without creating you'
	DB	'r own custom type.', 0aH, 0aH, 'Capsules are used for communi'
	DB	'cation between extension modules.', 0aH, 'They provide a way '
	DB	'for an extension module to export a C interface', 0aH, 'to ot'
	DB	'her extension modules, so that extension modules can use the', 0aH
	DB	'Python import mechanism to link to one another.', 0aH, 00H
	ORG $+15
PyCapsule_Type DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	FLAT:PyType_Type
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_09MDEEIMMG@PyCapsule?$AA@
	DQ	0000000000000080H
	DQ	0000000000000000H
	DQ	FLAT:capsule_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:capsule_repr
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	FLAT:PyCapsule_Type__doc__
	ORG $+208
_DATA	ENDS
PUBLIC	??_C@_0CH@LKLOPFEC@PyCapsule_New?5called?5with?5null?5p@ ; `string'
PUBLIC	PyCapsule_New
EXTRN	PyErr_SetString:PROC
EXTRN	PyExc_ValueError:QWORD
;	COMDAT pdata
; File c:\src\pyparallel\objects\capsule.c
pdata	SEGMENT
$pdata$PyCapsule_New DD imagerel $LN5
	DD	imagerel $LN5+144
	DD	imagerel $unwind$PyCapsule_New
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyCapsule_New DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT ??_C@_0CH@LKLOPFEC@PyCapsule_New?5called?5with?5null?5p@
CONST	SEGMENT
??_C@_0CH@LKLOPFEC@PyCapsule_New?5called?5with?5null?5p@ DB 'PyCapsule_Ne'
	DB	'w called with null pointer', 00H		; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT PyCapsule_New
_TEXT	SEGMENT
capsule$ = 32
pointer$ = 64
name$ = 72
destructor$ = 80
PyCapsule_New PROC					; COMDAT

; 45   : {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 46   :     PyCapsule *capsule;
; 47   : 
; 48   :     if (!pointer) {

  00013	48 83 7c 24 40
	00		 cmp	 QWORD PTR pointer$[rsp], 0
  00019	75 17		 jne	 SHORT $LN2@PyCapsule_

; 49   :         PyErr_SetString(PyExc_ValueError, "PyCapsule_New called with null pointer");

  0001b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CH@LKLOPFEC@PyCapsule_New?5called?5with?5null?5p@
  00022	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ValueError
  00029	e8 00 00 00 00	 call	 PyErr_SetString

; 50   :         return NULL;

  0002e	33 c0		 xor	 eax, eax
  00030	eb 59		 jmp	 SHORT $LN3@PyCapsule_
$LN2@PyCapsule_:

; 51   :     }
; 52   : 
; 53   :     capsule = PyObject_NEW(PyCapsule, &PyCapsule_Type);

  00032	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:PyCapsule_Type
  00039	e8 00 00 00 00	 call	 _PyObject_NEW
  0003e	48 89 44 24 20	 mov	 QWORD PTR capsule$[rsp], rax

; 54   :     if (capsule == NULL) {

  00043	48 83 7c 24 20
	00		 cmp	 QWORD PTR capsule$[rsp], 0
  00049	75 04		 jne	 SHORT $LN1@PyCapsule_

; 55   :         return NULL;

  0004b	33 c0		 xor	 eax, eax
  0004d	eb 3c		 jmp	 SHORT $LN3@PyCapsule_
$LN1@PyCapsule_:

; 56   :     }
; 57   : 
; 58   :     capsule->pointer = pointer;

  0004f	48 8b 44 24 20	 mov	 rax, QWORD PTR capsule$[rsp]
  00054	48 8b 4c 24 40	 mov	 rcx, QWORD PTR pointer$[rsp]
  00059	48 89 48 60	 mov	 QWORD PTR [rax+96], rcx

; 59   :     capsule->name = name;

  0005d	48 8b 44 24 20	 mov	 rax, QWORD PTR capsule$[rsp]
  00062	48 8b 4c 24 48	 mov	 rcx, QWORD PTR name$[rsp]
  00067	48 89 48 68	 mov	 QWORD PTR [rax+104], rcx

; 60   :     capsule->context = NULL;

  0006b	48 8b 44 24 20	 mov	 rax, QWORD PTR capsule$[rsp]
  00070	48 c7 40 70 00
	00 00 00	 mov	 QWORD PTR [rax+112], 0

; 61   :     capsule->destructor = destructor;

  00078	48 8b 44 24 20	 mov	 rax, QWORD PTR capsule$[rsp]
  0007d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR destructor$[rsp]
  00082	48 89 48 78	 mov	 QWORD PTR [rax+120], rcx

; 62   : 
; 63   :     return (PyObject *)capsule;

  00086	48 8b 44 24 20	 mov	 rax, QWORD PTR capsule$[rsp]
$LN3@PyCapsule_:

; 64   : }

  0008b	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0008f	c3		 ret	 0
PyCapsule_New ENDP
_TEXT	ENDS
EXTRN	PyObject_Init:PROC
EXTRN	_PyObject_DebugMalloc:PROC
EXTRN	_PxObject_New:PROC
EXTRN	_Py_PXCTX:PROC
;	COMDAT pdata
; File c:\src\pyparallel\include\objimpl.h
pdata	SEGMENT
$pdata$_PyObject_NEW DD imagerel _PyObject_NEW
	DD	imagerel _PyObject_NEW+62
	DD	imagerel $unwind$_PyObject_NEW
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_PyObject_NEW DD 010901H
	DD	04209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT _PyObject_NEW
_TEXT	SEGMENT
tp$ = 48
_PyObject_NEW PROC					; COMDAT

; 293  : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 294  :     Px_RETURN(_PxObject_New(tp))

  00009	e8 00 00 00 00	 call	 _Py_PXCTX
  0000e	85 c0		 test	 eax, eax
  00010	74 0c		 je	 SHORT $LN1@PyObject_N
  00012	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tp$[rsp]
  00017	e8 00 00 00 00	 call	 _PxObject_New
  0001c	eb 1b		 jmp	 SHORT $LN2@PyObject_N
$LN1@PyObject_N:

; 295  :     return PyObject_Init((PyObject *)PyObject_MALLOC(_PyObject_SIZE(tp)), tp);

  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR tp$[rsp]
  00023	48 8b 48 78	 mov	 rcx, QWORD PTR [rax+120]
  00027	e8 00 00 00 00	 call	 _PyObject_DebugMalloc
  0002c	48 8b 54 24 30	 mov	 rdx, QWORD PTR tp$[rsp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 PyObject_Init
$LN2@PyObject_N:

; 296  : }

  00039	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003d	c3		 ret	 0
_PyObject_NEW ENDP
_TEXT	ENDS
PUBLIC	PyCapsule_IsValid
;	COMDAT pdata
; File c:\src\pyparallel\objects\capsule.c
pdata	SEGMENT
$pdata$PyCapsule_IsValid DD imagerel $LN5
	DD	imagerel $LN5+112
	DD	imagerel $unwind$PyCapsule_IsValid
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyCapsule_IsValid DD 010e01H
	DD	0620eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT PyCapsule_IsValid
_TEXT	SEGMENT
capsule$ = 32
tv74 = 40
o$ = 64
name$ = 72
PyCapsule_IsValid PROC					; COMDAT

; 69   : {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 70   :     PyCapsule *capsule = (PyCapsule *)o;

  0000e	48 8b 44 24 40	 mov	 rax, QWORD PTR o$[rsp]
  00013	48 89 44 24 20	 mov	 QWORD PTR capsule$[rsp], rax

; 71   : 
; 72   :     return (capsule != NULL &&
; 73   :             PyCapsule_CheckExact(capsule) &&
; 74   :             capsule->pointer != NULL &&
; 75   :             name_matches(capsule->name, name));

  00018	48 83 7c 24 20
	00		 cmp	 QWORD PTR capsule$[rsp], 0
  0001e	74 3f		 je	 SHORT $LN3@PyCapsule_@2
  00020	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:PyCapsule_Type
  00027	48 8b 4c 24 20	 mov	 rcx, QWORD PTR capsule$[rsp]
  0002c	48 39 41 58	 cmp	 QWORD PTR [rcx+88], rax
  00030	75 2d		 jne	 SHORT $LN3@PyCapsule_@2
  00032	48 8b 44 24 20	 mov	 rax, QWORD PTR capsule$[rsp]
  00037	48 83 78 60 00	 cmp	 QWORD PTR [rax+96], 0
  0003c	74 21		 je	 SHORT $LN3@PyCapsule_@2
  0003e	48 8b 54 24 48	 mov	 rdx, QWORD PTR name$[rsp]
  00043	48 8b 44 24 20	 mov	 rax, QWORD PTR capsule$[rsp]
  00048	48 8b 48 68	 mov	 rcx, QWORD PTR [rax+104]
  0004c	e8 00 00 00 00	 call	 name_matches
  00051	85 c0		 test	 eax, eax
  00053	74 0a		 je	 SHORT $LN3@PyCapsule_@2
  00055	c7 44 24 28 01
	00 00 00	 mov	 DWORD PTR tv74[rsp], 1
  0005d	eb 08		 jmp	 SHORT $LN4@PyCapsule_@2
$LN3@PyCapsule_@2:
  0005f	c7 44 24 28 00
	00 00 00	 mov	 DWORD PTR tv74[rsp], 0
$LN4@PyCapsule_@2:
  00067	8b 44 24 28	 mov	 eax, DWORD PTR tv74[rsp]

; 76   : }

  0006b	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0006f	c3		 ret	 0
PyCapsule_IsValid ENDP
_TEXT	ENDS
EXTRN	strcmp:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$name_matches DD imagerel name_matches
	DD	imagerel name_matches+112
	DD	imagerel $unwind$name_matches
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$name_matches DD 010e01H
	DD	0620eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT name_matches
_TEXT	SEGMENT
tv67 = 32
tv72 = 36
name1$ = 64
name2$ = 72
name_matches PROC					; COMDAT

; 32   : name_matches(const char *name1, const char *name2) {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 33   :     /* if either is NULL, */
; 34   :     if (!name1 || !name2) {

  0000e	48 83 7c 24 40
	00		 cmp	 QWORD PTR name1$[rsp], 0
  00014	74 08		 je	 SHORT $LN1@name_match
  00016	48 83 7c 24 48
	00		 cmp	 QWORD PTR name2$[rsp], 0
  0001c	75 24		 jne	 SHORT $LN2@name_match
$LN1@name_match:

; 35   :         /* they're only the same if they're both NULL. */
; 36   :         return name1 == name2;

  0001e	48 8b 44 24 48	 mov	 rax, QWORD PTR name2$[rsp]
  00023	48 39 44 24 40	 cmp	 QWORD PTR name1$[rsp], rax
  00028	75 0a		 jne	 SHORT $LN5@name_match
  0002a	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv67[rsp], 1
  00032	eb 08		 jmp	 SHORT $LN6@name_match
$LN5@name_match:
  00034	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv67[rsp], 0
$LN6@name_match:
  0003c	8b 44 24 20	 mov	 eax, DWORD PTR tv67[rsp]
  00040	eb 29		 jmp	 SHORT $LN3@name_match
$LN2@name_match:

; 37   :     }
; 38   :     return !strcmp(name1, name2);

  00042	48 8b 54 24 48	 mov	 rdx, QWORD PTR name2$[rsp]
  00047	48 8b 4c 24 40	 mov	 rcx, QWORD PTR name1$[rsp]
  0004c	e8 00 00 00 00	 call	 strcmp
  00051	85 c0		 test	 eax, eax
  00053	75 0a		 jne	 SHORT $LN7@name_match
  00055	c7 44 24 24 01
	00 00 00	 mov	 DWORD PTR tv72[rsp], 1
  0005d	eb 08		 jmp	 SHORT $LN8@name_match
$LN7@name_match:
  0005f	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR tv72[rsp], 0
$LN8@name_match:
  00067	8b 44 24 24	 mov	 eax, DWORD PTR tv72[rsp]
$LN3@name_match:

; 39   : }

  0006b	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0006f	c3		 ret	 0
name_matches ENDP
_TEXT	ENDS
PUBLIC	??_C@_0DA@EEILPBOF@PyCapsule_GetPointer?5called?5with@ ; `string'
PUBLIC	??_C@_0DK@BDNAPFIG@PyCapsule_GetPointer?5called?5with@ ; `string'
PUBLIC	PyCapsule_GetPointer
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyCapsule_GetPointer DD imagerel $LN5
	DD	imagerel $LN5+109
	DD	imagerel $unwind$PyCapsule_GetPointer
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyCapsule_GetPointer DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT ??_C@_0DA@EEILPBOF@PyCapsule_GetPointer?5called?5with@
CONST	SEGMENT
??_C@_0DA@EEILPBOF@PyCapsule_GetPointer?5called?5with@ DB 'PyCapsule_GetP'
	DB	'ointer called with incorrect name', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DK@BDNAPFIG@PyCapsule_GetPointer?5called?5with@
CONST	SEGMENT
??_C@_0DK@BDNAPFIG@PyCapsule_GetPointer?5called?5with@ DB 'PyCapsule_GetP'
	DB	'ointer called with invalid PyCapsule object', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT PyCapsule_GetPointer
_TEXT	SEGMENT
capsule$ = 32
o$ = 64
name$ = 72
PyCapsule_GetPointer PROC				; COMDAT

; 81   : {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 82   :     PyCapsule *capsule = (PyCapsule *)o;

  0000e	48 8b 44 24 40	 mov	 rax, QWORD PTR o$[rsp]
  00013	48 89 44 24 20	 mov	 QWORD PTR capsule$[rsp], rax

; 83   : 
; 84   :     if (!is_legal_capsule(capsule, "PyCapsule_GetPointer")) {

  00018	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0DK@BDNAPFIG@PyCapsule_GetPointer?5called?5with@
  0001f	48 8b 4c 24 20	 mov	 rcx, QWORD PTR capsule$[rsp]
  00024	e8 00 00 00 00	 call	 _is_legal_capsule
  00029	85 c0		 test	 eax, eax
  0002b	75 04		 jne	 SHORT $LN2@PyCapsule_@3

; 85   :         return NULL;

  0002d	33 c0		 xor	 eax, eax
  0002f	eb 37		 jmp	 SHORT $LN3@PyCapsule_@3
$LN2@PyCapsule_@3:

; 86   :     }
; 87   : 
; 88   :     if (!name_matches(name, capsule->name)) {

  00031	48 8b 44 24 20	 mov	 rax, QWORD PTR capsule$[rsp]
  00036	48 8b 50 68	 mov	 rdx, QWORD PTR [rax+104]
  0003a	48 8b 4c 24 48	 mov	 rcx, QWORD PTR name$[rsp]
  0003f	e8 00 00 00 00	 call	 name_matches
  00044	85 c0		 test	 eax, eax
  00046	75 17		 jne	 SHORT $LN1@PyCapsule_@3

; 89   :         PyErr_SetString(PyExc_ValueError, "PyCapsule_GetPointer called with incorrect name");

  00048	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0DA@EEILPBOF@PyCapsule_GetPointer?5called?5with@
  0004f	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ValueError
  00056	e8 00 00 00 00	 call	 PyErr_SetString

; 90   :         return NULL;

  0005b	33 c0		 xor	 eax, eax
  0005d	eb 09		 jmp	 SHORT $LN3@PyCapsule_@3
$LN1@PyCapsule_@3:

; 91   :     }
; 92   : 
; 93   :     return capsule->pointer;

  0005f	48 8b 44 24 20	 mov	 rax, QWORD PTR capsule$[rsp]
  00064	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
$LN3@PyCapsule_@3:

; 94   : }

  00068	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0006c	c3		 ret	 0
PyCapsule_GetPointer ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_is_legal_capsule DD imagerel _is_legal_capsule
	DD	imagerel _is_legal_capsule+83
	DD	imagerel $unwind$_is_legal_capsule
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_is_legal_capsule DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT _is_legal_capsule
_TEXT	SEGMENT
capsule$ = 48
invalid_capsule$ = 56
_is_legal_capsule PROC					; COMDAT

; 18   : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 19   :     if (!capsule || !PyCapsule_CheckExact(capsule) || capsule->pointer == NULL) {

  0000e	48 83 7c 24 30
	00		 cmp	 QWORD PTR capsule$[rsp], 0
  00014	74 1e		 je	 SHORT $LN1@is_legal_c
  00016	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:PyCapsule_Type
  0001d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR capsule$[rsp]
  00022	48 39 41 58	 cmp	 QWORD PTR [rcx+88], rax
  00026	75 0c		 jne	 SHORT $LN1@is_legal_c
  00028	48 8b 44 24 30	 mov	 rax, QWORD PTR capsule$[rsp]
  0002d	48 83 78 60 00	 cmp	 QWORD PTR [rax+96], 0
  00032	75 15		 jne	 SHORT $LN2@is_legal_c
$LN1@is_legal_c:

; 20   :         PyErr_SetString(PyExc_ValueError, invalid_capsule);

  00034	48 8b 54 24 38	 mov	 rdx, QWORD PTR invalid_capsule$[rsp]
  00039	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ValueError
  00040	e8 00 00 00 00	 call	 PyErr_SetString

; 21   :         return 0;

  00045	33 c0		 xor	 eax, eax
  00047	eb 05		 jmp	 SHORT $LN3@is_legal_c
$LN2@is_legal_c:

; 22   :     }
; 23   :     return 1;

  00049	b8 01 00 00 00	 mov	 eax, 1
$LN3@is_legal_c:

; 24   : }

  0004e	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00052	c3		 ret	 0
_is_legal_capsule ENDP
_TEXT	ENDS
PUBLIC	??_C@_0DH@JIKJKMMD@PyCapsule_GetName?5called?5with?5in@ ; `string'
PUBLIC	PyCapsule_GetName
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyCapsule_GetName DD imagerel $LN4
	DD	imagerel $LN4+58
	DD	imagerel $unwind$PyCapsule_GetName
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyCapsule_GetName DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT ??_C@_0DH@JIKJKMMD@PyCapsule_GetName?5called?5with?5in@
CONST	SEGMENT
??_C@_0DH@JIKJKMMD@PyCapsule_GetName?5called?5with?5in@ DB 'PyCapsule_Get'
	DB	'Name called with invalid PyCapsule object', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT PyCapsule_GetName
_TEXT	SEGMENT
capsule$ = 32
o$ = 64
PyCapsule_GetName PROC					; COMDAT

; 99   : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 100  :     PyCapsule *capsule = (PyCapsule *)o;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR o$[rsp]
  0000e	48 89 44 24 20	 mov	 QWORD PTR capsule$[rsp], rax

; 101  : 
; 102  :     if (!is_legal_capsule(capsule, "PyCapsule_GetName")) {

  00013	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0DH@JIKJKMMD@PyCapsule_GetName?5called?5with?5in@
  0001a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR capsule$[rsp]
  0001f	e8 00 00 00 00	 call	 _is_legal_capsule
  00024	85 c0		 test	 eax, eax
  00026	75 04		 jne	 SHORT $LN1@PyCapsule_@4

; 103  :         return NULL;

  00028	33 c0		 xor	 eax, eax
  0002a	eb 09		 jmp	 SHORT $LN2@PyCapsule_@4
$LN1@PyCapsule_@4:

; 104  :     }
; 105  :     return capsule->name;

  0002c	48 8b 44 24 20	 mov	 rax, QWORD PTR capsule$[rsp]
  00031	48 8b 40 68	 mov	 rax, QWORD PTR [rax+104]
$LN2@PyCapsule_@4:

; 106  : }

  00035	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00039	c3		 ret	 0
PyCapsule_GetName ENDP
_TEXT	ENDS
PUBLIC	??_C@_0DN@MNFKNJLE@PyCapsule_GetDestructor?5called?5w@ ; `string'
PUBLIC	PyCapsule_GetDestructor
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyCapsule_GetDestructor DD imagerel $LN4
	DD	imagerel $LN4+58
	DD	imagerel $unwind$PyCapsule_GetDestructor
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyCapsule_GetDestructor DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT ??_C@_0DN@MNFKNJLE@PyCapsule_GetDestructor?5called?5w@
CONST	SEGMENT
??_C@_0DN@MNFKNJLE@PyCapsule_GetDestructor?5called?5w@ DB 'PyCapsule_GetD'
	DB	'estructor called with invalid PyCapsule object', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT PyCapsule_GetDestructor
_TEXT	SEGMENT
capsule$ = 32
o$ = 64
PyCapsule_GetDestructor PROC				; COMDAT

; 111  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 112  :     PyCapsule *capsule = (PyCapsule *)o;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR o$[rsp]
  0000e	48 89 44 24 20	 mov	 QWORD PTR capsule$[rsp], rax

; 113  : 
; 114  :     if (!is_legal_capsule(capsule, "PyCapsule_GetDestructor")) {

  00013	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0DN@MNFKNJLE@PyCapsule_GetDestructor?5called?5w@
  0001a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR capsule$[rsp]
  0001f	e8 00 00 00 00	 call	 _is_legal_capsule
  00024	85 c0		 test	 eax, eax
  00026	75 04		 jne	 SHORT $LN1@PyCapsule_@5

; 115  :         return NULL;

  00028	33 c0		 xor	 eax, eax
  0002a	eb 09		 jmp	 SHORT $LN2@PyCapsule_@5
$LN1@PyCapsule_@5:

; 116  :     }
; 117  :     return capsule->destructor;

  0002c	48 8b 44 24 20	 mov	 rax, QWORD PTR capsule$[rsp]
  00031	48 8b 40 78	 mov	 rax, QWORD PTR [rax+120]
$LN2@PyCapsule_@5:

; 118  : }

  00035	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00039	c3		 ret	 0
PyCapsule_GetDestructor ENDP
_TEXT	ENDS
PUBLIC	??_C@_0DK@KHICHICO@PyCapsule_GetContext?5called?5with@ ; `string'
PUBLIC	PyCapsule_GetContext
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyCapsule_GetContext DD imagerel $LN4
	DD	imagerel $LN4+58
	DD	imagerel $unwind$PyCapsule_GetContext
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyCapsule_GetContext DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT ??_C@_0DK@KHICHICO@PyCapsule_GetContext?5called?5with@
CONST	SEGMENT
??_C@_0DK@KHICHICO@PyCapsule_GetContext?5called?5with@ DB 'PyCapsule_GetC'
	DB	'ontext called with invalid PyCapsule object', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT PyCapsule_GetContext
_TEXT	SEGMENT
capsule$ = 32
o$ = 64
PyCapsule_GetContext PROC				; COMDAT

; 123  : {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 124  :     PyCapsule *capsule = (PyCapsule *)o;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR o$[rsp]
  0000e	48 89 44 24 20	 mov	 QWORD PTR capsule$[rsp], rax

; 125  : 
; 126  :     if (!is_legal_capsule(capsule, "PyCapsule_GetContext")) {

  00013	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0DK@KHICHICO@PyCapsule_GetContext?5called?5with@
  0001a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR capsule$[rsp]
  0001f	e8 00 00 00 00	 call	 _is_legal_capsule
  00024	85 c0		 test	 eax, eax
  00026	75 04		 jne	 SHORT $LN1@PyCapsule_@6

; 127  :         return NULL;

  00028	33 c0		 xor	 eax, eax
  0002a	eb 09		 jmp	 SHORT $LN2@PyCapsule_@6
$LN1@PyCapsule_@6:

; 128  :     }
; 129  :     return capsule->context;

  0002c	48 8b 44 24 20	 mov	 rax, QWORD PTR capsule$[rsp]
  00031	48 8b 40 70	 mov	 rax, QWORD PTR [rax+112]
$LN2@PyCapsule_@6:

; 130  : }

  00035	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00039	c3		 ret	 0
PyCapsule_GetContext ENDP
_TEXT	ENDS
PUBLIC	??_C@_0DK@IIOLIHLE@PyCapsule_SetPointer?5called?5with@ ; `string'
PUBLIC	??_C@_0CO@DDMDBPPI@PyCapsule_SetPointer?5called?5with@ ; `string'
PUBLIC	PyCapsule_SetPointer
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyCapsule_SetPointer DD imagerel $LN5
	DD	imagerel $LN5+107
	DD	imagerel $unwind$PyCapsule_SetPointer
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyCapsule_SetPointer DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT ??_C@_0DK@IIOLIHLE@PyCapsule_SetPointer?5called?5with@
CONST	SEGMENT
??_C@_0DK@IIOLIHLE@PyCapsule_SetPointer?5called?5with@ DB 'PyCapsule_SetP'
	DB	'ointer called with invalid PyCapsule object', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@DDMDBPPI@PyCapsule_SetPointer?5called?5with@
CONST	SEGMENT
??_C@_0CO@DDMDBPPI@PyCapsule_SetPointer?5called?5with@ DB 'PyCapsule_SetP'
	DB	'ointer called with null pointer', 00H	; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT PyCapsule_SetPointer
_TEXT	SEGMENT
capsule$ = 32
o$ = 64
pointer$ = 72
PyCapsule_SetPointer PROC				; COMDAT

; 135  : {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 136  :     PyCapsule *capsule = (PyCapsule *)o;

  0000e	48 8b 44 24 40	 mov	 rax, QWORD PTR o$[rsp]
  00013	48 89 44 24 20	 mov	 QWORD PTR capsule$[rsp], rax

; 137  : 
; 138  :     if (!pointer) {

  00018	48 83 7c 24 48
	00		 cmp	 QWORD PTR pointer$[rsp], 0
  0001e	75 1a		 jne	 SHORT $LN2@PyCapsule_@7

; 139  :         PyErr_SetString(PyExc_ValueError, "PyCapsule_SetPointer called with null pointer");

  00020	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CO@DDMDBPPI@PyCapsule_SetPointer?5called?5with@
  00027	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ValueError
  0002e	e8 00 00 00 00	 call	 PyErr_SetString

; 140  :         return -1;

  00033	b8 ff ff ff ff	 mov	 eax, -1
  00038	eb 2c		 jmp	 SHORT $LN3@PyCapsule_@7
$LN2@PyCapsule_@7:

; 141  :     }
; 142  : 
; 143  :     if (!is_legal_capsule(capsule, "PyCapsule_SetPointer")) {

  0003a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0DK@IIOLIHLE@PyCapsule_SetPointer?5called?5with@
  00041	48 8b 4c 24 20	 mov	 rcx, QWORD PTR capsule$[rsp]
  00046	e8 00 00 00 00	 call	 _is_legal_capsule
  0004b	85 c0		 test	 eax, eax
  0004d	75 07		 jne	 SHORT $LN1@PyCapsule_@7

; 144  :         return -1;

  0004f	b8 ff ff ff ff	 mov	 eax, -1
  00054	eb 10		 jmp	 SHORT $LN3@PyCapsule_@7
$LN1@PyCapsule_@7:

; 145  :     }
; 146  : 
; 147  :     capsule->pointer = pointer;

  00056	48 8b 44 24 20	 mov	 rax, QWORD PTR capsule$[rsp]
  0005b	48 8b 4c 24 48	 mov	 rcx, QWORD PTR pointer$[rsp]
  00060	48 89 48 60	 mov	 QWORD PTR [rax+96], rcx

; 148  :     return 0;

  00064	33 c0		 xor	 eax, eax
$LN3@PyCapsule_@7:

; 149  : }

  00066	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0006a	c3		 ret	 0
PyCapsule_SetPointer ENDP
_TEXT	ENDS
PUBLIC	??_C@_0DH@ECKOKEHO@PyCapsule_SetName?5called?5with?5in@ ; `string'
PUBLIC	PyCapsule_SetName
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyCapsule_SetName DD imagerel $LN4
	DD	imagerel $LN4+73
	DD	imagerel $unwind$PyCapsule_SetName
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyCapsule_SetName DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT ??_C@_0DH@ECKOKEHO@PyCapsule_SetName?5called?5with?5in@
CONST	SEGMENT
??_C@_0DH@ECKOKEHO@PyCapsule_SetName?5called?5with?5in@ DB 'PyCapsule_Set'
	DB	'Name called with invalid PyCapsule object', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT PyCapsule_SetName
_TEXT	SEGMENT
capsule$ = 32
o$ = 64
name$ = 72
PyCapsule_SetName PROC					; COMDAT

; 154  : {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 155  :     PyCapsule *capsule = (PyCapsule *)o;

  0000e	48 8b 44 24 40	 mov	 rax, QWORD PTR o$[rsp]
  00013	48 89 44 24 20	 mov	 QWORD PTR capsule$[rsp], rax

; 156  : 
; 157  :     if (!is_legal_capsule(capsule, "PyCapsule_SetName")) {

  00018	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0DH@ECKOKEHO@PyCapsule_SetName?5called?5with?5in@
  0001f	48 8b 4c 24 20	 mov	 rcx, QWORD PTR capsule$[rsp]
  00024	e8 00 00 00 00	 call	 _is_legal_capsule
  00029	85 c0		 test	 eax, eax
  0002b	75 07		 jne	 SHORT $LN1@PyCapsule_@8

; 158  :         return -1;

  0002d	b8 ff ff ff ff	 mov	 eax, -1
  00032	eb 10		 jmp	 SHORT $LN2@PyCapsule_@8
$LN1@PyCapsule_@8:

; 159  :     }
; 160  : 
; 161  :     capsule->name = name;

  00034	48 8b 44 24 20	 mov	 rax, QWORD PTR capsule$[rsp]
  00039	48 8b 4c 24 48	 mov	 rcx, QWORD PTR name$[rsp]
  0003e	48 89 48 68	 mov	 QWORD PTR [rax+104], rcx

; 162  :     return 0;

  00042	33 c0		 xor	 eax, eax
$LN2@PyCapsule_@8:

; 163  : }

  00044	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00048	c3		 ret	 0
PyCapsule_SetName ENDP
_TEXT	ENDS
PUBLIC	??_C@_0DN@EGLHBKIB@PyCapsule_SetDestructor?5called?5w@ ; `string'
PUBLIC	PyCapsule_SetDestructor
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyCapsule_SetDestructor DD imagerel $LN4
	DD	imagerel $LN4+73
	DD	imagerel $unwind$PyCapsule_SetDestructor
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyCapsule_SetDestructor DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT ??_C@_0DN@EGLHBKIB@PyCapsule_SetDestructor?5called?5w@
CONST	SEGMENT
??_C@_0DN@EGLHBKIB@PyCapsule_SetDestructor?5called?5w@ DB 'PyCapsule_SetD'
	DB	'estructor called with invalid PyCapsule object', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT PyCapsule_SetDestructor
_TEXT	SEGMENT
capsule$ = 32
o$ = 64
destructor$ = 72
PyCapsule_SetDestructor PROC				; COMDAT

; 168  : {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 169  :     PyCapsule *capsule = (PyCapsule *)o;

  0000e	48 8b 44 24 40	 mov	 rax, QWORD PTR o$[rsp]
  00013	48 89 44 24 20	 mov	 QWORD PTR capsule$[rsp], rax

; 170  : 
; 171  :     if (!is_legal_capsule(capsule, "PyCapsule_SetDestructor")) {

  00018	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0DN@EGLHBKIB@PyCapsule_SetDestructor?5called?5w@
  0001f	48 8b 4c 24 20	 mov	 rcx, QWORD PTR capsule$[rsp]
  00024	e8 00 00 00 00	 call	 _is_legal_capsule
  00029	85 c0		 test	 eax, eax
  0002b	75 07		 jne	 SHORT $LN1@PyCapsule_@9

; 172  :         return -1;

  0002d	b8 ff ff ff ff	 mov	 eax, -1
  00032	eb 10		 jmp	 SHORT $LN2@PyCapsule_@9
$LN1@PyCapsule_@9:

; 173  :     }
; 174  : 
; 175  :     capsule->destructor = destructor;

  00034	48 8b 44 24 20	 mov	 rax, QWORD PTR capsule$[rsp]
  00039	48 8b 4c 24 48	 mov	 rcx, QWORD PTR destructor$[rsp]
  0003e	48 89 48 78	 mov	 QWORD PTR [rax+120], rcx

; 176  :     return 0;

  00042	33 c0		 xor	 eax, eax
$LN2@PyCapsule_@9:

; 177  : }

  00044	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00048	c3		 ret	 0
PyCapsule_SetDestructor ENDP
_TEXT	ENDS
PUBLIC	??_C@_0DK@DMLJAKBM@PyCapsule_SetContext?5called?5with@ ; `string'
PUBLIC	PyCapsule_SetContext
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyCapsule_SetContext DD imagerel $LN4
	DD	imagerel $LN4+73
	DD	imagerel $unwind$PyCapsule_SetContext
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyCapsule_SetContext DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT ??_C@_0DK@DMLJAKBM@PyCapsule_SetContext?5called?5with@
CONST	SEGMENT
??_C@_0DK@DMLJAKBM@PyCapsule_SetContext?5called?5with@ DB 'PyCapsule_SetC'
	DB	'ontext called with invalid PyCapsule object', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT PyCapsule_SetContext
_TEXT	SEGMENT
capsule$ = 32
o$ = 64
context$ = 72
PyCapsule_SetContext PROC				; COMDAT

; 182  : {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 183  :     PyCapsule *capsule = (PyCapsule *)o;

  0000e	48 8b 44 24 40	 mov	 rax, QWORD PTR o$[rsp]
  00013	48 89 44 24 20	 mov	 QWORD PTR capsule$[rsp], rax

; 184  : 
; 185  :     if (!is_legal_capsule(capsule, "PyCapsule_SetContext")) {

  00018	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0DK@DMLJAKBM@PyCapsule_SetContext?5called?5with@
  0001f	48 8b 4c 24 20	 mov	 rcx, QWORD PTR capsule$[rsp]
  00024	e8 00 00 00 00	 call	 _is_legal_capsule
  00029	85 c0		 test	 eax, eax
  0002b	75 07		 jne	 SHORT $LN1@PyCapsule_@10

; 186  :         return -1;

  0002d	b8 ff ff ff ff	 mov	 eax, -1
  00032	eb 10		 jmp	 SHORT $LN2@PyCapsule_@10
$LN1@PyCapsule_@10:

; 187  :     }
; 188  : 
; 189  :     capsule->context = context;

  00034	48 8b 44 24 20	 mov	 rax, QWORD PTR capsule$[rsp]
  00039	48 8b 4c 24 48	 mov	 rcx, QWORD PTR context$[rsp]
  0003e	48 89 48 70	 mov	 QWORD PTR [rax+112], rcx

; 190  :     return 0;

  00042	33 c0		 xor	 eax, eax
$LN2@PyCapsule_@10:

; 191  : }

  00044	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00048	c3		 ret	 0
PyCapsule_SetContext ENDP
_TEXT	ENDS
PUBLIC	??_C@_0CD@NCFJNLCD@PyCapsule_Import?5?$CC?$CFs?$CC?5is?5not?5val@ ; `string'
PUBLIC	_Py_DecRef
PUBLIC	??_C@_0CO@EACNEGJM@PyCapsule_Import?5could?5not?5impor@ ; `string'
PUBLIC	PyCapsule_Import
EXTRN	_PyMem_DebugFree:PROC
EXTRN	_PxMem_Free:PROC
EXTRN	PyExc_AttributeError:QWORD
EXTRN	PyObject_GetAttrString:PROC
EXTRN	PyErr_Format:PROC
EXTRN	PyExc_ImportError:QWORD
EXTRN	PyImport_ImportModule:PROC
EXTRN	PyImport_ImportModuleNoBlock:PROC
EXTRN	__imp_strchr:PROC
EXTRN	memcpy:PROC
EXTRN	_PyMem_DebugMalloc:PROC
EXTRN	_PxMem_Malloc:PROC
EXTRN	strlen:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyCapsule_Import DD imagerel $LN24
	DD	imagerel $LN24+526
	DD	imagerel $unwind$PyCapsule_Import
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyCapsule_Import DD 010d01H
	DD	0e20dH
xdata	ENDS
;	COMDAT ??_C@_0CD@NCFJNLCD@PyCapsule_Import?5?$CC?$CFs?$CC?5is?5not?5val@
CONST	SEGMENT
??_C@_0CD@NCFJNLCD@PyCapsule_Import?5?$CC?$CFs?$CC?5is?5not?5val@ DB 'PyC'
	DB	'apsule_Import "%s" is not valid', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@EACNEGJM@PyCapsule_Import?5could?5not?5impor@
CONST	SEGMENT
??_C@_0CO@EACNEGJM@PyCapsule_Import?5could?5not?5impor@ DB 'PyCapsule_Imp'
	DB	'ort could not import module "%s"', 00H	; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT PyCapsule_Import
_TEXT	SEGMENT
name_length$ = 32
return_value$ = 40
trace$ = 48
name_dup$ = 56
object$ = 64
dot$20436 = 72
object2$20445 = 80
capsule$20450 = 88
tv73 = 96
tv147 = 104
name$ = 128
no_block$ = 136
PyCapsule_Import PROC					; COMDAT

; 196  : {

$LN24:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	48 83 ec 78	 sub	 rsp, 120		; 00000078H

; 197  :     PyObject *object = NULL;

  0000d	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR object$[rsp], 0

; 198  :     void *return_value = NULL;

  00016	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR return_value$[rsp], 0

; 199  :     char *trace;
; 200  :     size_t name_length = (strlen(name) + 1) * sizeof(char);

  0001f	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR name$[rsp]
  00027	e8 00 00 00 00	 call	 strlen
  0002c	48 ff c0	 inc	 rax
  0002f	48 89 44 24 20	 mov	 QWORD PTR name_length$[rsp], rax

; 201  :     char *name_dup = (char *)PyMem_MALLOC(name_length);

  00034	e8 00 00 00 00	 call	 _Py_PXCTX
  00039	85 c0		 test	 eax, eax
  0003b	74 11		 je	 SHORT $LN20@PyCapsule_@11
  0003d	48 8b 4c 24 20	 mov	 rcx, QWORD PTR name_length$[rsp]
  00042	e8 00 00 00 00	 call	 _PxMem_Malloc
  00047	48 89 44 24 60	 mov	 QWORD PTR tv73[rsp], rax
  0004c	eb 0f		 jmp	 SHORT $LN21@PyCapsule_@11
$LN20@PyCapsule_@11:
  0004e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR name_length$[rsp]
  00053	e8 00 00 00 00	 call	 _PyMem_DebugMalloc
  00058	48 89 44 24 60	 mov	 QWORD PTR tv73[rsp], rax
$LN21@PyCapsule_@11:
  0005d	48 8b 44 24 60	 mov	 rax, QWORD PTR tv73[rsp]
  00062	48 89 44 24 38	 mov	 QWORD PTR name_dup$[rsp], rax

; 202  : 
; 203  :     if (!name_dup) {

  00067	48 83 7c 24 38
	00		 cmp	 QWORD PTR name_dup$[rsp], 0
  0006d	75 07		 jne	 SHORT $LN17@PyCapsule_@11

; 204  :         return NULL;

  0006f	33 c0		 xor	 eax, eax
  00071	e9 93 01 00 00	 jmp	 $LN18@PyCapsule_@11
$LN17@PyCapsule_@11:

; 205  :     }
; 206  : 
; 207  :     memcpy(name_dup, name, name_length);

  00076	4c 8b 44 24 20	 mov	 r8, QWORD PTR name_length$[rsp]
  0007b	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR name$[rsp]
  00083	48 8b 4c 24 38	 mov	 rcx, QWORD PTR name_dup$[rsp]
  00088	e8 00 00 00 00	 call	 memcpy

; 208  : 
; 209  :     trace = name_dup;

  0008d	48 8b 44 24 38	 mov	 rax, QWORD PTR name_dup$[rsp]
  00092	48 89 44 24 30	 mov	 QWORD PTR trace$[rsp], rax
$LN16@PyCapsule_@11:

; 210  :     while (trace) {

  00097	48 83 7c 24 30
	00		 cmp	 QWORD PTR trace$[rsp], 0
  0009d	0f 84 c7 00 00
	00		 je	 $LN15@PyCapsule_@11

; 211  :         char *dot = strchr(trace, '.');

  000a3	ba 2e 00 00 00	 mov	 edx, 46			; 0000002eH
  000a8	48 8b 4c 24 30	 mov	 rcx, QWORD PTR trace$[rsp]
  000ad	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_strchr
  000b3	48 89 44 24 48	 mov	 QWORD PTR dot$20436[rsp], rax

; 212  :         if (dot) {

  000b8	48 83 7c 24 48
	00		 cmp	 QWORD PTR dot$20436[rsp], 0
  000be	74 15		 je	 SHORT $LN14@PyCapsule_@11

; 213  :             *dot++ = '\0';

  000c0	48 8b 44 24 48	 mov	 rax, QWORD PTR dot$20436[rsp]
  000c5	c6 00 00	 mov	 BYTE PTR [rax], 0
  000c8	48 8b 44 24 48	 mov	 rax, QWORD PTR dot$20436[rsp]
  000cd	48 ff c0	 inc	 rax
  000d0	48 89 44 24 48	 mov	 QWORD PTR dot$20436[rsp], rax
$LN14@PyCapsule_@11:

; 214  :         }
; 215  : 
; 216  :         if (object == NULL) {

  000d5	48 83 7c 24 40
	00		 cmp	 QWORD PTR object$[rsp], 0
  000db	75 4c		 jne	 SHORT $LN13@PyCapsule_@11

; 217  :             if (no_block) {

  000dd	83 bc 24 88 00
	00 00 00	 cmp	 DWORD PTR no_block$[rsp], 0
  000e5	74 11		 je	 SHORT $LN12@PyCapsule_@11

; 218  :                 object = PyImport_ImportModuleNoBlock(trace);

  000e7	48 8b 4c 24 30	 mov	 rcx, QWORD PTR trace$[rsp]
  000ec	e8 00 00 00 00	 call	 PyImport_ImportModuleNoBlock
  000f1	48 89 44 24 40	 mov	 QWORD PTR object$[rsp], rax

; 219  :             } else {

  000f6	eb 2f		 jmp	 SHORT $LN11@PyCapsule_@11
$LN12@PyCapsule_@11:

; 220  :                 object = PyImport_ImportModule(trace);

  000f8	48 8b 4c 24 30	 mov	 rcx, QWORD PTR trace$[rsp]
  000fd	e8 00 00 00 00	 call	 PyImport_ImportModule
  00102	48 89 44 24 40	 mov	 QWORD PTR object$[rsp], rax

; 221  :                 if (!object) {

  00107	48 83 7c 24 40
	00		 cmp	 QWORD PTR object$[rsp], 0
  0010d	75 18		 jne	 SHORT $LN10@PyCapsule_@11

; 222  :                     PyErr_Format(PyExc_ImportError, "PyCapsule_Import could not import module \"%s\"", trace);

  0010f	4c 8b 44 24 30	 mov	 r8, QWORD PTR trace$[rsp]
  00114	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CO@EACNEGJM@PyCapsule_Import?5could?5not?5impor@
  0011b	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ImportError
  00122	e8 00 00 00 00	 call	 PyErr_Format
$LN10@PyCapsule_@11:
$LN11@PyCapsule_@11:

; 223  :                 }
; 224  :             }
; 225  :         } else {

  00127	eb 28		 jmp	 SHORT $LN9@PyCapsule_@11
$LN13@PyCapsule_@11:

; 226  :             PyObject *object2 = PyObject_GetAttrString(object, trace);

  00129	48 8b 54 24 30	 mov	 rdx, QWORD PTR trace$[rsp]
  0012e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR object$[rsp]
  00133	e8 00 00 00 00	 call	 PyObject_GetAttrString
  00138	48 89 44 24 50	 mov	 QWORD PTR object2$20445[rsp], rax

; 227  :             Py_DECREF(object);

  0013d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR object$[rsp]
  00142	e8 00 00 00 00	 call	 _Py_DecRef

; 228  :             object = object2;

  00147	48 8b 44 24 50	 mov	 rax, QWORD PTR object2$20445[rsp]
  0014c	48 89 44 24 40	 mov	 QWORD PTR object$[rsp], rax
$LN9@PyCapsule_@11:

; 229  :         }
; 230  :         if (!object) {

  00151	48 83 7c 24 40
	00		 cmp	 QWORD PTR object$[rsp], 0
  00157	75 02		 jne	 SHORT $LN8@PyCapsule_@11

; 231  :             goto EXIT;

  00159	eb 5a		 jmp	 SHORT $EXIT$20448
$LN8@PyCapsule_@11:

; 232  :         }
; 233  : 
; 234  :         trace = dot;

  0015b	48 8b 44 24 48	 mov	 rax, QWORD PTR dot$20436[rsp]
  00160	48 89 44 24 30	 mov	 QWORD PTR trace$[rsp], rax

; 235  :     }

  00165	e9 2d ff ff ff	 jmp	 $LN16@PyCapsule_@11
$LN15@PyCapsule_@11:

; 236  : 
; 237  :     /* compare attribute name to module.name by hand */
; 238  :     if (PyCapsule_IsValid(object, name)) {

  0016a	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR name$[rsp]
  00172	48 8b 4c 24 40	 mov	 rcx, QWORD PTR object$[rsp]
  00177	e8 00 00 00 00	 call	 PyCapsule_IsValid
  0017c	85 c0		 test	 eax, eax
  0017e	74 1a		 je	 SHORT $LN7@PyCapsule_@11

; 239  :         PyCapsule *capsule = (PyCapsule *)object;

  00180	48 8b 44 24 40	 mov	 rax, QWORD PTR object$[rsp]
  00185	48 89 44 24 58	 mov	 QWORD PTR capsule$20450[rsp], rax

; 240  :         return_value = capsule->pointer;

  0018a	48 8b 44 24 58	 mov	 rax, QWORD PTR capsule$20450[rsp]
  0018f	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  00193	48 89 44 24 28	 mov	 QWORD PTR return_value$[rsp], rax

; 241  :     } else {

  00198	eb 1b		 jmp	 SHORT $LN6@PyCapsule_@11
$LN7@PyCapsule_@11:

; 242  :         PyErr_Format(PyExc_AttributeError,
; 243  :             "PyCapsule_Import \"%s\" is not valid",
; 244  :             name);

  0019a	4c 8b 84 24 80
	00 00 00	 mov	 r8, QWORD PTR name$[rsp]
  001a2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@NCFJNLCD@PyCapsule_Import?5?$CC?$CFs?$CC?5is?5not?5val@
  001a9	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_AttributeError
  001b0	e8 00 00 00 00	 call	 PyErr_Format
$LN6@PyCapsule_@11:
$EXIT$20448:
$LN5@PyCapsule_@11:

; 245  :     }
; 246  : 
; 247  : EXIT:
; 248  :     Py_XDECREF(object);

  001b5	48 83 7c 24 40
	00		 cmp	 QWORD PTR object$[rsp], 0
  001bb	74 0a		 je	 SHORT $LN2@PyCapsule_@11
  001bd	48 8b 4c 24 40	 mov	 rcx, QWORD PTR object$[rsp]
  001c2	e8 00 00 00 00	 call	 _Py_DecRef
$LN2@PyCapsule_@11:
  001c7	33 c0		 xor	 eax, eax
  001c9	85 c0		 test	 eax, eax
  001cb	75 e8		 jne	 SHORT $LN5@PyCapsule_@11

; 249  :     if (name_dup) {

  001cd	48 83 7c 24 38
	00		 cmp	 QWORD PTR name_dup$[rsp], 0
  001d3	74 2f		 je	 SHORT $LN1@PyCapsule_@11

; 250  :         PyMem_FREE(name_dup);

  001d5	e8 00 00 00 00	 call	 _Py_PXCTX
  001da	85 c0		 test	 eax, eax
  001dc	74 14		 je	 SHORT $LN22@PyCapsule_@11
  001de	48 8b 4c 24 38	 mov	 rcx, QWORD PTR name_dup$[rsp]
  001e3	e8 00 00 00 00	 call	 _PxMem_Free
  001e8	c7 44 24 68 00
	00 00 00	 mov	 DWORD PTR tv147[rsp], 0
  001f0	eb 12		 jmp	 SHORT $LN23@PyCapsule_@11
$LN22@PyCapsule_@11:
  001f2	48 8b 4c 24 38	 mov	 rcx, QWORD PTR name_dup$[rsp]
  001f7	e8 00 00 00 00	 call	 _PyMem_DebugFree
  001fc	c7 44 24 68 00
	00 00 00	 mov	 DWORD PTR tv147[rsp], 0
$LN23@PyCapsule_@11:
$LN1@PyCapsule_@11:

; 251  :     }
; 252  :     return return_value;

  00204	48 8b 44 24 28	 mov	 rax, QWORD PTR return_value$[rsp]
$LN18@PyCapsule_@11:

; 253  : }

  00209	48 83 c4 78	 add	 rsp, 120		; 00000078H
  0020d	c3		 ret	 0
PyCapsule_Import ENDP
_TEXT	ENDS
PUBLIC	??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@		; `string'
PUBLIC	??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@ ; `string'
EXTRN	_Py_Dealloc:PROC
EXTRN	_Py_NegativeRefcount:PROC
EXTRN	_PyParallel_Guard:PROC
EXTRN	_Py_RefTotal:QWORD
EXTRN	Px_DecRef:PROC
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$_Py_DecRef DD imagerel $LN13
	DD	imagerel $LN13+257
	DD	imagerel $unwind$_Py_DecRef
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_Py_DecRef DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT ??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
CONST	SEGMENT
??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@ DB '_Py_DecRef', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
CONST	SEGMENT
??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@ DB 'c:\src\pypa'
	DB	'rallel\include\object.h', 00H		; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT _Py_DecRef
_TEXT	SEGMENT
tv81 = 48
op$ = 80
_Py_DecRef PROC						; COMDAT

; 923  : {

$LN13:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 924  :     if (!Py_PXCTX) {

  00009	e8 00 00 00 00	 call	 _Py_PXCTX
  0000e	85 c0		 test	 eax, eax
  00010	0f 85 e6 00 00
	00		 jne	 $LN8@Py_DecRef

; 925  :         if (Px_PERSISTED(op) || Px_CLONED(op))

  00016	48 8b 44 24 50	 mov	 rax, QWORD PTR op$[rsp]
  0001b	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0001f	48 83 e0 20	 and	 rax, 32			; 00000020H
  00023	48 85 c0	 test	 rax, rax
  00026	75 14		 jne	 SHORT $LN6@Py_DecRef
  00028	48 8b 44 24 50	 mov	 rax, QWORD PTR op$[rsp]
  0002d	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00031	48 25 80 00 00
	00		 and	 rax, 128		; 00000080H
  00037	48 85 c0	 test	 rax, rax
  0003a	74 0f		 je	 SHORT $LN7@Py_DecRef
$LN6@Py_DecRef:

; 926  :             Px_DECREF(op);

  0003c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR op$[rsp]
  00041	e8 00 00 00 00	 call	 Px_DecRef
  00046	e9 b1 00 00 00	 jmp	 $LN5@Py_DecRef
$LN7@Py_DecRef:

; 927  :         else if (!Px_ISPX(op)) {

  0004b	48 8b 44 24 50	 mov	 rax, QWORD PTR op$[rsp]
  00050	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00054	48 83 e0 02	 and	 rax, 2
  00058	48 85 c0	 test	 rax, rax
  0005b	0f 85 9b 00 00
	00		 jne	 $LN4@Py_DecRef

; 928  :             _Py_DEC_REFTOTAL;

  00061	e8 00 00 00 00	 call	 _Py_PXCTX
  00066	85 c0		 test	 eax, eax
  00068	74 02		 je	 SHORT $LN11@Py_DecRef
  0006a	eb 11		 jmp	 SHORT $LN12@Py_DecRef
$LN11@Py_DecRef:
  0006c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR _Py_RefTotal
  00073	48 ff c8	 dec	 rax
  00076	48 89 05 00 00
	00 00		 mov	 QWORD PTR _Py_RefTotal, rax
$LN12@Py_DecRef:

; 929  :             if ((--((PyObject *)(op))->ob_refcnt) != 0) {

  0007d	48 8b 44 24 50	 mov	 rax, QWORD PTR op$[rsp]
  00082	48 8b 40 50	 mov	 rax, QWORD PTR [rax+80]
  00086	48 ff c8	 dec	 rax
  00089	48 89 44 24 30	 mov	 QWORD PTR tv81[rsp], rax
  0008e	48 8b 44 24 50	 mov	 rax, QWORD PTR op$[rsp]
  00093	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv81[rsp]
  00098	48 89 48 50	 mov	 QWORD PTR [rax+80], rcx
  0009c	48 83 7c 24 30
	00		 cmp	 QWORD PTR tv81[rsp], 0
  000a2	74 4e		 je	 SHORT $LN3@Py_DecRef

; 930  :                 _Py_CHECK_REFCNT(op);

  000a4	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  000ac	4c 8b 4c 24 50	 mov	 r9, QWORD PTR op$[rsp]
  000b1	41 b8 a2 03 00
	00		 mov	 r8d, 930		; 000003a2H
  000b7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  000be	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  000c5	e8 00 00 00 00	 call	 _PyParallel_Guard
  000ca	85 c0		 test	 eax, eax
  000cc	75 22		 jne	 SHORT $LN2@Py_DecRef
  000ce	48 8b 44 24 50	 mov	 rax, QWORD PTR op$[rsp]
  000d3	48 83 78 50 00	 cmp	 QWORD PTR [rax+80], 0
  000d8	7d 16		 jge	 SHORT $LN2@Py_DecRef
  000da	4c 8b 44 24 50	 mov	 r8, QWORD PTR op$[rsp]
  000df	ba a2 03 00 00	 mov	 edx, 930		; 000003a2H
  000e4	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  000eb	e8 00 00 00 00	 call	 _Py_NegativeRefcount
$LN2@Py_DecRef:

; 931  :             } else

  000f0	eb 0a		 jmp	 SHORT $LN1@Py_DecRef
$LN3@Py_DecRef:

; 932  :                 _Py_Dealloc((PyObject *)(op));

  000f2	48 8b 4c 24 50	 mov	 rcx, QWORD PTR op$[rsp]
  000f7	e8 00 00 00 00	 call	 _Py_Dealloc
$LN1@Py_DecRef:
$LN4@Py_DecRef:
$LN5@Py_DecRef:
$LN8@Py_DecRef:

; 933  :         }
; 934  :     }
; 935  : }

  000fc	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00100	c3		 ret	 0
_Py_DecRef ENDP
_TEXT	ENDS
EXTRN	_PyObject_DebugFree:PROC
;	COMDAT pdata
; File c:\src\pyparallel\objects\capsule.c
pdata	SEGMENT
$pdata$capsule_dealloc DD imagerel capsule_dealloc
	DD	imagerel capsule_dealloc+59
	DD	imagerel $unwind$capsule_dealloc
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$capsule_dealloc DD 010901H
	DD	06209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT capsule_dealloc
_TEXT	SEGMENT
capsule$ = 32
o$ = 64
capsule_dealloc PROC					; COMDAT

; 258  : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 259  :     PyCapsule *capsule = (PyCapsule *)o;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR o$[rsp]
  0000e	48 89 44 24 20	 mov	 QWORD PTR capsule$[rsp], rax

; 260  :     if (capsule->destructor) {

  00013	48 8b 44 24 20	 mov	 rax, QWORD PTR capsule$[rsp]
  00018	48 83 78 78 00	 cmp	 QWORD PTR [rax+120], 0
  0001d	74 0d		 je	 SHORT $LN1@capsule_de

; 261  :         capsule->destructor(o);

  0001f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR o$[rsp]
  00024	48 8b 44 24 20	 mov	 rax, QWORD PTR capsule$[rsp]
  00029	ff 50 78	 call	 QWORD PTR [rax+120]
$LN1@capsule_de:

; 262  :     }
; 263  :     PyObject_DEL(o);

  0002c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR o$[rsp]
  00031	e8 00 00 00 00	 call	 _PyObject_DebugFree

; 264  : }

  00036	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003a	c3		 ret	 0
capsule_dealloc ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BO@GDMBHGFD@?$DMcapsule?5object?5?$CFs?$CFs?$CFs?5at?5?$CFp?$DO?$AA@ ; `string'
PUBLIC	??_C@_04HIBGFPH@NULL?$AA@			; `string'
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	??_C@_01BJJEKLCA@?$CC?$AA@			; `string'
EXTRN	PyUnicode_FromFormat:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$capsule_repr DD imagerel capsule_repr
	DD	imagerel capsule_repr+125
	DD	imagerel $unwind$capsule_repr
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$capsule_repr DD 010901H
	DD	0a209H
xdata	ENDS
;	COMDAT ??_C@_0BO@GDMBHGFD@?$DMcapsule?5object?5?$CFs?$CFs?$CFs?5at?5?$CFp?$DO?$AA@
CONST	SEGMENT
??_C@_0BO@GDMBHGFD@?$DMcapsule?5object?5?$CFs?$CFs?$CFs?5at?5?$CFp?$DO?$AA@ DB '<'
	DB	'capsule object %s%s%s at %p>', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04HIBGFPH@NULL?$AA@
CONST	SEGMENT
??_C@_04HIBGFPH@NULL?$AA@ DB 'NULL', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01BJJEKLCA@?$CC?$AA@
CONST	SEGMENT
??_C@_01BJJEKLCA@?$CC?$AA@ DB '"', 00H			; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT capsule_repr
_TEXT	SEGMENT
quote$ = 48
name$ = 56
capsule$ = 64
o$ = 96
capsule_repr PROC					; COMDAT

; 269  : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 58	 sub	 rsp, 88			; 00000058H

; 270  :     PyCapsule *capsule = (PyCapsule *)o;

  00009	48 8b 44 24 60	 mov	 rax, QWORD PTR o$[rsp]
  0000e	48 89 44 24 40	 mov	 QWORD PTR capsule$[rsp], rax

; 271  :     const char *name;
; 272  :     const char *quote;
; 273  : 
; 274  :     if (capsule->name) {

  00013	48 8b 44 24 40	 mov	 rax, QWORD PTR capsule$[rsp]
  00018	48 83 78 68 00	 cmp	 QWORD PTR [rax+104], 0
  0001d	74 1c		 je	 SHORT $LN2@capsule_re

; 275  :         quote = "\"";

  0001f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_01BJJEKLCA@?$CC?$AA@
  00026	48 89 44 24 30	 mov	 QWORD PTR quote$[rsp], rax

; 276  :         name = capsule->name;

  0002b	48 8b 44 24 40	 mov	 rax, QWORD PTR capsule$[rsp]
  00030	48 8b 40 68	 mov	 rax, QWORD PTR [rax+104]
  00034	48 89 44 24 38	 mov	 QWORD PTR name$[rsp], rax

; 277  :     } else {

  00039	eb 18		 jmp	 SHORT $LN1@capsule_re
$LN2@capsule_re:

; 278  :         quote = "";

  0003b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
  00042	48 89 44 24 30	 mov	 QWORD PTR quote$[rsp], rax

; 279  :         name = "NULL";

  00047	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_04HIBGFPH@NULL?$AA@
  0004e	48 89 44 24 38	 mov	 QWORD PTR name$[rsp], rax
$LN1@capsule_re:

; 280  :     }
; 281  : 
; 282  :     return PyUnicode_FromFormat("<capsule object %s%s%s at %p>",
; 283  :         quote, name, quote, capsule);

  00053	48 8b 44 24 40	 mov	 rax, QWORD PTR capsule$[rsp]
  00058	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0005d	4c 8b 4c 24 30	 mov	 r9, QWORD PTR quote$[rsp]
  00062	4c 8b 44 24 38	 mov	 r8, QWORD PTR name$[rsp]
  00067	48 8b 54 24 30	 mov	 rdx, QWORD PTR quote$[rsp]
  0006c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BO@GDMBHGFD@?$DMcapsule?5object?5?$CFs?$CFs?$CFs?5at?5?$CFp?$DO?$AA@
  00073	e8 00 00 00 00	 call	 PyUnicode_FromFormat

; 284  : }

  00078	48 83 c4 58	 add	 rsp, 88			; 00000058H
  0007c	c3		 ret	 0
capsule_repr ENDP
_TEXT	ENDS
END
