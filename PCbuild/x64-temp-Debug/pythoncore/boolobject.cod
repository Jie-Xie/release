; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_04DDKJGDCM@bool?$AA@			; `string'
PUBLIC	??_C@_01FJMABOPO@x?$AA@				; `string'
PUBLIC	PyBool_Type
PUBLIC	_Py_FalseStruct
PUBLIC	_Py_TrueStruct
EXTRN	PyLong_Type:BYTE
EXTRN	PyType_Type:BYTE
_BSS	SEGMENT
false_str DQ	01H DUP (?)
true_str DQ	01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_04DDKJGDCM@bool?$AA@
CONST	SEGMENT
??_C@_04DDKJGDCM@bool?$AA@ DB 'bool', 00H		; `string'
CONST	ENDS
_DATA	SEGMENT
?kwlist@?1??bool_new@@9@9 DQ FLAT:??_C@_01FJMABOPO@x?$AA@ ; `bool_new'::`2'::kwlist
	DQ	0000000000000000H
bool_doc DB	'bool(x) -> bool', 0aH, 0aH, 'Returns True when the argum'
	DB	'ent x is true, False otherwise.', 0aH, 'The builtins True and'
	DB	' False are the only two instances of the class bool.', 0aH, 'T'
	DB	'he class bool is a subclass of the class int, and cannot be s'
	DB	'ubclassed.', 00H
	ORG $+1
bool_as_number DQ 0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:bool_and
	DQ	FLAT:bool_xor
	DQ	FLAT:bool_or
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
PyBool_Type DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	FLAT:PyType_Type
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_04DDKJGDCM@bool?$AA@
	DQ	0000000000000080H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:bool_repr
	DQ	FLAT:bool_as_number
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:bool_repr
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	040000H
	ORG $+4
	DQ	FLAT:bool_doc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:PyLong_Type
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:bool_new
	ORG $+72
_Py_FalseStruct DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	FLAT:PyBool_Type
	DQ	0000000000000000H
	ORG $+8
	DD	00H
	ORG $+12
_Py_TrueStruct DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	FLAT:PyBool_Type
	DQ	0000000000000001H
	ORG $+8
	DD	01H
	ORG $+12
_DATA	ENDS
;	COMDAT ??_C@_01FJMABOPO@x?$AA@
CONST	SEGMENT
??_C@_01FJMABOPO@x?$AA@ DB 'x', 00H			; `string'
CONST	ENDS
PUBLIC	_Py_IncRef
PUBLIC	??_C@_05MKDOIIA@False?$AA@			; `string'
PUBLIC	??_C@_04HPMIDMKH@True?$AA@			; `string'
EXTRN	PyUnicode_InternFromString:PROC
;	COMDAT pdata
; File c:\src\pyparallel\objects\boolobject.c
pdata	SEGMENT
$pdata$bool_repr DD imagerel bool_repr
	DD	imagerel bool_repr+189
	DD	imagerel $unwind$bool_repr
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$bool_repr DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT ??_C@_05MKDOIIA@False?$AA@
CONST	SEGMENT
??_C@_05MKDOIIA@False?$AA@ DB 'False', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04HPMIDMKH@True?$AA@
CONST	SEGMENT
??_C@_04HPMIDMKH@True?$AA@ DB 'True', 00H		; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT bool_repr
_TEXT	SEGMENT
s$ = 32
tv68 = 40
tv72 = 48
self$ = 80
bool_repr PROC						; COMDAT

; 13   : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 14   :     PyObject *s;
; 15   : 
; 16   :     if (self == Py_True)

  00009	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_TrueStruct
  00010	48 39 44 24 50	 cmp	 QWORD PTR self$[rsp], rax
  00015	75 43		 jne	 SHORT $LN6@bool_repr

; 17   :         s = true_str ? true_str :
; 18   :             (true_str = PyUnicode_InternFromString("True"));

  00017	48 83 3d 00 00
	00 00 00	 cmp	 QWORD PTR true_str, 0
  0001f	74 0e		 je	 SHORT $LN9@bool_repr
  00021	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR true_str
  00028	48 89 44 24 28	 mov	 QWORD PTR tv68[rsp], rax
  0002d	eb 1f		 jmp	 SHORT $LN10@bool_repr
$LN9@bool_repr:
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_04HPMIDMKH@True?$AA@
  00036	e8 00 00 00 00	 call	 PyUnicode_InternFromString
  0003b	48 89 05 00 00
	00 00		 mov	 QWORD PTR true_str, rax
  00042	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR true_str
  00049	48 89 44 24 28	 mov	 QWORD PTR tv68[rsp], rax
$LN10@bool_repr:
  0004e	48 8b 44 24 28	 mov	 rax, QWORD PTR tv68[rsp]
  00053	48 89 44 24 20	 mov	 QWORD PTR s$[rsp], rax

; 19   :     else

  00058	eb 41		 jmp	 SHORT $LN5@bool_repr
$LN6@bool_repr:

; 20   :         s = false_str ? false_str :
; 21   :             (false_str = PyUnicode_InternFromString("False"));

  0005a	48 83 3d 00 00
	00 00 00	 cmp	 QWORD PTR false_str, 0
  00062	74 0e		 je	 SHORT $LN11@bool_repr
  00064	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR false_str
  0006b	48 89 44 24 30	 mov	 QWORD PTR tv72[rsp], rax
  00070	eb 1f		 jmp	 SHORT $LN12@bool_repr
$LN11@bool_repr:
  00072	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_05MKDOIIA@False?$AA@
  00079	e8 00 00 00 00	 call	 PyUnicode_InternFromString
  0007e	48 89 05 00 00
	00 00		 mov	 QWORD PTR false_str, rax
  00085	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR false_str
  0008c	48 89 44 24 30	 mov	 QWORD PTR tv72[rsp], rax
$LN12@bool_repr:
  00091	48 8b 44 24 30	 mov	 rax, QWORD PTR tv72[rsp]
  00096	48 89 44 24 20	 mov	 QWORD PTR s$[rsp], rax
$LN5@bool_repr:
$LN4@bool_repr:

; 22   :     Py_XINCREF(s);

  0009b	48 83 7c 24 20
	00		 cmp	 QWORD PTR s$[rsp], 0
  000a1	74 0a		 je	 SHORT $LN1@bool_repr
  000a3	48 8b 4c 24 20	 mov	 rcx, QWORD PTR s$[rsp]
  000a8	e8 00 00 00 00	 call	 _Py_IncRef
$LN1@bool_repr:
  000ad	33 c0		 xor	 eax, eax
  000af	85 c0		 test	 eax, eax
  000b1	75 e8		 jne	 SHORT $LN4@bool_repr

; 23   :     return s;

  000b3	48 8b 44 24 20	 mov	 rax, QWORD PTR s$[rsp]

; 24   : }

  000b8	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000bc	c3		 ret	 0
bool_repr ENDP
_TEXT	ENDS
PUBLIC	??_C@_0L@DHGMCEID@_Py_IncRef?$AA@		; `string'
PUBLIC	??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@ ; `string'
EXTRN	_Py_RefTotal:QWORD
EXTRN	_PyParallel_Guard:PROC
EXTRN	_Py_PXCTX:PROC
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$_Py_IncRef DD imagerel $LN7
	DD	imagerel $LN7+132
	DD	imagerel $unwind$_Py_IncRef
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_Py_IncRef DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT ??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
CONST	SEGMENT
??_C@_0L@DHGMCEID@_Py_IncRef?$AA@ DB '_Py_IncRef', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
CONST	SEGMENT
??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@ DB 'c:\src\pypa'
	DB	'rallel\include\object.h', 00H		; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT _Py_IncRef
_TEXT	SEGMENT
op$ = 64
_Py_IncRef PROC						; COMDAT

; 904  : {

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 905  :     if ((!Py_PXCTX && (Py_ISPY(op) || Px_PERSISTED(op)))) {

  00009	e8 00 00 00 00	 call	 _Py_PXCTX
  0000e	85 c0		 test	 eax, eax
  00010	75 6d		 jne	 SHORT $LN2@Py_IncRef
  00012	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  0001a	4c 8b 4c 24 40	 mov	 r9, QWORD PTR op$[rsp]
  0001f	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00025	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0002c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00033	e8 00 00 00 00	 call	 _PyParallel_Guard
  00038	85 c0		 test	 eax, eax
  0003a	75 12		 jne	 SHORT $LN1@Py_IncRef
  0003c	48 8b 44 24 40	 mov	 rax, QWORD PTR op$[rsp]
  00041	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00045	48 83 e0 20	 and	 rax, 32			; 00000020H
  00049	48 85 c0	 test	 rax, rax
  0004c	74 31		 je	 SHORT $LN2@Py_IncRef
$LN1@Py_IncRef:

; 906  :         _Py_INC_REFTOTAL;

  0004e	e8 00 00 00 00	 call	 _Py_PXCTX
  00053	85 c0		 test	 eax, eax
  00055	74 02		 je	 SHORT $LN5@Py_IncRef
  00057	eb 11		 jmp	 SHORT $LN6@Py_IncRef
$LN5@Py_IncRef:
  00059	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR _Py_RefTotal
  00060	48 ff c0	 inc	 rax
  00063	48 89 05 00 00
	00 00		 mov	 QWORD PTR _Py_RefTotal, rax
$LN6@Py_IncRef:

; 907  :         (((PyObject*)(op))->ob_refcnt++);

  0006a	48 8b 44 24 40	 mov	 rax, QWORD PTR op$[rsp]
  0006f	48 8b 40 50	 mov	 rax, QWORD PTR [rax+80]
  00073	48 ff c0	 inc	 rax
  00076	48 8b 4c 24 40	 mov	 rcx, QWORD PTR op$[rsp]
  0007b	48 89 41 50	 mov	 QWORD PTR [rcx+80], rax
$LN2@Py_IncRef:

; 908  :     }
; 909  : }

  0007f	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00083	c3		 ret	 0
_Py_IncRef ENDP
_TEXT	ENDS
PUBLIC	PyBool_FromLong
;	COMDAT pdata
; File c:\src\pyparallel\objects\boolobject.c
pdata	SEGMENT
$pdata$PyBool_FromLong DD imagerel $LN5
	DD	imagerel $LN5+61
	DD	imagerel $unwind$PyBool_FromLong
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyBool_FromLong DD 010801H
	DD	06208H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT PyBool_FromLong
_TEXT	SEGMENT
result$ = 32
ok$ = 64
PyBool_FromLong PROC					; COMDAT

; 29   : {

$LN5:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 30   :     PyObject *result;
; 31   : 
; 32   :     if (ok)

  00008	83 7c 24 40 00	 cmp	 DWORD PTR ok$[rsp], 0
  0000d	74 0e		 je	 SHORT $LN2@PyBool_Fro

; 33   :         result = Py_True;

  0000f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_TrueStruct
  00016	48 89 44 24 20	 mov	 QWORD PTR result$[rsp], rax

; 34   :     else

  0001b	eb 0c		 jmp	 SHORT $LN1@PyBool_Fro
$LN2@PyBool_Fro:

; 35   :         result = Py_False;

  0001d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_FalseStruct
  00024	48 89 44 24 20	 mov	 QWORD PTR result$[rsp], rax
$LN1@PyBool_Fro:

; 36   :     Py_INCREF(result);

  00029	48 8b 4c 24 20	 mov	 rcx, QWORD PTR result$[rsp]
  0002e	e8 00 00 00 00	 call	 _Py_IncRef

; 37   :     return result;

  00033	48 8b 44 24 20	 mov	 rax, QWORD PTR result$[rsp]

; 38   : }

  00038	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003c	c3		 ret	 0
PyBool_FromLong ENDP
_TEXT	ENDS
PUBLIC	??_C@_07HMPEOONM@?$HMO?3bool?$AA@		; `string'
EXTRN	PyObject_IsTrue:PROC
EXTRN	PyArg_ParseTupleAndKeywords:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$bool_new DD imagerel bool_new
	DD	imagerel bool_new+117
	DD	imagerel $unwind$bool_new
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$bool_new DD 011301H
	DD	08213H
xdata	ENDS
;	COMDAT ??_C@_07HMPEOONM@?$HMO?3bool?$AA@
CONST	SEGMENT
??_C@_07HMPEOONM@?$HMO?3bool?$AA@ DB '|O:bool', 00H	; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT bool_new
_TEXT	SEGMENT
x$ = 48
ok$ = 56
type$ = 80
args$ = 88
kwds$ = 96
bool_new PROC						; COMDAT

; 44   : {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 45   :     static char *kwlist[] = {"x", 0};
; 46   :     PyObject *x = Py_False;

  00013	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_FalseStruct
  0001a	48 89 44 24 30	 mov	 QWORD PTR x$[rsp], rax

; 47   :     long ok;
; 48   : 
; 49   :     if (!PyArg_ParseTupleAndKeywords(args, kwds, "|O:bool", kwlist, &x))

  0001f	48 8d 44 24 30	 lea	 rax, QWORD PTR x$[rsp]
  00024	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00029	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:?kwlist@?1??bool_new@@9@9
  00030	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_07HMPEOONM@?$HMO?3bool?$AA@
  00037	48 8b 54 24 60	 mov	 rdx, QWORD PTR kwds$[rsp]
  0003c	48 8b 4c 24 58	 mov	 rcx, QWORD PTR args$[rsp]
  00041	e8 00 00 00 00	 call	 PyArg_ParseTupleAndKeywords
  00046	85 c0		 test	 eax, eax
  00048	75 04		 jne	 SHORT $LN2@bool_new

; 50   :         return NULL;

  0004a	33 c0		 xor	 eax, eax
  0004c	eb 22		 jmp	 SHORT $LN3@bool_new
$LN2@bool_new:

; 51   :     ok = PyObject_IsTrue(x);

  0004e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR x$[rsp]
  00053	e8 00 00 00 00	 call	 PyObject_IsTrue
  00058	89 44 24 38	 mov	 DWORD PTR ok$[rsp], eax

; 52   :     if (ok < 0)

  0005c	83 7c 24 38 00	 cmp	 DWORD PTR ok$[rsp], 0
  00061	7d 04		 jge	 SHORT $LN1@bool_new

; 53   :         return NULL;

  00063	33 c0		 xor	 eax, eax
  00065	eb 09		 jmp	 SHORT $LN3@bool_new
$LN1@bool_new:

; 54   :     return PyBool_FromLong(ok);

  00067	8b 4c 24 38	 mov	 ecx, DWORD PTR ok$[rsp]
  0006b	e8 00 00 00 00	 call	 PyBool_FromLong
$LN3@bool_new:

; 55   : }

  00070	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00074	c3		 ret	 0
bool_new ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$bool_and DD imagerel bool_and
	DD	imagerel bool_and+160
	DD	imagerel $unwind$bool_and
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$bool_and DD 010e01H
	DD	0620eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT bool_and
_TEXT	SEGMENT
tv76 = 32
tv75 = 36
a$ = 64
b$ = 72
bool_and PROC						; COMDAT

; 61   : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 62   :     if (!PyBool_Check(a) || !PyBool_Check(b))

  0000e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:PyBool_Type
  00015	48 8b 4c 24 40	 mov	 rcx, QWORD PTR a$[rsp]
  0001a	48 39 41 58	 cmp	 QWORD PTR [rcx+88], rax
  0001e	75 12		 jne	 SHORT $LN1@bool_and
  00020	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:PyBool_Type
  00027	48 8b 4c 24 48	 mov	 rcx, QWORD PTR b$[rsp]
  0002c	48 39 41 58	 cmp	 QWORD PTR [rcx+88], rax
  00030	74 16		 je	 SHORT $LN2@bool_and
$LN1@bool_and:

; 63   :         return PyLong_Type.tp_as_number->nb_and(a, b);

  00032	48 8b 54 24 48	 mov	 rdx, QWORD PTR b$[rsp]
  00037	48 8b 4c 24 40	 mov	 rcx, QWORD PTR a$[rsp]
  0003c	48 8b 05 b8 00
	00 00		 mov	 rax, QWORD PTR PyLong_Type+184
  00043	ff 50 68	 call	 QWORD PTR [rax+104]
  00046	eb 53		 jmp	 SHORT $LN3@bool_and
$LN2@bool_and:

; 64   :     return PyBool_FromLong((a == Py_True) & (b == Py_True));

  00048	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_TrueStruct
  0004f	48 39 44 24 40	 cmp	 QWORD PTR a$[rsp], rax
  00054	75 0a		 jne	 SHORT $LN7@bool_and
  00056	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv76[rsp], 1
  0005e	eb 08		 jmp	 SHORT $LN8@bool_and
$LN7@bool_and:
  00060	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv76[rsp], 0
$LN8@bool_and:
  00068	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_TrueStruct
  0006f	48 39 44 24 48	 cmp	 QWORD PTR b$[rsp], rax
  00074	75 0a		 jne	 SHORT $LN5@bool_and
  00076	c7 44 24 24 01
	00 00 00	 mov	 DWORD PTR tv75[rsp], 1
  0007e	eb 08		 jmp	 SHORT $LN6@bool_and
$LN5@bool_and:
  00080	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR tv75[rsp], 0
$LN6@bool_and:
  00088	8b 44 24 24	 mov	 eax, DWORD PTR tv75[rsp]
  0008c	8b 4c 24 20	 mov	 ecx, DWORD PTR tv76[rsp]
  00090	23 c8		 and	 ecx, eax
  00092	8b c1		 mov	 eax, ecx
  00094	8b c8		 mov	 ecx, eax
  00096	e8 00 00 00 00	 call	 PyBool_FromLong
$LN3@bool_and:

; 65   : }

  0009b	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0009f	c3		 ret	 0
bool_and ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$bool_or DD imagerel bool_or
	DD	imagerel bool_or+160
	DD	imagerel $unwind$bool_or
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$bool_or DD 010e01H
	DD	0620eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT bool_or
_TEXT	SEGMENT
tv76 = 32
tv75 = 36
a$ = 64
b$ = 72
bool_or	PROC						; COMDAT

; 69   : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 70   :     if (!PyBool_Check(a) || !PyBool_Check(b))

  0000e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:PyBool_Type
  00015	48 8b 4c 24 40	 mov	 rcx, QWORD PTR a$[rsp]
  0001a	48 39 41 58	 cmp	 QWORD PTR [rcx+88], rax
  0001e	75 12		 jne	 SHORT $LN1@bool_or
  00020	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:PyBool_Type
  00027	48 8b 4c 24 48	 mov	 rcx, QWORD PTR b$[rsp]
  0002c	48 39 41 58	 cmp	 QWORD PTR [rcx+88], rax
  00030	74 16		 je	 SHORT $LN2@bool_or
$LN1@bool_or:

; 71   :         return PyLong_Type.tp_as_number->nb_or(a, b);

  00032	48 8b 54 24 48	 mov	 rdx, QWORD PTR b$[rsp]
  00037	48 8b 4c 24 40	 mov	 rcx, QWORD PTR a$[rsp]
  0003c	48 8b 05 b8 00
	00 00		 mov	 rax, QWORD PTR PyLong_Type+184
  00043	ff 50 78	 call	 QWORD PTR [rax+120]
  00046	eb 53		 jmp	 SHORT $LN3@bool_or
$LN2@bool_or:

; 72   :     return PyBool_FromLong((a == Py_True) | (b == Py_True));

  00048	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_TrueStruct
  0004f	48 39 44 24 40	 cmp	 QWORD PTR a$[rsp], rax
  00054	75 0a		 jne	 SHORT $LN7@bool_or
  00056	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv76[rsp], 1
  0005e	eb 08		 jmp	 SHORT $LN8@bool_or
$LN7@bool_or:
  00060	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv76[rsp], 0
$LN8@bool_or:
  00068	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_TrueStruct
  0006f	48 39 44 24 48	 cmp	 QWORD PTR b$[rsp], rax
  00074	75 0a		 jne	 SHORT $LN5@bool_or
  00076	c7 44 24 24 01
	00 00 00	 mov	 DWORD PTR tv75[rsp], 1
  0007e	eb 08		 jmp	 SHORT $LN6@bool_or
$LN5@bool_or:
  00080	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR tv75[rsp], 0
$LN6@bool_or:
  00088	8b 44 24 24	 mov	 eax, DWORD PTR tv75[rsp]
  0008c	8b 4c 24 20	 mov	 ecx, DWORD PTR tv76[rsp]
  00090	0b c8		 or	 ecx, eax
  00092	8b c1		 mov	 eax, ecx
  00094	8b c8		 mov	 ecx, eax
  00096	e8 00 00 00 00	 call	 PyBool_FromLong
$LN3@bool_or:

; 73   : }

  0009b	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0009f	c3		 ret	 0
bool_or	ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$bool_xor DD imagerel bool_xor
	DD	imagerel bool_xor+160
	DD	imagerel $unwind$bool_xor
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$bool_xor DD 010e01H
	DD	0620eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT bool_xor
_TEXT	SEGMENT
tv76 = 32
tv75 = 36
a$ = 64
b$ = 72
bool_xor PROC						; COMDAT

; 77   : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 78   :     if (!PyBool_Check(a) || !PyBool_Check(b))

  0000e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:PyBool_Type
  00015	48 8b 4c 24 40	 mov	 rcx, QWORD PTR a$[rsp]
  0001a	48 39 41 58	 cmp	 QWORD PTR [rcx+88], rax
  0001e	75 12		 jne	 SHORT $LN1@bool_xor
  00020	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:PyBool_Type
  00027	48 8b 4c 24 48	 mov	 rcx, QWORD PTR b$[rsp]
  0002c	48 39 41 58	 cmp	 QWORD PTR [rcx+88], rax
  00030	74 16		 je	 SHORT $LN2@bool_xor
$LN1@bool_xor:

; 79   :         return PyLong_Type.tp_as_number->nb_xor(a, b);

  00032	48 8b 54 24 48	 mov	 rdx, QWORD PTR b$[rsp]
  00037	48 8b 4c 24 40	 mov	 rcx, QWORD PTR a$[rsp]
  0003c	48 8b 05 b8 00
	00 00		 mov	 rax, QWORD PTR PyLong_Type+184
  00043	ff 50 70	 call	 QWORD PTR [rax+112]
  00046	eb 53		 jmp	 SHORT $LN3@bool_xor
$LN2@bool_xor:

; 80   :     return PyBool_FromLong((a == Py_True) ^ (b == Py_True));

  00048	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_TrueStruct
  0004f	48 39 44 24 40	 cmp	 QWORD PTR a$[rsp], rax
  00054	75 0a		 jne	 SHORT $LN7@bool_xor
  00056	c7 44 24 20 01
	00 00 00	 mov	 DWORD PTR tv76[rsp], 1
  0005e	eb 08		 jmp	 SHORT $LN8@bool_xor
$LN7@bool_xor:
  00060	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR tv76[rsp], 0
$LN8@bool_xor:
  00068	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_TrueStruct
  0006f	48 39 44 24 48	 cmp	 QWORD PTR b$[rsp], rax
  00074	75 0a		 jne	 SHORT $LN5@bool_xor
  00076	c7 44 24 24 01
	00 00 00	 mov	 DWORD PTR tv75[rsp], 1
  0007e	eb 08		 jmp	 SHORT $LN6@bool_xor
$LN5@bool_xor:
  00080	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR tv75[rsp], 0
$LN6@bool_xor:
  00088	8b 44 24 24	 mov	 eax, DWORD PTR tv75[rsp]
  0008c	8b 4c 24 20	 mov	 ecx, DWORD PTR tv76[rsp]
  00090	33 c8		 xor	 ecx, eax
  00092	8b c1		 mov	 eax, ecx
  00094	8b c8		 mov	 ecx, eax
  00096	e8 00 00 00 00	 call	 PyBool_FromLong
$LN3@bool_xor:

; 81   : }

  0009b	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0009f	c3		 ret	 0
bool_xor ENDP
_TEXT	ENDS
END
