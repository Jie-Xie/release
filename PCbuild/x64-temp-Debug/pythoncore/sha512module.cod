; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_07IEICALMF@_sha512?$AA@			; `string'
PUBLIC	??_C@_06IMCKCJGN@sha384?$AA@			; `string'
PUBLIC	??_C@_06PAMKOKLI@sha512?$AA@			; `string'
PUBLIC	??_C@_06ICGJLFIM@string?$AA@			; `string'
PUBLIC	??_C@_0P@CDFKDICM@_sha512?4sha512?$AA@		; `string'
PUBLIC	??_C@_0P@FPLKPLPJ@_sha512?4sha384?$AA@		; `string'
PUBLIC	??_C@_0M@NPLIJFCD@digest_size?$AA@		; `string'
PUBLIC	??_C@_04MEMAJGDJ@name?$AA@			; `string'
PUBLIC	??_C@_0L@EHHMJOPG@block_size?$AA@		; `string'
PUBLIC	??_C@_06HDLLMMEJ@update?$AA@			; `string'
PUBLIC	??_C@_09NNAIGNDA@hexdigest?$AA@			; `string'
PUBLIC	??_C@_06IJPNAHC@digest?$AA@			; `string'
PUBLIC	??_C@_04COAGEIMF@copy?$AA@			; `string'
;	COMDAT ??_C@_07IEICALMF@_sha512?$AA@
CONST	SEGMENT
??_C@_07IEICALMF@_sha512?$AA@ DB '_sha512', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06IMCKCJGN@sha384?$AA@
CONST	SEGMENT
??_C@_06IMCKCJGN@sha384?$AA@ DB 'sha384', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06PAMKOKLI@sha512?$AA@
CONST	SEGMENT
??_C@_06PAMKOKLI@sha512?$AA@ DB 'sha512', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06ICGJLFIM@string?$AA@
CONST	SEGMENT
??_C@_06ICGJLFIM@string?$AA@ DB 'string', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@CDFKDICM@_sha512?4sha512?$AA@
CONST	SEGMENT
??_C@_0P@CDFKDICM@_sha512?4sha512?$AA@ DB '_sha512.sha512', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FPLKPLPJ@_sha512?4sha384?$AA@
CONST	SEGMENT
??_C@_0P@FPLKPLPJ@_sha512?4sha384?$AA@ DB '_sha512.sha384', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@NPLIJFCD@digest_size?$AA@
CONST	SEGMENT
??_C@_0M@NPLIJFCD@digest_size?$AA@ DB 'digest_size', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04MEMAJGDJ@name?$AA@
CONST	SEGMENT
??_C@_04MEMAJGDJ@name?$AA@ DB 'name', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@EHHMJOPG@block_size?$AA@
CONST	SEGMENT
??_C@_0L@EHHMJOPG@block_size?$AA@ DB 'block_size', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06HDLLMMEJ@update?$AA@
CONST	SEGMENT
??_C@_06HDLLMMEJ@update?$AA@ DB 'update', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09NNAIGNDA@hexdigest?$AA@
CONST	SEGMENT
??_C@_09NNAIGNDA@hexdigest?$AA@ DB 'hexdigest', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_06IJPNAHC@digest?$AA@
CONST	SEGMENT
??_C@_06IJPNAHC@digest?$AA@ DB 'digest', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04COAGEIMF@copy?$AA@
CONST	SEGMENT
??_C@_04COAGEIMF@copy?$AA@ DB 'copy', 00H		; `string'
CONST	ENDS
_DATA	SEGMENT
SHA512_copy__doc__ DB 'Return a copy of the hash object.', 00H
	ORG $+6
SHA512_digest__doc__ DB 'Return the digest value as a string of binary da'
	DB	'ta.', 00H
	ORG $+4
SHA512_hexdigest__doc__ DB 'Return the digest value as a string of hexade'
	DB	'cimal digits.', 00H
	ORG $+5
SHA512_update__doc__ DB 'Update this hash object''s state with the provid'
	DB	'ed string.', 00H
	ORG $+6
SHA_methods DQ	FLAT:??_C@_04COAGEIMF@copy?$AA@
	DQ	FLAT:SHA512_copy
	DD	04H
	ORG $+4
	DQ	FLAT:SHA512_copy__doc__
	DQ	FLAT:??_C@_06IJPNAHC@digest?$AA@
	DQ	FLAT:SHA512_digest
	DD	04H
	ORG $+4
	DQ	FLAT:SHA512_digest__doc__
	DQ	FLAT:??_C@_09NNAIGNDA@hexdigest?$AA@
	DQ	FLAT:SHA512_hexdigest
	DD	04H
	ORG $+4
	DQ	FLAT:SHA512_hexdigest__doc__
	DQ	FLAT:??_C@_06HDLLMMEJ@update?$AA@
	DQ	FLAT:SHA512_update
	DD	01H
	ORG $+4
	DQ	FLAT:SHA512_update__doc__
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+16
SHA_getseters DQ FLAT:??_C@_0L@EHHMJOPG@block_size?$AA@
	DQ	FLAT:SHA512_get_block_size
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:??_C@_04MEMAJGDJ@name?$AA@
	DQ	FLAT:SHA512_get_name
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+32
	ORG $+8
SHA_members DQ	FLAT:??_C@_0M@NPLIJFCD@digest_size?$AA@
	DD	01H
	ORG $+4
	DQ	0000000000000130H
	DD	01H
	ORG $+4
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+32
SHA384type DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0P@FPLKPLPJ@_sha512?4sha384?$AA@
	DQ	0000000000000140H
	DQ	0000000000000000H
	DQ	FLAT:SHA512_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	040000H
	ORG $+4
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:SHA_methods
	DQ	FLAT:SHA_members
	DQ	FLAT:SHA_getseters
	ORG $+136
SHA512type DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0P@CDFKDICM@_sha512?4sha512?$AA@
	DQ	0000000000000140H
	DQ	0000000000000000H
	DQ	FLAT:SHA512_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	040000H
	ORG $+4
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:SHA_methods
	DQ	FLAT:SHA_members
	DQ	FLAT:SHA_getseters
	ORG $+136
SHA512_new__doc__ DB 'Return a new SHA-512 hash object; optionally initia'
	DB	'lized with a string.', 00H
?kwlist@?1??SHA512_new@@9@9 DQ FLAT:??_C@_06ICGJLFIM@string?$AA@ ; `SHA512_new'::`2'::kwlist
	DQ	0000000000000000H
	ORG $+8
SHA384_new__doc__ DB 'Return a new SHA-384 hash object; optionally initia'
	DB	'lized with a string.', 00H
?kwlist@?1??SHA384_new@@9@9 DQ FLAT:??_C@_06ICGJLFIM@string?$AA@ ; `SHA384_new'::`2'::kwlist
	DQ	0000000000000000H
	ORG $+8
SHA_functions DQ FLAT:??_C@_06PAMKOKLI@sha512?$AA@
	DQ	FLAT:SHA512_new
	DD	03H
	ORG $+4
	DQ	FLAT:SHA512_new__doc__
	DQ	FLAT:??_C@_06IMCKCJGN@sha384?$AA@
	DQ	FLAT:SHA384_new
	DD	03H
	ORG $+4
	DQ	FLAT:SHA384_new__doc__
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+16
_sha512module DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_07IEICALMF@_sha512?$AA@
	DQ	0000000000000000H
	DQ	ffffffffffffffffH
	DQ	FLAT:SHA_functions
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
_DATA	ENDS
EXTRN	_PyObject_DebugFree:PROC
;	COMDAT pdata
; File c:\src\pyparallel\modules\sha512module.c
pdata	SEGMENT
$pdata$SHA512_dealloc DD imagerel SHA512_dealloc
	DD	imagerel SHA512_dealloc+24
	DD	imagerel $unwind$SHA512_dealloc
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SHA512_dealloc DD 010901H
	DD	04209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT SHA512_dealloc
_TEXT	SEGMENT
ptr$ = 48
SHA512_dealloc PROC					; COMDAT

; 465  : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 466  :     PyObject_Del(ptr);

  00009	48 8b 4c 24 30	 mov	 rcx, QWORD PTR ptr$[rsp]
  0000e	e8 00 00 00 00	 call	 _PyObject_DebugFree

; 467  : }

  00013	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00017	c3		 ret	 0
SHA512_dealloc ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$SHA512_copy DD imagerel SHA512_copy
	DD	imagerel SHA512_copy+103
	DD	imagerel $unwind$SHA512_copy
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SHA512_copy DD 010e01H
	DD	0620eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT SHA512_copy
_TEXT	SEGMENT
newobj$ = 32
self$ = 64
unused$ = 72
SHA512_copy PROC					; COMDAT

; 476  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 477  :     SHAobject *newobj;
; 478  : 
; 479  :     if (((PyObject*)self)->ob_type == &SHA512type) {

  0000e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:SHA512type
  00015	48 8b 4c 24 40	 mov	 rcx, QWORD PTR self$[rsp]
  0001a	48 39 41 58	 cmp	 QWORD PTR [rcx+88], rax
  0001e	75 18		 jne	 SHORT $LN4@SHA512_cop

; 480  :         if ( (newobj = newSHA512object())==NULL)

  00020	e8 00 00 00 00	 call	 newSHA512object
  00025	48 89 44 24 20	 mov	 QWORD PTR newobj$[rsp], rax
  0002a	48 83 7c 24 20
	00		 cmp	 QWORD PTR newobj$[rsp], 0
  00030	75 04		 jne	 SHORT $LN3@SHA512_cop

; 481  :             return NULL;

  00032	33 c0		 xor	 eax, eax
  00034	eb 2c		 jmp	 SHORT $LN5@SHA512_cop
$LN3@SHA512_cop:

; 482  :     } else {

  00036	eb 16		 jmp	 SHORT $LN2@SHA512_cop
$LN4@SHA512_cop:

; 483  :         if ( (newobj = newSHA384object())==NULL)

  00038	e8 00 00 00 00	 call	 newSHA384object
  0003d	48 89 44 24 20	 mov	 QWORD PTR newobj$[rsp], rax
  00042	48 83 7c 24 20
	00		 cmp	 QWORD PTR newobj$[rsp], 0
  00048	75 04		 jne	 SHORT $LN1@SHA512_cop

; 484  :             return NULL;

  0004a	33 c0		 xor	 eax, eax
  0004c	eb 14		 jmp	 SHORT $LN5@SHA512_cop
$LN1@SHA512_cop:
$LN2@SHA512_cop:

; 485  :     }
; 486  : 
; 487  :     SHAcopy(self, newobj);

  0004e	48 8b 54 24 20	 mov	 rdx, QWORD PTR newobj$[rsp]
  00053	48 8b 4c 24 40	 mov	 rcx, QWORD PTR self$[rsp]
  00058	e8 00 00 00 00	 call	 SHAcopy

; 488  :     return (PyObject *)newobj;

  0005d	48 8b 44 24 20	 mov	 rax, QWORD PTR newobj$[rsp]
$LN5@SHA512_cop:

; 489  : }

  00062	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00066	c3		 ret	 0
SHA512_copy ENDP
_TEXT	ENDS
EXTRN	memcpy:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$SHAcopy DD imagerel SHAcopy
	DD	imagerel SHAcopy+198
	DD	imagerel $unwind$SHAcopy
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SHAcopy DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT SHAcopy
_TEXT	SEGMENT
src$ = 48
dest$ = 56
SHAcopy	PROC						; COMDAT

; 88   : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 89   :     dest->Endianness = src->Endianness;

  0000e	48 8b 44 24 38	 mov	 rax, QWORD PTR dest$[rsp]
  00013	48 8b 4c 24 30	 mov	 rcx, QWORD PTR src$[rsp]
  00018	8b 89 28 01 00
	00		 mov	 ecx, DWORD PTR [rcx+296]
  0001e	89 88 28 01 00
	00		 mov	 DWORD PTR [rax+296], ecx

; 90   :     dest->local = src->local;

  00024	48 8b 44 24 38	 mov	 rax, QWORD PTR dest$[rsp]
  00029	48 8b 4c 24 30	 mov	 rcx, QWORD PTR src$[rsp]
  0002e	8b 89 2c 01 00
	00		 mov	 ecx, DWORD PTR [rcx+300]
  00034	89 88 2c 01 00
	00		 mov	 DWORD PTR [rax+300], ecx

; 91   :     dest->digestsize = src->digestsize;

  0003a	48 8b 44 24 38	 mov	 rax, QWORD PTR dest$[rsp]
  0003f	48 8b 4c 24 30	 mov	 rcx, QWORD PTR src$[rsp]
  00044	8b 89 30 01 00
	00		 mov	 ecx, DWORD PTR [rcx+304]
  0004a	89 88 30 01 00
	00		 mov	 DWORD PTR [rax+304], ecx

; 92   :     dest->count_lo = src->count_lo;

  00050	48 8b 44 24 38	 mov	 rax, QWORD PTR dest$[rsp]
  00055	48 8b 4c 24 30	 mov	 rcx, QWORD PTR src$[rsp]
  0005a	8b 89 a0 00 00
	00		 mov	 ecx, DWORD PTR [rcx+160]
  00060	89 88 a0 00 00
	00		 mov	 DWORD PTR [rax+160], ecx

; 93   :     dest->count_hi = src->count_hi;

  00066	48 8b 44 24 38	 mov	 rax, QWORD PTR dest$[rsp]
  0006b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR src$[rsp]
  00070	8b 89 a4 00 00
	00		 mov	 ecx, DWORD PTR [rcx+164]
  00076	89 88 a4 00 00
	00		 mov	 DWORD PTR [rax+164], ecx

; 94   :     memcpy(dest->digest, src->digest, sizeof(src->digest));

  0007c	48 8b 44 24 30	 mov	 rax, QWORD PTR src$[rsp]
  00081	48 83 c0 60	 add	 rax, 96			; 00000060H
  00085	48 8b 4c 24 38	 mov	 rcx, QWORD PTR dest$[rsp]
  0008a	48 83 c1 60	 add	 rcx, 96			; 00000060H
  0008e	41 b8 40 00 00
	00		 mov	 r8d, 64			; 00000040H
  00094	48 8b d0	 mov	 rdx, rax
  00097	e8 00 00 00 00	 call	 memcpy

; 95   :     memcpy(dest->data, src->data, sizeof(src->data));

  0009c	48 8b 44 24 30	 mov	 rax, QWORD PTR src$[rsp]
  000a1	48 05 a8 00 00
	00		 add	 rax, 168		; 000000a8H
  000a7	48 8b 4c 24 38	 mov	 rcx, QWORD PTR dest$[rsp]
  000ac	48 81 c1 a8 00
	00 00		 add	 rcx, 168		; 000000a8H
  000b3	41 b8 80 00 00
	00		 mov	 r8d, 128		; 00000080H
  000b9	48 8b d0	 mov	 rdx, rax
  000bc	e8 00 00 00 00	 call	 memcpy

; 96   : }

  000c1	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000c5	c3		 ret	 0
SHAcopy	ENDP
_TEXT	ENDS
EXTRN	_PyObject_New:PROC
EXTRN	_PxObject_New:PROC
EXTRN	_Py_PXCTX:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$newSHA384object DD imagerel newSHA384object
	DD	imagerel newSHA384object+59
	DD	imagerel $unwind$newSHA384object
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$newSHA384object DD 010401H
	DD	06204H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT newSHA384object
_TEXT	SEGMENT
tv70 = 32
newSHA384object PROC					; COMDAT

; 451  : {

  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 452  :     return (SHAobject *)PyObject_New(SHAobject, &SHA384type);

  00004	e8 00 00 00 00	 call	 _Py_PXCTX
  00009	85 c0		 test	 eax, eax
  0000b	74 13		 je	 SHORT $LN3@newSHA384o
  0000d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:SHA384type
  00014	e8 00 00 00 00	 call	 _PxObject_New
  00019	48 89 44 24 20	 mov	 QWORD PTR tv70[rsp], rax
  0001e	eb 11		 jmp	 SHORT $LN4@newSHA384o
$LN3@newSHA384o:
  00020	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:SHA384type
  00027	e8 00 00 00 00	 call	 _PyObject_New
  0002c	48 89 44 24 20	 mov	 QWORD PTR tv70[rsp], rax
$LN4@newSHA384o:
  00031	48 8b 44 24 20	 mov	 rax, QWORD PTR tv70[rsp]

; 453  : }

  00036	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003a	c3		 ret	 0
newSHA384object ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$newSHA512object DD imagerel newSHA512object
	DD	imagerel newSHA512object+59
	DD	imagerel $unwind$newSHA512object
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$newSHA512object DD 010401H
	DD	06204H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT newSHA512object
_TEXT	SEGMENT
tv70 = 32
newSHA512object PROC					; COMDAT

; 457  : {

  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 458  :     return (SHAobject *)PyObject_New(SHAobject, &SHA512type);

  00004	e8 00 00 00 00	 call	 _Py_PXCTX
  00009	85 c0		 test	 eax, eax
  0000b	74 13		 je	 SHORT $LN3@newSHA512o
  0000d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:SHA512type
  00014	e8 00 00 00 00	 call	 _PxObject_New
  00019	48 89 44 24 20	 mov	 QWORD PTR tv70[rsp], rax
  0001e	eb 11		 jmp	 SHORT $LN4@newSHA512o
$LN3@newSHA512o:
  00020	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:SHA512type
  00027	e8 00 00 00 00	 call	 _PyObject_New
  0002c	48 89 44 24 20	 mov	 QWORD PTR tv70[rsp], rax
$LN4@newSHA512o:
  00031	48 8b 44 24 20	 mov	 rax, QWORD PTR tv70[rsp]

; 459  : }

  00036	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003a	c3		 ret	 0
newSHA512object ENDP
_TEXT	ENDS
EXTRN	PyBytes_FromStringAndSize:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$SHA512_digest DD imagerel SHA512_digest
	DD	imagerel SHA512_digest+92
	DD	imagerel $unwind$SHA512_digest
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SHA512_digest DD 021101H
	DD	0350111H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT SHA512_digest
_TEXT	SEGMENT
temp$ = 32
digest$ = 352
self$ = 432
unused$ = 440
SHA512_digest PROC					; COMDAT

; 496  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 81 ec a8 01
	00 00		 sub	 rsp, 424		; 000001a8H

; 497  :     unsigned char digest[SHA_DIGESTSIZE];
; 498  :     SHAobject temp;
; 499  : 
; 500  :     SHAcopy(self, &temp);

  00011	48 8d 54 24 20	 lea	 rdx, QWORD PTR temp$[rsp]
  00016	48 8b 8c 24 b0
	01 00 00	 mov	 rcx, QWORD PTR self$[rsp]
  0001e	e8 00 00 00 00	 call	 SHAcopy

; 501  :     sha512_final(digest, &temp);

  00023	48 8d 54 24 20	 lea	 rdx, QWORD PTR temp$[rsp]
  00028	48 8d 8c 24 60
	01 00 00	 lea	 rcx, QWORD PTR digest$[rsp]
  00030	e8 00 00 00 00	 call	 sha512_final

; 502  :     return PyBytes_FromStringAndSize((const char *)digest, self->digestsize);

  00035	48 8b 84 24 b0
	01 00 00	 mov	 rax, QWORD PTR self$[rsp]
  0003d	48 63 80 30 01
	00 00		 movsxd	 rax, DWORD PTR [rax+304]
  00044	48 8b d0	 mov	 rdx, rax
  00047	48 8d 8c 24 60
	01 00 00	 lea	 rcx, QWORD PTR digest$[rsp]
  0004f	e8 00 00 00 00	 call	 PyBytes_FromStringAndSize

; 503  : }

  00054	48 81 c4 a8 01
	00 00		 add	 rsp, 424		; 000001a8H
  0005b	c3		 ret	 0
SHA512_digest ENDP
_TEXT	ENDS
EXTRN	memset:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$sha512_final DD imagerel sha512_final
	DD	imagerel sha512_final+2290
	DD	imagerel $unwind$sha512_final
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$sha512_final DD 010e01H
	DD	0620eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT sha512_final
_TEXT	SEGMENT
count$ = 32
lo_bit_count$ = 36
hi_bit_count$ = 40
digest$ = 64
sha_info$ = 72
sha512_final PROC					; COMDAT

; 335  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 336  :     int count;
; 337  :     SHA_INT32 lo_bit_count, hi_bit_count;
; 338  : 
; 339  :     lo_bit_count = sha_info->count_lo;

  0000e	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00013	8b 80 a0 00 00
	00		 mov	 eax, DWORD PTR [rax+160]
  00019	89 44 24 24	 mov	 DWORD PTR lo_bit_count$[rsp], eax

; 340  :     hi_bit_count = sha_info->count_hi;

  0001d	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00022	8b 80 a4 00 00
	00		 mov	 eax, DWORD PTR [rax+164]
  00028	89 44 24 28	 mov	 DWORD PTR hi_bit_count$[rsp], eax

; 341  :     count = (int) ((lo_bit_count >> 3) & 0x7f);

  0002c	8b 44 24 24	 mov	 eax, DWORD PTR lo_bit_count$[rsp]
  00030	c1 e8 03	 shr	 eax, 3
  00033	83 e0 7f	 and	 eax, 127		; 0000007fH
  00036	89 44 24 20	 mov	 DWORD PTR count$[rsp], eax

; 342  :     ((SHA_BYTE *) sha_info->data)[count++] = 0x80;

  0003a	48 63 44 24 20	 movsxd	 rax, DWORD PTR count$[rsp]
  0003f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR sha_info$[rsp]
  00044	c6 84 01 a8 00
	00 00 80	 mov	 BYTE PTR [rcx+rax+168], 128 ; 00000080H
  0004c	8b 44 24 20	 mov	 eax, DWORD PTR count$[rsp]
  00050	ff c0		 inc	 eax
  00052	89 44 24 20	 mov	 DWORD PTR count$[rsp], eax

; 343  :     if (count > SHA_BLOCKSIZE - 16) {

  00056	83 7c 24 20 70	 cmp	 DWORD PTR count$[rsp], 112 ; 00000070H
  0005b	7e 4e		 jle	 SHORT $LN2@sha512_fin

; 344  :         memset(((SHA_BYTE *) sha_info->data) + count, 0,
; 345  :                SHA_BLOCKSIZE - count);

  0005d	b8 80 00 00 00	 mov	 eax, 128		; 00000080H
  00062	2b 44 24 20	 sub	 eax, DWORD PTR count$[rsp]
  00066	48 98		 cdqe
  00068	48 63 4c 24 20	 movsxd	 rcx, DWORD PTR count$[rsp]
  0006d	48 8b 54 24 48	 mov	 rdx, QWORD PTR sha_info$[rsp]
  00072	48 8d 8c 0a a8
	00 00 00	 lea	 rcx, QWORD PTR [rdx+rcx+168]
  0007a	4c 8b c0	 mov	 r8, rax
  0007d	33 d2		 xor	 edx, edx
  0007f	e8 00 00 00 00	 call	 memset

; 346  :         sha512_transform(sha_info);

  00084	48 8b 4c 24 48	 mov	 rcx, QWORD PTR sha_info$[rsp]
  00089	e8 00 00 00 00	 call	 sha512_transform

; 347  :         memset((SHA_BYTE *) sha_info->data, 0, SHA_BLOCKSIZE - 16);

  0008e	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00093	48 05 a8 00 00
	00		 add	 rax, 168		; 000000a8H
  00099	41 b8 70 00 00
	00		 mov	 r8d, 112		; 00000070H
  0009f	33 d2		 xor	 edx, edx
  000a1	48 8b c8	 mov	 rcx, rax
  000a4	e8 00 00 00 00	 call	 memset

; 348  :     }
; 349  :     else {

  000a9	eb 27		 jmp	 SHORT $LN1@sha512_fin
$LN2@sha512_fin:

; 350  :         memset(((SHA_BYTE *) sha_info->data) + count, 0,
; 351  :                SHA_BLOCKSIZE - 16 - count);

  000ab	b8 70 00 00 00	 mov	 eax, 112		; 00000070H
  000b0	2b 44 24 20	 sub	 eax, DWORD PTR count$[rsp]
  000b4	48 98		 cdqe
  000b6	48 63 4c 24 20	 movsxd	 rcx, DWORD PTR count$[rsp]
  000bb	48 8b 54 24 48	 mov	 rdx, QWORD PTR sha_info$[rsp]
  000c0	48 8d 8c 0a a8
	00 00 00	 lea	 rcx, QWORD PTR [rdx+rcx+168]
  000c8	4c 8b c0	 mov	 r8, rax
  000cb	33 d2		 xor	 edx, edx
  000cd	e8 00 00 00 00	 call	 memset
$LN1@sha512_fin:

; 352  :     }
; 353  : 
; 354  :     /* GJS: note that we add the hi/lo in big-endian. sha512_transform will
; 355  :        swap these values into host-order. */
; 356  :     sha_info->data[112] = 0;

  000d2	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  000d7	c6 80 18 01 00
	00 00		 mov	 BYTE PTR [rax+280], 0

; 357  :     sha_info->data[113] = 0;

  000de	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  000e3	c6 80 19 01 00
	00 00		 mov	 BYTE PTR [rax+281], 0

; 358  :     sha_info->data[114] = 0;

  000ea	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  000ef	c6 80 1a 01 00
	00 00		 mov	 BYTE PTR [rax+282], 0

; 359  :     sha_info->data[115] = 0;

  000f6	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  000fb	c6 80 1b 01 00
	00 00		 mov	 BYTE PTR [rax+283], 0

; 360  :     sha_info->data[116] = 0;

  00102	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00107	c6 80 1c 01 00
	00 00		 mov	 BYTE PTR [rax+284], 0

; 361  :     sha_info->data[117] = 0;

  0010e	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00113	c6 80 1d 01 00
	00 00		 mov	 BYTE PTR [rax+285], 0

; 362  :     sha_info->data[118] = 0;

  0011a	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  0011f	c6 80 1e 01 00
	00 00		 mov	 BYTE PTR [rax+286], 0

; 363  :     sha_info->data[119] = 0;

  00126	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  0012b	c6 80 1f 01 00
	00 00		 mov	 BYTE PTR [rax+287], 0

; 364  :     sha_info->data[120] = (hi_bit_count >> 24) & 0xff;

  00132	8b 44 24 28	 mov	 eax, DWORD PTR hi_bit_count$[rsp]
  00136	c1 e8 18	 shr	 eax, 24
  00139	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0013e	48 8b 4c 24 48	 mov	 rcx, QWORD PTR sha_info$[rsp]
  00143	88 81 20 01 00
	00		 mov	 BYTE PTR [rcx+288], al

; 365  :     sha_info->data[121] = (hi_bit_count >> 16) & 0xff;

  00149	8b 44 24 28	 mov	 eax, DWORD PTR hi_bit_count$[rsp]
  0014d	c1 e8 10	 shr	 eax, 16
  00150	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00155	48 8b 4c 24 48	 mov	 rcx, QWORD PTR sha_info$[rsp]
  0015a	88 81 21 01 00
	00		 mov	 BYTE PTR [rcx+289], al

; 366  :     sha_info->data[122] = (hi_bit_count >>  8) & 0xff;

  00160	8b 44 24 28	 mov	 eax, DWORD PTR hi_bit_count$[rsp]
  00164	c1 e8 08	 shr	 eax, 8
  00167	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0016c	48 8b 4c 24 48	 mov	 rcx, QWORD PTR sha_info$[rsp]
  00171	88 81 22 01 00
	00		 mov	 BYTE PTR [rcx+290], al

; 367  :     sha_info->data[123] = (hi_bit_count >>  0) & 0xff;

  00177	8b 44 24 28	 mov	 eax, DWORD PTR hi_bit_count$[rsp]
  0017b	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00180	48 8b 4c 24 48	 mov	 rcx, QWORD PTR sha_info$[rsp]
  00185	88 81 23 01 00
	00		 mov	 BYTE PTR [rcx+291], al

; 368  :     sha_info->data[124] = (lo_bit_count >> 24) & 0xff;

  0018b	8b 44 24 24	 mov	 eax, DWORD PTR lo_bit_count$[rsp]
  0018f	c1 e8 18	 shr	 eax, 24
  00192	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00197	48 8b 4c 24 48	 mov	 rcx, QWORD PTR sha_info$[rsp]
  0019c	88 81 24 01 00
	00		 mov	 BYTE PTR [rcx+292], al

; 369  :     sha_info->data[125] = (lo_bit_count >> 16) & 0xff;

  001a2	8b 44 24 24	 mov	 eax, DWORD PTR lo_bit_count$[rsp]
  001a6	c1 e8 10	 shr	 eax, 16
  001a9	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  001ae	48 8b 4c 24 48	 mov	 rcx, QWORD PTR sha_info$[rsp]
  001b3	88 81 25 01 00
	00		 mov	 BYTE PTR [rcx+293], al

; 370  :     sha_info->data[126] = (lo_bit_count >>  8) & 0xff;

  001b9	8b 44 24 24	 mov	 eax, DWORD PTR lo_bit_count$[rsp]
  001bd	c1 e8 08	 shr	 eax, 8
  001c0	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  001c5	48 8b 4c 24 48	 mov	 rcx, QWORD PTR sha_info$[rsp]
  001ca	88 81 26 01 00
	00		 mov	 BYTE PTR [rcx+294], al

; 371  :     sha_info->data[127] = (lo_bit_count >>  0) & 0xff;

  001d0	8b 44 24 24	 mov	 eax, DWORD PTR lo_bit_count$[rsp]
  001d4	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  001d9	48 8b 4c 24 48	 mov	 rcx, QWORD PTR sha_info$[rsp]
  001de	88 81 27 01 00
	00		 mov	 BYTE PTR [rcx+295], al

; 372  :     sha512_transform(sha_info);

  001e4	48 8b 4c 24 48	 mov	 rcx, QWORD PTR sha_info$[rsp]
  001e9	e8 00 00 00 00	 call	 sha512_transform

; 373  :     digest[ 0] = (unsigned char) ((sha_info->digest[0] >> 56) & 0xff);

  001ee	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  001f3	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  001f7	48 c1 e8 38	 shr	 rax, 56			; 00000038H
  001fb	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  00201	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00206	88 01		 mov	 BYTE PTR [rcx], al

; 374  :     digest[ 1] = (unsigned char) ((sha_info->digest[0] >> 48) & 0xff);

  00208	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  0020d	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  00211	48 c1 e8 30	 shr	 rax, 48			; 00000030H
  00215	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  0021b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00220	88 41 01	 mov	 BYTE PTR [rcx+1], al

; 375  :     digest[ 2] = (unsigned char) ((sha_info->digest[0] >> 40) & 0xff);

  00223	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00228	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  0022c	48 c1 e8 28	 shr	 rax, 40			; 00000028H
  00230	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  00236	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  0023b	88 41 02	 mov	 BYTE PTR [rcx+2], al

; 376  :     digest[ 3] = (unsigned char) ((sha_info->digest[0] >> 32) & 0xff);

  0023e	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00243	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  00247	48 c1 e8 20	 shr	 rax, 32			; 00000020H
  0024b	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  00251	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00256	88 41 03	 mov	 BYTE PTR [rcx+3], al

; 377  :     digest[ 4] = (unsigned char) ((sha_info->digest[0] >> 24) & 0xff);

  00259	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  0025e	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  00262	48 c1 e8 18	 shr	 rax, 24
  00266	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  0026c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00271	88 41 04	 mov	 BYTE PTR [rcx+4], al

; 378  :     digest[ 5] = (unsigned char) ((sha_info->digest[0] >> 16) & 0xff);

  00274	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00279	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  0027d	48 c1 e8 10	 shr	 rax, 16
  00281	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  00287	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  0028c	88 41 05	 mov	 BYTE PTR [rcx+5], al

; 379  :     digest[ 6] = (unsigned char) ((sha_info->digest[0] >>  8) & 0xff);

  0028f	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00294	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  00298	48 c1 e8 08	 shr	 rax, 8
  0029c	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  002a2	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  002a7	88 41 06	 mov	 BYTE PTR [rcx+6], al

; 380  :     digest[ 7] = (unsigned char) ((sha_info->digest[0]      ) & 0xff);

  002aa	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  002af	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  002b3	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  002b9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  002be	88 41 07	 mov	 BYTE PTR [rcx+7], al

; 381  :     digest[ 8] = (unsigned char) ((sha_info->digest[1] >> 56) & 0xff);

  002c1	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  002c6	48 8b 40 68	 mov	 rax, QWORD PTR [rax+104]
  002ca	48 c1 e8 38	 shr	 rax, 56			; 00000038H
  002ce	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  002d4	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  002d9	88 41 08	 mov	 BYTE PTR [rcx+8], al

; 382  :     digest[ 9] = (unsigned char) ((sha_info->digest[1] >> 48) & 0xff);

  002dc	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  002e1	48 8b 40 68	 mov	 rax, QWORD PTR [rax+104]
  002e5	48 c1 e8 30	 shr	 rax, 48			; 00000030H
  002e9	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  002ef	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  002f4	88 41 09	 mov	 BYTE PTR [rcx+9], al

; 383  :     digest[10] = (unsigned char) ((sha_info->digest[1] >> 40) & 0xff);

  002f7	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  002fc	48 8b 40 68	 mov	 rax, QWORD PTR [rax+104]
  00300	48 c1 e8 28	 shr	 rax, 40			; 00000028H
  00304	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  0030a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  0030f	88 41 0a	 mov	 BYTE PTR [rcx+10], al

; 384  :     digest[11] = (unsigned char) ((sha_info->digest[1] >> 32) & 0xff);

  00312	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00317	48 8b 40 68	 mov	 rax, QWORD PTR [rax+104]
  0031b	48 c1 e8 20	 shr	 rax, 32			; 00000020H
  0031f	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  00325	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  0032a	88 41 0b	 mov	 BYTE PTR [rcx+11], al

; 385  :     digest[12] = (unsigned char) ((sha_info->digest[1] >> 24) & 0xff);

  0032d	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00332	48 8b 40 68	 mov	 rax, QWORD PTR [rax+104]
  00336	48 c1 e8 18	 shr	 rax, 24
  0033a	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  00340	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00345	88 41 0c	 mov	 BYTE PTR [rcx+12], al

; 386  :     digest[13] = (unsigned char) ((sha_info->digest[1] >> 16) & 0xff);

  00348	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  0034d	48 8b 40 68	 mov	 rax, QWORD PTR [rax+104]
  00351	48 c1 e8 10	 shr	 rax, 16
  00355	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  0035b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00360	88 41 0d	 mov	 BYTE PTR [rcx+13], al

; 387  :     digest[14] = (unsigned char) ((sha_info->digest[1] >>  8) & 0xff);

  00363	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00368	48 8b 40 68	 mov	 rax, QWORD PTR [rax+104]
  0036c	48 c1 e8 08	 shr	 rax, 8
  00370	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  00376	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  0037b	88 41 0e	 mov	 BYTE PTR [rcx+14], al

; 388  :     digest[15] = (unsigned char) ((sha_info->digest[1]      ) & 0xff);

  0037e	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00383	48 8b 40 68	 mov	 rax, QWORD PTR [rax+104]
  00387	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  0038d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00392	88 41 0f	 mov	 BYTE PTR [rcx+15], al

; 389  :     digest[16] = (unsigned char) ((sha_info->digest[2] >> 56) & 0xff);

  00395	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  0039a	48 8b 40 70	 mov	 rax, QWORD PTR [rax+112]
  0039e	48 c1 e8 38	 shr	 rax, 56			; 00000038H
  003a2	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  003a8	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  003ad	88 41 10	 mov	 BYTE PTR [rcx+16], al

; 390  :     digest[17] = (unsigned char) ((sha_info->digest[2] >> 48) & 0xff);

  003b0	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  003b5	48 8b 40 70	 mov	 rax, QWORD PTR [rax+112]
  003b9	48 c1 e8 30	 shr	 rax, 48			; 00000030H
  003bd	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  003c3	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  003c8	88 41 11	 mov	 BYTE PTR [rcx+17], al

; 391  :     digest[18] = (unsigned char) ((sha_info->digest[2] >> 40) & 0xff);

  003cb	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  003d0	48 8b 40 70	 mov	 rax, QWORD PTR [rax+112]
  003d4	48 c1 e8 28	 shr	 rax, 40			; 00000028H
  003d8	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  003de	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  003e3	88 41 12	 mov	 BYTE PTR [rcx+18], al

; 392  :     digest[19] = (unsigned char) ((sha_info->digest[2] >> 32) & 0xff);

  003e6	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  003eb	48 8b 40 70	 mov	 rax, QWORD PTR [rax+112]
  003ef	48 c1 e8 20	 shr	 rax, 32			; 00000020H
  003f3	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  003f9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  003fe	88 41 13	 mov	 BYTE PTR [rcx+19], al

; 393  :     digest[20] = (unsigned char) ((sha_info->digest[2] >> 24) & 0xff);

  00401	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00406	48 8b 40 70	 mov	 rax, QWORD PTR [rax+112]
  0040a	48 c1 e8 18	 shr	 rax, 24
  0040e	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  00414	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00419	88 41 14	 mov	 BYTE PTR [rcx+20], al

; 394  :     digest[21] = (unsigned char) ((sha_info->digest[2] >> 16) & 0xff);

  0041c	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00421	48 8b 40 70	 mov	 rax, QWORD PTR [rax+112]
  00425	48 c1 e8 10	 shr	 rax, 16
  00429	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  0042f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00434	88 41 15	 mov	 BYTE PTR [rcx+21], al

; 395  :     digest[22] = (unsigned char) ((sha_info->digest[2] >>  8) & 0xff);

  00437	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  0043c	48 8b 40 70	 mov	 rax, QWORD PTR [rax+112]
  00440	48 c1 e8 08	 shr	 rax, 8
  00444	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  0044a	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  0044f	88 41 16	 mov	 BYTE PTR [rcx+22], al

; 396  :     digest[23] = (unsigned char) ((sha_info->digest[2]      ) & 0xff);

  00452	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00457	48 8b 40 70	 mov	 rax, QWORD PTR [rax+112]
  0045b	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  00461	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00466	88 41 17	 mov	 BYTE PTR [rcx+23], al

; 397  :     digest[24] = (unsigned char) ((sha_info->digest[3] >> 56) & 0xff);

  00469	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  0046e	48 8b 40 78	 mov	 rax, QWORD PTR [rax+120]
  00472	48 c1 e8 38	 shr	 rax, 56			; 00000038H
  00476	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  0047c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00481	88 41 18	 mov	 BYTE PTR [rcx+24], al

; 398  :     digest[25] = (unsigned char) ((sha_info->digest[3] >> 48) & 0xff);

  00484	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00489	48 8b 40 78	 mov	 rax, QWORD PTR [rax+120]
  0048d	48 c1 e8 30	 shr	 rax, 48			; 00000030H
  00491	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  00497	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  0049c	88 41 19	 mov	 BYTE PTR [rcx+25], al

; 399  :     digest[26] = (unsigned char) ((sha_info->digest[3] >> 40) & 0xff);

  0049f	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  004a4	48 8b 40 78	 mov	 rax, QWORD PTR [rax+120]
  004a8	48 c1 e8 28	 shr	 rax, 40			; 00000028H
  004ac	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  004b2	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  004b7	88 41 1a	 mov	 BYTE PTR [rcx+26], al

; 400  :     digest[27] = (unsigned char) ((sha_info->digest[3] >> 32) & 0xff);

  004ba	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  004bf	48 8b 40 78	 mov	 rax, QWORD PTR [rax+120]
  004c3	48 c1 e8 20	 shr	 rax, 32			; 00000020H
  004c7	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  004cd	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  004d2	88 41 1b	 mov	 BYTE PTR [rcx+27], al

; 401  :     digest[28] = (unsigned char) ((sha_info->digest[3] >> 24) & 0xff);

  004d5	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  004da	48 8b 40 78	 mov	 rax, QWORD PTR [rax+120]
  004de	48 c1 e8 18	 shr	 rax, 24
  004e2	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  004e8	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  004ed	88 41 1c	 mov	 BYTE PTR [rcx+28], al

; 402  :     digest[29] = (unsigned char) ((sha_info->digest[3] >> 16) & 0xff);

  004f0	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  004f5	48 8b 40 78	 mov	 rax, QWORD PTR [rax+120]
  004f9	48 c1 e8 10	 shr	 rax, 16
  004fd	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  00503	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00508	88 41 1d	 mov	 BYTE PTR [rcx+29], al

; 403  :     digest[30] = (unsigned char) ((sha_info->digest[3] >>  8) & 0xff);

  0050b	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00510	48 8b 40 78	 mov	 rax, QWORD PTR [rax+120]
  00514	48 c1 e8 08	 shr	 rax, 8
  00518	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  0051e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00523	88 41 1e	 mov	 BYTE PTR [rcx+30], al

; 404  :     digest[31] = (unsigned char) ((sha_info->digest[3]      ) & 0xff);

  00526	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  0052b	48 8b 40 78	 mov	 rax, QWORD PTR [rax+120]
  0052f	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  00535	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  0053a	88 41 1f	 mov	 BYTE PTR [rcx+31], al

; 405  :     digest[32] = (unsigned char) ((sha_info->digest[4] >> 56) & 0xff);

  0053d	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00542	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  00549	48 c1 e8 38	 shr	 rax, 56			; 00000038H
  0054d	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  00553	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00558	88 41 20	 mov	 BYTE PTR [rcx+32], al

; 406  :     digest[33] = (unsigned char) ((sha_info->digest[4] >> 48) & 0xff);

  0055b	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00560	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  00567	48 c1 e8 30	 shr	 rax, 48			; 00000030H
  0056b	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  00571	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00576	88 41 21	 mov	 BYTE PTR [rcx+33], al

; 407  :     digest[34] = (unsigned char) ((sha_info->digest[4] >> 40) & 0xff);

  00579	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  0057e	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  00585	48 c1 e8 28	 shr	 rax, 40			; 00000028H
  00589	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  0058f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00594	88 41 22	 mov	 BYTE PTR [rcx+34], al

; 408  :     digest[35] = (unsigned char) ((sha_info->digest[4] >> 32) & 0xff);

  00597	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  0059c	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  005a3	48 c1 e8 20	 shr	 rax, 32			; 00000020H
  005a7	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  005ad	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  005b2	88 41 23	 mov	 BYTE PTR [rcx+35], al

; 409  :     digest[36] = (unsigned char) ((sha_info->digest[4] >> 24) & 0xff);

  005b5	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  005ba	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  005c1	48 c1 e8 18	 shr	 rax, 24
  005c5	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  005cb	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  005d0	88 41 24	 mov	 BYTE PTR [rcx+36], al

; 410  :     digest[37] = (unsigned char) ((sha_info->digest[4] >> 16) & 0xff);

  005d3	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  005d8	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  005df	48 c1 e8 10	 shr	 rax, 16
  005e3	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  005e9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  005ee	88 41 25	 mov	 BYTE PTR [rcx+37], al

; 411  :     digest[38] = (unsigned char) ((sha_info->digest[4] >>  8) & 0xff);

  005f1	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  005f6	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  005fd	48 c1 e8 08	 shr	 rax, 8
  00601	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  00607	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  0060c	88 41 26	 mov	 BYTE PTR [rcx+38], al

; 412  :     digest[39] = (unsigned char) ((sha_info->digest[4]      ) & 0xff);

  0060f	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00614	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  0061b	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  00621	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00626	88 41 27	 mov	 BYTE PTR [rcx+39], al

; 413  :     digest[40] = (unsigned char) ((sha_info->digest[5] >> 56) & 0xff);

  00629	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  0062e	48 8b 80 88 00
	00 00		 mov	 rax, QWORD PTR [rax+136]
  00635	48 c1 e8 38	 shr	 rax, 56			; 00000038H
  00639	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  0063f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00644	88 41 28	 mov	 BYTE PTR [rcx+40], al

; 414  :     digest[41] = (unsigned char) ((sha_info->digest[5] >> 48) & 0xff);

  00647	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  0064c	48 8b 80 88 00
	00 00		 mov	 rax, QWORD PTR [rax+136]
  00653	48 c1 e8 30	 shr	 rax, 48			; 00000030H
  00657	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  0065d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00662	88 41 29	 mov	 BYTE PTR [rcx+41], al

; 415  :     digest[42] = (unsigned char) ((sha_info->digest[5] >> 40) & 0xff);

  00665	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  0066a	48 8b 80 88 00
	00 00		 mov	 rax, QWORD PTR [rax+136]
  00671	48 c1 e8 28	 shr	 rax, 40			; 00000028H
  00675	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  0067b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00680	88 41 2a	 mov	 BYTE PTR [rcx+42], al

; 416  :     digest[43] = (unsigned char) ((sha_info->digest[5] >> 32) & 0xff);

  00683	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00688	48 8b 80 88 00
	00 00		 mov	 rax, QWORD PTR [rax+136]
  0068f	48 c1 e8 20	 shr	 rax, 32			; 00000020H
  00693	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  00699	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  0069e	88 41 2b	 mov	 BYTE PTR [rcx+43], al

; 417  :     digest[44] = (unsigned char) ((sha_info->digest[5] >> 24) & 0xff);

  006a1	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  006a6	48 8b 80 88 00
	00 00		 mov	 rax, QWORD PTR [rax+136]
  006ad	48 c1 e8 18	 shr	 rax, 24
  006b1	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  006b7	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  006bc	88 41 2c	 mov	 BYTE PTR [rcx+44], al

; 418  :     digest[45] = (unsigned char) ((sha_info->digest[5] >> 16) & 0xff);

  006bf	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  006c4	48 8b 80 88 00
	00 00		 mov	 rax, QWORD PTR [rax+136]
  006cb	48 c1 e8 10	 shr	 rax, 16
  006cf	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  006d5	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  006da	88 41 2d	 mov	 BYTE PTR [rcx+45], al

; 419  :     digest[46] = (unsigned char) ((sha_info->digest[5] >>  8) & 0xff);

  006dd	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  006e2	48 8b 80 88 00
	00 00		 mov	 rax, QWORD PTR [rax+136]
  006e9	48 c1 e8 08	 shr	 rax, 8
  006ed	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  006f3	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  006f8	88 41 2e	 mov	 BYTE PTR [rcx+46], al

; 420  :     digest[47] = (unsigned char) ((sha_info->digest[5]      ) & 0xff);

  006fb	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00700	48 8b 80 88 00
	00 00		 mov	 rax, QWORD PTR [rax+136]
  00707	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  0070d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00712	88 41 2f	 mov	 BYTE PTR [rcx+47], al

; 421  :     digest[48] = (unsigned char) ((sha_info->digest[6] >> 56) & 0xff);

  00715	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  0071a	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]
  00721	48 c1 e8 38	 shr	 rax, 56			; 00000038H
  00725	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  0072b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00730	88 41 30	 mov	 BYTE PTR [rcx+48], al

; 422  :     digest[49] = (unsigned char) ((sha_info->digest[6] >> 48) & 0xff);

  00733	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00738	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]
  0073f	48 c1 e8 30	 shr	 rax, 48			; 00000030H
  00743	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  00749	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  0074e	88 41 31	 mov	 BYTE PTR [rcx+49], al

; 423  :     digest[50] = (unsigned char) ((sha_info->digest[6] >> 40) & 0xff);

  00751	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00756	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]
  0075d	48 c1 e8 28	 shr	 rax, 40			; 00000028H
  00761	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  00767	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  0076c	88 41 32	 mov	 BYTE PTR [rcx+50], al

; 424  :     digest[51] = (unsigned char) ((sha_info->digest[6] >> 32) & 0xff);

  0076f	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00774	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]
  0077b	48 c1 e8 20	 shr	 rax, 32			; 00000020H
  0077f	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  00785	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  0078a	88 41 33	 mov	 BYTE PTR [rcx+51], al

; 425  :     digest[52] = (unsigned char) ((sha_info->digest[6] >> 24) & 0xff);

  0078d	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00792	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]
  00799	48 c1 e8 18	 shr	 rax, 24
  0079d	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  007a3	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  007a8	88 41 34	 mov	 BYTE PTR [rcx+52], al

; 426  :     digest[53] = (unsigned char) ((sha_info->digest[6] >> 16) & 0xff);

  007ab	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  007b0	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]
  007b7	48 c1 e8 10	 shr	 rax, 16
  007bb	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  007c1	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  007c6	88 41 35	 mov	 BYTE PTR [rcx+53], al

; 427  :     digest[54] = (unsigned char) ((sha_info->digest[6] >>  8) & 0xff);

  007c9	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  007ce	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]
  007d5	48 c1 e8 08	 shr	 rax, 8
  007d9	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  007df	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  007e4	88 41 36	 mov	 BYTE PTR [rcx+54], al

; 428  :     digest[55] = (unsigned char) ((sha_info->digest[6]      ) & 0xff);

  007e7	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  007ec	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]
  007f3	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  007f9	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  007fe	88 41 37	 mov	 BYTE PTR [rcx+55], al

; 429  :     digest[56] = (unsigned char) ((sha_info->digest[7] >> 56) & 0xff);

  00801	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00806	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  0080d	48 c1 e8 38	 shr	 rax, 56			; 00000038H
  00811	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  00817	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  0081c	88 41 38	 mov	 BYTE PTR [rcx+56], al

; 430  :     digest[57] = (unsigned char) ((sha_info->digest[7] >> 48) & 0xff);

  0081f	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00824	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  0082b	48 c1 e8 30	 shr	 rax, 48			; 00000030H
  0082f	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  00835	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  0083a	88 41 39	 mov	 BYTE PTR [rcx+57], al

; 431  :     digest[58] = (unsigned char) ((sha_info->digest[7] >> 40) & 0xff);

  0083d	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00842	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  00849	48 c1 e8 28	 shr	 rax, 40			; 00000028H
  0084d	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  00853	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00858	88 41 3a	 mov	 BYTE PTR [rcx+58], al

; 432  :     digest[59] = (unsigned char) ((sha_info->digest[7] >> 32) & 0xff);

  0085b	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  00860	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  00867	48 c1 e8 20	 shr	 rax, 32			; 00000020H
  0086b	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  00871	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00876	88 41 3b	 mov	 BYTE PTR [rcx+59], al

; 433  :     digest[60] = (unsigned char) ((sha_info->digest[7] >> 24) & 0xff);

  00879	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  0087e	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  00885	48 c1 e8 18	 shr	 rax, 24
  00889	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  0088f	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  00894	88 41 3c	 mov	 BYTE PTR [rcx+60], al

; 434  :     digest[61] = (unsigned char) ((sha_info->digest[7] >> 16) & 0xff);

  00897	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  0089c	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  008a3	48 c1 e8 10	 shr	 rax, 16
  008a7	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  008ad	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  008b2	88 41 3d	 mov	 BYTE PTR [rcx+61], al

; 435  :     digest[62] = (unsigned char) ((sha_info->digest[7] >>  8) & 0xff);

  008b5	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  008ba	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  008c1	48 c1 e8 08	 shr	 rax, 8
  008c5	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  008cb	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  008d0	88 41 3e	 mov	 BYTE PTR [rcx+62], al

; 436  :     digest[63] = (unsigned char) ((sha_info->digest[7]      ) & 0xff);

  008d3	48 8b 44 24 48	 mov	 rax, QWORD PTR sha_info$[rsp]
  008d8	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  008df	48 25 ff 00 00
	00		 and	 rax, 255		; 000000ffH
  008e5	48 8b 4c 24 40	 mov	 rcx, QWORD PTR digest$[rsp]
  008ea	88 41 3f	 mov	 BYTE PTR [rcx+63], al

; 437  : }

  008ed	48 83 c4 38	 add	 rsp, 56			; 00000038H
  008f1	c3		 ret	 0
sha512_final ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$sha512_transform DD imagerel sha512_transform
	DD	imagerel sha512_transform+32728
	DD	imagerel $unwind$sha512_transform
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$sha512_transform DD 020c01H
	DD	061010cH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT sha512_transform
_TEXT	SEGMENT
W$ = 32
i$ = 672
S$ = 688
t1$ = 752
t0$ = 760
sha_info$ = 784
sha512_transform PROC					; COMDAT

; 139  : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 81 ec 08 03
	00 00		 sub	 rsp, 776		; 00000308H

; 140  :     int i;
; 141  :     SHA_INT64 S[8], W[80], t0, t1;
; 142  : 
; 143  :     memcpy(W, sha_info->data, sizeof(sha_info->data));

  0000c	48 8b 84 24 10
	03 00 00	 mov	 rax, QWORD PTR sha_info$[rsp]
  00014	48 05 a8 00 00
	00		 add	 rax, 168		; 000000a8H
  0001a	41 b8 80 00 00
	00		 mov	 r8d, 128		; 00000080H
  00020	48 8b d0	 mov	 rdx, rax
  00023	48 8d 4c 24 20	 lea	 rcx, QWORD PTR W$[rsp]
  00028	e8 00 00 00 00	 call	 memcpy

; 144  :     longReverse(W, (int)sizeof(sha_info->data), sha_info->Endianness);

  0002d	48 8b 84 24 10
	03 00 00	 mov	 rax, QWORD PTR sha_info$[rsp]
  00035	44 8b 80 28 01
	00 00		 mov	 r8d, DWORD PTR [rax+296]
  0003c	ba 80 00 00 00	 mov	 edx, 128		; 00000080H
  00041	48 8d 4c 24 20	 lea	 rcx, QWORD PTR W$[rsp]
  00046	e8 00 00 00 00	 call	 longReverse

; 145  : 
; 146  :     for (i = 16; i < 80; ++i) {

  0004b	c7 84 24 a0 02
	00 00 10 00 00
	00		 mov	 DWORD PTR i$[rsp], 16
  00056	eb 10		 jmp	 SHORT $LN9@sha512_tra
$LN8@sha512_tra:
  00058	8b 84 24 a0 02
	00 00		 mov	 eax, DWORD PTR i$[rsp]
  0005f	ff c0		 inc	 eax
  00061	89 84 24 a0 02
	00 00		 mov	 DWORD PTR i$[rsp], eax
$LN9@sha512_tra:
  00068	83 bc 24 a0 02
	00 00 50	 cmp	 DWORD PTR i$[rsp], 80	; 00000050H
  00070	0f 8d 2d 01 00
	00		 jge	 $LN7@sha512_tra

; 147  :                 W[i] = Gamma1(W[i - 2]) + W[i - 7] + Gamma0(W[i - 15]) + W[i - 16];

  00076	8b 84 24 a0 02
	00 00		 mov	 eax, DWORD PTR i$[rsp]
  0007d	83 e8 02	 sub	 eax, 2
  00080	48 98		 cdqe
  00082	48 8b 44 c4 20	 mov	 rax, QWORD PTR W$[rsp+rax*8]
  00087	48 c1 e8 13	 shr	 rax, 19
  0008b	8b 8c 24 a0 02
	00 00		 mov	 ecx, DWORD PTR i$[rsp]
  00092	83 e9 02	 sub	 ecx, 2
  00095	48 63 c9	 movsxd	 rcx, ecx
  00098	48 8b 4c cc 20	 mov	 rcx, QWORD PTR W$[rsp+rcx*8]
  0009d	48 c1 e1 2d	 shl	 rcx, 45			; 0000002dH
  000a1	48 0b c1	 or	 rax, rcx
  000a4	8b 8c 24 a0 02
	00 00		 mov	 ecx, DWORD PTR i$[rsp]
  000ab	83 e9 02	 sub	 ecx, 2
  000ae	48 63 c9	 movsxd	 rcx, ecx
  000b1	48 8b 4c cc 20	 mov	 rcx, QWORD PTR W$[rsp+rcx*8]
  000b6	48 c1 e9 3d	 shr	 rcx, 61			; 0000003dH
  000ba	8b 94 24 a0 02
	00 00		 mov	 edx, DWORD PTR i$[rsp]
  000c1	83 ea 02	 sub	 edx, 2
  000c4	48 63 d2	 movsxd	 rdx, edx
  000c7	48 8b 54 d4 20	 mov	 rdx, QWORD PTR W$[rsp+rdx*8]
  000cc	48 c1 e2 03	 shl	 rdx, 3
  000d0	48 0b ca	 or	 rcx, rdx
  000d3	48 33 c1	 xor	 rax, rcx
  000d6	8b 8c 24 a0 02
	00 00		 mov	 ecx, DWORD PTR i$[rsp]
  000dd	83 e9 02	 sub	 ecx, 2
  000e0	48 63 c9	 movsxd	 rcx, ecx
  000e3	48 8b 4c cc 20	 mov	 rcx, QWORD PTR W$[rsp+rcx*8]
  000e8	48 c1 e9 06	 shr	 rcx, 6
  000ec	48 33 c1	 xor	 rax, rcx
  000ef	8b 8c 24 a0 02
	00 00		 mov	 ecx, DWORD PTR i$[rsp]
  000f6	83 e9 07	 sub	 ecx, 7
  000f9	48 63 c9	 movsxd	 rcx, ecx
  000fc	48 03 44 cc 20	 add	 rax, QWORD PTR W$[rsp+rcx*8]
  00101	8b 8c 24 a0 02
	00 00		 mov	 ecx, DWORD PTR i$[rsp]
  00108	83 e9 0f	 sub	 ecx, 15
  0010b	48 63 c9	 movsxd	 rcx, ecx
  0010e	48 8b 4c cc 20	 mov	 rcx, QWORD PTR W$[rsp+rcx*8]
  00113	48 d1 e9	 shr	 rcx, 1
  00116	8b 94 24 a0 02
	00 00		 mov	 edx, DWORD PTR i$[rsp]
  0011d	83 ea 0f	 sub	 edx, 15
  00120	48 63 d2	 movsxd	 rdx, edx
  00123	48 8b 54 d4 20	 mov	 rdx, QWORD PTR W$[rsp+rdx*8]
  00128	48 c1 e2 3f	 shl	 rdx, 63			; 0000003fH
  0012c	48 0b ca	 or	 rcx, rdx
  0012f	8b 94 24 a0 02
	00 00		 mov	 edx, DWORD PTR i$[rsp]
  00136	83 ea 0f	 sub	 edx, 15
  00139	48 63 d2	 movsxd	 rdx, edx
  0013c	48 8b 54 d4 20	 mov	 rdx, QWORD PTR W$[rsp+rdx*8]
  00141	48 c1 ea 08	 shr	 rdx, 8
  00145	44 8b 84 24 a0
	02 00 00	 mov	 r8d, DWORD PTR i$[rsp]
  0014d	41 83 e8 0f	 sub	 r8d, 15
  00151	4d 63 c0	 movsxd	 r8, r8d
  00154	4e 8b 44 c4 20	 mov	 r8, QWORD PTR W$[rsp+r8*8]
  00159	49 c1 e0 38	 shl	 r8, 56			; 00000038H
  0015d	49 0b d0	 or	 rdx, r8
  00160	48 33 ca	 xor	 rcx, rdx
  00163	8b 94 24 a0 02
	00 00		 mov	 edx, DWORD PTR i$[rsp]
  0016a	83 ea 0f	 sub	 edx, 15
  0016d	48 63 d2	 movsxd	 rdx, edx
  00170	48 8b 54 d4 20	 mov	 rdx, QWORD PTR W$[rsp+rdx*8]
  00175	48 c1 ea 07	 shr	 rdx, 7
  00179	48 33 ca	 xor	 rcx, rdx
  0017c	48 03 c1	 add	 rax, rcx
  0017f	8b 8c 24 a0 02
	00 00		 mov	 ecx, DWORD PTR i$[rsp]
  00186	83 e9 10	 sub	 ecx, 16
  00189	48 63 c9	 movsxd	 rcx, ecx
  0018c	48 03 44 cc 20	 add	 rax, QWORD PTR W$[rsp+rcx*8]
  00191	48 63 8c 24 a0
	02 00 00	 movsxd	 rcx, DWORD PTR i$[rsp]
  00199	48 89 44 cc 20	 mov	 QWORD PTR W$[rsp+rcx*8], rax

; 148  :     }

  0019e	e9 b5 fe ff ff	 jmp	 $LN8@sha512_tra
$LN7@sha512_tra:

; 149  :     for (i = 0; i < 8; ++i) {

  001a3	c7 84 24 a0 02
	00 00 00 00 00
	00		 mov	 DWORD PTR i$[rsp], 0
  001ae	eb 10		 jmp	 SHORT $LN6@sha512_tra
$LN5@sha512_tra:
  001b0	8b 84 24 a0 02
	00 00		 mov	 eax, DWORD PTR i$[rsp]
  001b7	ff c0		 inc	 eax
  001b9	89 84 24 a0 02
	00 00		 mov	 DWORD PTR i$[rsp], eax
$LN6@sha512_tra:
  001c0	83 bc 24 a0 02
	00 00 08	 cmp	 DWORD PTR i$[rsp], 8
  001c8	7d 27		 jge	 SHORT $LN4@sha512_tra

; 150  :         S[i] = sha_info->digest[i];

  001ca	48 63 84 24 a0
	02 00 00	 movsxd	 rax, DWORD PTR i$[rsp]
  001d2	48 63 8c 24 a0
	02 00 00	 movsxd	 rcx, DWORD PTR i$[rsp]
  001da	48 8b 94 24 10
	03 00 00	 mov	 rdx, QWORD PTR sha_info$[rsp]
  001e2	48 8b 44 c2 60	 mov	 rax, QWORD PTR [rdx+rax*8+96]
  001e7	48 89 84 cc b0
	02 00 00	 mov	 QWORD PTR S$[rsp+rcx*8], rax

; 151  :     }

  001ef	eb bf		 jmp	 SHORT $LN5@sha512_tra
$LN4@sha512_tra:

; 152  : 
; 153  :     /* Compress */
; 154  : #define RND(a,b,c,d,e,f,g,h,i,ki)                    \
; 155  :      t0 = h + Sigma1(e) + Ch(e, f, g) + ki + W[i];   \
; 156  :      t1 = Sigma0(a) + Maj(a, b, c);                  \
; 157  :      d += t0;                                        \
; 158  :      h  = t0 + t1;
; 159  : 
; 160  :     RND(S[0],S[1],S[2],S[3],S[4],S[5],S[6],S[7],0,Py_ULL(0x428a2f98d728ae22));

  001f1	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+32]
  001f9	48 c1 e8 0e	 shr	 rax, 14
  001fd	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  00205	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  00209	48 0b c1	 or	 rax, rcx
  0020c	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  00214	48 c1 e9 12	 shr	 rcx, 18
  00218	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  00220	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  00224	48 0b ca	 or	 rcx, rdx
  00227	48 33 c1	 xor	 rax, rcx
  0022a	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  00232	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  00236	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  0023e	48 c1 e2 17	 shl	 rdx, 23
  00242	48 0b ca	 or	 rcx, rdx
  00245	48 33 c1	 xor	 rax, rcx
  00248	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  00250	48 03 c8	 add	 rcx, rax
  00253	48 8b c1	 mov	 rax, rcx
  00256	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  0025e	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  00266	48 33 d1	 xor	 rdx, rcx
  00269	48 8b ca	 mov	 rcx, rdx
  0026c	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  00274	48 23 d1	 and	 rdx, rcx
  00277	48 8b ca	 mov	 rcx, rdx
  0027a	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  00282	48 33 d1	 xor	 rdx, rcx
  00285	48 8b ca	 mov	 rcx, rdx
  00288	48 8b 54 24 20	 mov	 rdx, QWORD PTR W$[rsp]
  0028d	48 03 d0	 add	 rdx, rax
  00290	48 8b c2	 mov	 rax, rdx
  00293	48 ba 22 ae 28
	d7 98 2f 8a 42	 mov	 rdx, 4794697086780616226 ; 428a2f98d728ae22H
  0029d	48 03 ca	 add	 rcx, rdx
  002a0	48 03 c1	 add	 rax, rcx
  002a3	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  002ab	48 8b 84 24 b0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp]
  002b3	48 c1 e8 1c	 shr	 rax, 28
  002b7	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  002bf	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  002c3	48 0b c1	 or	 rax, rcx
  002c6	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  002ce	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  002d2	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  002da	48 c1 e2 1e	 shl	 rdx, 30
  002de	48 0b ca	 or	 rcx, rdx
  002e1	48 33 c1	 xor	 rax, rcx
  002e4	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  002ec	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  002f0	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  002f8	48 c1 e2 19	 shl	 rdx, 25
  002fc	48 0b ca	 or	 rcx, rdx
  002ff	48 33 c1	 xor	 rax, rcx
  00302	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  0030a	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  00312	48 0b d1	 or	 rdx, rcx
  00315	48 8b ca	 mov	 rcx, rdx
  00318	48 23 8c 24 c0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+16]
  00320	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  00328	4c 8b 84 24 b0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp]
  00330	4c 23 c2	 and	 r8, rdx
  00333	49 8b d0	 mov	 rdx, r8
  00336	48 0b ca	 or	 rcx, rdx
  00339	48 03 c1	 add	 rax, rcx
  0033c	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  00344	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  0034c	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  00354	48 03 c8	 add	 rcx, rax
  00357	48 8b c1	 mov	 rax, rcx
  0035a	48 89 84 24 c8
	02 00 00	 mov	 QWORD PTR S$[rsp+24], rax
  00362	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  0036a	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  00372	48 03 c8	 add	 rcx, rax
  00375	48 8b c1	 mov	 rax, rcx
  00378	48 89 84 24 e8
	02 00 00	 mov	 QWORD PTR S$[rsp+56], rax

; 161  :     RND(S[7],S[0],S[1],S[2],S[3],S[4],S[5],S[6],1,Py_ULL(0x7137449123ef65cd));

  00380	48 8b 84 24 c8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+24]
  00388	48 c1 e8 0e	 shr	 rax, 14
  0038c	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  00394	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  00398	48 0b c1	 or	 rax, rcx
  0039b	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  003a3	48 c1 e9 12	 shr	 rcx, 18
  003a7	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  003af	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  003b3	48 0b ca	 or	 rcx, rdx
  003b6	48 33 c1	 xor	 rax, rcx
  003b9	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  003c1	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  003c5	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  003cd	48 c1 e2 17	 shl	 rdx, 23
  003d1	48 0b ca	 or	 rcx, rdx
  003d4	48 33 c1	 xor	 rax, rcx
  003d7	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  003df	48 03 c8	 add	 rcx, rax
  003e2	48 8b c1	 mov	 rax, rcx
  003e5	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  003ed	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  003f5	48 33 d1	 xor	 rdx, rcx
  003f8	48 8b ca	 mov	 rcx, rdx
  003fb	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  00403	48 23 d1	 and	 rdx, rcx
  00406	48 8b ca	 mov	 rcx, rdx
  00409	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  00411	48 33 d1	 xor	 rdx, rcx
  00414	48 8b ca	 mov	 rcx, rdx
  00417	48 8b 54 24 28	 mov	 rdx, QWORD PTR W$[rsp+8]
  0041c	48 03 d0	 add	 rdx, rax
  0041f	48 8b c2	 mov	 rax, rdx
  00422	48 ba cd 65 ef
	23 91 44 37 71	 mov	 rdx, 8158064640168781261 ; 7137449123ef65cdH
  0042c	48 03 ca	 add	 rcx, rdx
  0042f	48 03 c1	 add	 rax, rcx
  00432	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  0043a	48 8b 84 24 e8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+56]
  00442	48 c1 e8 1c	 shr	 rax, 28
  00446	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  0044e	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  00452	48 0b c1	 or	 rax, rcx
  00455	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  0045d	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  00461	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  00469	48 c1 e2 1e	 shl	 rdx, 30
  0046d	48 0b ca	 or	 rcx, rdx
  00470	48 33 c1	 xor	 rax, rcx
  00473	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  0047b	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  0047f	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  00487	48 c1 e2 19	 shl	 rdx, 25
  0048b	48 0b ca	 or	 rcx, rdx
  0048e	48 33 c1	 xor	 rax, rcx
  00491	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  00499	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  004a1	48 0b d1	 or	 rdx, rcx
  004a4	48 8b ca	 mov	 rcx, rdx
  004a7	48 23 8c 24 b8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+8]
  004af	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  004b7	4c 8b 84 24 e8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+56]
  004bf	4c 23 c2	 and	 r8, rdx
  004c2	49 8b d0	 mov	 rdx, r8
  004c5	48 0b ca	 or	 rcx, rdx
  004c8	48 03 c1	 add	 rax, rcx
  004cb	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  004d3	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  004db	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  004e3	48 03 c8	 add	 rcx, rax
  004e6	48 8b c1	 mov	 rax, rcx
  004e9	48 89 84 24 c0
	02 00 00	 mov	 QWORD PTR S$[rsp+16], rax
  004f1	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  004f9	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  00501	48 03 c8	 add	 rcx, rax
  00504	48 8b c1	 mov	 rax, rcx
  00507	48 89 84 24 e0
	02 00 00	 mov	 QWORD PTR S$[rsp+48], rax

; 162  :     RND(S[6],S[7],S[0],S[1],S[2],S[3],S[4],S[5],2,Py_ULL(0xb5c0fbcfec4d3b2f));

  0050f	48 8b 84 24 c0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+16]
  00517	48 c1 e8 0e	 shr	 rax, 14
  0051b	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  00523	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  00527	48 0b c1	 or	 rax, rcx
  0052a	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  00532	48 c1 e9 12	 shr	 rcx, 18
  00536	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  0053e	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  00542	48 0b ca	 or	 rcx, rdx
  00545	48 33 c1	 xor	 rax, rcx
  00548	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  00550	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  00554	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  0055c	48 c1 e2 17	 shl	 rdx, 23
  00560	48 0b ca	 or	 rcx, rdx
  00563	48 33 c1	 xor	 rax, rcx
  00566	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  0056e	48 03 c8	 add	 rcx, rax
  00571	48 8b c1	 mov	 rax, rcx
  00574	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  0057c	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  00584	48 33 d1	 xor	 rdx, rcx
  00587	48 8b ca	 mov	 rcx, rdx
  0058a	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  00592	48 23 d1	 and	 rdx, rcx
  00595	48 8b ca	 mov	 rcx, rdx
  00598	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  005a0	48 33 d1	 xor	 rdx, rcx
  005a3	48 8b ca	 mov	 rcx, rdx
  005a6	48 8b 54 24 30	 mov	 rdx, QWORD PTR W$[rsp+16]
  005ab	48 03 d0	 add	 rdx, rax
  005ae	48 8b c2	 mov	 rax, rdx
  005b1	48 ba 2f 3b 4d
	ec cf fb c0 b5	 mov	 rdx, -5349999486874862801 ; b5c0fbcfec4d3b2fH
  005bb	48 03 ca	 add	 rcx, rdx
  005be	48 03 c1	 add	 rax, rcx
  005c1	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  005c9	48 8b 84 24 e0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+48]
  005d1	48 c1 e8 1c	 shr	 rax, 28
  005d5	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  005dd	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  005e1	48 0b c1	 or	 rax, rcx
  005e4	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  005ec	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  005f0	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  005f8	48 c1 e2 1e	 shl	 rdx, 30
  005fc	48 0b ca	 or	 rcx, rdx
  005ff	48 33 c1	 xor	 rax, rcx
  00602	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  0060a	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  0060e	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  00616	48 c1 e2 19	 shl	 rdx, 25
  0061a	48 0b ca	 or	 rcx, rdx
  0061d	48 33 c1	 xor	 rax, rcx
  00620	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  00628	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  00630	48 0b d1	 or	 rdx, rcx
  00633	48 8b ca	 mov	 rcx, rdx
  00636	48 23 8c 24 b0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp]
  0063e	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  00646	4c 8b 84 24 e0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+48]
  0064e	4c 23 c2	 and	 r8, rdx
  00651	49 8b d0	 mov	 rdx, r8
  00654	48 0b ca	 or	 rcx, rdx
  00657	48 03 c1	 add	 rax, rcx
  0065a	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  00662	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  0066a	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  00672	48 03 c8	 add	 rcx, rax
  00675	48 8b c1	 mov	 rax, rcx
  00678	48 89 84 24 b8
	02 00 00	 mov	 QWORD PTR S$[rsp+8], rax
  00680	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  00688	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  00690	48 03 c8	 add	 rcx, rax
  00693	48 8b c1	 mov	 rax, rcx
  00696	48 89 84 24 d8
	02 00 00	 mov	 QWORD PTR S$[rsp+40], rax

; 163  :     RND(S[5],S[6],S[7],S[0],S[1],S[2],S[3],S[4],3,Py_ULL(0xe9b5dba58189dbbc));

  0069e	48 8b 84 24 b8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+8]
  006a6	48 c1 e8 0e	 shr	 rax, 14
  006aa	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  006b2	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  006b6	48 0b c1	 or	 rax, rcx
  006b9	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  006c1	48 c1 e9 12	 shr	 rcx, 18
  006c5	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  006cd	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  006d1	48 0b ca	 or	 rcx, rdx
  006d4	48 33 c1	 xor	 rax, rcx
  006d7	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  006df	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  006e3	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  006eb	48 c1 e2 17	 shl	 rdx, 23
  006ef	48 0b ca	 or	 rcx, rdx
  006f2	48 33 c1	 xor	 rax, rcx
  006f5	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  006fd	48 03 c8	 add	 rcx, rax
  00700	48 8b c1	 mov	 rax, rcx
  00703	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  0070b	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  00713	48 33 d1	 xor	 rdx, rcx
  00716	48 8b ca	 mov	 rcx, rdx
  00719	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  00721	48 23 d1	 and	 rdx, rcx
  00724	48 8b ca	 mov	 rcx, rdx
  00727	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  0072f	48 33 d1	 xor	 rdx, rcx
  00732	48 8b ca	 mov	 rcx, rdx
  00735	48 8b 54 24 38	 mov	 rdx, QWORD PTR W$[rsp+24]
  0073a	48 03 d0	 add	 rdx, rax
  0073d	48 8b c2	 mov	 rax, rdx
  00740	48 ba bc db 89
	81 a5 db b5 e9	 mov	 rdx, -1606136188198331460 ; e9b5dba58189dbbcH
  0074a	48 03 ca	 add	 rcx, rdx
  0074d	48 03 c1	 add	 rax, rcx
  00750	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  00758	48 8b 84 24 d8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+40]
  00760	48 c1 e8 1c	 shr	 rax, 28
  00764	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  0076c	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  00770	48 0b c1	 or	 rax, rcx
  00773	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  0077b	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  0077f	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  00787	48 c1 e2 1e	 shl	 rdx, 30
  0078b	48 0b ca	 or	 rcx, rdx
  0078e	48 33 c1	 xor	 rax, rcx
  00791	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  00799	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  0079d	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  007a5	48 c1 e2 19	 shl	 rdx, 25
  007a9	48 0b ca	 or	 rcx, rdx
  007ac	48 33 c1	 xor	 rax, rcx
  007af	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  007b7	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  007bf	48 0b d1	 or	 rdx, rcx
  007c2	48 8b ca	 mov	 rcx, rdx
  007c5	48 23 8c 24 e8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+56]
  007cd	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  007d5	4c 8b 84 24 d8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+40]
  007dd	4c 23 c2	 and	 r8, rdx
  007e0	49 8b d0	 mov	 rdx, r8
  007e3	48 0b ca	 or	 rcx, rdx
  007e6	48 03 c1	 add	 rax, rcx
  007e9	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  007f1	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  007f9	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  00801	48 03 c8	 add	 rcx, rax
  00804	48 8b c1	 mov	 rax, rcx
  00807	48 89 84 24 b0
	02 00 00	 mov	 QWORD PTR S$[rsp], rax
  0080f	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  00817	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  0081f	48 03 c8	 add	 rcx, rax
  00822	48 8b c1	 mov	 rax, rcx
  00825	48 89 84 24 d0
	02 00 00	 mov	 QWORD PTR S$[rsp+32], rax

; 164  :     RND(S[4],S[5],S[6],S[7],S[0],S[1],S[2],S[3],4,Py_ULL(0x3956c25bf348b538));

  0082d	48 8b 84 24 b0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp]
  00835	48 c1 e8 0e	 shr	 rax, 14
  00839	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  00841	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  00845	48 0b c1	 or	 rax, rcx
  00848	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  00850	48 c1 e9 12	 shr	 rcx, 18
  00854	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  0085c	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  00860	48 0b ca	 or	 rcx, rdx
  00863	48 33 c1	 xor	 rax, rcx
  00866	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  0086e	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  00872	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  0087a	48 c1 e2 17	 shl	 rdx, 23
  0087e	48 0b ca	 or	 rcx, rdx
  00881	48 33 c1	 xor	 rax, rcx
  00884	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  0088c	48 03 c8	 add	 rcx, rax
  0088f	48 8b c1	 mov	 rax, rcx
  00892	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  0089a	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  008a2	48 33 d1	 xor	 rdx, rcx
  008a5	48 8b ca	 mov	 rcx, rdx
  008a8	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  008b0	48 23 d1	 and	 rdx, rcx
  008b3	48 8b ca	 mov	 rcx, rdx
  008b6	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  008be	48 33 d1	 xor	 rdx, rcx
  008c1	48 8b ca	 mov	 rcx, rdx
  008c4	48 8b 54 24 40	 mov	 rdx, QWORD PTR W$[rsp+32]
  008c9	48 03 d0	 add	 rdx, rax
  008cc	48 8b c2	 mov	 rax, rdx
  008cf	48 ba 38 b5 48
	f3 5b c2 56 39	 mov	 rdx, 4131703408338449720 ; 3956c25bf348b538H
  008d9	48 03 ca	 add	 rcx, rdx
  008dc	48 03 c1	 add	 rax, rcx
  008df	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  008e7	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+32]
  008ef	48 c1 e8 1c	 shr	 rax, 28
  008f3	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  008fb	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  008ff	48 0b c1	 or	 rax, rcx
  00902	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  0090a	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  0090e	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  00916	48 c1 e2 1e	 shl	 rdx, 30
  0091a	48 0b ca	 or	 rcx, rdx
  0091d	48 33 c1	 xor	 rax, rcx
  00920	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  00928	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  0092c	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  00934	48 c1 e2 19	 shl	 rdx, 25
  00938	48 0b ca	 or	 rcx, rdx
  0093b	48 33 c1	 xor	 rax, rcx
  0093e	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  00946	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  0094e	48 0b d1	 or	 rdx, rcx
  00951	48 8b ca	 mov	 rcx, rdx
  00954	48 23 8c 24 e0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+48]
  0095c	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  00964	4c 8b 84 24 d0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+32]
  0096c	4c 23 c2	 and	 r8, rdx
  0096f	49 8b d0	 mov	 rdx, r8
  00972	48 0b ca	 or	 rcx, rdx
  00975	48 03 c1	 add	 rax, rcx
  00978	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  00980	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  00988	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  00990	48 03 c8	 add	 rcx, rax
  00993	48 8b c1	 mov	 rax, rcx
  00996	48 89 84 24 e8
	02 00 00	 mov	 QWORD PTR S$[rsp+56], rax
  0099e	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  009a6	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  009ae	48 03 c8	 add	 rcx, rax
  009b1	48 8b c1	 mov	 rax, rcx
  009b4	48 89 84 24 c8
	02 00 00	 mov	 QWORD PTR S$[rsp+24], rax

; 165  :     RND(S[3],S[4],S[5],S[6],S[7],S[0],S[1],S[2],5,Py_ULL(0x59f111f1b605d019));

  009bc	48 8b 84 24 e8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+56]
  009c4	48 c1 e8 0e	 shr	 rax, 14
  009c8	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  009d0	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  009d4	48 0b c1	 or	 rax, rcx
  009d7	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  009df	48 c1 e9 12	 shr	 rcx, 18
  009e3	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  009eb	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  009ef	48 0b ca	 or	 rcx, rdx
  009f2	48 33 c1	 xor	 rax, rcx
  009f5	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  009fd	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  00a01	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  00a09	48 c1 e2 17	 shl	 rdx, 23
  00a0d	48 0b ca	 or	 rcx, rdx
  00a10	48 33 c1	 xor	 rax, rcx
  00a13	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  00a1b	48 03 c8	 add	 rcx, rax
  00a1e	48 8b c1	 mov	 rax, rcx
  00a21	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  00a29	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  00a31	48 33 d1	 xor	 rdx, rcx
  00a34	48 8b ca	 mov	 rcx, rdx
  00a37	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  00a3f	48 23 d1	 and	 rdx, rcx
  00a42	48 8b ca	 mov	 rcx, rdx
  00a45	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  00a4d	48 33 d1	 xor	 rdx, rcx
  00a50	48 8b ca	 mov	 rcx, rdx
  00a53	48 8b 54 24 48	 mov	 rdx, QWORD PTR W$[rsp+40]
  00a58	48 03 d0	 add	 rdx, rax
  00a5b	48 8b c2	 mov	 rax, rdx
  00a5e	48 ba 19 d0 05
	b6 f1 11 f1 59	 mov	 rdx, 6480981068601479193 ; 59f111f1b605d019H
  00a68	48 03 ca	 add	 rcx, rdx
  00a6b	48 03 c1	 add	 rax, rcx
  00a6e	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  00a76	48 8b 84 24 c8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+24]
  00a7e	48 c1 e8 1c	 shr	 rax, 28
  00a82	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  00a8a	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  00a8e	48 0b c1	 or	 rax, rcx
  00a91	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  00a99	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  00a9d	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  00aa5	48 c1 e2 1e	 shl	 rdx, 30
  00aa9	48 0b ca	 or	 rcx, rdx
  00aac	48 33 c1	 xor	 rax, rcx
  00aaf	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  00ab7	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  00abb	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  00ac3	48 c1 e2 19	 shl	 rdx, 25
  00ac7	48 0b ca	 or	 rcx, rdx
  00aca	48 33 c1	 xor	 rax, rcx
  00acd	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  00ad5	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  00add	48 0b d1	 or	 rdx, rcx
  00ae0	48 8b ca	 mov	 rcx, rdx
  00ae3	48 23 8c 24 d8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+40]
  00aeb	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  00af3	4c 8b 84 24 c8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+24]
  00afb	4c 23 c2	 and	 r8, rdx
  00afe	49 8b d0	 mov	 rdx, r8
  00b01	48 0b ca	 or	 rcx, rdx
  00b04	48 03 c1	 add	 rax, rcx
  00b07	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  00b0f	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  00b17	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  00b1f	48 03 c8	 add	 rcx, rax
  00b22	48 8b c1	 mov	 rax, rcx
  00b25	48 89 84 24 e0
	02 00 00	 mov	 QWORD PTR S$[rsp+48], rax
  00b2d	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  00b35	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  00b3d	48 03 c8	 add	 rcx, rax
  00b40	48 8b c1	 mov	 rax, rcx
  00b43	48 89 84 24 c0
	02 00 00	 mov	 QWORD PTR S$[rsp+16], rax

; 166  :     RND(S[2],S[3],S[4],S[5],S[6],S[7],S[0],S[1],6,Py_ULL(0x923f82a4af194f9b));

  00b4b	48 8b 84 24 e0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+48]
  00b53	48 c1 e8 0e	 shr	 rax, 14
  00b57	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  00b5f	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  00b63	48 0b c1	 or	 rax, rcx
  00b66	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  00b6e	48 c1 e9 12	 shr	 rcx, 18
  00b72	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  00b7a	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  00b7e	48 0b ca	 or	 rcx, rdx
  00b81	48 33 c1	 xor	 rax, rcx
  00b84	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  00b8c	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  00b90	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  00b98	48 c1 e2 17	 shl	 rdx, 23
  00b9c	48 0b ca	 or	 rcx, rdx
  00b9f	48 33 c1	 xor	 rax, rcx
  00ba2	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  00baa	48 03 c8	 add	 rcx, rax
  00bad	48 8b c1	 mov	 rax, rcx
  00bb0	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  00bb8	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  00bc0	48 33 d1	 xor	 rdx, rcx
  00bc3	48 8b ca	 mov	 rcx, rdx
  00bc6	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  00bce	48 23 d1	 and	 rdx, rcx
  00bd1	48 8b ca	 mov	 rcx, rdx
  00bd4	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  00bdc	48 33 d1	 xor	 rdx, rcx
  00bdf	48 8b ca	 mov	 rcx, rdx
  00be2	48 8b 54 24 50	 mov	 rdx, QWORD PTR W$[rsp+48]
  00be7	48 03 d0	 add	 rdx, rax
  00bea	48 8b c2	 mov	 rax, rdx
  00bed	48 ba 9b 4f 19
	af a4 82 3f 92	 mov	 rdx, -7908458776815382629 ; 923f82a4af194f9bH
  00bf7	48 03 ca	 add	 rcx, rdx
  00bfa	48 03 c1	 add	 rax, rcx
  00bfd	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  00c05	48 8b 84 24 c0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+16]
  00c0d	48 c1 e8 1c	 shr	 rax, 28
  00c11	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  00c19	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  00c1d	48 0b c1	 or	 rax, rcx
  00c20	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  00c28	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  00c2c	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  00c34	48 c1 e2 1e	 shl	 rdx, 30
  00c38	48 0b ca	 or	 rcx, rdx
  00c3b	48 33 c1	 xor	 rax, rcx
  00c3e	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  00c46	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  00c4a	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  00c52	48 c1 e2 19	 shl	 rdx, 25
  00c56	48 0b ca	 or	 rcx, rdx
  00c59	48 33 c1	 xor	 rax, rcx
  00c5c	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  00c64	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  00c6c	48 0b d1	 or	 rdx, rcx
  00c6f	48 8b ca	 mov	 rcx, rdx
  00c72	48 23 8c 24 d0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+32]
  00c7a	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  00c82	4c 8b 84 24 c0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+16]
  00c8a	4c 23 c2	 and	 r8, rdx
  00c8d	49 8b d0	 mov	 rdx, r8
  00c90	48 0b ca	 or	 rcx, rdx
  00c93	48 03 c1	 add	 rax, rcx
  00c96	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  00c9e	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  00ca6	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  00cae	48 03 c8	 add	 rcx, rax
  00cb1	48 8b c1	 mov	 rax, rcx
  00cb4	48 89 84 24 d8
	02 00 00	 mov	 QWORD PTR S$[rsp+40], rax
  00cbc	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  00cc4	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  00ccc	48 03 c8	 add	 rcx, rax
  00ccf	48 8b c1	 mov	 rax, rcx
  00cd2	48 89 84 24 b8
	02 00 00	 mov	 QWORD PTR S$[rsp+8], rax

; 167  :     RND(S[1],S[2],S[3],S[4],S[5],S[6],S[7],S[0],7,Py_ULL(0xab1c5ed5da6d8118));

  00cda	48 8b 84 24 d8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+40]
  00ce2	48 c1 e8 0e	 shr	 rax, 14
  00ce6	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  00cee	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  00cf2	48 0b c1	 or	 rax, rcx
  00cf5	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  00cfd	48 c1 e9 12	 shr	 rcx, 18
  00d01	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  00d09	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  00d0d	48 0b ca	 or	 rcx, rdx
  00d10	48 33 c1	 xor	 rax, rcx
  00d13	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  00d1b	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  00d1f	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  00d27	48 c1 e2 17	 shl	 rdx, 23
  00d2b	48 0b ca	 or	 rcx, rdx
  00d2e	48 33 c1	 xor	 rax, rcx
  00d31	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  00d39	48 03 c8	 add	 rcx, rax
  00d3c	48 8b c1	 mov	 rax, rcx
  00d3f	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  00d47	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  00d4f	48 33 d1	 xor	 rdx, rcx
  00d52	48 8b ca	 mov	 rcx, rdx
  00d55	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  00d5d	48 23 d1	 and	 rdx, rcx
  00d60	48 8b ca	 mov	 rcx, rdx
  00d63	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  00d6b	48 33 d1	 xor	 rdx, rcx
  00d6e	48 8b ca	 mov	 rcx, rdx
  00d71	48 8b 54 24 58	 mov	 rdx, QWORD PTR W$[rsp+56]
  00d76	48 03 d0	 add	 rdx, rax
  00d79	48 8b c2	 mov	 rax, rdx
  00d7c	48 ba 18 81 6d
	da d5 5e 1c ab	 mov	 rdx, -6116909921290321640 ; ab1c5ed5da6d8118H
  00d86	48 03 ca	 add	 rcx, rdx
  00d89	48 03 c1	 add	 rax, rcx
  00d8c	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  00d94	48 8b 84 24 b8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+8]
  00d9c	48 c1 e8 1c	 shr	 rax, 28
  00da0	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  00da8	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  00dac	48 0b c1	 or	 rax, rcx
  00daf	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  00db7	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  00dbb	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  00dc3	48 c1 e2 1e	 shl	 rdx, 30
  00dc7	48 0b ca	 or	 rcx, rdx
  00dca	48 33 c1	 xor	 rax, rcx
  00dcd	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  00dd5	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  00dd9	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  00de1	48 c1 e2 19	 shl	 rdx, 25
  00de5	48 0b ca	 or	 rcx, rdx
  00de8	48 33 c1	 xor	 rax, rcx
  00deb	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  00df3	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  00dfb	48 0b d1	 or	 rdx, rcx
  00dfe	48 8b ca	 mov	 rcx, rdx
  00e01	48 23 8c 24 c8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+24]
  00e09	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  00e11	4c 8b 84 24 b8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+8]
  00e19	4c 23 c2	 and	 r8, rdx
  00e1c	49 8b d0	 mov	 rdx, r8
  00e1f	48 0b ca	 or	 rcx, rdx
  00e22	48 03 c1	 add	 rax, rcx
  00e25	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  00e2d	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  00e35	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  00e3d	48 03 c8	 add	 rcx, rax
  00e40	48 8b c1	 mov	 rax, rcx
  00e43	48 89 84 24 d0
	02 00 00	 mov	 QWORD PTR S$[rsp+32], rax
  00e4b	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  00e53	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  00e5b	48 03 c8	 add	 rcx, rax
  00e5e	48 8b c1	 mov	 rax, rcx
  00e61	48 89 84 24 b0
	02 00 00	 mov	 QWORD PTR S$[rsp], rax

; 168  :     RND(S[0],S[1],S[2],S[3],S[4],S[5],S[6],S[7],8,Py_ULL(0xd807aa98a3030242));

  00e69	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+32]
  00e71	48 c1 e8 0e	 shr	 rax, 14
  00e75	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  00e7d	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  00e81	48 0b c1	 or	 rax, rcx
  00e84	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  00e8c	48 c1 e9 12	 shr	 rcx, 18
  00e90	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  00e98	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  00e9c	48 0b ca	 or	 rcx, rdx
  00e9f	48 33 c1	 xor	 rax, rcx
  00ea2	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  00eaa	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  00eae	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  00eb6	48 c1 e2 17	 shl	 rdx, 23
  00eba	48 0b ca	 or	 rcx, rdx
  00ebd	48 33 c1	 xor	 rax, rcx
  00ec0	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  00ec8	48 03 c8	 add	 rcx, rax
  00ecb	48 8b c1	 mov	 rax, rcx
  00ece	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  00ed6	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  00ede	48 33 d1	 xor	 rdx, rcx
  00ee1	48 8b ca	 mov	 rcx, rdx
  00ee4	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  00eec	48 23 d1	 and	 rdx, rcx
  00eef	48 8b ca	 mov	 rcx, rdx
  00ef2	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  00efa	48 33 d1	 xor	 rdx, rcx
  00efd	48 8b ca	 mov	 rcx, rdx
  00f00	48 8b 54 24 60	 mov	 rdx, QWORD PTR W$[rsp+64]
  00f05	48 03 d0	 add	 rdx, rax
  00f08	48 8b c2	 mov	 rax, rdx
  00f0b	48 ba 42 02 03
	a3 98 aa 07 d8	 mov	 rdx, -2880145864133508542 ; d807aa98a3030242H
  00f15	48 03 ca	 add	 rcx, rdx
  00f18	48 03 c1	 add	 rax, rcx
  00f1b	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  00f23	48 8b 84 24 b0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp]
  00f2b	48 c1 e8 1c	 shr	 rax, 28
  00f2f	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  00f37	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  00f3b	48 0b c1	 or	 rax, rcx
  00f3e	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  00f46	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  00f4a	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  00f52	48 c1 e2 1e	 shl	 rdx, 30
  00f56	48 0b ca	 or	 rcx, rdx
  00f59	48 33 c1	 xor	 rax, rcx
  00f5c	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  00f64	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  00f68	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  00f70	48 c1 e2 19	 shl	 rdx, 25
  00f74	48 0b ca	 or	 rcx, rdx
  00f77	48 33 c1	 xor	 rax, rcx
  00f7a	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  00f82	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  00f8a	48 0b d1	 or	 rdx, rcx
  00f8d	48 8b ca	 mov	 rcx, rdx
  00f90	48 23 8c 24 c0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+16]
  00f98	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  00fa0	4c 8b 84 24 b0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp]
  00fa8	4c 23 c2	 and	 r8, rdx
  00fab	49 8b d0	 mov	 rdx, r8
  00fae	48 0b ca	 or	 rcx, rdx
  00fb1	48 03 c1	 add	 rax, rcx
  00fb4	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  00fbc	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  00fc4	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  00fcc	48 03 c8	 add	 rcx, rax
  00fcf	48 8b c1	 mov	 rax, rcx
  00fd2	48 89 84 24 c8
	02 00 00	 mov	 QWORD PTR S$[rsp+24], rax
  00fda	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  00fe2	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  00fea	48 03 c8	 add	 rcx, rax
  00fed	48 8b c1	 mov	 rax, rcx
  00ff0	48 89 84 24 e8
	02 00 00	 mov	 QWORD PTR S$[rsp+56], rax

; 169  :     RND(S[7],S[0],S[1],S[2],S[3],S[4],S[5],S[6],9,Py_ULL(0x12835b0145706fbe));

  00ff8	48 8b 84 24 c8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+24]
  01000	48 c1 e8 0e	 shr	 rax, 14
  01004	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  0100c	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  01010	48 0b c1	 or	 rax, rcx
  01013	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  0101b	48 c1 e9 12	 shr	 rcx, 18
  0101f	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  01027	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  0102b	48 0b ca	 or	 rcx, rdx
  0102e	48 33 c1	 xor	 rax, rcx
  01031	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  01039	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  0103d	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  01045	48 c1 e2 17	 shl	 rdx, 23
  01049	48 0b ca	 or	 rcx, rdx
  0104c	48 33 c1	 xor	 rax, rcx
  0104f	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  01057	48 03 c8	 add	 rcx, rax
  0105a	48 8b c1	 mov	 rax, rcx
  0105d	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  01065	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  0106d	48 33 d1	 xor	 rdx, rcx
  01070	48 8b ca	 mov	 rcx, rdx
  01073	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  0107b	48 23 d1	 and	 rdx, rcx
  0107e	48 8b ca	 mov	 rcx, rdx
  01081	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  01089	48 33 d1	 xor	 rdx, rcx
  0108c	48 8b ca	 mov	 rcx, rdx
  0108f	48 8b 54 24 68	 mov	 rdx, QWORD PTR W$[rsp+72]
  01094	48 03 d0	 add	 rdx, rax
  01097	48 8b c2	 mov	 rax, rdx
  0109a	48 ba be 6f 70
	45 01 5b 83 12	 mov	 rdx, 1334009975649890238 ; 12835b0145706fbeH
  010a4	48 03 ca	 add	 rcx, rdx
  010a7	48 03 c1	 add	 rax, rcx
  010aa	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  010b2	48 8b 84 24 e8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+56]
  010ba	48 c1 e8 1c	 shr	 rax, 28
  010be	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  010c6	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  010ca	48 0b c1	 or	 rax, rcx
  010cd	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  010d5	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  010d9	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  010e1	48 c1 e2 1e	 shl	 rdx, 30
  010e5	48 0b ca	 or	 rcx, rdx
  010e8	48 33 c1	 xor	 rax, rcx
  010eb	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  010f3	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  010f7	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  010ff	48 c1 e2 19	 shl	 rdx, 25
  01103	48 0b ca	 or	 rcx, rdx
  01106	48 33 c1	 xor	 rax, rcx
  01109	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  01111	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  01119	48 0b d1	 or	 rdx, rcx
  0111c	48 8b ca	 mov	 rcx, rdx
  0111f	48 23 8c 24 b8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+8]
  01127	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  0112f	4c 8b 84 24 e8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+56]
  01137	4c 23 c2	 and	 r8, rdx
  0113a	49 8b d0	 mov	 rdx, r8
  0113d	48 0b ca	 or	 rcx, rdx
  01140	48 03 c1	 add	 rax, rcx
  01143	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  0114b	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  01153	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  0115b	48 03 c8	 add	 rcx, rax
  0115e	48 8b c1	 mov	 rax, rcx
  01161	48 89 84 24 c0
	02 00 00	 mov	 QWORD PTR S$[rsp+16], rax
  01169	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  01171	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  01179	48 03 c8	 add	 rcx, rax
  0117c	48 8b c1	 mov	 rax, rcx
  0117f	48 89 84 24 e0
	02 00 00	 mov	 QWORD PTR S$[rsp+48], rax

; 170  :     RND(S[6],S[7],S[0],S[1],S[2],S[3],S[4],S[5],10,Py_ULL(0x243185be4ee4b28c));

  01187	48 8b 84 24 c0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+16]
  0118f	48 c1 e8 0e	 shr	 rax, 14
  01193	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  0119b	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  0119f	48 0b c1	 or	 rax, rcx
  011a2	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  011aa	48 c1 e9 12	 shr	 rcx, 18
  011ae	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  011b6	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  011ba	48 0b ca	 or	 rcx, rdx
  011bd	48 33 c1	 xor	 rax, rcx
  011c0	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  011c8	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  011cc	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  011d4	48 c1 e2 17	 shl	 rdx, 23
  011d8	48 0b ca	 or	 rcx, rdx
  011db	48 33 c1	 xor	 rax, rcx
  011de	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  011e6	48 03 c8	 add	 rcx, rax
  011e9	48 8b c1	 mov	 rax, rcx
  011ec	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  011f4	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  011fc	48 33 d1	 xor	 rdx, rcx
  011ff	48 8b ca	 mov	 rcx, rdx
  01202	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  0120a	48 23 d1	 and	 rdx, rcx
  0120d	48 8b ca	 mov	 rcx, rdx
  01210	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  01218	48 33 d1	 xor	 rdx, rcx
  0121b	48 8b ca	 mov	 rcx, rdx
  0121e	48 8b 54 24 70	 mov	 rdx, QWORD PTR W$[rsp+80]
  01223	48 03 d0	 add	 rdx, rax
  01226	48 8b c2	 mov	 rax, rdx
  01229	48 ba 8c b2 e4
	4e be 85 31 24	 mov	 rdx, 2608012711638119052 ; 243185be4ee4b28cH
  01233	48 03 ca	 add	 rcx, rdx
  01236	48 03 c1	 add	 rax, rcx
  01239	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  01241	48 8b 84 24 e0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+48]
  01249	48 c1 e8 1c	 shr	 rax, 28
  0124d	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  01255	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  01259	48 0b c1	 or	 rax, rcx
  0125c	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  01264	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  01268	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  01270	48 c1 e2 1e	 shl	 rdx, 30
  01274	48 0b ca	 or	 rcx, rdx
  01277	48 33 c1	 xor	 rax, rcx
  0127a	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  01282	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  01286	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  0128e	48 c1 e2 19	 shl	 rdx, 25
  01292	48 0b ca	 or	 rcx, rdx
  01295	48 33 c1	 xor	 rax, rcx
  01298	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  012a0	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  012a8	48 0b d1	 or	 rdx, rcx
  012ab	48 8b ca	 mov	 rcx, rdx
  012ae	48 23 8c 24 b0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp]
  012b6	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  012be	4c 8b 84 24 e0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+48]
  012c6	4c 23 c2	 and	 r8, rdx
  012c9	49 8b d0	 mov	 rdx, r8
  012cc	48 0b ca	 or	 rcx, rdx
  012cf	48 03 c1	 add	 rax, rcx
  012d2	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  012da	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  012e2	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  012ea	48 03 c8	 add	 rcx, rax
  012ed	48 8b c1	 mov	 rax, rcx
  012f0	48 89 84 24 b8
	02 00 00	 mov	 QWORD PTR S$[rsp+8], rax
  012f8	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  01300	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  01308	48 03 c8	 add	 rcx, rax
  0130b	48 8b c1	 mov	 rax, rcx
  0130e	48 89 84 24 d8
	02 00 00	 mov	 QWORD PTR S$[rsp+40], rax

; 171  :     RND(S[5],S[6],S[7],S[0],S[1],S[2],S[3],S[4],11,Py_ULL(0x550c7dc3d5ffb4e2));

  01316	48 8b 84 24 b8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+8]
  0131e	48 c1 e8 0e	 shr	 rax, 14
  01322	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  0132a	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  0132e	48 0b c1	 or	 rax, rcx
  01331	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  01339	48 c1 e9 12	 shr	 rcx, 18
  0133d	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  01345	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  01349	48 0b ca	 or	 rcx, rdx
  0134c	48 33 c1	 xor	 rax, rcx
  0134f	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  01357	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  0135b	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  01363	48 c1 e2 17	 shl	 rdx, 23
  01367	48 0b ca	 or	 rcx, rdx
  0136a	48 33 c1	 xor	 rax, rcx
  0136d	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  01375	48 03 c8	 add	 rcx, rax
  01378	48 8b c1	 mov	 rax, rcx
  0137b	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  01383	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  0138b	48 33 d1	 xor	 rdx, rcx
  0138e	48 8b ca	 mov	 rcx, rdx
  01391	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  01399	48 23 d1	 and	 rdx, rcx
  0139c	48 8b ca	 mov	 rcx, rdx
  0139f	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  013a7	48 33 d1	 xor	 rdx, rcx
  013aa	48 8b ca	 mov	 rcx, rdx
  013ad	48 8b 54 24 78	 mov	 rdx, QWORD PTR W$[rsp+88]
  013b2	48 03 d0	 add	 rdx, rax
  013b5	48 8b c2	 mov	 rax, rdx
  013b8	48 ba e2 b4 ff
	d5 c3 7d 0c 55	 mov	 rdx, 6128411473006802146 ; 550c7dc3d5ffb4e2H
  013c2	48 03 ca	 add	 rcx, rdx
  013c5	48 03 c1	 add	 rax, rcx
  013c8	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  013d0	48 8b 84 24 d8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+40]
  013d8	48 c1 e8 1c	 shr	 rax, 28
  013dc	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  013e4	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  013e8	48 0b c1	 or	 rax, rcx
  013eb	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  013f3	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  013f7	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  013ff	48 c1 e2 1e	 shl	 rdx, 30
  01403	48 0b ca	 or	 rcx, rdx
  01406	48 33 c1	 xor	 rax, rcx
  01409	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  01411	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  01415	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  0141d	48 c1 e2 19	 shl	 rdx, 25
  01421	48 0b ca	 or	 rcx, rdx
  01424	48 33 c1	 xor	 rax, rcx
  01427	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  0142f	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  01437	48 0b d1	 or	 rdx, rcx
  0143a	48 8b ca	 mov	 rcx, rdx
  0143d	48 23 8c 24 e8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+56]
  01445	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  0144d	4c 8b 84 24 d8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+40]
  01455	4c 23 c2	 and	 r8, rdx
  01458	49 8b d0	 mov	 rdx, r8
  0145b	48 0b ca	 or	 rcx, rdx
  0145e	48 03 c1	 add	 rax, rcx
  01461	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  01469	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  01471	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  01479	48 03 c8	 add	 rcx, rax
  0147c	48 8b c1	 mov	 rax, rcx
  0147f	48 89 84 24 b0
	02 00 00	 mov	 QWORD PTR S$[rsp], rax
  01487	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  0148f	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  01497	48 03 c8	 add	 rcx, rax
  0149a	48 8b c1	 mov	 rax, rcx
  0149d	48 89 84 24 d0
	02 00 00	 mov	 QWORD PTR S$[rsp+32], rax

; 172  :     RND(S[4],S[5],S[6],S[7],S[0],S[1],S[2],S[3],12,Py_ULL(0x72be5d74f27b896f));

  014a5	48 8b 84 24 b0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp]
  014ad	48 c1 e8 0e	 shr	 rax, 14
  014b1	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  014b9	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  014bd	48 0b c1	 or	 rax, rcx
  014c0	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  014c8	48 c1 e9 12	 shr	 rcx, 18
  014cc	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  014d4	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  014d8	48 0b ca	 or	 rcx, rdx
  014db	48 33 c1	 xor	 rax, rcx
  014de	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  014e6	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  014ea	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  014f2	48 c1 e2 17	 shl	 rdx, 23
  014f6	48 0b ca	 or	 rcx, rdx
  014f9	48 33 c1	 xor	 rax, rcx
  014fc	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  01504	48 03 c8	 add	 rcx, rax
  01507	48 8b c1	 mov	 rax, rcx
  0150a	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  01512	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  0151a	48 33 d1	 xor	 rdx, rcx
  0151d	48 8b ca	 mov	 rcx, rdx
  01520	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  01528	48 23 d1	 and	 rdx, rcx
  0152b	48 8b ca	 mov	 rcx, rdx
  0152e	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  01536	48 33 d1	 xor	 rdx, rcx
  01539	48 8b ca	 mov	 rcx, rdx
  0153c	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR W$[rsp+96]
  01544	48 03 d0	 add	 rdx, rax
  01547	48 8b c2	 mov	 rax, rdx
  0154a	48 ba 6f 89 7b
	f2 74 5d be 72	 mov	 rdx, 8268148722764581231 ; 72be5d74f27b896fH
  01554	48 03 ca	 add	 rcx, rdx
  01557	48 03 c1	 add	 rax, rcx
  0155a	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  01562	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+32]
  0156a	48 c1 e8 1c	 shr	 rax, 28
  0156e	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  01576	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  0157a	48 0b c1	 or	 rax, rcx
  0157d	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  01585	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  01589	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  01591	48 c1 e2 1e	 shl	 rdx, 30
  01595	48 0b ca	 or	 rcx, rdx
  01598	48 33 c1	 xor	 rax, rcx
  0159b	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  015a3	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  015a7	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  015af	48 c1 e2 19	 shl	 rdx, 25
  015b3	48 0b ca	 or	 rcx, rdx
  015b6	48 33 c1	 xor	 rax, rcx
  015b9	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  015c1	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  015c9	48 0b d1	 or	 rdx, rcx
  015cc	48 8b ca	 mov	 rcx, rdx
  015cf	48 23 8c 24 e0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+48]
  015d7	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  015df	4c 8b 84 24 d0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+32]
  015e7	4c 23 c2	 and	 r8, rdx
  015ea	49 8b d0	 mov	 rdx, r8
  015ed	48 0b ca	 or	 rcx, rdx
  015f0	48 03 c1	 add	 rax, rcx
  015f3	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  015fb	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  01603	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  0160b	48 03 c8	 add	 rcx, rax
  0160e	48 8b c1	 mov	 rax, rcx
  01611	48 89 84 24 e8
	02 00 00	 mov	 QWORD PTR S$[rsp+56], rax
  01619	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  01621	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  01629	48 03 c8	 add	 rcx, rax
  0162c	48 8b c1	 mov	 rax, rcx
  0162f	48 89 84 24 c8
	02 00 00	 mov	 QWORD PTR S$[rsp+24], rax

; 173  :     RND(S[3],S[4],S[5],S[6],S[7],S[0],S[1],S[2],13,Py_ULL(0x80deb1fe3b1696b1));

  01637	48 8b 84 24 e8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+56]
  0163f	48 c1 e8 0e	 shr	 rax, 14
  01643	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  0164b	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  0164f	48 0b c1	 or	 rax, rcx
  01652	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  0165a	48 c1 e9 12	 shr	 rcx, 18
  0165e	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  01666	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  0166a	48 0b ca	 or	 rcx, rdx
  0166d	48 33 c1	 xor	 rax, rcx
  01670	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  01678	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  0167c	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  01684	48 c1 e2 17	 shl	 rdx, 23
  01688	48 0b ca	 or	 rcx, rdx
  0168b	48 33 c1	 xor	 rax, rcx
  0168e	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  01696	48 03 c8	 add	 rcx, rax
  01699	48 8b c1	 mov	 rax, rcx
  0169c	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  016a4	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  016ac	48 33 d1	 xor	 rdx, rcx
  016af	48 8b ca	 mov	 rcx, rdx
  016b2	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  016ba	48 23 d1	 and	 rdx, rcx
  016bd	48 8b ca	 mov	 rcx, rdx
  016c0	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  016c8	48 33 d1	 xor	 rdx, rcx
  016cb	48 8b ca	 mov	 rcx, rdx
  016ce	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR W$[rsp+104]
  016d6	48 03 d0	 add	 rdx, rax
  016d9	48 8b c2	 mov	 rax, rdx
  016dc	48 ba b1 96 16
	3b fe b1 de 80	 mov	 rdx, -9160688886553864527 ; 80deb1fe3b1696b1H
  016e6	48 03 ca	 add	 rcx, rdx
  016e9	48 03 c1	 add	 rax, rcx
  016ec	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  016f4	48 8b 84 24 c8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+24]
  016fc	48 c1 e8 1c	 shr	 rax, 28
  01700	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  01708	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  0170c	48 0b c1	 or	 rax, rcx
  0170f	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  01717	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  0171b	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  01723	48 c1 e2 1e	 shl	 rdx, 30
  01727	48 0b ca	 or	 rcx, rdx
  0172a	48 33 c1	 xor	 rax, rcx
  0172d	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  01735	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  01739	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  01741	48 c1 e2 19	 shl	 rdx, 25
  01745	48 0b ca	 or	 rcx, rdx
  01748	48 33 c1	 xor	 rax, rcx
  0174b	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  01753	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  0175b	48 0b d1	 or	 rdx, rcx
  0175e	48 8b ca	 mov	 rcx, rdx
  01761	48 23 8c 24 d8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+40]
  01769	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  01771	4c 8b 84 24 c8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+24]
  01779	4c 23 c2	 and	 r8, rdx
  0177c	49 8b d0	 mov	 rdx, r8
  0177f	48 0b ca	 or	 rcx, rdx
  01782	48 03 c1	 add	 rax, rcx
  01785	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  0178d	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  01795	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  0179d	48 03 c8	 add	 rcx, rax
  017a0	48 8b c1	 mov	 rax, rcx
  017a3	48 89 84 24 e0
	02 00 00	 mov	 QWORD PTR S$[rsp+48], rax
  017ab	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  017b3	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  017bb	48 03 c8	 add	 rcx, rax
  017be	48 8b c1	 mov	 rax, rcx
  017c1	48 89 84 24 c0
	02 00 00	 mov	 QWORD PTR S$[rsp+16], rax

; 174  :     RND(S[2],S[3],S[4],S[5],S[6],S[7],S[0],S[1],14,Py_ULL(0x9bdc06a725c71235));

  017c9	48 8b 84 24 e0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+48]
  017d1	48 c1 e8 0e	 shr	 rax, 14
  017d5	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  017dd	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  017e1	48 0b c1	 or	 rax, rcx
  017e4	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  017ec	48 c1 e9 12	 shr	 rcx, 18
  017f0	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  017f8	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  017fc	48 0b ca	 or	 rcx, rdx
  017ff	48 33 c1	 xor	 rax, rcx
  01802	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  0180a	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  0180e	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  01816	48 c1 e2 17	 shl	 rdx, 23
  0181a	48 0b ca	 or	 rcx, rdx
  0181d	48 33 c1	 xor	 rax, rcx
  01820	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  01828	48 03 c8	 add	 rcx, rax
  0182b	48 8b c1	 mov	 rax, rcx
  0182e	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  01836	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  0183e	48 33 d1	 xor	 rdx, rcx
  01841	48 8b ca	 mov	 rcx, rdx
  01844	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  0184c	48 23 d1	 and	 rdx, rcx
  0184f	48 8b ca	 mov	 rcx, rdx
  01852	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  0185a	48 33 d1	 xor	 rdx, rcx
  0185d	48 8b ca	 mov	 rcx, rdx
  01860	48 8b 94 24 90
	00 00 00	 mov	 rdx, QWORD PTR W$[rsp+112]
  01868	48 03 d0	 add	 rdx, rax
  0186b	48 8b c2	 mov	 rax, rdx
  0186e	48 ba 35 12 c7
	25 a7 06 dc 9b	 mov	 rdx, -7215885187991268811 ; 9bdc06a725c71235H
  01878	48 03 ca	 add	 rcx, rdx
  0187b	48 03 c1	 add	 rax, rcx
  0187e	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  01886	48 8b 84 24 c0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+16]
  0188e	48 c1 e8 1c	 shr	 rax, 28
  01892	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  0189a	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  0189e	48 0b c1	 or	 rax, rcx
  018a1	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  018a9	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  018ad	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  018b5	48 c1 e2 1e	 shl	 rdx, 30
  018b9	48 0b ca	 or	 rcx, rdx
  018bc	48 33 c1	 xor	 rax, rcx
  018bf	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  018c7	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  018cb	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  018d3	48 c1 e2 19	 shl	 rdx, 25
  018d7	48 0b ca	 or	 rcx, rdx
  018da	48 33 c1	 xor	 rax, rcx
  018dd	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  018e5	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  018ed	48 0b d1	 or	 rdx, rcx
  018f0	48 8b ca	 mov	 rcx, rdx
  018f3	48 23 8c 24 d0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+32]
  018fb	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  01903	4c 8b 84 24 c0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+16]
  0190b	4c 23 c2	 and	 r8, rdx
  0190e	49 8b d0	 mov	 rdx, r8
  01911	48 0b ca	 or	 rcx, rdx
  01914	48 03 c1	 add	 rax, rcx
  01917	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  0191f	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  01927	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  0192f	48 03 c8	 add	 rcx, rax
  01932	48 8b c1	 mov	 rax, rcx
  01935	48 89 84 24 d8
	02 00 00	 mov	 QWORD PTR S$[rsp+40], rax
  0193d	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  01945	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  0194d	48 03 c8	 add	 rcx, rax
  01950	48 8b c1	 mov	 rax, rcx
  01953	48 89 84 24 b8
	02 00 00	 mov	 QWORD PTR S$[rsp+8], rax

; 175  :     RND(S[1],S[2],S[3],S[4],S[5],S[6],S[7],S[0],15,Py_ULL(0xc19bf174cf692694));

  0195b	48 8b 84 24 d8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+40]
  01963	48 c1 e8 0e	 shr	 rax, 14
  01967	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  0196f	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  01973	48 0b c1	 or	 rax, rcx
  01976	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  0197e	48 c1 e9 12	 shr	 rcx, 18
  01982	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  0198a	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  0198e	48 0b ca	 or	 rcx, rdx
  01991	48 33 c1	 xor	 rax, rcx
  01994	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  0199c	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  019a0	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  019a8	48 c1 e2 17	 shl	 rdx, 23
  019ac	48 0b ca	 or	 rcx, rdx
  019af	48 33 c1	 xor	 rax, rcx
  019b2	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  019ba	48 03 c8	 add	 rcx, rax
  019bd	48 8b c1	 mov	 rax, rcx
  019c0	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  019c8	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  019d0	48 33 d1	 xor	 rdx, rcx
  019d3	48 8b ca	 mov	 rcx, rdx
  019d6	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  019de	48 23 d1	 and	 rdx, rcx
  019e1	48 8b ca	 mov	 rcx, rdx
  019e4	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  019ec	48 33 d1	 xor	 rdx, rcx
  019ef	48 8b ca	 mov	 rcx, rdx
  019f2	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR W$[rsp+120]
  019fa	48 03 d0	 add	 rdx, rax
  019fd	48 8b c2	 mov	 rax, rdx
  01a00	48 ba 94 26 69
	cf 74 f1 9b c1	 mov	 rdx, -4495734319001033068 ; c19bf174cf692694H
  01a0a	48 03 ca	 add	 rcx, rdx
  01a0d	48 03 c1	 add	 rax, rcx
  01a10	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  01a18	48 8b 84 24 b8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+8]
  01a20	48 c1 e8 1c	 shr	 rax, 28
  01a24	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  01a2c	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  01a30	48 0b c1	 or	 rax, rcx
  01a33	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  01a3b	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  01a3f	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  01a47	48 c1 e2 1e	 shl	 rdx, 30
  01a4b	48 0b ca	 or	 rcx, rdx
  01a4e	48 33 c1	 xor	 rax, rcx
  01a51	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  01a59	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  01a5d	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  01a65	48 c1 e2 19	 shl	 rdx, 25
  01a69	48 0b ca	 or	 rcx, rdx
  01a6c	48 33 c1	 xor	 rax, rcx
  01a6f	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  01a77	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  01a7f	48 0b d1	 or	 rdx, rcx
  01a82	48 8b ca	 mov	 rcx, rdx
  01a85	48 23 8c 24 c8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+24]
  01a8d	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  01a95	4c 8b 84 24 b8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+8]
  01a9d	4c 23 c2	 and	 r8, rdx
  01aa0	49 8b d0	 mov	 rdx, r8
  01aa3	48 0b ca	 or	 rcx, rdx
  01aa6	48 03 c1	 add	 rax, rcx
  01aa9	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  01ab1	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  01ab9	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  01ac1	48 03 c8	 add	 rcx, rax
  01ac4	48 8b c1	 mov	 rax, rcx
  01ac7	48 89 84 24 d0
	02 00 00	 mov	 QWORD PTR S$[rsp+32], rax
  01acf	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  01ad7	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  01adf	48 03 c8	 add	 rcx, rax
  01ae2	48 8b c1	 mov	 rax, rcx
  01ae5	48 89 84 24 b0
	02 00 00	 mov	 QWORD PTR S$[rsp], rax

; 176  :     RND(S[0],S[1],S[2],S[3],S[4],S[5],S[6],S[7],16,Py_ULL(0xe49b69c19ef14ad2));

  01aed	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+32]
  01af5	48 c1 e8 0e	 shr	 rax, 14
  01af9	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  01b01	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  01b05	48 0b c1	 or	 rax, rcx
  01b08	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  01b10	48 c1 e9 12	 shr	 rcx, 18
  01b14	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  01b1c	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  01b20	48 0b ca	 or	 rcx, rdx
  01b23	48 33 c1	 xor	 rax, rcx
  01b26	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  01b2e	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  01b32	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  01b3a	48 c1 e2 17	 shl	 rdx, 23
  01b3e	48 0b ca	 or	 rcx, rdx
  01b41	48 33 c1	 xor	 rax, rcx
  01b44	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  01b4c	48 03 c8	 add	 rcx, rax
  01b4f	48 8b c1	 mov	 rax, rcx
  01b52	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  01b5a	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  01b62	48 33 d1	 xor	 rdx, rcx
  01b65	48 8b ca	 mov	 rcx, rdx
  01b68	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  01b70	48 23 d1	 and	 rdx, rcx
  01b73	48 8b ca	 mov	 rcx, rdx
  01b76	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  01b7e	48 33 d1	 xor	 rdx, rcx
  01b81	48 8b ca	 mov	 rcx, rdx
  01b84	48 8b 94 24 a0
	00 00 00	 mov	 rdx, QWORD PTR W$[rsp+128]
  01b8c	48 03 d0	 add	 rdx, rax
  01b8f	48 8b c2	 mov	 rax, rdx
  01b92	48 ba d2 4a f1
	9e c1 69 9b e4	 mov	 rdx, -1973867731355612462 ; e49b69c19ef14ad2H
  01b9c	48 03 ca	 add	 rcx, rdx
  01b9f	48 03 c1	 add	 rax, rcx
  01ba2	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  01baa	48 8b 84 24 b0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp]
  01bb2	48 c1 e8 1c	 shr	 rax, 28
  01bb6	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  01bbe	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  01bc2	48 0b c1	 or	 rax, rcx
  01bc5	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  01bcd	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  01bd1	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  01bd9	48 c1 e2 1e	 shl	 rdx, 30
  01bdd	48 0b ca	 or	 rcx, rdx
  01be0	48 33 c1	 xor	 rax, rcx
  01be3	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  01beb	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  01bef	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  01bf7	48 c1 e2 19	 shl	 rdx, 25
  01bfb	48 0b ca	 or	 rcx, rdx
  01bfe	48 33 c1	 xor	 rax, rcx
  01c01	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  01c09	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  01c11	48 0b d1	 or	 rdx, rcx
  01c14	48 8b ca	 mov	 rcx, rdx
  01c17	48 23 8c 24 c0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+16]
  01c1f	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  01c27	4c 8b 84 24 b0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp]
  01c2f	4c 23 c2	 and	 r8, rdx
  01c32	49 8b d0	 mov	 rdx, r8
  01c35	48 0b ca	 or	 rcx, rdx
  01c38	48 03 c1	 add	 rax, rcx
  01c3b	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  01c43	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  01c4b	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  01c53	48 03 c8	 add	 rcx, rax
  01c56	48 8b c1	 mov	 rax, rcx
  01c59	48 89 84 24 c8
	02 00 00	 mov	 QWORD PTR S$[rsp+24], rax
  01c61	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  01c69	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  01c71	48 03 c8	 add	 rcx, rax
  01c74	48 8b c1	 mov	 rax, rcx
  01c77	48 89 84 24 e8
	02 00 00	 mov	 QWORD PTR S$[rsp+56], rax

; 177  :     RND(S[7],S[0],S[1],S[2],S[3],S[4],S[5],S[6],17,Py_ULL(0xefbe4786384f25e3));

  01c7f	48 8b 84 24 c8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+24]
  01c87	48 c1 e8 0e	 shr	 rax, 14
  01c8b	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  01c93	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  01c97	48 0b c1	 or	 rax, rcx
  01c9a	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  01ca2	48 c1 e9 12	 shr	 rcx, 18
  01ca6	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  01cae	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  01cb2	48 0b ca	 or	 rcx, rdx
  01cb5	48 33 c1	 xor	 rax, rcx
  01cb8	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  01cc0	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  01cc4	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  01ccc	48 c1 e2 17	 shl	 rdx, 23
  01cd0	48 0b ca	 or	 rcx, rdx
  01cd3	48 33 c1	 xor	 rax, rcx
  01cd6	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  01cde	48 03 c8	 add	 rcx, rax
  01ce1	48 8b c1	 mov	 rax, rcx
  01ce4	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  01cec	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  01cf4	48 33 d1	 xor	 rdx, rcx
  01cf7	48 8b ca	 mov	 rcx, rdx
  01cfa	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  01d02	48 23 d1	 and	 rdx, rcx
  01d05	48 8b ca	 mov	 rcx, rdx
  01d08	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  01d10	48 33 d1	 xor	 rdx, rcx
  01d13	48 8b ca	 mov	 rcx, rdx
  01d16	48 8b 94 24 a8
	00 00 00	 mov	 rdx, QWORD PTR W$[rsp+136]
  01d1e	48 03 d0	 add	 rdx, rax
  01d21	48 8b c2	 mov	 rax, rdx
  01d24	48 ba e3 25 4f
	38 86 47 be ef	 mov	 rdx, -1171420211273849373 ; efbe4786384f25e3H
  01d2e	48 03 ca	 add	 rcx, rdx
  01d31	48 03 c1	 add	 rax, rcx
  01d34	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  01d3c	48 8b 84 24 e8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+56]
  01d44	48 c1 e8 1c	 shr	 rax, 28
  01d48	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  01d50	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  01d54	48 0b c1	 or	 rax, rcx
  01d57	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  01d5f	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  01d63	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  01d6b	48 c1 e2 1e	 shl	 rdx, 30
  01d6f	48 0b ca	 or	 rcx, rdx
  01d72	48 33 c1	 xor	 rax, rcx
  01d75	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  01d7d	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  01d81	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  01d89	48 c1 e2 19	 shl	 rdx, 25
  01d8d	48 0b ca	 or	 rcx, rdx
  01d90	48 33 c1	 xor	 rax, rcx
  01d93	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  01d9b	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  01da3	48 0b d1	 or	 rdx, rcx
  01da6	48 8b ca	 mov	 rcx, rdx
  01da9	48 23 8c 24 b8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+8]
  01db1	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  01db9	4c 8b 84 24 e8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+56]
  01dc1	4c 23 c2	 and	 r8, rdx
  01dc4	49 8b d0	 mov	 rdx, r8
  01dc7	48 0b ca	 or	 rcx, rdx
  01dca	48 03 c1	 add	 rax, rcx
  01dcd	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  01dd5	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  01ddd	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  01de5	48 03 c8	 add	 rcx, rax
  01de8	48 8b c1	 mov	 rax, rcx
  01deb	48 89 84 24 c0
	02 00 00	 mov	 QWORD PTR S$[rsp+16], rax
  01df3	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  01dfb	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  01e03	48 03 c8	 add	 rcx, rax
  01e06	48 8b c1	 mov	 rax, rcx
  01e09	48 89 84 24 e0
	02 00 00	 mov	 QWORD PTR S$[rsp+48], rax

; 178  :     RND(S[6],S[7],S[0],S[1],S[2],S[3],S[4],S[5],18,Py_ULL(0x0fc19dc68b8cd5b5));

  01e11	48 8b 84 24 c0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+16]
  01e19	48 c1 e8 0e	 shr	 rax, 14
  01e1d	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  01e25	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  01e29	48 0b c1	 or	 rax, rcx
  01e2c	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  01e34	48 c1 e9 12	 shr	 rcx, 18
  01e38	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  01e40	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  01e44	48 0b ca	 or	 rcx, rdx
  01e47	48 33 c1	 xor	 rax, rcx
  01e4a	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  01e52	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  01e56	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  01e5e	48 c1 e2 17	 shl	 rdx, 23
  01e62	48 0b ca	 or	 rcx, rdx
  01e65	48 33 c1	 xor	 rax, rcx
  01e68	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  01e70	48 03 c8	 add	 rcx, rax
  01e73	48 8b c1	 mov	 rax, rcx
  01e76	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  01e7e	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  01e86	48 33 d1	 xor	 rdx, rcx
  01e89	48 8b ca	 mov	 rcx, rdx
  01e8c	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  01e94	48 23 d1	 and	 rdx, rcx
  01e97	48 8b ca	 mov	 rcx, rdx
  01e9a	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  01ea2	48 33 d1	 xor	 rdx, rcx
  01ea5	48 8b ca	 mov	 rcx, rdx
  01ea8	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR W$[rsp+144]
  01eb0	48 03 d0	 add	 rdx, rax
  01eb3	48 8b c2	 mov	 rax, rdx
  01eb6	48 ba b5 d5 8c
	8b c6 9d c1 0f	 mov	 rdx, 1135362057144423861 ; 0fc19dc68b8cd5b5H
  01ec0	48 03 ca	 add	 rcx, rdx
  01ec3	48 03 c1	 add	 rax, rcx
  01ec6	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  01ece	48 8b 84 24 e0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+48]
  01ed6	48 c1 e8 1c	 shr	 rax, 28
  01eda	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  01ee2	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  01ee6	48 0b c1	 or	 rax, rcx
  01ee9	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  01ef1	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  01ef5	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  01efd	48 c1 e2 1e	 shl	 rdx, 30
  01f01	48 0b ca	 or	 rcx, rdx
  01f04	48 33 c1	 xor	 rax, rcx
  01f07	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  01f0f	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  01f13	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  01f1b	48 c1 e2 19	 shl	 rdx, 25
  01f1f	48 0b ca	 or	 rcx, rdx
  01f22	48 33 c1	 xor	 rax, rcx
  01f25	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  01f2d	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  01f35	48 0b d1	 or	 rdx, rcx
  01f38	48 8b ca	 mov	 rcx, rdx
  01f3b	48 23 8c 24 b0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp]
  01f43	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  01f4b	4c 8b 84 24 e0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+48]
  01f53	4c 23 c2	 and	 r8, rdx
  01f56	49 8b d0	 mov	 rdx, r8
  01f59	48 0b ca	 or	 rcx, rdx
  01f5c	48 03 c1	 add	 rax, rcx
  01f5f	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  01f67	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  01f6f	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  01f77	48 03 c8	 add	 rcx, rax
  01f7a	48 8b c1	 mov	 rax, rcx
  01f7d	48 89 84 24 b8
	02 00 00	 mov	 QWORD PTR S$[rsp+8], rax
  01f85	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  01f8d	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  01f95	48 03 c8	 add	 rcx, rax
  01f98	48 8b c1	 mov	 rax, rcx
  01f9b	48 89 84 24 d8
	02 00 00	 mov	 QWORD PTR S$[rsp+40], rax

; 179  :     RND(S[5],S[6],S[7],S[0],S[1],S[2],S[3],S[4],19,Py_ULL(0x240ca1cc77ac9c65));

  01fa3	48 8b 84 24 b8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+8]
  01fab	48 c1 e8 0e	 shr	 rax, 14
  01faf	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  01fb7	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  01fbb	48 0b c1	 or	 rax, rcx
  01fbe	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  01fc6	48 c1 e9 12	 shr	 rcx, 18
  01fca	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  01fd2	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  01fd6	48 0b ca	 or	 rcx, rdx
  01fd9	48 33 c1	 xor	 rax, rcx
  01fdc	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  01fe4	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  01fe8	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  01ff0	48 c1 e2 17	 shl	 rdx, 23
  01ff4	48 0b ca	 or	 rcx, rdx
  01ff7	48 33 c1	 xor	 rax, rcx
  01ffa	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  02002	48 03 c8	 add	 rcx, rax
  02005	48 8b c1	 mov	 rax, rcx
  02008	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  02010	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  02018	48 33 d1	 xor	 rdx, rcx
  0201b	48 8b ca	 mov	 rcx, rdx
  0201e	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  02026	48 23 d1	 and	 rdx, rcx
  02029	48 8b ca	 mov	 rcx, rdx
  0202c	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  02034	48 33 d1	 xor	 rdx, rcx
  02037	48 8b ca	 mov	 rcx, rdx
  0203a	48 8b 94 24 b8
	00 00 00	 mov	 rdx, QWORD PTR W$[rsp+152]
  02042	48 03 d0	 add	 rdx, rax
  02045	48 8b c2	 mov	 rax, rdx
  02048	48 ba 65 9c ac
	77 cc a1 0c 24	 mov	 rdx, 2597628984639134821 ; 240ca1cc77ac9c65H
  02052	48 03 ca	 add	 rcx, rdx
  02055	48 03 c1	 add	 rax, rcx
  02058	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  02060	48 8b 84 24 d8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+40]
  02068	48 c1 e8 1c	 shr	 rax, 28
  0206c	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  02074	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  02078	48 0b c1	 or	 rax, rcx
  0207b	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  02083	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  02087	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  0208f	48 c1 e2 1e	 shl	 rdx, 30
  02093	48 0b ca	 or	 rcx, rdx
  02096	48 33 c1	 xor	 rax, rcx
  02099	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  020a1	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  020a5	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  020ad	48 c1 e2 19	 shl	 rdx, 25
  020b1	48 0b ca	 or	 rcx, rdx
  020b4	48 33 c1	 xor	 rax, rcx
  020b7	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  020bf	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  020c7	48 0b d1	 or	 rdx, rcx
  020ca	48 8b ca	 mov	 rcx, rdx
  020cd	48 23 8c 24 e8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+56]
  020d5	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  020dd	4c 8b 84 24 d8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+40]
  020e5	4c 23 c2	 and	 r8, rdx
  020e8	49 8b d0	 mov	 rdx, r8
  020eb	48 0b ca	 or	 rcx, rdx
  020ee	48 03 c1	 add	 rax, rcx
  020f1	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  020f9	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  02101	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  02109	48 03 c8	 add	 rcx, rax
  0210c	48 8b c1	 mov	 rax, rcx
  0210f	48 89 84 24 b0
	02 00 00	 mov	 QWORD PTR S$[rsp], rax
  02117	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  0211f	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  02127	48 03 c8	 add	 rcx, rax
  0212a	48 8b c1	 mov	 rax, rcx
  0212d	48 89 84 24 d0
	02 00 00	 mov	 QWORD PTR S$[rsp+32], rax

; 180  :     RND(S[4],S[5],S[6],S[7],S[0],S[1],S[2],S[3],20,Py_ULL(0x2de92c6f592b0275));

  02135	48 8b 84 24 b0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp]
  0213d	48 c1 e8 0e	 shr	 rax, 14
  02141	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  02149	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  0214d	48 0b c1	 or	 rax, rcx
  02150	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  02158	48 c1 e9 12	 shr	 rcx, 18
  0215c	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  02164	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  02168	48 0b ca	 or	 rcx, rdx
  0216b	48 33 c1	 xor	 rax, rcx
  0216e	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  02176	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  0217a	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  02182	48 c1 e2 17	 shl	 rdx, 23
  02186	48 0b ca	 or	 rcx, rdx
  02189	48 33 c1	 xor	 rax, rcx
  0218c	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  02194	48 03 c8	 add	 rcx, rax
  02197	48 8b c1	 mov	 rax, rcx
  0219a	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  021a2	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  021aa	48 33 d1	 xor	 rdx, rcx
  021ad	48 8b ca	 mov	 rcx, rdx
  021b0	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  021b8	48 23 d1	 and	 rdx, rcx
  021bb	48 8b ca	 mov	 rcx, rdx
  021be	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  021c6	48 33 d1	 xor	 rdx, rcx
  021c9	48 8b ca	 mov	 rcx, rdx
  021cc	48 8b 94 24 c0
	00 00 00	 mov	 rdx, QWORD PTR W$[rsp+160]
  021d4	48 03 d0	 add	 rdx, rax
  021d7	48 8b c2	 mov	 rax, rdx
  021da	48 ba 75 02 2b
	59 6f 2c e9 2d	 mov	 rdx, 3308224258029322869 ; 2de92c6f592b0275H
  021e4	48 03 ca	 add	 rcx, rdx
  021e7	48 03 c1	 add	 rax, rcx
  021ea	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  021f2	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+32]
  021fa	48 c1 e8 1c	 shr	 rax, 28
  021fe	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  02206	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  0220a	48 0b c1	 or	 rax, rcx
  0220d	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  02215	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  02219	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  02221	48 c1 e2 1e	 shl	 rdx, 30
  02225	48 0b ca	 or	 rcx, rdx
  02228	48 33 c1	 xor	 rax, rcx
  0222b	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  02233	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  02237	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  0223f	48 c1 e2 19	 shl	 rdx, 25
  02243	48 0b ca	 or	 rcx, rdx
  02246	48 33 c1	 xor	 rax, rcx
  02249	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  02251	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  02259	48 0b d1	 or	 rdx, rcx
  0225c	48 8b ca	 mov	 rcx, rdx
  0225f	48 23 8c 24 e0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+48]
  02267	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  0226f	4c 8b 84 24 d0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+32]
  02277	4c 23 c2	 and	 r8, rdx
  0227a	49 8b d0	 mov	 rdx, r8
  0227d	48 0b ca	 or	 rcx, rdx
  02280	48 03 c1	 add	 rax, rcx
  02283	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  0228b	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  02293	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  0229b	48 03 c8	 add	 rcx, rax
  0229e	48 8b c1	 mov	 rax, rcx
  022a1	48 89 84 24 e8
	02 00 00	 mov	 QWORD PTR S$[rsp+56], rax
  022a9	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  022b1	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  022b9	48 03 c8	 add	 rcx, rax
  022bc	48 8b c1	 mov	 rax, rcx
  022bf	48 89 84 24 c8
	02 00 00	 mov	 QWORD PTR S$[rsp+24], rax

; 181  :     RND(S[3],S[4],S[5],S[6],S[7],S[0],S[1],S[2],21,Py_ULL(0x4a7484aa6ea6e483));

  022c7	48 8b 84 24 e8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+56]
  022cf	48 c1 e8 0e	 shr	 rax, 14
  022d3	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  022db	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  022df	48 0b c1	 or	 rax, rcx
  022e2	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  022ea	48 c1 e9 12	 shr	 rcx, 18
  022ee	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  022f6	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  022fa	48 0b ca	 or	 rcx, rdx
  022fd	48 33 c1	 xor	 rax, rcx
  02300	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  02308	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  0230c	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  02314	48 c1 e2 17	 shl	 rdx, 23
  02318	48 0b ca	 or	 rcx, rdx
  0231b	48 33 c1	 xor	 rax, rcx
  0231e	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  02326	48 03 c8	 add	 rcx, rax
  02329	48 8b c1	 mov	 rax, rcx
  0232c	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  02334	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  0233c	48 33 d1	 xor	 rdx, rcx
  0233f	48 8b ca	 mov	 rcx, rdx
  02342	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  0234a	48 23 d1	 and	 rdx, rcx
  0234d	48 8b ca	 mov	 rcx, rdx
  02350	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  02358	48 33 d1	 xor	 rdx, rcx
  0235b	48 8b ca	 mov	 rcx, rdx
  0235e	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR W$[rsp+168]
  02366	48 03 d0	 add	 rdx, rax
  02369	48 8b c2	 mov	 rax, rdx
  0236c	48 ba 83 e4 a6
	6e aa 84 74 4a	 mov	 rdx, 5365058923640841347 ; 4a7484aa6ea6e483H
  02376	48 03 ca	 add	 rcx, rdx
  02379	48 03 c1	 add	 rax, rcx
  0237c	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  02384	48 8b 84 24 c8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+24]
  0238c	48 c1 e8 1c	 shr	 rax, 28
  02390	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  02398	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  0239c	48 0b c1	 or	 rax, rcx
  0239f	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  023a7	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  023ab	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  023b3	48 c1 e2 1e	 shl	 rdx, 30
  023b7	48 0b ca	 or	 rcx, rdx
  023ba	48 33 c1	 xor	 rax, rcx
  023bd	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  023c5	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  023c9	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  023d1	48 c1 e2 19	 shl	 rdx, 25
  023d5	48 0b ca	 or	 rcx, rdx
  023d8	48 33 c1	 xor	 rax, rcx
  023db	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  023e3	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  023eb	48 0b d1	 or	 rdx, rcx
  023ee	48 8b ca	 mov	 rcx, rdx
  023f1	48 23 8c 24 d8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+40]
  023f9	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  02401	4c 8b 84 24 c8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+24]
  02409	4c 23 c2	 and	 r8, rdx
  0240c	49 8b d0	 mov	 rdx, r8
  0240f	48 0b ca	 or	 rcx, rdx
  02412	48 03 c1	 add	 rax, rcx
  02415	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  0241d	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  02425	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  0242d	48 03 c8	 add	 rcx, rax
  02430	48 8b c1	 mov	 rax, rcx
  02433	48 89 84 24 e0
	02 00 00	 mov	 QWORD PTR S$[rsp+48], rax
  0243b	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  02443	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  0244b	48 03 c8	 add	 rcx, rax
  0244e	48 8b c1	 mov	 rax, rcx
  02451	48 89 84 24 c0
	02 00 00	 mov	 QWORD PTR S$[rsp+16], rax

; 182  :     RND(S[2],S[3],S[4],S[5],S[6],S[7],S[0],S[1],22,Py_ULL(0x5cb0a9dcbd41fbd4));

  02459	48 8b 84 24 e0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+48]
  02461	48 c1 e8 0e	 shr	 rax, 14
  02465	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  0246d	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  02471	48 0b c1	 or	 rax, rcx
  02474	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  0247c	48 c1 e9 12	 shr	 rcx, 18
  02480	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  02488	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  0248c	48 0b ca	 or	 rcx, rdx
  0248f	48 33 c1	 xor	 rax, rcx
  02492	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  0249a	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  0249e	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  024a6	48 c1 e2 17	 shl	 rdx, 23
  024aa	48 0b ca	 or	 rcx, rdx
  024ad	48 33 c1	 xor	 rax, rcx
  024b0	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  024b8	48 03 c8	 add	 rcx, rax
  024bb	48 8b c1	 mov	 rax, rcx
  024be	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  024c6	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  024ce	48 33 d1	 xor	 rdx, rcx
  024d1	48 8b ca	 mov	 rcx, rdx
  024d4	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  024dc	48 23 d1	 and	 rdx, rcx
  024df	48 8b ca	 mov	 rcx, rdx
  024e2	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  024ea	48 33 d1	 xor	 rdx, rcx
  024ed	48 8b ca	 mov	 rcx, rdx
  024f0	48 8b 94 24 d0
	00 00 00	 mov	 rdx, QWORD PTR W$[rsp+176]
  024f8	48 03 d0	 add	 rdx, rax
  024fb	48 8b c2	 mov	 rax, rdx
  024fe	48 ba d4 fb 41
	bd dc a9 b0 5c	 mov	 rdx, 6679025012923562964 ; 5cb0a9dcbd41fbd4H
  02508	48 03 ca	 add	 rcx, rdx
  0250b	48 03 c1	 add	 rax, rcx
  0250e	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  02516	48 8b 84 24 c0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+16]
  0251e	48 c1 e8 1c	 shr	 rax, 28
  02522	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  0252a	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  0252e	48 0b c1	 or	 rax, rcx
  02531	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  02539	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  0253d	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  02545	48 c1 e2 1e	 shl	 rdx, 30
  02549	48 0b ca	 or	 rcx, rdx
  0254c	48 33 c1	 xor	 rax, rcx
  0254f	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  02557	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  0255b	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  02563	48 c1 e2 19	 shl	 rdx, 25
  02567	48 0b ca	 or	 rcx, rdx
  0256a	48 33 c1	 xor	 rax, rcx
  0256d	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  02575	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  0257d	48 0b d1	 or	 rdx, rcx
  02580	48 8b ca	 mov	 rcx, rdx
  02583	48 23 8c 24 d0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+32]
  0258b	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  02593	4c 8b 84 24 c0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+16]
  0259b	4c 23 c2	 and	 r8, rdx
  0259e	49 8b d0	 mov	 rdx, r8
  025a1	48 0b ca	 or	 rcx, rdx
  025a4	48 03 c1	 add	 rax, rcx
  025a7	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  025af	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  025b7	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  025bf	48 03 c8	 add	 rcx, rax
  025c2	48 8b c1	 mov	 rax, rcx
  025c5	48 89 84 24 d8
	02 00 00	 mov	 QWORD PTR S$[rsp+40], rax
  025cd	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  025d5	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  025dd	48 03 c8	 add	 rcx, rax
  025e0	48 8b c1	 mov	 rax, rcx
  025e3	48 89 84 24 b8
	02 00 00	 mov	 QWORD PTR S$[rsp+8], rax

; 183  :     RND(S[1],S[2],S[3],S[4],S[5],S[6],S[7],S[0],23,Py_ULL(0x76f988da831153b5));

  025eb	48 8b 84 24 d8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+40]
  025f3	48 c1 e8 0e	 shr	 rax, 14
  025f7	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  025ff	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  02603	48 0b c1	 or	 rax, rcx
  02606	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  0260e	48 c1 e9 12	 shr	 rcx, 18
  02612	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  0261a	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  0261e	48 0b ca	 or	 rcx, rdx
  02621	48 33 c1	 xor	 rax, rcx
  02624	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  0262c	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  02630	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  02638	48 c1 e2 17	 shl	 rdx, 23
  0263c	48 0b ca	 or	 rcx, rdx
  0263f	48 33 c1	 xor	 rax, rcx
  02642	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  0264a	48 03 c8	 add	 rcx, rax
  0264d	48 8b c1	 mov	 rax, rcx
  02650	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  02658	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  02660	48 33 d1	 xor	 rdx, rcx
  02663	48 8b ca	 mov	 rcx, rdx
  02666	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  0266e	48 23 d1	 and	 rdx, rcx
  02671	48 8b ca	 mov	 rcx, rdx
  02674	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  0267c	48 33 d1	 xor	 rdx, rcx
  0267f	48 8b ca	 mov	 rcx, rdx
  02682	48 8b 94 24 d8
	00 00 00	 mov	 rdx, QWORD PTR W$[rsp+184]
  0268a	48 03 d0	 add	 rdx, rax
  0268d	48 8b c2	 mov	 rax, rdx
  02690	48 ba b5 53 11
	83 da 88 f9 76	 mov	 rdx, 8573033837759648693 ; 76f988da831153b5H
  0269a	48 03 ca	 add	 rcx, rdx
  0269d	48 03 c1	 add	 rax, rcx
  026a0	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  026a8	48 8b 84 24 b8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+8]
  026b0	48 c1 e8 1c	 shr	 rax, 28
  026b4	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  026bc	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  026c0	48 0b c1	 or	 rax, rcx
  026c3	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  026cb	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  026cf	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  026d7	48 c1 e2 1e	 shl	 rdx, 30
  026db	48 0b ca	 or	 rcx, rdx
  026de	48 33 c1	 xor	 rax, rcx
  026e1	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  026e9	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  026ed	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  026f5	48 c1 e2 19	 shl	 rdx, 25
  026f9	48 0b ca	 or	 rcx, rdx
  026fc	48 33 c1	 xor	 rax, rcx
  026ff	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  02707	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  0270f	48 0b d1	 or	 rdx, rcx
  02712	48 8b ca	 mov	 rcx, rdx
  02715	48 23 8c 24 c8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+24]
  0271d	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  02725	4c 8b 84 24 b8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+8]
  0272d	4c 23 c2	 and	 r8, rdx
  02730	49 8b d0	 mov	 rdx, r8
  02733	48 0b ca	 or	 rcx, rdx
  02736	48 03 c1	 add	 rax, rcx
  02739	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  02741	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  02749	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  02751	48 03 c8	 add	 rcx, rax
  02754	48 8b c1	 mov	 rax, rcx
  02757	48 89 84 24 d0
	02 00 00	 mov	 QWORD PTR S$[rsp+32], rax
  0275f	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  02767	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  0276f	48 03 c8	 add	 rcx, rax
  02772	48 8b c1	 mov	 rax, rcx
  02775	48 89 84 24 b0
	02 00 00	 mov	 QWORD PTR S$[rsp], rax

; 184  :     RND(S[0],S[1],S[2],S[3],S[4],S[5],S[6],S[7],24,Py_ULL(0x983e5152ee66dfab));

  0277d	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+32]
  02785	48 c1 e8 0e	 shr	 rax, 14
  02789	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  02791	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  02795	48 0b c1	 or	 rax, rcx
  02798	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  027a0	48 c1 e9 12	 shr	 rcx, 18
  027a4	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  027ac	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  027b0	48 0b ca	 or	 rcx, rdx
  027b3	48 33 c1	 xor	 rax, rcx
  027b6	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  027be	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  027c2	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  027ca	48 c1 e2 17	 shl	 rdx, 23
  027ce	48 0b ca	 or	 rcx, rdx
  027d1	48 33 c1	 xor	 rax, rcx
  027d4	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  027dc	48 03 c8	 add	 rcx, rax
  027df	48 8b c1	 mov	 rax, rcx
  027e2	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  027ea	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  027f2	48 33 d1	 xor	 rdx, rcx
  027f5	48 8b ca	 mov	 rcx, rdx
  027f8	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  02800	48 23 d1	 and	 rdx, rcx
  02803	48 8b ca	 mov	 rcx, rdx
  02806	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  0280e	48 33 d1	 xor	 rdx, rcx
  02811	48 8b ca	 mov	 rcx, rdx
  02814	48 8b 94 24 e0
	00 00 00	 mov	 rdx, QWORD PTR W$[rsp+192]
  0281c	48 03 d0	 add	 rdx, rax
  0281f	48 8b c2	 mov	 rax, rdx
  02822	48 ba ab df 66
	ee 52 51 3e 98	 mov	 rdx, -7476448914759557205 ; 983e5152ee66dfabH
  0282c	48 03 ca	 add	 rcx, rdx
  0282f	48 03 c1	 add	 rax, rcx
  02832	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  0283a	48 8b 84 24 b0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp]
  02842	48 c1 e8 1c	 shr	 rax, 28
  02846	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  0284e	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  02852	48 0b c1	 or	 rax, rcx
  02855	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  0285d	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  02861	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  02869	48 c1 e2 1e	 shl	 rdx, 30
  0286d	48 0b ca	 or	 rcx, rdx
  02870	48 33 c1	 xor	 rax, rcx
  02873	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  0287b	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  0287f	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  02887	48 c1 e2 19	 shl	 rdx, 25
  0288b	48 0b ca	 or	 rcx, rdx
  0288e	48 33 c1	 xor	 rax, rcx
  02891	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  02899	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  028a1	48 0b d1	 or	 rdx, rcx
  028a4	48 8b ca	 mov	 rcx, rdx
  028a7	48 23 8c 24 c0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+16]
  028af	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  028b7	4c 8b 84 24 b0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp]
  028bf	4c 23 c2	 and	 r8, rdx
  028c2	49 8b d0	 mov	 rdx, r8
  028c5	48 0b ca	 or	 rcx, rdx
  028c8	48 03 c1	 add	 rax, rcx
  028cb	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  028d3	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  028db	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  028e3	48 03 c8	 add	 rcx, rax
  028e6	48 8b c1	 mov	 rax, rcx
  028e9	48 89 84 24 c8
	02 00 00	 mov	 QWORD PTR S$[rsp+24], rax
  028f1	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  028f9	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  02901	48 03 c8	 add	 rcx, rax
  02904	48 8b c1	 mov	 rax, rcx
  02907	48 89 84 24 e8
	02 00 00	 mov	 QWORD PTR S$[rsp+56], rax

; 185  :     RND(S[7],S[0],S[1],S[2],S[3],S[4],S[5],S[6],25,Py_ULL(0xa831c66d2db43210));

  0290f	48 8b 84 24 c8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+24]
  02917	48 c1 e8 0e	 shr	 rax, 14
  0291b	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  02923	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  02927	48 0b c1	 or	 rax, rcx
  0292a	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  02932	48 c1 e9 12	 shr	 rcx, 18
  02936	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  0293e	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  02942	48 0b ca	 or	 rcx, rdx
  02945	48 33 c1	 xor	 rax, rcx
  02948	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  02950	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  02954	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  0295c	48 c1 e2 17	 shl	 rdx, 23
  02960	48 0b ca	 or	 rcx, rdx
  02963	48 33 c1	 xor	 rax, rcx
  02966	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  0296e	48 03 c8	 add	 rcx, rax
  02971	48 8b c1	 mov	 rax, rcx
  02974	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  0297c	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  02984	48 33 d1	 xor	 rdx, rcx
  02987	48 8b ca	 mov	 rcx, rdx
  0298a	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  02992	48 23 d1	 and	 rdx, rcx
  02995	48 8b ca	 mov	 rcx, rdx
  02998	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  029a0	48 33 d1	 xor	 rdx, rcx
  029a3	48 8b ca	 mov	 rcx, rdx
  029a6	48 8b 94 24 e8
	00 00 00	 mov	 rdx, QWORD PTR W$[rsp+200]
  029ae	48 03 d0	 add	 rdx, rax
  029b1	48 8b c2	 mov	 rax, rdx
  029b4	48 ba 10 32 b4
	2d 6d c6 31 a8	 mov	 rdx, -6327057829258317296 ; a831c66d2db43210H
  029be	48 03 ca	 add	 rcx, rdx
  029c1	48 03 c1	 add	 rax, rcx
  029c4	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  029cc	48 8b 84 24 e8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+56]
  029d4	48 c1 e8 1c	 shr	 rax, 28
  029d8	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  029e0	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  029e4	48 0b c1	 or	 rax, rcx
  029e7	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  029ef	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  029f3	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  029fb	48 c1 e2 1e	 shl	 rdx, 30
  029ff	48 0b ca	 or	 rcx, rdx
  02a02	48 33 c1	 xor	 rax, rcx
  02a05	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  02a0d	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  02a11	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  02a19	48 c1 e2 19	 shl	 rdx, 25
  02a1d	48 0b ca	 or	 rcx, rdx
  02a20	48 33 c1	 xor	 rax, rcx
  02a23	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  02a2b	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  02a33	48 0b d1	 or	 rdx, rcx
  02a36	48 8b ca	 mov	 rcx, rdx
  02a39	48 23 8c 24 b8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+8]
  02a41	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  02a49	4c 8b 84 24 e8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+56]
  02a51	4c 23 c2	 and	 r8, rdx
  02a54	49 8b d0	 mov	 rdx, r8
  02a57	48 0b ca	 or	 rcx, rdx
  02a5a	48 03 c1	 add	 rax, rcx
  02a5d	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  02a65	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  02a6d	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  02a75	48 03 c8	 add	 rcx, rax
  02a78	48 8b c1	 mov	 rax, rcx
  02a7b	48 89 84 24 c0
	02 00 00	 mov	 QWORD PTR S$[rsp+16], rax
  02a83	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  02a8b	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  02a93	48 03 c8	 add	 rcx, rax
  02a96	48 8b c1	 mov	 rax, rcx
  02a99	48 89 84 24 e0
	02 00 00	 mov	 QWORD PTR S$[rsp+48], rax

; 186  :     RND(S[6],S[7],S[0],S[1],S[2],S[3],S[4],S[5],26,Py_ULL(0xb00327c898fb213f));

  02aa1	48 8b 84 24 c0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+16]
  02aa9	48 c1 e8 0e	 shr	 rax, 14
  02aad	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  02ab5	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  02ab9	48 0b c1	 or	 rax, rcx
  02abc	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  02ac4	48 c1 e9 12	 shr	 rcx, 18
  02ac8	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  02ad0	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  02ad4	48 0b ca	 or	 rcx, rdx
  02ad7	48 33 c1	 xor	 rax, rcx
  02ada	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  02ae2	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  02ae6	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  02aee	48 c1 e2 17	 shl	 rdx, 23
  02af2	48 0b ca	 or	 rcx, rdx
  02af5	48 33 c1	 xor	 rax, rcx
  02af8	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  02b00	48 03 c8	 add	 rcx, rax
  02b03	48 8b c1	 mov	 rax, rcx
  02b06	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  02b0e	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  02b16	48 33 d1	 xor	 rdx, rcx
  02b19	48 8b ca	 mov	 rcx, rdx
  02b1c	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  02b24	48 23 d1	 and	 rdx, rcx
  02b27	48 8b ca	 mov	 rcx, rdx
  02b2a	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  02b32	48 33 d1	 xor	 rdx, rcx
  02b35	48 8b ca	 mov	 rcx, rdx
  02b38	48 8b 94 24 f0
	00 00 00	 mov	 rdx, QWORD PTR W$[rsp+208]
  02b40	48 03 d0	 add	 rdx, rax
  02b43	48 8b c2	 mov	 rax, rdx
  02b46	48 ba 3f 21 fb
	98 c8 27 03 b0	 mov	 rdx, -5763719355590565569 ; b00327c898fb213fH
  02b50	48 03 ca	 add	 rcx, rdx
  02b53	48 03 c1	 add	 rax, rcx
  02b56	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  02b5e	48 8b 84 24 e0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+48]
  02b66	48 c1 e8 1c	 shr	 rax, 28
  02b6a	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  02b72	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  02b76	48 0b c1	 or	 rax, rcx
  02b79	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  02b81	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  02b85	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  02b8d	48 c1 e2 1e	 shl	 rdx, 30
  02b91	48 0b ca	 or	 rcx, rdx
  02b94	48 33 c1	 xor	 rax, rcx
  02b97	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  02b9f	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  02ba3	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  02bab	48 c1 e2 19	 shl	 rdx, 25
  02baf	48 0b ca	 or	 rcx, rdx
  02bb2	48 33 c1	 xor	 rax, rcx
  02bb5	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  02bbd	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  02bc5	48 0b d1	 or	 rdx, rcx
  02bc8	48 8b ca	 mov	 rcx, rdx
  02bcb	48 23 8c 24 b0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp]
  02bd3	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  02bdb	4c 8b 84 24 e0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+48]
  02be3	4c 23 c2	 and	 r8, rdx
  02be6	49 8b d0	 mov	 rdx, r8
  02be9	48 0b ca	 or	 rcx, rdx
  02bec	48 03 c1	 add	 rax, rcx
  02bef	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  02bf7	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  02bff	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  02c07	48 03 c8	 add	 rcx, rax
  02c0a	48 8b c1	 mov	 rax, rcx
  02c0d	48 89 84 24 b8
	02 00 00	 mov	 QWORD PTR S$[rsp+8], rax
  02c15	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  02c1d	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  02c25	48 03 c8	 add	 rcx, rax
  02c28	48 8b c1	 mov	 rax, rcx
  02c2b	48 89 84 24 d8
	02 00 00	 mov	 QWORD PTR S$[rsp+40], rax

; 187  :     RND(S[5],S[6],S[7],S[0],S[1],S[2],S[3],S[4],27,Py_ULL(0xbf597fc7beef0ee4));

  02c33	48 8b 84 24 b8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+8]
  02c3b	48 c1 e8 0e	 shr	 rax, 14
  02c3f	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  02c47	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  02c4b	48 0b c1	 or	 rax, rcx
  02c4e	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  02c56	48 c1 e9 12	 shr	 rcx, 18
  02c5a	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  02c62	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  02c66	48 0b ca	 or	 rcx, rdx
  02c69	48 33 c1	 xor	 rax, rcx
  02c6c	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  02c74	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  02c78	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  02c80	48 c1 e2 17	 shl	 rdx, 23
  02c84	48 0b ca	 or	 rcx, rdx
  02c87	48 33 c1	 xor	 rax, rcx
  02c8a	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  02c92	48 03 c8	 add	 rcx, rax
  02c95	48 8b c1	 mov	 rax, rcx
  02c98	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  02ca0	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  02ca8	48 33 d1	 xor	 rdx, rcx
  02cab	48 8b ca	 mov	 rcx, rdx
  02cae	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  02cb6	48 23 d1	 and	 rdx, rcx
  02cb9	48 8b ca	 mov	 rcx, rdx
  02cbc	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  02cc4	48 33 d1	 xor	 rdx, rcx
  02cc7	48 8b ca	 mov	 rcx, rdx
  02cca	48 8b 94 24 f8
	00 00 00	 mov	 rdx, QWORD PTR W$[rsp+216]
  02cd2	48 03 d0	 add	 rdx, rax
  02cd5	48 8b c2	 mov	 rax, rdx
  02cd8	48 ba e4 0e ef
	be c7 7f 59 bf	 mov	 rdx, -4658551843659510044 ; bf597fc7beef0ee4H
  02ce2	48 03 ca	 add	 rcx, rdx
  02ce5	48 03 c1	 add	 rax, rcx
  02ce8	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  02cf0	48 8b 84 24 d8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+40]
  02cf8	48 c1 e8 1c	 shr	 rax, 28
  02cfc	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  02d04	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  02d08	48 0b c1	 or	 rax, rcx
  02d0b	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  02d13	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  02d17	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  02d1f	48 c1 e2 1e	 shl	 rdx, 30
  02d23	48 0b ca	 or	 rcx, rdx
  02d26	48 33 c1	 xor	 rax, rcx
  02d29	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  02d31	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  02d35	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  02d3d	48 c1 e2 19	 shl	 rdx, 25
  02d41	48 0b ca	 or	 rcx, rdx
  02d44	48 33 c1	 xor	 rax, rcx
  02d47	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  02d4f	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  02d57	48 0b d1	 or	 rdx, rcx
  02d5a	48 8b ca	 mov	 rcx, rdx
  02d5d	48 23 8c 24 e8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+56]
  02d65	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  02d6d	4c 8b 84 24 d8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+40]
  02d75	4c 23 c2	 and	 r8, rdx
  02d78	49 8b d0	 mov	 rdx, r8
  02d7b	48 0b ca	 or	 rcx, rdx
  02d7e	48 03 c1	 add	 rax, rcx
  02d81	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  02d89	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  02d91	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  02d99	48 03 c8	 add	 rcx, rax
  02d9c	48 8b c1	 mov	 rax, rcx
  02d9f	48 89 84 24 b0
	02 00 00	 mov	 QWORD PTR S$[rsp], rax
  02da7	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  02daf	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  02db7	48 03 c8	 add	 rcx, rax
  02dba	48 8b c1	 mov	 rax, rcx
  02dbd	48 89 84 24 d0
	02 00 00	 mov	 QWORD PTR S$[rsp+32], rax

; 188  :     RND(S[4],S[5],S[6],S[7],S[0],S[1],S[2],S[3],28,Py_ULL(0xc6e00bf33da88fc2));

  02dc5	48 8b 84 24 b0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp]
  02dcd	48 c1 e8 0e	 shr	 rax, 14
  02dd1	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  02dd9	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  02ddd	48 0b c1	 or	 rax, rcx
  02de0	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  02de8	48 c1 e9 12	 shr	 rcx, 18
  02dec	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  02df4	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  02df8	48 0b ca	 or	 rcx, rdx
  02dfb	48 33 c1	 xor	 rax, rcx
  02dfe	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  02e06	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  02e0a	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  02e12	48 c1 e2 17	 shl	 rdx, 23
  02e16	48 0b ca	 or	 rcx, rdx
  02e19	48 33 c1	 xor	 rax, rcx
  02e1c	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  02e24	48 03 c8	 add	 rcx, rax
  02e27	48 8b c1	 mov	 rax, rcx
  02e2a	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  02e32	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  02e3a	48 33 d1	 xor	 rdx, rcx
  02e3d	48 8b ca	 mov	 rcx, rdx
  02e40	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  02e48	48 23 d1	 and	 rdx, rcx
  02e4b	48 8b ca	 mov	 rcx, rdx
  02e4e	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  02e56	48 33 d1	 xor	 rdx, rcx
  02e59	48 8b ca	 mov	 rcx, rdx
  02e5c	48 8b 94 24 00
	01 00 00	 mov	 rdx, QWORD PTR W$[rsp+224]
  02e64	48 03 d0	 add	 rdx, rax
  02e67	48 8b c2	 mov	 rax, rdx
  02e6a	48 ba c2 8f a8
	3d f3 0b e0 c6	 mov	 rdx, -4116276920077217854 ; c6e00bf33da88fc2H
  02e74	48 03 ca	 add	 rcx, rdx
  02e77	48 03 c1	 add	 rax, rcx
  02e7a	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  02e82	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+32]
  02e8a	48 c1 e8 1c	 shr	 rax, 28
  02e8e	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  02e96	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  02e9a	48 0b c1	 or	 rax, rcx
  02e9d	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  02ea5	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  02ea9	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  02eb1	48 c1 e2 1e	 shl	 rdx, 30
  02eb5	48 0b ca	 or	 rcx, rdx
  02eb8	48 33 c1	 xor	 rax, rcx
  02ebb	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  02ec3	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  02ec7	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  02ecf	48 c1 e2 19	 shl	 rdx, 25
  02ed3	48 0b ca	 or	 rcx, rdx
  02ed6	48 33 c1	 xor	 rax, rcx
  02ed9	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  02ee1	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  02ee9	48 0b d1	 or	 rdx, rcx
  02eec	48 8b ca	 mov	 rcx, rdx
  02eef	48 23 8c 24 e0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+48]
  02ef7	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  02eff	4c 8b 84 24 d0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+32]
  02f07	4c 23 c2	 and	 r8, rdx
  02f0a	49 8b d0	 mov	 rdx, r8
  02f0d	48 0b ca	 or	 rcx, rdx
  02f10	48 03 c1	 add	 rax, rcx
  02f13	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  02f1b	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  02f23	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  02f2b	48 03 c8	 add	 rcx, rax
  02f2e	48 8b c1	 mov	 rax, rcx
  02f31	48 89 84 24 e8
	02 00 00	 mov	 QWORD PTR S$[rsp+56], rax
  02f39	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  02f41	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  02f49	48 03 c8	 add	 rcx, rax
  02f4c	48 8b c1	 mov	 rax, rcx
  02f4f	48 89 84 24 c8
	02 00 00	 mov	 QWORD PTR S$[rsp+24], rax

; 189  :     RND(S[3],S[4],S[5],S[6],S[7],S[0],S[1],S[2],29,Py_ULL(0xd5a79147930aa725));

  02f57	48 8b 84 24 e8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+56]
  02f5f	48 c1 e8 0e	 shr	 rax, 14
  02f63	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  02f6b	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  02f6f	48 0b c1	 or	 rax, rcx
  02f72	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  02f7a	48 c1 e9 12	 shr	 rcx, 18
  02f7e	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  02f86	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  02f8a	48 0b ca	 or	 rcx, rdx
  02f8d	48 33 c1	 xor	 rax, rcx
  02f90	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  02f98	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  02f9c	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  02fa4	48 c1 e2 17	 shl	 rdx, 23
  02fa8	48 0b ca	 or	 rcx, rdx
  02fab	48 33 c1	 xor	 rax, rcx
  02fae	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  02fb6	48 03 c8	 add	 rcx, rax
  02fb9	48 8b c1	 mov	 rax, rcx
  02fbc	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  02fc4	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  02fcc	48 33 d1	 xor	 rdx, rcx
  02fcf	48 8b ca	 mov	 rcx, rdx
  02fd2	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  02fda	48 23 d1	 and	 rdx, rcx
  02fdd	48 8b ca	 mov	 rcx, rdx
  02fe0	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  02fe8	48 33 d1	 xor	 rdx, rcx
  02feb	48 8b ca	 mov	 rcx, rdx
  02fee	48 8b 94 24 08
	01 00 00	 mov	 rdx, QWORD PTR W$[rsp+232]
  02ff6	48 03 d0	 add	 rdx, rax
  02ff9	48 8b c2	 mov	 rax, rdx
  02ffc	48 ba 25 a7 0a
	93 47 91 a7 d5	 mov	 rdx, -3051310485924567259 ; d5a79147930aa725H
  03006	48 03 ca	 add	 rcx, rdx
  03009	48 03 c1	 add	 rax, rcx
  0300c	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  03014	48 8b 84 24 c8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+24]
  0301c	48 c1 e8 1c	 shr	 rax, 28
  03020	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  03028	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  0302c	48 0b c1	 or	 rax, rcx
  0302f	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  03037	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  0303b	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  03043	48 c1 e2 1e	 shl	 rdx, 30
  03047	48 0b ca	 or	 rcx, rdx
  0304a	48 33 c1	 xor	 rax, rcx
  0304d	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  03055	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  03059	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  03061	48 c1 e2 19	 shl	 rdx, 25
  03065	48 0b ca	 or	 rcx, rdx
  03068	48 33 c1	 xor	 rax, rcx
  0306b	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  03073	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  0307b	48 0b d1	 or	 rdx, rcx
  0307e	48 8b ca	 mov	 rcx, rdx
  03081	48 23 8c 24 d8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+40]
  03089	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  03091	4c 8b 84 24 c8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+24]
  03099	4c 23 c2	 and	 r8, rdx
  0309c	49 8b d0	 mov	 rdx, r8
  0309f	48 0b ca	 or	 rcx, rdx
  030a2	48 03 c1	 add	 rax, rcx
  030a5	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  030ad	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  030b5	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  030bd	48 03 c8	 add	 rcx, rax
  030c0	48 8b c1	 mov	 rax, rcx
  030c3	48 89 84 24 e0
	02 00 00	 mov	 QWORD PTR S$[rsp+48], rax
  030cb	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  030d3	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  030db	48 03 c8	 add	 rcx, rax
  030de	48 8b c1	 mov	 rax, rcx
  030e1	48 89 84 24 c0
	02 00 00	 mov	 QWORD PTR S$[rsp+16], rax

; 190  :     RND(S[2],S[3],S[4],S[5],S[6],S[7],S[0],S[1],30,Py_ULL(0x06ca6351e003826f));

  030e9	48 8b 84 24 e0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+48]
  030f1	48 c1 e8 0e	 shr	 rax, 14
  030f5	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  030fd	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  03101	48 0b c1	 or	 rax, rcx
  03104	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  0310c	48 c1 e9 12	 shr	 rcx, 18
  03110	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  03118	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  0311c	48 0b ca	 or	 rcx, rdx
  0311f	48 33 c1	 xor	 rax, rcx
  03122	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  0312a	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  0312e	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  03136	48 c1 e2 17	 shl	 rdx, 23
  0313a	48 0b ca	 or	 rcx, rdx
  0313d	48 33 c1	 xor	 rax, rcx
  03140	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  03148	48 03 c8	 add	 rcx, rax
  0314b	48 8b c1	 mov	 rax, rcx
  0314e	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  03156	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  0315e	48 33 d1	 xor	 rdx, rcx
  03161	48 8b ca	 mov	 rcx, rdx
  03164	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  0316c	48 23 d1	 and	 rdx, rcx
  0316f	48 8b ca	 mov	 rcx, rdx
  03172	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  0317a	48 33 d1	 xor	 rdx, rcx
  0317d	48 8b ca	 mov	 rcx, rdx
  03180	48 8b 94 24 10
	01 00 00	 mov	 rdx, QWORD PTR W$[rsp+240]
  03188	48 03 d0	 add	 rdx, rax
  0318b	48 8b c2	 mov	 rax, rdx
  0318e	48 ba 6f 82 03
	e0 51 63 ca 06	 mov	 rdx, 489312712824947311	; 06ca6351e003826fH
  03198	48 03 ca	 add	 rcx, rdx
  0319b	48 03 c1	 add	 rax, rcx
  0319e	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  031a6	48 8b 84 24 c0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+16]
  031ae	48 c1 e8 1c	 shr	 rax, 28
  031b2	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  031ba	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  031be	48 0b c1	 or	 rax, rcx
  031c1	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  031c9	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  031cd	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  031d5	48 c1 e2 1e	 shl	 rdx, 30
  031d9	48 0b ca	 or	 rcx, rdx
  031dc	48 33 c1	 xor	 rax, rcx
  031df	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  031e7	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  031eb	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  031f3	48 c1 e2 19	 shl	 rdx, 25
  031f7	48 0b ca	 or	 rcx, rdx
  031fa	48 33 c1	 xor	 rax, rcx
  031fd	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  03205	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  0320d	48 0b d1	 or	 rdx, rcx
  03210	48 8b ca	 mov	 rcx, rdx
  03213	48 23 8c 24 d0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+32]
  0321b	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  03223	4c 8b 84 24 c0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+16]
  0322b	4c 23 c2	 and	 r8, rdx
  0322e	49 8b d0	 mov	 rdx, r8
  03231	48 0b ca	 or	 rcx, rdx
  03234	48 03 c1	 add	 rax, rcx
  03237	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  0323f	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  03247	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  0324f	48 03 c8	 add	 rcx, rax
  03252	48 8b c1	 mov	 rax, rcx
  03255	48 89 84 24 d8
	02 00 00	 mov	 QWORD PTR S$[rsp+40], rax
  0325d	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  03265	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  0326d	48 03 c8	 add	 rcx, rax
  03270	48 8b c1	 mov	 rax, rcx
  03273	48 89 84 24 b8
	02 00 00	 mov	 QWORD PTR S$[rsp+8], rax

; 191  :     RND(S[1],S[2],S[3],S[4],S[5],S[6],S[7],S[0],31,Py_ULL(0x142929670a0e6e70));

  0327b	48 8b 84 24 d8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+40]
  03283	48 c1 e8 0e	 shr	 rax, 14
  03287	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  0328f	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  03293	48 0b c1	 or	 rax, rcx
  03296	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  0329e	48 c1 e9 12	 shr	 rcx, 18
  032a2	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  032aa	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  032ae	48 0b ca	 or	 rcx, rdx
  032b1	48 33 c1	 xor	 rax, rcx
  032b4	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  032bc	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  032c0	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  032c8	48 c1 e2 17	 shl	 rdx, 23
  032cc	48 0b ca	 or	 rcx, rdx
  032cf	48 33 c1	 xor	 rax, rcx
  032d2	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  032da	48 03 c8	 add	 rcx, rax
  032dd	48 8b c1	 mov	 rax, rcx
  032e0	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  032e8	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  032f0	48 33 d1	 xor	 rdx, rcx
  032f3	48 8b ca	 mov	 rcx, rdx
  032f6	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  032fe	48 23 d1	 and	 rdx, rcx
  03301	48 8b ca	 mov	 rcx, rdx
  03304	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  0330c	48 33 d1	 xor	 rdx, rcx
  0330f	48 8b ca	 mov	 rcx, rdx
  03312	48 8b 94 24 18
	01 00 00	 mov	 rdx, QWORD PTR W$[rsp+248]
  0331a	48 03 d0	 add	 rdx, rax
  0331d	48 8b c2	 mov	 rax, rdx
  03320	48 ba 70 6e 0e
	0a 67 29 29 14	 mov	 rdx, 1452737877330783856 ; 142929670a0e6e70H
  0332a	48 03 ca	 add	 rcx, rdx
  0332d	48 03 c1	 add	 rax, rcx
  03330	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  03338	48 8b 84 24 b8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+8]
  03340	48 c1 e8 1c	 shr	 rax, 28
  03344	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  0334c	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  03350	48 0b c1	 or	 rax, rcx
  03353	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  0335b	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  0335f	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  03367	48 c1 e2 1e	 shl	 rdx, 30
  0336b	48 0b ca	 or	 rcx, rdx
  0336e	48 33 c1	 xor	 rax, rcx
  03371	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  03379	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  0337d	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  03385	48 c1 e2 19	 shl	 rdx, 25
  03389	48 0b ca	 or	 rcx, rdx
  0338c	48 33 c1	 xor	 rax, rcx
  0338f	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  03397	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  0339f	48 0b d1	 or	 rdx, rcx
  033a2	48 8b ca	 mov	 rcx, rdx
  033a5	48 23 8c 24 c8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+24]
  033ad	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  033b5	4c 8b 84 24 b8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+8]
  033bd	4c 23 c2	 and	 r8, rdx
  033c0	49 8b d0	 mov	 rdx, r8
  033c3	48 0b ca	 or	 rcx, rdx
  033c6	48 03 c1	 add	 rax, rcx
  033c9	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  033d1	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  033d9	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  033e1	48 03 c8	 add	 rcx, rax
  033e4	48 8b c1	 mov	 rax, rcx
  033e7	48 89 84 24 d0
	02 00 00	 mov	 QWORD PTR S$[rsp+32], rax
  033ef	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  033f7	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  033ff	48 03 c8	 add	 rcx, rax
  03402	48 8b c1	 mov	 rax, rcx
  03405	48 89 84 24 b0
	02 00 00	 mov	 QWORD PTR S$[rsp], rax

; 192  :     RND(S[0],S[1],S[2],S[3],S[4],S[5],S[6],S[7],32,Py_ULL(0x27b70a8546d22ffc));

  0340d	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+32]
  03415	48 c1 e8 0e	 shr	 rax, 14
  03419	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  03421	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  03425	48 0b c1	 or	 rax, rcx
  03428	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  03430	48 c1 e9 12	 shr	 rcx, 18
  03434	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  0343c	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  03440	48 0b ca	 or	 rcx, rdx
  03443	48 33 c1	 xor	 rax, rcx
  03446	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  0344e	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  03452	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  0345a	48 c1 e2 17	 shl	 rdx, 23
  0345e	48 0b ca	 or	 rcx, rdx
  03461	48 33 c1	 xor	 rax, rcx
  03464	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  0346c	48 03 c8	 add	 rcx, rax
  0346f	48 8b c1	 mov	 rax, rcx
  03472	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  0347a	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  03482	48 33 d1	 xor	 rdx, rcx
  03485	48 8b ca	 mov	 rcx, rdx
  03488	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  03490	48 23 d1	 and	 rdx, rcx
  03493	48 8b ca	 mov	 rcx, rdx
  03496	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  0349e	48 33 d1	 xor	 rdx, rcx
  034a1	48 8b ca	 mov	 rcx, rdx
  034a4	48 8b 94 24 20
	01 00 00	 mov	 rdx, QWORD PTR W$[rsp+256]
  034ac	48 03 d0	 add	 rdx, rax
  034af	48 8b c2	 mov	 rax, rdx
  034b2	48 ba fc 2f d2
	46 85 0a b7 27	 mov	 rdx, 2861767655752347644 ; 27b70a8546d22ffcH
  034bc	48 03 ca	 add	 rcx, rdx
  034bf	48 03 c1	 add	 rax, rcx
  034c2	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  034ca	48 8b 84 24 b0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp]
  034d2	48 c1 e8 1c	 shr	 rax, 28
  034d6	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  034de	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  034e2	48 0b c1	 or	 rax, rcx
  034e5	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  034ed	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  034f1	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  034f9	48 c1 e2 1e	 shl	 rdx, 30
  034fd	48 0b ca	 or	 rcx, rdx
  03500	48 33 c1	 xor	 rax, rcx
  03503	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  0350b	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  0350f	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  03517	48 c1 e2 19	 shl	 rdx, 25
  0351b	48 0b ca	 or	 rcx, rdx
  0351e	48 33 c1	 xor	 rax, rcx
  03521	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  03529	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  03531	48 0b d1	 or	 rdx, rcx
  03534	48 8b ca	 mov	 rcx, rdx
  03537	48 23 8c 24 c0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+16]
  0353f	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  03547	4c 8b 84 24 b0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp]
  0354f	4c 23 c2	 and	 r8, rdx
  03552	49 8b d0	 mov	 rdx, r8
  03555	48 0b ca	 or	 rcx, rdx
  03558	48 03 c1	 add	 rax, rcx
  0355b	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  03563	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  0356b	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  03573	48 03 c8	 add	 rcx, rax
  03576	48 8b c1	 mov	 rax, rcx
  03579	48 89 84 24 c8
	02 00 00	 mov	 QWORD PTR S$[rsp+24], rax
  03581	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  03589	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  03591	48 03 c8	 add	 rcx, rax
  03594	48 8b c1	 mov	 rax, rcx
  03597	48 89 84 24 e8
	02 00 00	 mov	 QWORD PTR S$[rsp+56], rax

; 193  :     RND(S[7],S[0],S[1],S[2],S[3],S[4],S[5],S[6],33,Py_ULL(0x2e1b21385c26c926));

  0359f	48 8b 84 24 c8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+24]
  035a7	48 c1 e8 0e	 shr	 rax, 14
  035ab	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  035b3	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  035b7	48 0b c1	 or	 rax, rcx
  035ba	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  035c2	48 c1 e9 12	 shr	 rcx, 18
  035c6	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  035ce	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  035d2	48 0b ca	 or	 rcx, rdx
  035d5	48 33 c1	 xor	 rax, rcx
  035d8	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  035e0	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  035e4	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  035ec	48 c1 e2 17	 shl	 rdx, 23
  035f0	48 0b ca	 or	 rcx, rdx
  035f3	48 33 c1	 xor	 rax, rcx
  035f6	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  035fe	48 03 c8	 add	 rcx, rax
  03601	48 8b c1	 mov	 rax, rcx
  03604	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  0360c	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  03614	48 33 d1	 xor	 rdx, rcx
  03617	48 8b ca	 mov	 rcx, rdx
  0361a	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  03622	48 23 d1	 and	 rdx, rcx
  03625	48 8b ca	 mov	 rcx, rdx
  03628	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  03630	48 33 d1	 xor	 rdx, rcx
  03633	48 8b ca	 mov	 rcx, rdx
  03636	48 8b 94 24 28
	01 00 00	 mov	 rdx, QWORD PTR W$[rsp+264]
  0363e	48 03 d0	 add	 rdx, rax
  03641	48 8b c2	 mov	 rax, rdx
  03644	48 ba 26 c9 26
	5c 38 21 1b 2e	 mov	 rdx, 3322285676063803686 ; 2e1b21385c26c926H
  0364e	48 03 ca	 add	 rcx, rdx
  03651	48 03 c1	 add	 rax, rcx
  03654	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  0365c	48 8b 84 24 e8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+56]
  03664	48 c1 e8 1c	 shr	 rax, 28
  03668	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  03670	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  03674	48 0b c1	 or	 rax, rcx
  03677	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  0367f	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  03683	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  0368b	48 c1 e2 1e	 shl	 rdx, 30
  0368f	48 0b ca	 or	 rcx, rdx
  03692	48 33 c1	 xor	 rax, rcx
  03695	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  0369d	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  036a1	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  036a9	48 c1 e2 19	 shl	 rdx, 25
  036ad	48 0b ca	 or	 rcx, rdx
  036b0	48 33 c1	 xor	 rax, rcx
  036b3	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  036bb	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  036c3	48 0b d1	 or	 rdx, rcx
  036c6	48 8b ca	 mov	 rcx, rdx
  036c9	48 23 8c 24 b8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+8]
  036d1	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  036d9	4c 8b 84 24 e8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+56]
  036e1	4c 23 c2	 and	 r8, rdx
  036e4	49 8b d0	 mov	 rdx, r8
  036e7	48 0b ca	 or	 rcx, rdx
  036ea	48 03 c1	 add	 rax, rcx
  036ed	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  036f5	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  036fd	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  03705	48 03 c8	 add	 rcx, rax
  03708	48 8b c1	 mov	 rax, rcx
  0370b	48 89 84 24 c0
	02 00 00	 mov	 QWORD PTR S$[rsp+16], rax
  03713	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  0371b	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  03723	48 03 c8	 add	 rcx, rax
  03726	48 8b c1	 mov	 rax, rcx
  03729	48 89 84 24 e0
	02 00 00	 mov	 QWORD PTR S$[rsp+48], rax

; 194  :     RND(S[6],S[7],S[0],S[1],S[2],S[3],S[4],S[5],34,Py_ULL(0x4d2c6dfc5ac42aed));

  03731	48 8b 84 24 c0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+16]
  03739	48 c1 e8 0e	 shr	 rax, 14
  0373d	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  03745	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  03749	48 0b c1	 or	 rax, rcx
  0374c	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  03754	48 c1 e9 12	 shr	 rcx, 18
  03758	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  03760	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  03764	48 0b ca	 or	 rcx, rdx
  03767	48 33 c1	 xor	 rax, rcx
  0376a	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  03772	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  03776	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  0377e	48 c1 e2 17	 shl	 rdx, 23
  03782	48 0b ca	 or	 rcx, rdx
  03785	48 33 c1	 xor	 rax, rcx
  03788	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  03790	48 03 c8	 add	 rcx, rax
  03793	48 8b c1	 mov	 rax, rcx
  03796	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  0379e	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  037a6	48 33 d1	 xor	 rdx, rcx
  037a9	48 8b ca	 mov	 rcx, rdx
  037ac	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  037b4	48 23 d1	 and	 rdx, rcx
  037b7	48 8b ca	 mov	 rcx, rdx
  037ba	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  037c2	48 33 d1	 xor	 rdx, rcx
  037c5	48 8b ca	 mov	 rcx, rdx
  037c8	48 8b 94 24 30
	01 00 00	 mov	 rdx, QWORD PTR W$[rsp+272]
  037d0	48 03 d0	 add	 rdx, rax
  037d3	48 8b c2	 mov	 rax, rdx
  037d6	48 ba ed 2a c4
	5a fc 6d 2c 4d	 mov	 rdx, 5560940570517711597 ; 4d2c6dfc5ac42aedH
  037e0	48 03 ca	 add	 rcx, rdx
  037e3	48 03 c1	 add	 rax, rcx
  037e6	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  037ee	48 8b 84 24 e0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+48]
  037f6	48 c1 e8 1c	 shr	 rax, 28
  037fa	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  03802	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  03806	48 0b c1	 or	 rax, rcx
  03809	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  03811	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  03815	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  0381d	48 c1 e2 1e	 shl	 rdx, 30
  03821	48 0b ca	 or	 rcx, rdx
  03824	48 33 c1	 xor	 rax, rcx
  03827	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  0382f	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  03833	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  0383b	48 c1 e2 19	 shl	 rdx, 25
  0383f	48 0b ca	 or	 rcx, rdx
  03842	48 33 c1	 xor	 rax, rcx
  03845	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  0384d	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  03855	48 0b d1	 or	 rdx, rcx
  03858	48 8b ca	 mov	 rcx, rdx
  0385b	48 23 8c 24 b0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp]
  03863	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  0386b	4c 8b 84 24 e0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+48]
  03873	4c 23 c2	 and	 r8, rdx
  03876	49 8b d0	 mov	 rdx, r8
  03879	48 0b ca	 or	 rcx, rdx
  0387c	48 03 c1	 add	 rax, rcx
  0387f	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  03887	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  0388f	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  03897	48 03 c8	 add	 rcx, rax
  0389a	48 8b c1	 mov	 rax, rcx
  0389d	48 89 84 24 b8
	02 00 00	 mov	 QWORD PTR S$[rsp+8], rax
  038a5	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  038ad	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  038b5	48 03 c8	 add	 rcx, rax
  038b8	48 8b c1	 mov	 rax, rcx
  038bb	48 89 84 24 d8
	02 00 00	 mov	 QWORD PTR S$[rsp+40], rax

; 195  :     RND(S[5],S[6],S[7],S[0],S[1],S[2],S[3],S[4],35,Py_ULL(0x53380d139d95b3df));

  038c3	48 8b 84 24 b8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+8]
  038cb	48 c1 e8 0e	 shr	 rax, 14
  038cf	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  038d7	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  038db	48 0b c1	 or	 rax, rcx
  038de	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  038e6	48 c1 e9 12	 shr	 rcx, 18
  038ea	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  038f2	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  038f6	48 0b ca	 or	 rcx, rdx
  038f9	48 33 c1	 xor	 rax, rcx
  038fc	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  03904	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  03908	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  03910	48 c1 e2 17	 shl	 rdx, 23
  03914	48 0b ca	 or	 rcx, rdx
  03917	48 33 c1	 xor	 rax, rcx
  0391a	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  03922	48 03 c8	 add	 rcx, rax
  03925	48 8b c1	 mov	 rax, rcx
  03928	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  03930	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  03938	48 33 d1	 xor	 rdx, rcx
  0393b	48 8b ca	 mov	 rcx, rdx
  0393e	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  03946	48 23 d1	 and	 rdx, rcx
  03949	48 8b ca	 mov	 rcx, rdx
  0394c	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  03954	48 33 d1	 xor	 rdx, rcx
  03957	48 8b ca	 mov	 rcx, rdx
  0395a	48 8b 94 24 38
	01 00 00	 mov	 rdx, QWORD PTR W$[rsp+280]
  03962	48 03 d0	 add	 rdx, rax
  03965	48 8b c2	 mov	 rax, rdx
  03968	48 ba df b3 95
	9d 13 0d 38 53	 mov	 rdx, 5996557281743188959 ; 53380d139d95b3dfH
  03972	48 03 ca	 add	 rcx, rdx
  03975	48 03 c1	 add	 rax, rcx
  03978	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  03980	48 8b 84 24 d8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+40]
  03988	48 c1 e8 1c	 shr	 rax, 28
  0398c	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  03994	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  03998	48 0b c1	 or	 rax, rcx
  0399b	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  039a3	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  039a7	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  039af	48 c1 e2 1e	 shl	 rdx, 30
  039b3	48 0b ca	 or	 rcx, rdx
  039b6	48 33 c1	 xor	 rax, rcx
  039b9	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  039c1	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  039c5	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  039cd	48 c1 e2 19	 shl	 rdx, 25
  039d1	48 0b ca	 or	 rcx, rdx
  039d4	48 33 c1	 xor	 rax, rcx
  039d7	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  039df	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  039e7	48 0b d1	 or	 rdx, rcx
  039ea	48 8b ca	 mov	 rcx, rdx
  039ed	48 23 8c 24 e8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+56]
  039f5	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  039fd	4c 8b 84 24 d8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+40]
  03a05	4c 23 c2	 and	 r8, rdx
  03a08	49 8b d0	 mov	 rdx, r8
  03a0b	48 0b ca	 or	 rcx, rdx
  03a0e	48 03 c1	 add	 rax, rcx
  03a11	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  03a19	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  03a21	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  03a29	48 03 c8	 add	 rcx, rax
  03a2c	48 8b c1	 mov	 rax, rcx
  03a2f	48 89 84 24 b0
	02 00 00	 mov	 QWORD PTR S$[rsp], rax
  03a37	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  03a3f	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  03a47	48 03 c8	 add	 rcx, rax
  03a4a	48 8b c1	 mov	 rax, rcx
  03a4d	48 89 84 24 d0
	02 00 00	 mov	 QWORD PTR S$[rsp+32], rax

; 196  :     RND(S[4],S[5],S[6],S[7],S[0],S[1],S[2],S[3],36,Py_ULL(0x650a73548baf63de));

  03a55	48 8b 84 24 b0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp]
  03a5d	48 c1 e8 0e	 shr	 rax, 14
  03a61	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  03a69	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  03a6d	48 0b c1	 or	 rax, rcx
  03a70	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  03a78	48 c1 e9 12	 shr	 rcx, 18
  03a7c	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  03a84	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  03a88	48 0b ca	 or	 rcx, rdx
  03a8b	48 33 c1	 xor	 rax, rcx
  03a8e	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  03a96	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  03a9a	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  03aa2	48 c1 e2 17	 shl	 rdx, 23
  03aa6	48 0b ca	 or	 rcx, rdx
  03aa9	48 33 c1	 xor	 rax, rcx
  03aac	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  03ab4	48 03 c8	 add	 rcx, rax
  03ab7	48 8b c1	 mov	 rax, rcx
  03aba	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  03ac2	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  03aca	48 33 d1	 xor	 rdx, rcx
  03acd	48 8b ca	 mov	 rcx, rdx
  03ad0	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  03ad8	48 23 d1	 and	 rdx, rcx
  03adb	48 8b ca	 mov	 rcx, rdx
  03ade	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  03ae6	48 33 d1	 xor	 rdx, rcx
  03ae9	48 8b ca	 mov	 rcx, rdx
  03aec	48 8b 94 24 40
	01 00 00	 mov	 rdx, QWORD PTR W$[rsp+288]
  03af4	48 03 d0	 add	 rdx, rax
  03af7	48 8b c2	 mov	 rax, rdx
  03afa	48 ba de 63 af
	8b 54 73 0a 65	 mov	 rdx, 7280758554555802590 ; 650a73548baf63deH
  03b04	48 03 ca	 add	 rcx, rdx
  03b07	48 03 c1	 add	 rax, rcx
  03b0a	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  03b12	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+32]
  03b1a	48 c1 e8 1c	 shr	 rax, 28
  03b1e	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  03b26	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  03b2a	48 0b c1	 or	 rax, rcx
  03b2d	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  03b35	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  03b39	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  03b41	48 c1 e2 1e	 shl	 rdx, 30
  03b45	48 0b ca	 or	 rcx, rdx
  03b48	48 33 c1	 xor	 rax, rcx
  03b4b	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  03b53	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  03b57	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  03b5f	48 c1 e2 19	 shl	 rdx, 25
  03b63	48 0b ca	 or	 rcx, rdx
  03b66	48 33 c1	 xor	 rax, rcx
  03b69	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  03b71	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  03b79	48 0b d1	 or	 rdx, rcx
  03b7c	48 8b ca	 mov	 rcx, rdx
  03b7f	48 23 8c 24 e0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+48]
  03b87	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  03b8f	4c 8b 84 24 d0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+32]
  03b97	4c 23 c2	 and	 r8, rdx
  03b9a	49 8b d0	 mov	 rdx, r8
  03b9d	48 0b ca	 or	 rcx, rdx
  03ba0	48 03 c1	 add	 rax, rcx
  03ba3	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  03bab	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  03bb3	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  03bbb	48 03 c8	 add	 rcx, rax
  03bbe	48 8b c1	 mov	 rax, rcx
  03bc1	48 89 84 24 e8
	02 00 00	 mov	 QWORD PTR S$[rsp+56], rax
  03bc9	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  03bd1	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  03bd9	48 03 c8	 add	 rcx, rax
  03bdc	48 8b c1	 mov	 rax, rcx
  03bdf	48 89 84 24 c8
	02 00 00	 mov	 QWORD PTR S$[rsp+24], rax

; 197  :     RND(S[3],S[4],S[5],S[6],S[7],S[0],S[1],S[2],37,Py_ULL(0x766a0abb3c77b2a8));

  03be7	48 8b 84 24 e8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+56]
  03bef	48 c1 e8 0e	 shr	 rax, 14
  03bf3	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  03bfb	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  03bff	48 0b c1	 or	 rax, rcx
  03c02	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  03c0a	48 c1 e9 12	 shr	 rcx, 18
  03c0e	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  03c16	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  03c1a	48 0b ca	 or	 rcx, rdx
  03c1d	48 33 c1	 xor	 rax, rcx
  03c20	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  03c28	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  03c2c	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  03c34	48 c1 e2 17	 shl	 rdx, 23
  03c38	48 0b ca	 or	 rcx, rdx
  03c3b	48 33 c1	 xor	 rax, rcx
  03c3e	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  03c46	48 03 c8	 add	 rcx, rax
  03c49	48 8b c1	 mov	 rax, rcx
  03c4c	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  03c54	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  03c5c	48 33 d1	 xor	 rdx, rcx
  03c5f	48 8b ca	 mov	 rcx, rdx
  03c62	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  03c6a	48 23 d1	 and	 rdx, rcx
  03c6d	48 8b ca	 mov	 rcx, rdx
  03c70	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  03c78	48 33 d1	 xor	 rdx, rcx
  03c7b	48 8b ca	 mov	 rcx, rdx
  03c7e	48 8b 94 24 48
	01 00 00	 mov	 rdx, QWORD PTR W$[rsp+296]
  03c86	48 03 d0	 add	 rdx, rax
  03c89	48 8b c2	 mov	 rax, rdx
  03c8c	48 ba a8 b2 77
	3c bb 0a 6a 76	 mov	 rdx, 8532644243296465576 ; 766a0abb3c77b2a8H
  03c96	48 03 ca	 add	 rcx, rdx
  03c99	48 03 c1	 add	 rax, rcx
  03c9c	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  03ca4	48 8b 84 24 c8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+24]
  03cac	48 c1 e8 1c	 shr	 rax, 28
  03cb0	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  03cb8	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  03cbc	48 0b c1	 or	 rax, rcx
  03cbf	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  03cc7	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  03ccb	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  03cd3	48 c1 e2 1e	 shl	 rdx, 30
  03cd7	48 0b ca	 or	 rcx, rdx
  03cda	48 33 c1	 xor	 rax, rcx
  03cdd	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  03ce5	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  03ce9	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  03cf1	48 c1 e2 19	 shl	 rdx, 25
  03cf5	48 0b ca	 or	 rcx, rdx
  03cf8	48 33 c1	 xor	 rax, rcx
  03cfb	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  03d03	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  03d0b	48 0b d1	 or	 rdx, rcx
  03d0e	48 8b ca	 mov	 rcx, rdx
  03d11	48 23 8c 24 d8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+40]
  03d19	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  03d21	4c 8b 84 24 c8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+24]
  03d29	4c 23 c2	 and	 r8, rdx
  03d2c	49 8b d0	 mov	 rdx, r8
  03d2f	48 0b ca	 or	 rcx, rdx
  03d32	48 03 c1	 add	 rax, rcx
  03d35	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  03d3d	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  03d45	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  03d4d	48 03 c8	 add	 rcx, rax
  03d50	48 8b c1	 mov	 rax, rcx
  03d53	48 89 84 24 e0
	02 00 00	 mov	 QWORD PTR S$[rsp+48], rax
  03d5b	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  03d63	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  03d6b	48 03 c8	 add	 rcx, rax
  03d6e	48 8b c1	 mov	 rax, rcx
  03d71	48 89 84 24 c0
	02 00 00	 mov	 QWORD PTR S$[rsp+16], rax

; 198  :     RND(S[2],S[3],S[4],S[5],S[6],S[7],S[0],S[1],38,Py_ULL(0x81c2c92e47edaee6));

  03d79	48 8b 84 24 e0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+48]
  03d81	48 c1 e8 0e	 shr	 rax, 14
  03d85	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  03d8d	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  03d91	48 0b c1	 or	 rax, rcx
  03d94	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  03d9c	48 c1 e9 12	 shr	 rcx, 18
  03da0	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  03da8	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  03dac	48 0b ca	 or	 rcx, rdx
  03daf	48 33 c1	 xor	 rax, rcx
  03db2	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  03dba	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  03dbe	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  03dc6	48 c1 e2 17	 shl	 rdx, 23
  03dca	48 0b ca	 or	 rcx, rdx
  03dcd	48 33 c1	 xor	 rax, rcx
  03dd0	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  03dd8	48 03 c8	 add	 rcx, rax
  03ddb	48 8b c1	 mov	 rax, rcx
  03dde	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  03de6	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  03dee	48 33 d1	 xor	 rdx, rcx
  03df1	48 8b ca	 mov	 rcx, rdx
  03df4	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  03dfc	48 23 d1	 and	 rdx, rcx
  03dff	48 8b ca	 mov	 rcx, rdx
  03e02	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  03e0a	48 33 d1	 xor	 rdx, rcx
  03e0d	48 8b ca	 mov	 rcx, rdx
  03e10	48 8b 94 24 50
	01 00 00	 mov	 rdx, QWORD PTR W$[rsp+304]
  03e18	48 03 d0	 add	 rdx, rax
  03e1b	48 8b c2	 mov	 rax, rdx
  03e1e	48 ba e6 ae ed
	47 2e c9 c2 81	 mov	 rdx, -9096487096722542874 ; 81c2c92e47edaee6H
  03e28	48 03 ca	 add	 rcx, rdx
  03e2b	48 03 c1	 add	 rax, rcx
  03e2e	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  03e36	48 8b 84 24 c0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+16]
  03e3e	48 c1 e8 1c	 shr	 rax, 28
  03e42	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  03e4a	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  03e4e	48 0b c1	 or	 rax, rcx
  03e51	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  03e59	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  03e5d	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  03e65	48 c1 e2 1e	 shl	 rdx, 30
  03e69	48 0b ca	 or	 rcx, rdx
  03e6c	48 33 c1	 xor	 rax, rcx
  03e6f	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  03e77	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  03e7b	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  03e83	48 c1 e2 19	 shl	 rdx, 25
  03e87	48 0b ca	 or	 rcx, rdx
  03e8a	48 33 c1	 xor	 rax, rcx
  03e8d	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  03e95	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  03e9d	48 0b d1	 or	 rdx, rcx
  03ea0	48 8b ca	 mov	 rcx, rdx
  03ea3	48 23 8c 24 d0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+32]
  03eab	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  03eb3	4c 8b 84 24 c0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+16]
  03ebb	4c 23 c2	 and	 r8, rdx
  03ebe	49 8b d0	 mov	 rdx, r8
  03ec1	48 0b ca	 or	 rcx, rdx
  03ec4	48 03 c1	 add	 rax, rcx
  03ec7	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  03ecf	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  03ed7	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  03edf	48 03 c8	 add	 rcx, rax
  03ee2	48 8b c1	 mov	 rax, rcx
  03ee5	48 89 84 24 d8
	02 00 00	 mov	 QWORD PTR S$[rsp+40], rax
  03eed	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  03ef5	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  03efd	48 03 c8	 add	 rcx, rax
  03f00	48 8b c1	 mov	 rax, rcx
  03f03	48 89 84 24 b8
	02 00 00	 mov	 QWORD PTR S$[rsp+8], rax

; 199  :     RND(S[1],S[2],S[3],S[4],S[5],S[6],S[7],S[0],39,Py_ULL(0x92722c851482353b));

  03f0b	48 8b 84 24 d8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+40]
  03f13	48 c1 e8 0e	 shr	 rax, 14
  03f17	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  03f1f	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  03f23	48 0b c1	 or	 rax, rcx
  03f26	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  03f2e	48 c1 e9 12	 shr	 rcx, 18
  03f32	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  03f3a	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  03f3e	48 0b ca	 or	 rcx, rdx
  03f41	48 33 c1	 xor	 rax, rcx
  03f44	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  03f4c	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  03f50	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  03f58	48 c1 e2 17	 shl	 rdx, 23
  03f5c	48 0b ca	 or	 rcx, rdx
  03f5f	48 33 c1	 xor	 rax, rcx
  03f62	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  03f6a	48 03 c8	 add	 rcx, rax
  03f6d	48 8b c1	 mov	 rax, rcx
  03f70	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  03f78	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  03f80	48 33 d1	 xor	 rdx, rcx
  03f83	48 8b ca	 mov	 rcx, rdx
  03f86	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  03f8e	48 23 d1	 and	 rdx, rcx
  03f91	48 8b ca	 mov	 rcx, rdx
  03f94	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  03f9c	48 33 d1	 xor	 rdx, rcx
  03f9f	48 8b ca	 mov	 rcx, rdx
  03fa2	48 8b 94 24 58
	01 00 00	 mov	 rdx, QWORD PTR W$[rsp+312]
  03faa	48 03 d0	 add	 rdx, rax
  03fad	48 8b c2	 mov	 rax, rdx
  03fb0	48 ba 3b 35 82
	14 85 2c 72 92	 mov	 rdx, -7894198246740708037 ; 92722c851482353bH
  03fba	48 03 ca	 add	 rcx, rdx
  03fbd	48 03 c1	 add	 rax, rcx
  03fc0	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  03fc8	48 8b 84 24 b8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+8]
  03fd0	48 c1 e8 1c	 shr	 rax, 28
  03fd4	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  03fdc	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  03fe0	48 0b c1	 or	 rax, rcx
  03fe3	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  03feb	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  03fef	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  03ff7	48 c1 e2 1e	 shl	 rdx, 30
  03ffb	48 0b ca	 or	 rcx, rdx
  03ffe	48 33 c1	 xor	 rax, rcx
  04001	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  04009	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  0400d	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  04015	48 c1 e2 19	 shl	 rdx, 25
  04019	48 0b ca	 or	 rcx, rdx
  0401c	48 33 c1	 xor	 rax, rcx
  0401f	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  04027	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  0402f	48 0b d1	 or	 rdx, rcx
  04032	48 8b ca	 mov	 rcx, rdx
  04035	48 23 8c 24 c8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+24]
  0403d	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  04045	4c 8b 84 24 b8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+8]
  0404d	4c 23 c2	 and	 r8, rdx
  04050	49 8b d0	 mov	 rdx, r8
  04053	48 0b ca	 or	 rcx, rdx
  04056	48 03 c1	 add	 rax, rcx
  04059	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  04061	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  04069	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  04071	48 03 c8	 add	 rcx, rax
  04074	48 8b c1	 mov	 rax, rcx
  04077	48 89 84 24 d0
	02 00 00	 mov	 QWORD PTR S$[rsp+32], rax
  0407f	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  04087	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  0408f	48 03 c8	 add	 rcx, rax
  04092	48 8b c1	 mov	 rax, rcx
  04095	48 89 84 24 b0
	02 00 00	 mov	 QWORD PTR S$[rsp], rax

; 200  :     RND(S[0],S[1],S[2],S[3],S[4],S[5],S[6],S[7],40,Py_ULL(0xa2bfe8a14cf10364));

  0409d	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+32]
  040a5	48 c1 e8 0e	 shr	 rax, 14
  040a9	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  040b1	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  040b5	48 0b c1	 or	 rax, rcx
  040b8	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  040c0	48 c1 e9 12	 shr	 rcx, 18
  040c4	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  040cc	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  040d0	48 0b ca	 or	 rcx, rdx
  040d3	48 33 c1	 xor	 rax, rcx
  040d6	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  040de	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  040e2	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  040ea	48 c1 e2 17	 shl	 rdx, 23
  040ee	48 0b ca	 or	 rcx, rdx
  040f1	48 33 c1	 xor	 rax, rcx
  040f4	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  040fc	48 03 c8	 add	 rcx, rax
  040ff	48 8b c1	 mov	 rax, rcx
  04102	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  0410a	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  04112	48 33 d1	 xor	 rdx, rcx
  04115	48 8b ca	 mov	 rcx, rdx
  04118	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  04120	48 23 d1	 and	 rdx, rcx
  04123	48 8b ca	 mov	 rcx, rdx
  04126	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  0412e	48 33 d1	 xor	 rdx, rcx
  04131	48 8b ca	 mov	 rcx, rdx
  04134	48 8b 94 24 60
	01 00 00	 mov	 rdx, QWORD PTR W$[rsp+320]
  0413c	48 03 d0	 add	 rdx, rax
  0413f	48 8b c2	 mov	 rax, rdx
  04142	48 ba 64 03 f1
	4c a1 e8 bf a2	 mov	 rdx, -6719396339535248540 ; a2bfe8a14cf10364H
  0414c	48 03 ca	 add	 rcx, rdx
  0414f	48 03 c1	 add	 rax, rcx
  04152	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  0415a	48 8b 84 24 b0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp]
  04162	48 c1 e8 1c	 shr	 rax, 28
  04166	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  0416e	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  04172	48 0b c1	 or	 rax, rcx
  04175	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  0417d	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  04181	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  04189	48 c1 e2 1e	 shl	 rdx, 30
  0418d	48 0b ca	 or	 rcx, rdx
  04190	48 33 c1	 xor	 rax, rcx
  04193	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  0419b	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  0419f	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  041a7	48 c1 e2 19	 shl	 rdx, 25
  041ab	48 0b ca	 or	 rcx, rdx
  041ae	48 33 c1	 xor	 rax, rcx
  041b1	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  041b9	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  041c1	48 0b d1	 or	 rdx, rcx
  041c4	48 8b ca	 mov	 rcx, rdx
  041c7	48 23 8c 24 c0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+16]
  041cf	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  041d7	4c 8b 84 24 b0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp]
  041df	4c 23 c2	 and	 r8, rdx
  041e2	49 8b d0	 mov	 rdx, r8
  041e5	48 0b ca	 or	 rcx, rdx
  041e8	48 03 c1	 add	 rax, rcx
  041eb	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  041f3	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  041fb	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  04203	48 03 c8	 add	 rcx, rax
  04206	48 8b c1	 mov	 rax, rcx
  04209	48 89 84 24 c8
	02 00 00	 mov	 QWORD PTR S$[rsp+24], rax
  04211	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  04219	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  04221	48 03 c8	 add	 rcx, rax
  04224	48 8b c1	 mov	 rax, rcx
  04227	48 89 84 24 e8
	02 00 00	 mov	 QWORD PTR S$[rsp+56], rax

; 201  :     RND(S[7],S[0],S[1],S[2],S[3],S[4],S[5],S[6],41,Py_ULL(0xa81a664bbc423001));

  0422f	48 8b 84 24 c8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+24]
  04237	48 c1 e8 0e	 shr	 rax, 14
  0423b	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  04243	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  04247	48 0b c1	 or	 rax, rcx
  0424a	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  04252	48 c1 e9 12	 shr	 rcx, 18
  04256	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  0425e	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  04262	48 0b ca	 or	 rcx, rdx
  04265	48 33 c1	 xor	 rax, rcx
  04268	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  04270	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  04274	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  0427c	48 c1 e2 17	 shl	 rdx, 23
  04280	48 0b ca	 or	 rcx, rdx
  04283	48 33 c1	 xor	 rax, rcx
  04286	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  0428e	48 03 c8	 add	 rcx, rax
  04291	48 8b c1	 mov	 rax, rcx
  04294	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  0429c	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  042a4	48 33 d1	 xor	 rdx, rcx
  042a7	48 8b ca	 mov	 rcx, rdx
  042aa	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  042b2	48 23 d1	 and	 rdx, rcx
  042b5	48 8b ca	 mov	 rcx, rdx
  042b8	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  042c0	48 33 d1	 xor	 rdx, rcx
  042c3	48 8b ca	 mov	 rcx, rdx
  042c6	48 8b 94 24 68
	01 00 00	 mov	 rdx, QWORD PTR W$[rsp+328]
  042ce	48 03 d0	 add	 rdx, rax
  042d1	48 8b c2	 mov	 rax, rdx
  042d4	48 ba 01 30 42
	bc 4b 66 1a a8	 mov	 rdx, -6333637450476146687 ; a81a664bbc423001H
  042de	48 03 ca	 add	 rcx, rdx
  042e1	48 03 c1	 add	 rax, rcx
  042e4	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  042ec	48 8b 84 24 e8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+56]
  042f4	48 c1 e8 1c	 shr	 rax, 28
  042f8	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  04300	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  04304	48 0b c1	 or	 rax, rcx
  04307	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  0430f	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  04313	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  0431b	48 c1 e2 1e	 shl	 rdx, 30
  0431f	48 0b ca	 or	 rcx, rdx
  04322	48 33 c1	 xor	 rax, rcx
  04325	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  0432d	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  04331	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  04339	48 c1 e2 19	 shl	 rdx, 25
  0433d	48 0b ca	 or	 rcx, rdx
  04340	48 33 c1	 xor	 rax, rcx
  04343	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  0434b	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  04353	48 0b d1	 or	 rdx, rcx
  04356	48 8b ca	 mov	 rcx, rdx
  04359	48 23 8c 24 b8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+8]
  04361	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  04369	4c 8b 84 24 e8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+56]
  04371	4c 23 c2	 and	 r8, rdx
  04374	49 8b d0	 mov	 rdx, r8
  04377	48 0b ca	 or	 rcx, rdx
  0437a	48 03 c1	 add	 rax, rcx
  0437d	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  04385	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  0438d	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  04395	48 03 c8	 add	 rcx, rax
  04398	48 8b c1	 mov	 rax, rcx
  0439b	48 89 84 24 c0
	02 00 00	 mov	 QWORD PTR S$[rsp+16], rax
  043a3	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  043ab	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  043b3	48 03 c8	 add	 rcx, rax
  043b6	48 8b c1	 mov	 rax, rcx
  043b9	48 89 84 24 e0
	02 00 00	 mov	 QWORD PTR S$[rsp+48], rax

; 202  :     RND(S[6],S[7],S[0],S[1],S[2],S[3],S[4],S[5],42,Py_ULL(0xc24b8b70d0f89791));

  043c1	48 8b 84 24 c0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+16]
  043c9	48 c1 e8 0e	 shr	 rax, 14
  043cd	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  043d5	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  043d9	48 0b c1	 or	 rax, rcx
  043dc	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  043e4	48 c1 e9 12	 shr	 rcx, 18
  043e8	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  043f0	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  043f4	48 0b ca	 or	 rcx, rdx
  043f7	48 33 c1	 xor	 rax, rcx
  043fa	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  04402	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  04406	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  0440e	48 c1 e2 17	 shl	 rdx, 23
  04412	48 0b ca	 or	 rcx, rdx
  04415	48 33 c1	 xor	 rax, rcx
  04418	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  04420	48 03 c8	 add	 rcx, rax
  04423	48 8b c1	 mov	 rax, rcx
  04426	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  0442e	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  04436	48 33 d1	 xor	 rdx, rcx
  04439	48 8b ca	 mov	 rcx, rdx
  0443c	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  04444	48 23 d1	 and	 rdx, rcx
  04447	48 8b ca	 mov	 rcx, rdx
  0444a	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  04452	48 33 d1	 xor	 rdx, rcx
  04455	48 8b ca	 mov	 rcx, rdx
  04458	48 8b 94 24 70
	01 00 00	 mov	 rdx, QWORD PTR W$[rsp+336]
  04460	48 03 d0	 add	 rdx, rax
  04463	48 8b c2	 mov	 rax, rdx
  04466	48 ba 91 97 f8
	d0 70 8b 4b c2	 mov	 rdx, -4446306890439682159 ; c24b8b70d0f89791H
  04470	48 03 ca	 add	 rcx, rdx
  04473	48 03 c1	 add	 rax, rcx
  04476	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  0447e	48 8b 84 24 e0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+48]
  04486	48 c1 e8 1c	 shr	 rax, 28
  0448a	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  04492	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  04496	48 0b c1	 or	 rax, rcx
  04499	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  044a1	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  044a5	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  044ad	48 c1 e2 1e	 shl	 rdx, 30
  044b1	48 0b ca	 or	 rcx, rdx
  044b4	48 33 c1	 xor	 rax, rcx
  044b7	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  044bf	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  044c3	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  044cb	48 c1 e2 19	 shl	 rdx, 25
  044cf	48 0b ca	 or	 rcx, rdx
  044d2	48 33 c1	 xor	 rax, rcx
  044d5	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  044dd	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  044e5	48 0b d1	 or	 rdx, rcx
  044e8	48 8b ca	 mov	 rcx, rdx
  044eb	48 23 8c 24 b0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp]
  044f3	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  044fb	4c 8b 84 24 e0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+48]
  04503	4c 23 c2	 and	 r8, rdx
  04506	49 8b d0	 mov	 rdx, r8
  04509	48 0b ca	 or	 rcx, rdx
  0450c	48 03 c1	 add	 rax, rcx
  0450f	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  04517	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  0451f	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  04527	48 03 c8	 add	 rcx, rax
  0452a	48 8b c1	 mov	 rax, rcx
  0452d	48 89 84 24 b8
	02 00 00	 mov	 QWORD PTR S$[rsp+8], rax
  04535	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  0453d	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  04545	48 03 c8	 add	 rcx, rax
  04548	48 8b c1	 mov	 rax, rcx
  0454b	48 89 84 24 d8
	02 00 00	 mov	 QWORD PTR S$[rsp+40], rax

; 203  :     RND(S[5],S[6],S[7],S[0],S[1],S[2],S[3],S[4],43,Py_ULL(0xc76c51a30654be30));

  04553	48 8b 84 24 b8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+8]
  0455b	48 c1 e8 0e	 shr	 rax, 14
  0455f	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  04567	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  0456b	48 0b c1	 or	 rax, rcx
  0456e	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  04576	48 c1 e9 12	 shr	 rcx, 18
  0457a	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  04582	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  04586	48 0b ca	 or	 rcx, rdx
  04589	48 33 c1	 xor	 rax, rcx
  0458c	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  04594	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  04598	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  045a0	48 c1 e2 17	 shl	 rdx, 23
  045a4	48 0b ca	 or	 rcx, rdx
  045a7	48 33 c1	 xor	 rax, rcx
  045aa	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  045b2	48 03 c8	 add	 rcx, rax
  045b5	48 8b c1	 mov	 rax, rcx
  045b8	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  045c0	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  045c8	48 33 d1	 xor	 rdx, rcx
  045cb	48 8b ca	 mov	 rcx, rdx
  045ce	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  045d6	48 23 d1	 and	 rdx, rcx
  045d9	48 8b ca	 mov	 rcx, rdx
  045dc	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  045e4	48 33 d1	 xor	 rdx, rcx
  045e7	48 8b ca	 mov	 rcx, rdx
  045ea	48 8b 94 24 78
	01 00 00	 mov	 rdx, QWORD PTR W$[rsp+344]
  045f2	48 03 d0	 add	 rdx, rax
  045f5	48 8b c2	 mov	 rax, rdx
  045f8	48 ba 30 be 54
	06 a3 51 6c c7	 mov	 rdx, -4076793802049405392 ; c76c51a30654be30H
  04602	48 03 ca	 add	 rcx, rdx
  04605	48 03 c1	 add	 rax, rcx
  04608	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  04610	48 8b 84 24 d8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+40]
  04618	48 c1 e8 1c	 shr	 rax, 28
  0461c	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  04624	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  04628	48 0b c1	 or	 rax, rcx
  0462b	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  04633	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  04637	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  0463f	48 c1 e2 1e	 shl	 rdx, 30
  04643	48 0b ca	 or	 rcx, rdx
  04646	48 33 c1	 xor	 rax, rcx
  04649	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  04651	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  04655	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  0465d	48 c1 e2 19	 shl	 rdx, 25
  04661	48 0b ca	 or	 rcx, rdx
  04664	48 33 c1	 xor	 rax, rcx
  04667	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  0466f	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  04677	48 0b d1	 or	 rdx, rcx
  0467a	48 8b ca	 mov	 rcx, rdx
  0467d	48 23 8c 24 e8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+56]
  04685	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  0468d	4c 8b 84 24 d8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+40]
  04695	4c 23 c2	 and	 r8, rdx
  04698	49 8b d0	 mov	 rdx, r8
  0469b	48 0b ca	 or	 rcx, rdx
  0469e	48 03 c1	 add	 rax, rcx
  046a1	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  046a9	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  046b1	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  046b9	48 03 c8	 add	 rcx, rax
  046bc	48 8b c1	 mov	 rax, rcx
  046bf	48 89 84 24 b0
	02 00 00	 mov	 QWORD PTR S$[rsp], rax
  046c7	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  046cf	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  046d7	48 03 c8	 add	 rcx, rax
  046da	48 8b c1	 mov	 rax, rcx
  046dd	48 89 84 24 d0
	02 00 00	 mov	 QWORD PTR S$[rsp+32], rax

; 204  :     RND(S[4],S[5],S[6],S[7],S[0],S[1],S[2],S[3],44,Py_ULL(0xd192e819d6ef5218));

  046e5	48 8b 84 24 b0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp]
  046ed	48 c1 e8 0e	 shr	 rax, 14
  046f1	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  046f9	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  046fd	48 0b c1	 or	 rax, rcx
  04700	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  04708	48 c1 e9 12	 shr	 rcx, 18
  0470c	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  04714	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  04718	48 0b ca	 or	 rcx, rdx
  0471b	48 33 c1	 xor	 rax, rcx
  0471e	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  04726	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  0472a	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  04732	48 c1 e2 17	 shl	 rdx, 23
  04736	48 0b ca	 or	 rcx, rdx
  04739	48 33 c1	 xor	 rax, rcx
  0473c	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  04744	48 03 c8	 add	 rcx, rax
  04747	48 8b c1	 mov	 rax, rcx
  0474a	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  04752	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  0475a	48 33 d1	 xor	 rdx, rcx
  0475d	48 8b ca	 mov	 rcx, rdx
  04760	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  04768	48 23 d1	 and	 rdx, rcx
  0476b	48 8b ca	 mov	 rcx, rdx
  0476e	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  04776	48 33 d1	 xor	 rdx, rcx
  04779	48 8b ca	 mov	 rcx, rdx
  0477c	48 8b 94 24 80
	01 00 00	 mov	 rdx, QWORD PTR W$[rsp+352]
  04784	48 03 d0	 add	 rdx, rax
  04787	48 8b c2	 mov	 rax, rdx
  0478a	48 ba 18 52 ef
	d6 19 e8 92 d1	 mov	 rdx, -3345356375505022440 ; d192e819d6ef5218H
  04794	48 03 ca	 add	 rcx, rdx
  04797	48 03 c1	 add	 rax, rcx
  0479a	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  047a2	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+32]
  047aa	48 c1 e8 1c	 shr	 rax, 28
  047ae	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  047b6	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  047ba	48 0b c1	 or	 rax, rcx
  047bd	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  047c5	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  047c9	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  047d1	48 c1 e2 1e	 shl	 rdx, 30
  047d5	48 0b ca	 or	 rcx, rdx
  047d8	48 33 c1	 xor	 rax, rcx
  047db	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  047e3	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  047e7	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  047ef	48 c1 e2 19	 shl	 rdx, 25
  047f3	48 0b ca	 or	 rcx, rdx
  047f6	48 33 c1	 xor	 rax, rcx
  047f9	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  04801	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  04809	48 0b d1	 or	 rdx, rcx
  0480c	48 8b ca	 mov	 rcx, rdx
  0480f	48 23 8c 24 e0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+48]
  04817	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  0481f	4c 8b 84 24 d0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+32]
  04827	4c 23 c2	 and	 r8, rdx
  0482a	49 8b d0	 mov	 rdx, r8
  0482d	48 0b ca	 or	 rcx, rdx
  04830	48 03 c1	 add	 rax, rcx
  04833	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  0483b	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  04843	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  0484b	48 03 c8	 add	 rcx, rax
  0484e	48 8b c1	 mov	 rax, rcx
  04851	48 89 84 24 e8
	02 00 00	 mov	 QWORD PTR S$[rsp+56], rax
  04859	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  04861	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  04869	48 03 c8	 add	 rcx, rax
  0486c	48 8b c1	 mov	 rax, rcx
  0486f	48 89 84 24 c8
	02 00 00	 mov	 QWORD PTR S$[rsp+24], rax

; 205  :     RND(S[3],S[4],S[5],S[6],S[7],S[0],S[1],S[2],45,Py_ULL(0xd69906245565a910));

  04877	48 8b 84 24 e8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+56]
  0487f	48 c1 e8 0e	 shr	 rax, 14
  04883	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  0488b	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  0488f	48 0b c1	 or	 rax, rcx
  04892	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  0489a	48 c1 e9 12	 shr	 rcx, 18
  0489e	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  048a6	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  048aa	48 0b ca	 or	 rcx, rdx
  048ad	48 33 c1	 xor	 rax, rcx
  048b0	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  048b8	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  048bc	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  048c4	48 c1 e2 17	 shl	 rdx, 23
  048c8	48 0b ca	 or	 rcx, rdx
  048cb	48 33 c1	 xor	 rax, rcx
  048ce	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  048d6	48 03 c8	 add	 rcx, rax
  048d9	48 8b c1	 mov	 rax, rcx
  048dc	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  048e4	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  048ec	48 33 d1	 xor	 rdx, rcx
  048ef	48 8b ca	 mov	 rcx, rdx
  048f2	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  048fa	48 23 d1	 and	 rdx, rcx
  048fd	48 8b ca	 mov	 rcx, rdx
  04900	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  04908	48 33 d1	 xor	 rdx, rcx
  0490b	48 8b ca	 mov	 rcx, rdx
  0490e	48 8b 94 24 88
	01 00 00	 mov	 rdx, QWORD PTR W$[rsp+360]
  04916	48 03 d0	 add	 rdx, rax
  04919	48 8b c2	 mov	 rax, rdx
  0491c	48 ba 10 a9 65
	55 24 06 99 d6	 mov	 rdx, -2983346525034927856 ; d69906245565a910H
  04926	48 03 ca	 add	 rcx, rdx
  04929	48 03 c1	 add	 rax, rcx
  0492c	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  04934	48 8b 84 24 c8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+24]
  0493c	48 c1 e8 1c	 shr	 rax, 28
  04940	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  04948	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  0494c	48 0b c1	 or	 rax, rcx
  0494f	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  04957	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  0495b	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  04963	48 c1 e2 1e	 shl	 rdx, 30
  04967	48 0b ca	 or	 rcx, rdx
  0496a	48 33 c1	 xor	 rax, rcx
  0496d	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  04975	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  04979	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  04981	48 c1 e2 19	 shl	 rdx, 25
  04985	48 0b ca	 or	 rcx, rdx
  04988	48 33 c1	 xor	 rax, rcx
  0498b	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  04993	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  0499b	48 0b d1	 or	 rdx, rcx
  0499e	48 8b ca	 mov	 rcx, rdx
  049a1	48 23 8c 24 d8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+40]
  049a9	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  049b1	4c 8b 84 24 c8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+24]
  049b9	4c 23 c2	 and	 r8, rdx
  049bc	49 8b d0	 mov	 rdx, r8
  049bf	48 0b ca	 or	 rcx, rdx
  049c2	48 03 c1	 add	 rax, rcx
  049c5	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  049cd	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  049d5	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  049dd	48 03 c8	 add	 rcx, rax
  049e0	48 8b c1	 mov	 rax, rcx
  049e3	48 89 84 24 e0
	02 00 00	 mov	 QWORD PTR S$[rsp+48], rax
  049eb	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  049f3	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  049fb	48 03 c8	 add	 rcx, rax
  049fe	48 8b c1	 mov	 rax, rcx
  04a01	48 89 84 24 c0
	02 00 00	 mov	 QWORD PTR S$[rsp+16], rax

; 206  :     RND(S[2],S[3],S[4],S[5],S[6],S[7],S[0],S[1],46,Py_ULL(0xf40e35855771202a));

  04a09	48 8b 84 24 e0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+48]
  04a11	48 c1 e8 0e	 shr	 rax, 14
  04a15	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  04a1d	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  04a21	48 0b c1	 or	 rax, rcx
  04a24	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  04a2c	48 c1 e9 12	 shr	 rcx, 18
  04a30	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  04a38	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  04a3c	48 0b ca	 or	 rcx, rdx
  04a3f	48 33 c1	 xor	 rax, rcx
  04a42	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  04a4a	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  04a4e	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  04a56	48 c1 e2 17	 shl	 rdx, 23
  04a5a	48 0b ca	 or	 rcx, rdx
  04a5d	48 33 c1	 xor	 rax, rcx
  04a60	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  04a68	48 03 c8	 add	 rcx, rax
  04a6b	48 8b c1	 mov	 rax, rcx
  04a6e	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  04a76	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  04a7e	48 33 d1	 xor	 rdx, rcx
  04a81	48 8b ca	 mov	 rcx, rdx
  04a84	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  04a8c	48 23 d1	 and	 rdx, rcx
  04a8f	48 8b ca	 mov	 rcx, rdx
  04a92	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  04a9a	48 33 d1	 xor	 rdx, rcx
  04a9d	48 8b ca	 mov	 rcx, rdx
  04aa0	48 8b 94 24 90
	01 00 00	 mov	 rdx, QWORD PTR W$[rsp+368]
  04aa8	48 03 d0	 add	 rdx, rax
  04aab	48 8b c2	 mov	 rax, rdx
  04aae	48 ba 2a 20 71
	57 85 35 0e f4	 mov	 rdx, -860691631967231958 ; f40e35855771202aH
  04ab8	48 03 ca	 add	 rcx, rdx
  04abb	48 03 c1	 add	 rax, rcx
  04abe	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  04ac6	48 8b 84 24 c0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+16]
  04ace	48 c1 e8 1c	 shr	 rax, 28
  04ad2	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  04ada	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  04ade	48 0b c1	 or	 rax, rcx
  04ae1	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  04ae9	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  04aed	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  04af5	48 c1 e2 1e	 shl	 rdx, 30
  04af9	48 0b ca	 or	 rcx, rdx
  04afc	48 33 c1	 xor	 rax, rcx
  04aff	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  04b07	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  04b0b	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  04b13	48 c1 e2 19	 shl	 rdx, 25
  04b17	48 0b ca	 or	 rcx, rdx
  04b1a	48 33 c1	 xor	 rax, rcx
  04b1d	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  04b25	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  04b2d	48 0b d1	 or	 rdx, rcx
  04b30	48 8b ca	 mov	 rcx, rdx
  04b33	48 23 8c 24 d0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+32]
  04b3b	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  04b43	4c 8b 84 24 c0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+16]
  04b4b	4c 23 c2	 and	 r8, rdx
  04b4e	49 8b d0	 mov	 rdx, r8
  04b51	48 0b ca	 or	 rcx, rdx
  04b54	48 03 c1	 add	 rax, rcx
  04b57	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  04b5f	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  04b67	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  04b6f	48 03 c8	 add	 rcx, rax
  04b72	48 8b c1	 mov	 rax, rcx
  04b75	48 89 84 24 d8
	02 00 00	 mov	 QWORD PTR S$[rsp+40], rax
  04b7d	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  04b85	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  04b8d	48 03 c8	 add	 rcx, rax
  04b90	48 8b c1	 mov	 rax, rcx
  04b93	48 89 84 24 b8
	02 00 00	 mov	 QWORD PTR S$[rsp+8], rax

; 207  :     RND(S[1],S[2],S[3],S[4],S[5],S[6],S[7],S[0],47,Py_ULL(0x106aa07032bbd1b8));

  04b9b	48 8b 84 24 d8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+40]
  04ba3	48 c1 e8 0e	 shr	 rax, 14
  04ba7	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  04baf	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  04bb3	48 0b c1	 or	 rax, rcx
  04bb6	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  04bbe	48 c1 e9 12	 shr	 rcx, 18
  04bc2	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  04bca	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  04bce	48 0b ca	 or	 rcx, rdx
  04bd1	48 33 c1	 xor	 rax, rcx
  04bd4	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  04bdc	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  04be0	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  04be8	48 c1 e2 17	 shl	 rdx, 23
  04bec	48 0b ca	 or	 rcx, rdx
  04bef	48 33 c1	 xor	 rax, rcx
  04bf2	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  04bfa	48 03 c8	 add	 rcx, rax
  04bfd	48 8b c1	 mov	 rax, rcx
  04c00	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  04c08	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  04c10	48 33 d1	 xor	 rdx, rcx
  04c13	48 8b ca	 mov	 rcx, rdx
  04c16	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  04c1e	48 23 d1	 and	 rdx, rcx
  04c21	48 8b ca	 mov	 rcx, rdx
  04c24	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  04c2c	48 33 d1	 xor	 rdx, rcx
  04c2f	48 8b ca	 mov	 rcx, rdx
  04c32	48 8b 94 24 98
	01 00 00	 mov	 rdx, QWORD PTR W$[rsp+376]
  04c3a	48 03 d0	 add	 rdx, rax
  04c3d	48 8b c2	 mov	 rax, rdx
  04c40	48 ba b8 d1 bb
	32 70 a0 6a 10	 mov	 rdx, 1182934255886127544 ; 106aa07032bbd1b8H
  04c4a	48 03 ca	 add	 rcx, rdx
  04c4d	48 03 c1	 add	 rax, rcx
  04c50	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  04c58	48 8b 84 24 b8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+8]
  04c60	48 c1 e8 1c	 shr	 rax, 28
  04c64	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  04c6c	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  04c70	48 0b c1	 or	 rax, rcx
  04c73	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  04c7b	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  04c7f	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  04c87	48 c1 e2 1e	 shl	 rdx, 30
  04c8b	48 0b ca	 or	 rcx, rdx
  04c8e	48 33 c1	 xor	 rax, rcx
  04c91	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  04c99	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  04c9d	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  04ca5	48 c1 e2 19	 shl	 rdx, 25
  04ca9	48 0b ca	 or	 rcx, rdx
  04cac	48 33 c1	 xor	 rax, rcx
  04caf	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  04cb7	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  04cbf	48 0b d1	 or	 rdx, rcx
  04cc2	48 8b ca	 mov	 rcx, rdx
  04cc5	48 23 8c 24 c8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+24]
  04ccd	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  04cd5	4c 8b 84 24 b8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+8]
  04cdd	4c 23 c2	 and	 r8, rdx
  04ce0	49 8b d0	 mov	 rdx, r8
  04ce3	48 0b ca	 or	 rcx, rdx
  04ce6	48 03 c1	 add	 rax, rcx
  04ce9	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  04cf1	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  04cf9	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  04d01	48 03 c8	 add	 rcx, rax
  04d04	48 8b c1	 mov	 rax, rcx
  04d07	48 89 84 24 d0
	02 00 00	 mov	 QWORD PTR S$[rsp+32], rax
  04d0f	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  04d17	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  04d1f	48 03 c8	 add	 rcx, rax
  04d22	48 8b c1	 mov	 rax, rcx
  04d25	48 89 84 24 b0
	02 00 00	 mov	 QWORD PTR S$[rsp], rax

; 208  :     RND(S[0],S[1],S[2],S[3],S[4],S[5],S[6],S[7],48,Py_ULL(0x19a4c116b8d2d0c8));

  04d2d	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+32]
  04d35	48 c1 e8 0e	 shr	 rax, 14
  04d39	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  04d41	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  04d45	48 0b c1	 or	 rax, rcx
  04d48	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  04d50	48 c1 e9 12	 shr	 rcx, 18
  04d54	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  04d5c	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  04d60	48 0b ca	 or	 rcx, rdx
  04d63	48 33 c1	 xor	 rax, rcx
  04d66	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  04d6e	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  04d72	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  04d7a	48 c1 e2 17	 shl	 rdx, 23
  04d7e	48 0b ca	 or	 rcx, rdx
  04d81	48 33 c1	 xor	 rax, rcx
  04d84	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  04d8c	48 03 c8	 add	 rcx, rax
  04d8f	48 8b c1	 mov	 rax, rcx
  04d92	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  04d9a	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  04da2	48 33 d1	 xor	 rdx, rcx
  04da5	48 8b ca	 mov	 rcx, rdx
  04da8	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  04db0	48 23 d1	 and	 rdx, rcx
  04db3	48 8b ca	 mov	 rcx, rdx
  04db6	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  04dbe	48 33 d1	 xor	 rdx, rcx
  04dc1	48 8b ca	 mov	 rcx, rdx
  04dc4	48 8b 94 24 a0
	01 00 00	 mov	 rdx, QWORD PTR W$[rsp+384]
  04dcc	48 03 d0	 add	 rdx, rax
  04dcf	48 8b c2	 mov	 rax, rdx
  04dd2	48 ba c8 d0 d2
	b8 16 c1 a4 19	 mov	 rdx, 1847814050463011016 ; 19a4c116b8d2d0c8H
  04ddc	48 03 ca	 add	 rcx, rdx
  04ddf	48 03 c1	 add	 rax, rcx
  04de2	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  04dea	48 8b 84 24 b0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp]
  04df2	48 c1 e8 1c	 shr	 rax, 28
  04df6	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  04dfe	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  04e02	48 0b c1	 or	 rax, rcx
  04e05	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  04e0d	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  04e11	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  04e19	48 c1 e2 1e	 shl	 rdx, 30
  04e1d	48 0b ca	 or	 rcx, rdx
  04e20	48 33 c1	 xor	 rax, rcx
  04e23	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  04e2b	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  04e2f	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  04e37	48 c1 e2 19	 shl	 rdx, 25
  04e3b	48 0b ca	 or	 rcx, rdx
  04e3e	48 33 c1	 xor	 rax, rcx
  04e41	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  04e49	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  04e51	48 0b d1	 or	 rdx, rcx
  04e54	48 8b ca	 mov	 rcx, rdx
  04e57	48 23 8c 24 c0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+16]
  04e5f	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  04e67	4c 8b 84 24 b0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp]
  04e6f	4c 23 c2	 and	 r8, rdx
  04e72	49 8b d0	 mov	 rdx, r8
  04e75	48 0b ca	 or	 rcx, rdx
  04e78	48 03 c1	 add	 rax, rcx
  04e7b	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  04e83	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  04e8b	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  04e93	48 03 c8	 add	 rcx, rax
  04e96	48 8b c1	 mov	 rax, rcx
  04e99	48 89 84 24 c8
	02 00 00	 mov	 QWORD PTR S$[rsp+24], rax
  04ea1	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  04ea9	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  04eb1	48 03 c8	 add	 rcx, rax
  04eb4	48 8b c1	 mov	 rax, rcx
  04eb7	48 89 84 24 e8
	02 00 00	 mov	 QWORD PTR S$[rsp+56], rax

; 209  :     RND(S[7],S[0],S[1],S[2],S[3],S[4],S[5],S[6],49,Py_ULL(0x1e376c085141ab53));

  04ebf	48 8b 84 24 c8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+24]
  04ec7	48 c1 e8 0e	 shr	 rax, 14
  04ecb	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  04ed3	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  04ed7	48 0b c1	 or	 rax, rcx
  04eda	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  04ee2	48 c1 e9 12	 shr	 rcx, 18
  04ee6	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  04eee	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  04ef2	48 0b ca	 or	 rcx, rdx
  04ef5	48 33 c1	 xor	 rax, rcx
  04ef8	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  04f00	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  04f04	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  04f0c	48 c1 e2 17	 shl	 rdx, 23
  04f10	48 0b ca	 or	 rcx, rdx
  04f13	48 33 c1	 xor	 rax, rcx
  04f16	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  04f1e	48 03 c8	 add	 rcx, rax
  04f21	48 8b c1	 mov	 rax, rcx
  04f24	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  04f2c	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  04f34	48 33 d1	 xor	 rdx, rcx
  04f37	48 8b ca	 mov	 rcx, rdx
  04f3a	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  04f42	48 23 d1	 and	 rdx, rcx
  04f45	48 8b ca	 mov	 rcx, rdx
  04f48	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  04f50	48 33 d1	 xor	 rdx, rcx
  04f53	48 8b ca	 mov	 rcx, rdx
  04f56	48 8b 94 24 a8
	01 00 00	 mov	 rdx, QWORD PTR W$[rsp+392]
  04f5e	48 03 d0	 add	 rdx, rax
  04f61	48 8b c2	 mov	 rax, rdx
  04f64	48 ba 53 ab 41
	51 08 6c 37 1e	 mov	 rdx, 2177327727835720531 ; 1e376c085141ab53H
  04f6e	48 03 ca	 add	 rcx, rdx
  04f71	48 03 c1	 add	 rax, rcx
  04f74	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  04f7c	48 8b 84 24 e8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+56]
  04f84	48 c1 e8 1c	 shr	 rax, 28
  04f88	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  04f90	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  04f94	48 0b c1	 or	 rax, rcx
  04f97	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  04f9f	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  04fa3	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  04fab	48 c1 e2 1e	 shl	 rdx, 30
  04faf	48 0b ca	 or	 rcx, rdx
  04fb2	48 33 c1	 xor	 rax, rcx
  04fb5	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  04fbd	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  04fc1	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  04fc9	48 c1 e2 19	 shl	 rdx, 25
  04fcd	48 0b ca	 or	 rcx, rdx
  04fd0	48 33 c1	 xor	 rax, rcx
  04fd3	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  04fdb	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  04fe3	48 0b d1	 or	 rdx, rcx
  04fe6	48 8b ca	 mov	 rcx, rdx
  04fe9	48 23 8c 24 b8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+8]
  04ff1	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  04ff9	4c 8b 84 24 e8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+56]
  05001	4c 23 c2	 and	 r8, rdx
  05004	49 8b d0	 mov	 rdx, r8
  05007	48 0b ca	 or	 rcx, rdx
  0500a	48 03 c1	 add	 rax, rcx
  0500d	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  05015	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  0501d	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  05025	48 03 c8	 add	 rcx, rax
  05028	48 8b c1	 mov	 rax, rcx
  0502b	48 89 84 24 c0
	02 00 00	 mov	 QWORD PTR S$[rsp+16], rax
  05033	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  0503b	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  05043	48 03 c8	 add	 rcx, rax
  05046	48 8b c1	 mov	 rax, rcx
  05049	48 89 84 24 e0
	02 00 00	 mov	 QWORD PTR S$[rsp+48], rax

; 210  :     RND(S[6],S[7],S[0],S[1],S[2],S[3],S[4],S[5],50,Py_ULL(0x2748774cdf8eeb99));

  05051	48 8b 84 24 c0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+16]
  05059	48 c1 e8 0e	 shr	 rax, 14
  0505d	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  05065	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  05069	48 0b c1	 or	 rax, rcx
  0506c	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  05074	48 c1 e9 12	 shr	 rcx, 18
  05078	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  05080	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  05084	48 0b ca	 or	 rcx, rdx
  05087	48 33 c1	 xor	 rax, rcx
  0508a	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  05092	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  05096	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  0509e	48 c1 e2 17	 shl	 rdx, 23
  050a2	48 0b ca	 or	 rcx, rdx
  050a5	48 33 c1	 xor	 rax, rcx
  050a8	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  050b0	48 03 c8	 add	 rcx, rax
  050b3	48 8b c1	 mov	 rax, rcx
  050b6	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  050be	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  050c6	48 33 d1	 xor	 rdx, rcx
  050c9	48 8b ca	 mov	 rcx, rdx
  050cc	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  050d4	48 23 d1	 and	 rdx, rcx
  050d7	48 8b ca	 mov	 rcx, rdx
  050da	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  050e2	48 33 d1	 xor	 rdx, rcx
  050e5	48 8b ca	 mov	 rcx, rdx
  050e8	48 8b 94 24 b0
	01 00 00	 mov	 rdx, QWORD PTR W$[rsp+400]
  050f0	48 03 d0	 add	 rdx, rax
  050f3	48 8b c2	 mov	 rax, rdx
  050f6	48 ba 99 eb 8e
	df 4c 77 48 27	 mov	 rdx, 2830643537854262169 ; 2748774cdf8eeb99H
  05100	48 03 ca	 add	 rcx, rdx
  05103	48 03 c1	 add	 rax, rcx
  05106	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  0510e	48 8b 84 24 e0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+48]
  05116	48 c1 e8 1c	 shr	 rax, 28
  0511a	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  05122	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  05126	48 0b c1	 or	 rax, rcx
  05129	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  05131	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  05135	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  0513d	48 c1 e2 1e	 shl	 rdx, 30
  05141	48 0b ca	 or	 rcx, rdx
  05144	48 33 c1	 xor	 rax, rcx
  05147	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  0514f	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  05153	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  0515b	48 c1 e2 19	 shl	 rdx, 25
  0515f	48 0b ca	 or	 rcx, rdx
  05162	48 33 c1	 xor	 rax, rcx
  05165	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  0516d	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  05175	48 0b d1	 or	 rdx, rcx
  05178	48 8b ca	 mov	 rcx, rdx
  0517b	48 23 8c 24 b0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp]
  05183	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  0518b	4c 8b 84 24 e0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+48]
  05193	4c 23 c2	 and	 r8, rdx
  05196	49 8b d0	 mov	 rdx, r8
  05199	48 0b ca	 or	 rcx, rdx
  0519c	48 03 c1	 add	 rax, rcx
  0519f	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  051a7	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  051af	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  051b7	48 03 c8	 add	 rcx, rax
  051ba	48 8b c1	 mov	 rax, rcx
  051bd	48 89 84 24 b8
	02 00 00	 mov	 QWORD PTR S$[rsp+8], rax
  051c5	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  051cd	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  051d5	48 03 c8	 add	 rcx, rax
  051d8	48 8b c1	 mov	 rax, rcx
  051db	48 89 84 24 d8
	02 00 00	 mov	 QWORD PTR S$[rsp+40], rax

; 211  :     RND(S[5],S[6],S[7],S[0],S[1],S[2],S[3],S[4],51,Py_ULL(0x34b0bcb5e19b48a8));

  051e3	48 8b 84 24 b8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+8]
  051eb	48 c1 e8 0e	 shr	 rax, 14
  051ef	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  051f7	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  051fb	48 0b c1	 or	 rax, rcx
  051fe	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  05206	48 c1 e9 12	 shr	 rcx, 18
  0520a	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  05212	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  05216	48 0b ca	 or	 rcx, rdx
  05219	48 33 c1	 xor	 rax, rcx
  0521c	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  05224	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  05228	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  05230	48 c1 e2 17	 shl	 rdx, 23
  05234	48 0b ca	 or	 rcx, rdx
  05237	48 33 c1	 xor	 rax, rcx
  0523a	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  05242	48 03 c8	 add	 rcx, rax
  05245	48 8b c1	 mov	 rax, rcx
  05248	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  05250	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  05258	48 33 d1	 xor	 rdx, rcx
  0525b	48 8b ca	 mov	 rcx, rdx
  0525e	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  05266	48 23 d1	 and	 rdx, rcx
  05269	48 8b ca	 mov	 rcx, rdx
  0526c	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  05274	48 33 d1	 xor	 rdx, rcx
  05277	48 8b ca	 mov	 rcx, rdx
  0527a	48 8b 94 24 b8
	01 00 00	 mov	 rdx, QWORD PTR W$[rsp+408]
  05282	48 03 d0	 add	 rdx, rax
  05285	48 8b c2	 mov	 rax, rdx
  05288	48 ba a8 48 9b
	e1 b5 bc b0 34	 mov	 rdx, 3796741975233480872 ; 34b0bcb5e19b48a8H
  05292	48 03 ca	 add	 rcx, rdx
  05295	48 03 c1	 add	 rax, rcx
  05298	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  052a0	48 8b 84 24 d8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+40]
  052a8	48 c1 e8 1c	 shr	 rax, 28
  052ac	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  052b4	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  052b8	48 0b c1	 or	 rax, rcx
  052bb	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  052c3	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  052c7	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  052cf	48 c1 e2 1e	 shl	 rdx, 30
  052d3	48 0b ca	 or	 rcx, rdx
  052d6	48 33 c1	 xor	 rax, rcx
  052d9	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  052e1	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  052e5	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  052ed	48 c1 e2 19	 shl	 rdx, 25
  052f1	48 0b ca	 or	 rcx, rdx
  052f4	48 33 c1	 xor	 rax, rcx
  052f7	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  052ff	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  05307	48 0b d1	 or	 rdx, rcx
  0530a	48 8b ca	 mov	 rcx, rdx
  0530d	48 23 8c 24 e8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+56]
  05315	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  0531d	4c 8b 84 24 d8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+40]
  05325	4c 23 c2	 and	 r8, rdx
  05328	49 8b d0	 mov	 rdx, r8
  0532b	48 0b ca	 or	 rcx, rdx
  0532e	48 03 c1	 add	 rax, rcx
  05331	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  05339	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  05341	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  05349	48 03 c8	 add	 rcx, rax
  0534c	48 8b c1	 mov	 rax, rcx
  0534f	48 89 84 24 b0
	02 00 00	 mov	 QWORD PTR S$[rsp], rax
  05357	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  0535f	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  05367	48 03 c8	 add	 rcx, rax
  0536a	48 8b c1	 mov	 rax, rcx
  0536d	48 89 84 24 d0
	02 00 00	 mov	 QWORD PTR S$[rsp+32], rax

; 212  :     RND(S[4],S[5],S[6],S[7],S[0],S[1],S[2],S[3],52,Py_ULL(0x391c0cb3c5c95a63));

  05375	48 8b 84 24 b0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp]
  0537d	48 c1 e8 0e	 shr	 rax, 14
  05381	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  05389	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  0538d	48 0b c1	 or	 rax, rcx
  05390	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  05398	48 c1 e9 12	 shr	 rcx, 18
  0539c	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  053a4	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  053a8	48 0b ca	 or	 rcx, rdx
  053ab	48 33 c1	 xor	 rax, rcx
  053ae	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  053b6	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  053ba	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  053c2	48 c1 e2 17	 shl	 rdx, 23
  053c6	48 0b ca	 or	 rcx, rdx
  053c9	48 33 c1	 xor	 rax, rcx
  053cc	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  053d4	48 03 c8	 add	 rcx, rax
  053d7	48 8b c1	 mov	 rax, rcx
  053da	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  053e2	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  053ea	48 33 d1	 xor	 rdx, rcx
  053ed	48 8b ca	 mov	 rcx, rdx
  053f0	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  053f8	48 23 d1	 and	 rdx, rcx
  053fb	48 8b ca	 mov	 rcx, rdx
  053fe	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  05406	48 33 d1	 xor	 rdx, rcx
  05409	48 8b ca	 mov	 rcx, rdx
  0540c	48 8b 94 24 c0
	01 00 00	 mov	 rdx, QWORD PTR W$[rsp+416]
  05414	48 03 d0	 add	 rdx, rax
  05417	48 8b c2	 mov	 rax, rdx
  0541a	48 ba 63 5a c9
	c5 b3 0c 1c 39	 mov	 rdx, 4115178125766777443 ; 391c0cb3c5c95a63H
  05424	48 03 ca	 add	 rcx, rdx
  05427	48 03 c1	 add	 rax, rcx
  0542a	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  05432	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+32]
  0543a	48 c1 e8 1c	 shr	 rax, 28
  0543e	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  05446	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  0544a	48 0b c1	 or	 rax, rcx
  0544d	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  05455	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  05459	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  05461	48 c1 e2 1e	 shl	 rdx, 30
  05465	48 0b ca	 or	 rcx, rdx
  05468	48 33 c1	 xor	 rax, rcx
  0546b	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  05473	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  05477	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  0547f	48 c1 e2 19	 shl	 rdx, 25
  05483	48 0b ca	 or	 rcx, rdx
  05486	48 33 c1	 xor	 rax, rcx
  05489	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  05491	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  05499	48 0b d1	 or	 rdx, rcx
  0549c	48 8b ca	 mov	 rcx, rdx
  0549f	48 23 8c 24 e0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+48]
  054a7	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  054af	4c 8b 84 24 d0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+32]
  054b7	4c 23 c2	 and	 r8, rdx
  054ba	49 8b d0	 mov	 rdx, r8
  054bd	48 0b ca	 or	 rcx, rdx
  054c0	48 03 c1	 add	 rax, rcx
  054c3	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  054cb	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  054d3	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  054db	48 03 c8	 add	 rcx, rax
  054de	48 8b c1	 mov	 rax, rcx
  054e1	48 89 84 24 e8
	02 00 00	 mov	 QWORD PTR S$[rsp+56], rax
  054e9	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  054f1	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  054f9	48 03 c8	 add	 rcx, rax
  054fc	48 8b c1	 mov	 rax, rcx
  054ff	48 89 84 24 c8
	02 00 00	 mov	 QWORD PTR S$[rsp+24], rax

; 213  :     RND(S[3],S[4],S[5],S[6],S[7],S[0],S[1],S[2],53,Py_ULL(0x4ed8aa4ae3418acb));

  05507	48 8b 84 24 e8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+56]
  0550f	48 c1 e8 0e	 shr	 rax, 14
  05513	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  0551b	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  0551f	48 0b c1	 or	 rax, rcx
  05522	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  0552a	48 c1 e9 12	 shr	 rcx, 18
  0552e	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  05536	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  0553a	48 0b ca	 or	 rcx, rdx
  0553d	48 33 c1	 xor	 rax, rcx
  05540	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  05548	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  0554c	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  05554	48 c1 e2 17	 shl	 rdx, 23
  05558	48 0b ca	 or	 rcx, rdx
  0555b	48 33 c1	 xor	 rax, rcx
  0555e	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  05566	48 03 c8	 add	 rcx, rax
  05569	48 8b c1	 mov	 rax, rcx
  0556c	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  05574	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  0557c	48 33 d1	 xor	 rdx, rcx
  0557f	48 8b ca	 mov	 rcx, rdx
  05582	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  0558a	48 23 d1	 and	 rdx, rcx
  0558d	48 8b ca	 mov	 rcx, rdx
  05590	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  05598	48 33 d1	 xor	 rdx, rcx
  0559b	48 8b ca	 mov	 rcx, rdx
  0559e	48 8b 94 24 c8
	01 00 00	 mov	 rdx, QWORD PTR W$[rsp+424]
  055a6	48 03 d0	 add	 rdx, rax
  055a9	48 8b c2	 mov	 rax, rdx
  055ac	48 ba cb 8a 41
	e3 4a aa d8 4e	 mov	 rdx, 5681478168544905931 ; 4ed8aa4ae3418acbH
  055b6	48 03 ca	 add	 rcx, rdx
  055b9	48 03 c1	 add	 rax, rcx
  055bc	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  055c4	48 8b 84 24 c8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+24]
  055cc	48 c1 e8 1c	 shr	 rax, 28
  055d0	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  055d8	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  055dc	48 0b c1	 or	 rax, rcx
  055df	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  055e7	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  055eb	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  055f3	48 c1 e2 1e	 shl	 rdx, 30
  055f7	48 0b ca	 or	 rcx, rdx
  055fa	48 33 c1	 xor	 rax, rcx
  055fd	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  05605	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  05609	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  05611	48 c1 e2 19	 shl	 rdx, 25
  05615	48 0b ca	 or	 rcx, rdx
  05618	48 33 c1	 xor	 rax, rcx
  0561b	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  05623	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  0562b	48 0b d1	 or	 rdx, rcx
  0562e	48 8b ca	 mov	 rcx, rdx
  05631	48 23 8c 24 d8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+40]
  05639	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  05641	4c 8b 84 24 c8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+24]
  05649	4c 23 c2	 and	 r8, rdx
  0564c	49 8b d0	 mov	 rdx, r8
  0564f	48 0b ca	 or	 rcx, rdx
  05652	48 03 c1	 add	 rax, rcx
  05655	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  0565d	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  05665	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  0566d	48 03 c8	 add	 rcx, rax
  05670	48 8b c1	 mov	 rax, rcx
  05673	48 89 84 24 e0
	02 00 00	 mov	 QWORD PTR S$[rsp+48], rax
  0567b	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  05683	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  0568b	48 03 c8	 add	 rcx, rax
  0568e	48 8b c1	 mov	 rax, rcx
  05691	48 89 84 24 c0
	02 00 00	 mov	 QWORD PTR S$[rsp+16], rax

; 214  :     RND(S[2],S[3],S[4],S[5],S[6],S[7],S[0],S[1],54,Py_ULL(0x5b9cca4f7763e373));

  05699	48 8b 84 24 e0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+48]
  056a1	48 c1 e8 0e	 shr	 rax, 14
  056a5	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  056ad	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  056b1	48 0b c1	 or	 rax, rcx
  056b4	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  056bc	48 c1 e9 12	 shr	 rcx, 18
  056c0	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  056c8	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  056cc	48 0b ca	 or	 rcx, rdx
  056cf	48 33 c1	 xor	 rax, rcx
  056d2	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  056da	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  056de	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  056e6	48 c1 e2 17	 shl	 rdx, 23
  056ea	48 0b ca	 or	 rcx, rdx
  056ed	48 33 c1	 xor	 rax, rcx
  056f0	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  056f8	48 03 c8	 add	 rcx, rax
  056fb	48 8b c1	 mov	 rax, rcx
  056fe	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  05706	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  0570e	48 33 d1	 xor	 rdx, rcx
  05711	48 8b ca	 mov	 rcx, rdx
  05714	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  0571c	48 23 d1	 and	 rdx, rcx
  0571f	48 8b ca	 mov	 rcx, rdx
  05722	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  0572a	48 33 d1	 xor	 rdx, rcx
  0572d	48 8b ca	 mov	 rcx, rdx
  05730	48 8b 94 24 d0
	01 00 00	 mov	 rdx, QWORD PTR W$[rsp+432]
  05738	48 03 d0	 add	 rdx, rax
  0573b	48 8b c2	 mov	 rax, rdx
  0573e	48 ba 73 e3 63
	77 4f ca 9c 5b	 mov	 rdx, 6601373596472566643 ; 5b9cca4f7763e373H
  05748	48 03 ca	 add	 rcx, rdx
  0574b	48 03 c1	 add	 rax, rcx
  0574e	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  05756	48 8b 84 24 c0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+16]
  0575e	48 c1 e8 1c	 shr	 rax, 28
  05762	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  0576a	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  0576e	48 0b c1	 or	 rax, rcx
  05771	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  05779	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  0577d	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  05785	48 c1 e2 1e	 shl	 rdx, 30
  05789	48 0b ca	 or	 rcx, rdx
  0578c	48 33 c1	 xor	 rax, rcx
  0578f	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  05797	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  0579b	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  057a3	48 c1 e2 19	 shl	 rdx, 25
  057a7	48 0b ca	 or	 rcx, rdx
  057aa	48 33 c1	 xor	 rax, rcx
  057ad	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  057b5	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  057bd	48 0b d1	 or	 rdx, rcx
  057c0	48 8b ca	 mov	 rcx, rdx
  057c3	48 23 8c 24 d0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+32]
  057cb	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  057d3	4c 8b 84 24 c0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+16]
  057db	4c 23 c2	 and	 r8, rdx
  057de	49 8b d0	 mov	 rdx, r8
  057e1	48 0b ca	 or	 rcx, rdx
  057e4	48 03 c1	 add	 rax, rcx
  057e7	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  057ef	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  057f7	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  057ff	48 03 c8	 add	 rcx, rax
  05802	48 8b c1	 mov	 rax, rcx
  05805	48 89 84 24 d8
	02 00 00	 mov	 QWORD PTR S$[rsp+40], rax
  0580d	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  05815	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  0581d	48 03 c8	 add	 rcx, rax
  05820	48 8b c1	 mov	 rax, rcx
  05823	48 89 84 24 b8
	02 00 00	 mov	 QWORD PTR S$[rsp+8], rax

; 215  :     RND(S[1],S[2],S[3],S[4],S[5],S[6],S[7],S[0],55,Py_ULL(0x682e6ff3d6b2b8a3));

  0582b	48 8b 84 24 d8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+40]
  05833	48 c1 e8 0e	 shr	 rax, 14
  05837	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  0583f	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  05843	48 0b c1	 or	 rax, rcx
  05846	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  0584e	48 c1 e9 12	 shr	 rcx, 18
  05852	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  0585a	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  0585e	48 0b ca	 or	 rcx, rdx
  05861	48 33 c1	 xor	 rax, rcx
  05864	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  0586c	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  05870	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  05878	48 c1 e2 17	 shl	 rdx, 23
  0587c	48 0b ca	 or	 rcx, rdx
  0587f	48 33 c1	 xor	 rax, rcx
  05882	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  0588a	48 03 c8	 add	 rcx, rax
  0588d	48 8b c1	 mov	 rax, rcx
  05890	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  05898	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  058a0	48 33 d1	 xor	 rdx, rcx
  058a3	48 8b ca	 mov	 rcx, rdx
  058a6	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  058ae	48 23 d1	 and	 rdx, rcx
  058b1	48 8b ca	 mov	 rcx, rdx
  058b4	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  058bc	48 33 d1	 xor	 rdx, rcx
  058bf	48 8b ca	 mov	 rcx, rdx
  058c2	48 8b 94 24 d8
	01 00 00	 mov	 rdx, QWORD PTR W$[rsp+440]
  058ca	48 03 d0	 add	 rdx, rax
  058cd	48 8b c2	 mov	 rax, rdx
  058d0	48 ba a3 b8 b2
	d6 f3 6f 2e 68	 mov	 rdx, 7507060721942968483 ; 682e6ff3d6b2b8a3H
  058da	48 03 ca	 add	 rcx, rdx
  058dd	48 03 c1	 add	 rax, rcx
  058e0	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  058e8	48 8b 84 24 b8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+8]
  058f0	48 c1 e8 1c	 shr	 rax, 28
  058f4	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  058fc	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  05900	48 0b c1	 or	 rax, rcx
  05903	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  0590b	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  0590f	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  05917	48 c1 e2 1e	 shl	 rdx, 30
  0591b	48 0b ca	 or	 rcx, rdx
  0591e	48 33 c1	 xor	 rax, rcx
  05921	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  05929	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  0592d	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  05935	48 c1 e2 19	 shl	 rdx, 25
  05939	48 0b ca	 or	 rcx, rdx
  0593c	48 33 c1	 xor	 rax, rcx
  0593f	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  05947	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  0594f	48 0b d1	 or	 rdx, rcx
  05952	48 8b ca	 mov	 rcx, rdx
  05955	48 23 8c 24 c8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+24]
  0595d	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  05965	4c 8b 84 24 b8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+8]
  0596d	4c 23 c2	 and	 r8, rdx
  05970	49 8b d0	 mov	 rdx, r8
  05973	48 0b ca	 or	 rcx, rdx
  05976	48 03 c1	 add	 rax, rcx
  05979	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  05981	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  05989	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  05991	48 03 c8	 add	 rcx, rax
  05994	48 8b c1	 mov	 rax, rcx
  05997	48 89 84 24 d0
	02 00 00	 mov	 QWORD PTR S$[rsp+32], rax
  0599f	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  059a7	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  059af	48 03 c8	 add	 rcx, rax
  059b2	48 8b c1	 mov	 rax, rcx
  059b5	48 89 84 24 b0
	02 00 00	 mov	 QWORD PTR S$[rsp], rax

; 216  :     RND(S[0],S[1],S[2],S[3],S[4],S[5],S[6],S[7],56,Py_ULL(0x748f82ee5defb2fc));

  059bd	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+32]
  059c5	48 c1 e8 0e	 shr	 rax, 14
  059c9	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  059d1	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  059d5	48 0b c1	 or	 rax, rcx
  059d8	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  059e0	48 c1 e9 12	 shr	 rcx, 18
  059e4	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  059ec	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  059f0	48 0b ca	 or	 rcx, rdx
  059f3	48 33 c1	 xor	 rax, rcx
  059f6	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  059fe	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  05a02	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  05a0a	48 c1 e2 17	 shl	 rdx, 23
  05a0e	48 0b ca	 or	 rcx, rdx
  05a11	48 33 c1	 xor	 rax, rcx
  05a14	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  05a1c	48 03 c8	 add	 rcx, rax
  05a1f	48 8b c1	 mov	 rax, rcx
  05a22	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  05a2a	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  05a32	48 33 d1	 xor	 rdx, rcx
  05a35	48 8b ca	 mov	 rcx, rdx
  05a38	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  05a40	48 23 d1	 and	 rdx, rcx
  05a43	48 8b ca	 mov	 rcx, rdx
  05a46	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  05a4e	48 33 d1	 xor	 rdx, rcx
  05a51	48 8b ca	 mov	 rcx, rdx
  05a54	48 8b 94 24 e0
	01 00 00	 mov	 rdx, QWORD PTR W$[rsp+448]
  05a5c	48 03 d0	 add	 rdx, rax
  05a5f	48 8b c2	 mov	 rax, rdx
  05a62	48 ba fc b2 ef
	5d ee 82 8f 74	 mov	 rdx, 8399075790359081724 ; 748f82ee5defb2fcH
  05a6c	48 03 ca	 add	 rcx, rdx
  05a6f	48 03 c1	 add	 rax, rcx
  05a72	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  05a7a	48 8b 84 24 b0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp]
  05a82	48 c1 e8 1c	 shr	 rax, 28
  05a86	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  05a8e	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  05a92	48 0b c1	 or	 rax, rcx
  05a95	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  05a9d	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  05aa1	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  05aa9	48 c1 e2 1e	 shl	 rdx, 30
  05aad	48 0b ca	 or	 rcx, rdx
  05ab0	48 33 c1	 xor	 rax, rcx
  05ab3	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  05abb	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  05abf	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  05ac7	48 c1 e2 19	 shl	 rdx, 25
  05acb	48 0b ca	 or	 rcx, rdx
  05ace	48 33 c1	 xor	 rax, rcx
  05ad1	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  05ad9	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  05ae1	48 0b d1	 or	 rdx, rcx
  05ae4	48 8b ca	 mov	 rcx, rdx
  05ae7	48 23 8c 24 c0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+16]
  05aef	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  05af7	4c 8b 84 24 b0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp]
  05aff	4c 23 c2	 and	 r8, rdx
  05b02	49 8b d0	 mov	 rdx, r8
  05b05	48 0b ca	 or	 rcx, rdx
  05b08	48 03 c1	 add	 rax, rcx
  05b0b	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  05b13	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  05b1b	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  05b23	48 03 c8	 add	 rcx, rax
  05b26	48 8b c1	 mov	 rax, rcx
  05b29	48 89 84 24 c8
	02 00 00	 mov	 QWORD PTR S$[rsp+24], rax
  05b31	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  05b39	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  05b41	48 03 c8	 add	 rcx, rax
  05b44	48 8b c1	 mov	 rax, rcx
  05b47	48 89 84 24 e8
	02 00 00	 mov	 QWORD PTR S$[rsp+56], rax

; 217  :     RND(S[7],S[0],S[1],S[2],S[3],S[4],S[5],S[6],57,Py_ULL(0x78a5636f43172f60));

  05b4f	48 8b 84 24 c8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+24]
  05b57	48 c1 e8 0e	 shr	 rax, 14
  05b5b	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  05b63	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  05b67	48 0b c1	 or	 rax, rcx
  05b6a	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  05b72	48 c1 e9 12	 shr	 rcx, 18
  05b76	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  05b7e	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  05b82	48 0b ca	 or	 rcx, rdx
  05b85	48 33 c1	 xor	 rax, rcx
  05b88	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  05b90	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  05b94	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  05b9c	48 c1 e2 17	 shl	 rdx, 23
  05ba0	48 0b ca	 or	 rcx, rdx
  05ba3	48 33 c1	 xor	 rax, rcx
  05ba6	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  05bae	48 03 c8	 add	 rcx, rax
  05bb1	48 8b c1	 mov	 rax, rcx
  05bb4	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  05bbc	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  05bc4	48 33 d1	 xor	 rdx, rcx
  05bc7	48 8b ca	 mov	 rcx, rdx
  05bca	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  05bd2	48 23 d1	 and	 rdx, rcx
  05bd5	48 8b ca	 mov	 rcx, rdx
  05bd8	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  05be0	48 33 d1	 xor	 rdx, rcx
  05be3	48 8b ca	 mov	 rcx, rdx
  05be6	48 8b 94 24 e8
	01 00 00	 mov	 rdx, QWORD PTR W$[rsp+456]
  05bee	48 03 d0	 add	 rdx, rax
  05bf1	48 8b c2	 mov	 rax, rdx
  05bf4	48 ba 60 2f 17
	43 6f 63 a5 78	 mov	 rdx, 8693463985226723168 ; 78a5636f43172f60H
  05bfe	48 03 ca	 add	 rcx, rdx
  05c01	48 03 c1	 add	 rax, rcx
  05c04	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  05c0c	48 8b 84 24 e8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+56]
  05c14	48 c1 e8 1c	 shr	 rax, 28
  05c18	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  05c20	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  05c24	48 0b c1	 or	 rax, rcx
  05c27	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  05c2f	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  05c33	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  05c3b	48 c1 e2 1e	 shl	 rdx, 30
  05c3f	48 0b ca	 or	 rcx, rdx
  05c42	48 33 c1	 xor	 rax, rcx
  05c45	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  05c4d	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  05c51	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  05c59	48 c1 e2 19	 shl	 rdx, 25
  05c5d	48 0b ca	 or	 rcx, rdx
  05c60	48 33 c1	 xor	 rax, rcx
  05c63	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  05c6b	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  05c73	48 0b d1	 or	 rdx, rcx
  05c76	48 8b ca	 mov	 rcx, rdx
  05c79	48 23 8c 24 b8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+8]
  05c81	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  05c89	4c 8b 84 24 e8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+56]
  05c91	4c 23 c2	 and	 r8, rdx
  05c94	49 8b d0	 mov	 rdx, r8
  05c97	48 0b ca	 or	 rcx, rdx
  05c9a	48 03 c1	 add	 rax, rcx
  05c9d	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  05ca5	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  05cad	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  05cb5	48 03 c8	 add	 rcx, rax
  05cb8	48 8b c1	 mov	 rax, rcx
  05cbb	48 89 84 24 c0
	02 00 00	 mov	 QWORD PTR S$[rsp+16], rax
  05cc3	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  05ccb	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  05cd3	48 03 c8	 add	 rcx, rax
  05cd6	48 8b c1	 mov	 rax, rcx
  05cd9	48 89 84 24 e0
	02 00 00	 mov	 QWORD PTR S$[rsp+48], rax

; 218  :     RND(S[6],S[7],S[0],S[1],S[2],S[3],S[4],S[5],58,Py_ULL(0x84c87814a1f0ab72));

  05ce1	48 8b 84 24 c0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+16]
  05ce9	48 c1 e8 0e	 shr	 rax, 14
  05ced	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  05cf5	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  05cf9	48 0b c1	 or	 rax, rcx
  05cfc	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  05d04	48 c1 e9 12	 shr	 rcx, 18
  05d08	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  05d10	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  05d14	48 0b ca	 or	 rcx, rdx
  05d17	48 33 c1	 xor	 rax, rcx
  05d1a	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  05d22	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  05d26	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  05d2e	48 c1 e2 17	 shl	 rdx, 23
  05d32	48 0b ca	 or	 rcx, rdx
  05d35	48 33 c1	 xor	 rax, rcx
  05d38	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  05d40	48 03 c8	 add	 rcx, rax
  05d43	48 8b c1	 mov	 rax, rcx
  05d46	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  05d4e	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  05d56	48 33 d1	 xor	 rdx, rcx
  05d59	48 8b ca	 mov	 rcx, rdx
  05d5c	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  05d64	48 23 d1	 and	 rdx, rcx
  05d67	48 8b ca	 mov	 rcx, rdx
  05d6a	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  05d72	48 33 d1	 xor	 rdx, rcx
  05d75	48 8b ca	 mov	 rcx, rdx
  05d78	48 8b 94 24 f0
	01 00 00	 mov	 rdx, QWORD PTR W$[rsp+464]
  05d80	48 03 d0	 add	 rdx, rax
  05d83	48 8b c2	 mov	 rax, rdx
  05d86	48 ba 72 ab f0
	a1 14 78 c8 84	 mov	 rdx, -8878714635349349518 ; 84c87814a1f0ab72H
  05d90	48 03 ca	 add	 rcx, rdx
  05d93	48 03 c1	 add	 rax, rcx
  05d96	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  05d9e	48 8b 84 24 e0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+48]
  05da6	48 c1 e8 1c	 shr	 rax, 28
  05daa	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  05db2	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  05db6	48 0b c1	 or	 rax, rcx
  05db9	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  05dc1	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  05dc5	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  05dcd	48 c1 e2 1e	 shl	 rdx, 30
  05dd1	48 0b ca	 or	 rcx, rdx
  05dd4	48 33 c1	 xor	 rax, rcx
  05dd7	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  05ddf	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  05de3	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  05deb	48 c1 e2 19	 shl	 rdx, 25
  05def	48 0b ca	 or	 rcx, rdx
  05df2	48 33 c1	 xor	 rax, rcx
  05df5	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  05dfd	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  05e05	48 0b d1	 or	 rdx, rcx
  05e08	48 8b ca	 mov	 rcx, rdx
  05e0b	48 23 8c 24 b0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp]
  05e13	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  05e1b	4c 8b 84 24 e0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+48]
  05e23	4c 23 c2	 and	 r8, rdx
  05e26	49 8b d0	 mov	 rdx, r8
  05e29	48 0b ca	 or	 rcx, rdx
  05e2c	48 03 c1	 add	 rax, rcx
  05e2f	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  05e37	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  05e3f	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  05e47	48 03 c8	 add	 rcx, rax
  05e4a	48 8b c1	 mov	 rax, rcx
  05e4d	48 89 84 24 b8
	02 00 00	 mov	 QWORD PTR S$[rsp+8], rax
  05e55	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  05e5d	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  05e65	48 03 c8	 add	 rcx, rax
  05e68	48 8b c1	 mov	 rax, rcx
  05e6b	48 89 84 24 d8
	02 00 00	 mov	 QWORD PTR S$[rsp+40], rax

; 219  :     RND(S[5],S[6],S[7],S[0],S[1],S[2],S[3],S[4],59,Py_ULL(0x8cc702081a6439ec));

  05e73	48 8b 84 24 b8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+8]
  05e7b	48 c1 e8 0e	 shr	 rax, 14
  05e7f	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  05e87	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  05e8b	48 0b c1	 or	 rax, rcx
  05e8e	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  05e96	48 c1 e9 12	 shr	 rcx, 18
  05e9a	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  05ea2	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  05ea6	48 0b ca	 or	 rcx, rdx
  05ea9	48 33 c1	 xor	 rax, rcx
  05eac	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  05eb4	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  05eb8	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  05ec0	48 c1 e2 17	 shl	 rdx, 23
  05ec4	48 0b ca	 or	 rcx, rdx
  05ec7	48 33 c1	 xor	 rax, rcx
  05eca	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  05ed2	48 03 c8	 add	 rcx, rax
  05ed5	48 8b c1	 mov	 rax, rcx
  05ed8	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  05ee0	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  05ee8	48 33 d1	 xor	 rdx, rcx
  05eeb	48 8b ca	 mov	 rcx, rdx
  05eee	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  05ef6	48 23 d1	 and	 rdx, rcx
  05ef9	48 8b ca	 mov	 rcx, rdx
  05efc	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  05f04	48 33 d1	 xor	 rdx, rcx
  05f07	48 8b ca	 mov	 rcx, rdx
  05f0a	48 8b 94 24 f8
	01 00 00	 mov	 rdx, QWORD PTR W$[rsp+472]
  05f12	48 03 d0	 add	 rdx, rax
  05f15	48 8b c2	 mov	 rax, rdx
  05f18	48 ba ec 39 64
	1a 08 02 c7 8c	 mov	 rdx, -8302665154208450068 ; 8cc702081a6439ecH
  05f22	48 03 ca	 add	 rcx, rdx
  05f25	48 03 c1	 add	 rax, rcx
  05f28	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  05f30	48 8b 84 24 d8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+40]
  05f38	48 c1 e8 1c	 shr	 rax, 28
  05f3c	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  05f44	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  05f48	48 0b c1	 or	 rax, rcx
  05f4b	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  05f53	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  05f57	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  05f5f	48 c1 e2 1e	 shl	 rdx, 30
  05f63	48 0b ca	 or	 rcx, rdx
  05f66	48 33 c1	 xor	 rax, rcx
  05f69	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  05f71	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  05f75	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  05f7d	48 c1 e2 19	 shl	 rdx, 25
  05f81	48 0b ca	 or	 rcx, rdx
  05f84	48 33 c1	 xor	 rax, rcx
  05f87	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  05f8f	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  05f97	48 0b d1	 or	 rdx, rcx
  05f9a	48 8b ca	 mov	 rcx, rdx
  05f9d	48 23 8c 24 e8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+56]
  05fa5	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  05fad	4c 8b 84 24 d8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+40]
  05fb5	4c 23 c2	 and	 r8, rdx
  05fb8	49 8b d0	 mov	 rdx, r8
  05fbb	48 0b ca	 or	 rcx, rdx
  05fbe	48 03 c1	 add	 rax, rcx
  05fc1	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  05fc9	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  05fd1	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  05fd9	48 03 c8	 add	 rcx, rax
  05fdc	48 8b c1	 mov	 rax, rcx
  05fdf	48 89 84 24 b0
	02 00 00	 mov	 QWORD PTR S$[rsp], rax
  05fe7	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  05fef	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  05ff7	48 03 c8	 add	 rcx, rax
  05ffa	48 8b c1	 mov	 rax, rcx
  05ffd	48 89 84 24 d0
	02 00 00	 mov	 QWORD PTR S$[rsp+32], rax

; 220  :     RND(S[4],S[5],S[6],S[7],S[0],S[1],S[2],S[3],60,Py_ULL(0x90befffa23631e28));

  06005	48 8b 84 24 b0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp]
  0600d	48 c1 e8 0e	 shr	 rax, 14
  06011	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  06019	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  0601d	48 0b c1	 or	 rax, rcx
  06020	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  06028	48 c1 e9 12	 shr	 rcx, 18
  0602c	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  06034	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  06038	48 0b ca	 or	 rcx, rdx
  0603b	48 33 c1	 xor	 rax, rcx
  0603e	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  06046	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  0604a	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  06052	48 c1 e2 17	 shl	 rdx, 23
  06056	48 0b ca	 or	 rcx, rdx
  06059	48 33 c1	 xor	 rax, rcx
  0605c	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  06064	48 03 c8	 add	 rcx, rax
  06067	48 8b c1	 mov	 rax, rcx
  0606a	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  06072	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  0607a	48 33 d1	 xor	 rdx, rcx
  0607d	48 8b ca	 mov	 rcx, rdx
  06080	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  06088	48 23 d1	 and	 rdx, rcx
  0608b	48 8b ca	 mov	 rcx, rdx
  0608e	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  06096	48 33 d1	 xor	 rdx, rcx
  06099	48 8b ca	 mov	 rcx, rdx
  0609c	48 8b 94 24 00
	02 00 00	 mov	 rdx, QWORD PTR W$[rsp+480]
  060a4	48 03 d0	 add	 rdx, rax
  060a7	48 8b c2	 mov	 rax, rdx
  060aa	48 ba 28 1e 63
	23 fa ff be 90	 mov	 rdx, -8016688836872298968 ; 90befffa23631e28H
  060b4	48 03 ca	 add	 rcx, rdx
  060b7	48 03 c1	 add	 rax, rcx
  060ba	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  060c2	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+32]
  060ca	48 c1 e8 1c	 shr	 rax, 28
  060ce	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  060d6	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  060da	48 0b c1	 or	 rax, rcx
  060dd	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  060e5	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  060e9	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  060f1	48 c1 e2 1e	 shl	 rdx, 30
  060f5	48 0b ca	 or	 rcx, rdx
  060f8	48 33 c1	 xor	 rax, rcx
  060fb	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  06103	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  06107	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  0610f	48 c1 e2 19	 shl	 rdx, 25
  06113	48 0b ca	 or	 rcx, rdx
  06116	48 33 c1	 xor	 rax, rcx
  06119	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  06121	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  06129	48 0b d1	 or	 rdx, rcx
  0612c	48 8b ca	 mov	 rcx, rdx
  0612f	48 23 8c 24 e0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+48]
  06137	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  0613f	4c 8b 84 24 d0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+32]
  06147	4c 23 c2	 and	 r8, rdx
  0614a	49 8b d0	 mov	 rdx, r8
  0614d	48 0b ca	 or	 rcx, rdx
  06150	48 03 c1	 add	 rax, rcx
  06153	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  0615b	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  06163	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  0616b	48 03 c8	 add	 rcx, rax
  0616e	48 8b c1	 mov	 rax, rcx
  06171	48 89 84 24 e8
	02 00 00	 mov	 QWORD PTR S$[rsp+56], rax
  06179	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  06181	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  06189	48 03 c8	 add	 rcx, rax
  0618c	48 8b c1	 mov	 rax, rcx
  0618f	48 89 84 24 c8
	02 00 00	 mov	 QWORD PTR S$[rsp+24], rax

; 221  :     RND(S[3],S[4],S[5],S[6],S[7],S[0],S[1],S[2],61,Py_ULL(0xa4506cebde82bde9));

  06197	48 8b 84 24 e8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+56]
  0619f	48 c1 e8 0e	 shr	 rax, 14
  061a3	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  061ab	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  061af	48 0b c1	 or	 rax, rcx
  061b2	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  061ba	48 c1 e9 12	 shr	 rcx, 18
  061be	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  061c6	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  061ca	48 0b ca	 or	 rcx, rdx
  061cd	48 33 c1	 xor	 rax, rcx
  061d0	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  061d8	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  061dc	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  061e4	48 c1 e2 17	 shl	 rdx, 23
  061e8	48 0b ca	 or	 rcx, rdx
  061eb	48 33 c1	 xor	 rax, rcx
  061ee	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  061f6	48 03 c8	 add	 rcx, rax
  061f9	48 8b c1	 mov	 rax, rcx
  061fc	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  06204	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  0620c	48 33 d1	 xor	 rdx, rcx
  0620f	48 8b ca	 mov	 rcx, rdx
  06212	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  0621a	48 23 d1	 and	 rdx, rcx
  0621d	48 8b ca	 mov	 rcx, rdx
  06220	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  06228	48 33 d1	 xor	 rdx, rcx
  0622b	48 8b ca	 mov	 rcx, rdx
  0622e	48 8b 94 24 08
	02 00 00	 mov	 rdx, QWORD PTR W$[rsp+488]
  06236	48 03 d0	 add	 rdx, rax
  06239	48 8b c2	 mov	 rax, rdx
  0623c	48 ba e9 bd 82
	de eb 6c 50 a4	 mov	 rdx, -6606660893046293015 ; a4506cebde82bde9H
  06246	48 03 ca	 add	 rcx, rdx
  06249	48 03 c1	 add	 rax, rcx
  0624c	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  06254	48 8b 84 24 c8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+24]
  0625c	48 c1 e8 1c	 shr	 rax, 28
  06260	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  06268	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  0626c	48 0b c1	 or	 rax, rcx
  0626f	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  06277	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  0627b	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  06283	48 c1 e2 1e	 shl	 rdx, 30
  06287	48 0b ca	 or	 rcx, rdx
  0628a	48 33 c1	 xor	 rax, rcx
  0628d	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  06295	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  06299	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  062a1	48 c1 e2 19	 shl	 rdx, 25
  062a5	48 0b ca	 or	 rcx, rdx
  062a8	48 33 c1	 xor	 rax, rcx
  062ab	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  062b3	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  062bb	48 0b d1	 or	 rdx, rcx
  062be	48 8b ca	 mov	 rcx, rdx
  062c1	48 23 8c 24 d8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+40]
  062c9	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  062d1	4c 8b 84 24 c8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+24]
  062d9	4c 23 c2	 and	 r8, rdx
  062dc	49 8b d0	 mov	 rdx, r8
  062df	48 0b ca	 or	 rcx, rdx
  062e2	48 03 c1	 add	 rax, rcx
  062e5	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  062ed	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  062f5	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  062fd	48 03 c8	 add	 rcx, rax
  06300	48 8b c1	 mov	 rax, rcx
  06303	48 89 84 24 e0
	02 00 00	 mov	 QWORD PTR S$[rsp+48], rax
  0630b	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  06313	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  0631b	48 03 c8	 add	 rcx, rax
  0631e	48 8b c1	 mov	 rax, rcx
  06321	48 89 84 24 c0
	02 00 00	 mov	 QWORD PTR S$[rsp+16], rax

; 222  :     RND(S[2],S[3],S[4],S[5],S[6],S[7],S[0],S[1],62,Py_ULL(0xbef9a3f7b2c67915));

  06329	48 8b 84 24 e0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+48]
  06331	48 c1 e8 0e	 shr	 rax, 14
  06335	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  0633d	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  06341	48 0b c1	 or	 rax, rcx
  06344	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  0634c	48 c1 e9 12	 shr	 rcx, 18
  06350	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  06358	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  0635c	48 0b ca	 or	 rcx, rdx
  0635f	48 33 c1	 xor	 rax, rcx
  06362	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  0636a	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  0636e	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  06376	48 c1 e2 17	 shl	 rdx, 23
  0637a	48 0b ca	 or	 rcx, rdx
  0637d	48 33 c1	 xor	 rax, rcx
  06380	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  06388	48 03 c8	 add	 rcx, rax
  0638b	48 8b c1	 mov	 rax, rcx
  0638e	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  06396	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  0639e	48 33 d1	 xor	 rdx, rcx
  063a1	48 8b ca	 mov	 rcx, rdx
  063a4	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  063ac	48 23 d1	 and	 rdx, rcx
  063af	48 8b ca	 mov	 rcx, rdx
  063b2	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  063ba	48 33 d1	 xor	 rdx, rcx
  063bd	48 8b ca	 mov	 rcx, rdx
  063c0	48 8b 94 24 10
	02 00 00	 mov	 rdx, QWORD PTR W$[rsp+496]
  063c8	48 03 d0	 add	 rdx, rax
  063cb	48 8b c2	 mov	 rax, rdx
  063ce	48 ba 15 79 c6
	b2 f7 a3 f9 be	 mov	 rdx, -4685533653050689259 ; bef9a3f7b2c67915H
  063d8	48 03 ca	 add	 rcx, rdx
  063db	48 03 c1	 add	 rax, rcx
  063de	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  063e6	48 8b 84 24 c0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+16]
  063ee	48 c1 e8 1c	 shr	 rax, 28
  063f2	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  063fa	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  063fe	48 0b c1	 or	 rax, rcx
  06401	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  06409	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  0640d	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  06415	48 c1 e2 1e	 shl	 rdx, 30
  06419	48 0b ca	 or	 rcx, rdx
  0641c	48 33 c1	 xor	 rax, rcx
  0641f	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  06427	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  0642b	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  06433	48 c1 e2 19	 shl	 rdx, 25
  06437	48 0b ca	 or	 rcx, rdx
  0643a	48 33 c1	 xor	 rax, rcx
  0643d	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  06445	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  0644d	48 0b d1	 or	 rdx, rcx
  06450	48 8b ca	 mov	 rcx, rdx
  06453	48 23 8c 24 d0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+32]
  0645b	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  06463	4c 8b 84 24 c0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+16]
  0646b	4c 23 c2	 and	 r8, rdx
  0646e	49 8b d0	 mov	 rdx, r8
  06471	48 0b ca	 or	 rcx, rdx
  06474	48 03 c1	 add	 rax, rcx
  06477	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  0647f	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  06487	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  0648f	48 03 c8	 add	 rcx, rax
  06492	48 8b c1	 mov	 rax, rcx
  06495	48 89 84 24 d8
	02 00 00	 mov	 QWORD PTR S$[rsp+40], rax
  0649d	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  064a5	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  064ad	48 03 c8	 add	 rcx, rax
  064b0	48 8b c1	 mov	 rax, rcx
  064b3	48 89 84 24 b8
	02 00 00	 mov	 QWORD PTR S$[rsp+8], rax

; 223  :     RND(S[1],S[2],S[3],S[4],S[5],S[6],S[7],S[0],63,Py_ULL(0xc67178f2e372532b));

  064bb	48 8b 84 24 d8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+40]
  064c3	48 c1 e8 0e	 shr	 rax, 14
  064c7	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  064cf	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  064d3	48 0b c1	 or	 rax, rcx
  064d6	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  064de	48 c1 e9 12	 shr	 rcx, 18
  064e2	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  064ea	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  064ee	48 0b ca	 or	 rcx, rdx
  064f1	48 33 c1	 xor	 rax, rcx
  064f4	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  064fc	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  06500	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  06508	48 c1 e2 17	 shl	 rdx, 23
  0650c	48 0b ca	 or	 rcx, rdx
  0650f	48 33 c1	 xor	 rax, rcx
  06512	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  0651a	48 03 c8	 add	 rcx, rax
  0651d	48 8b c1	 mov	 rax, rcx
  06520	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  06528	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  06530	48 33 d1	 xor	 rdx, rcx
  06533	48 8b ca	 mov	 rcx, rdx
  06536	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  0653e	48 23 d1	 and	 rdx, rcx
  06541	48 8b ca	 mov	 rcx, rdx
  06544	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  0654c	48 33 d1	 xor	 rdx, rcx
  0654f	48 8b ca	 mov	 rcx, rdx
  06552	48 8b 94 24 18
	02 00 00	 mov	 rdx, QWORD PTR W$[rsp+504]
  0655a	48 03 d0	 add	 rdx, rax
  0655d	48 8b c2	 mov	 rax, rdx
  06560	48 ba 2b 53 72
	e3 f2 78 71 c6	 mov	 rdx, -4147400797238176981 ; c67178f2e372532bH
  0656a	48 03 ca	 add	 rcx, rdx
  0656d	48 03 c1	 add	 rax, rcx
  06570	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  06578	48 8b 84 24 b8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+8]
  06580	48 c1 e8 1c	 shr	 rax, 28
  06584	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  0658c	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  06590	48 0b c1	 or	 rax, rcx
  06593	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  0659b	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  0659f	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  065a7	48 c1 e2 1e	 shl	 rdx, 30
  065ab	48 0b ca	 or	 rcx, rdx
  065ae	48 33 c1	 xor	 rax, rcx
  065b1	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  065b9	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  065bd	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  065c5	48 c1 e2 19	 shl	 rdx, 25
  065c9	48 0b ca	 or	 rcx, rdx
  065cc	48 33 c1	 xor	 rax, rcx
  065cf	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  065d7	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  065df	48 0b d1	 or	 rdx, rcx
  065e2	48 8b ca	 mov	 rcx, rdx
  065e5	48 23 8c 24 c8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+24]
  065ed	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  065f5	4c 8b 84 24 b8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+8]
  065fd	4c 23 c2	 and	 r8, rdx
  06600	49 8b d0	 mov	 rdx, r8
  06603	48 0b ca	 or	 rcx, rdx
  06606	48 03 c1	 add	 rax, rcx
  06609	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  06611	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  06619	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  06621	48 03 c8	 add	 rcx, rax
  06624	48 8b c1	 mov	 rax, rcx
  06627	48 89 84 24 d0
	02 00 00	 mov	 QWORD PTR S$[rsp+32], rax
  0662f	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  06637	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  0663f	48 03 c8	 add	 rcx, rax
  06642	48 8b c1	 mov	 rax, rcx
  06645	48 89 84 24 b0
	02 00 00	 mov	 QWORD PTR S$[rsp], rax

; 224  :     RND(S[0],S[1],S[2],S[3],S[4],S[5],S[6],S[7],64,Py_ULL(0xca273eceea26619c));

  0664d	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+32]
  06655	48 c1 e8 0e	 shr	 rax, 14
  06659	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  06661	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  06665	48 0b c1	 or	 rax, rcx
  06668	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  06670	48 c1 e9 12	 shr	 rcx, 18
  06674	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  0667c	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  06680	48 0b ca	 or	 rcx, rdx
  06683	48 33 c1	 xor	 rax, rcx
  06686	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  0668e	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  06692	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  0669a	48 c1 e2 17	 shl	 rdx, 23
  0669e	48 0b ca	 or	 rcx, rdx
  066a1	48 33 c1	 xor	 rax, rcx
  066a4	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  066ac	48 03 c8	 add	 rcx, rax
  066af	48 8b c1	 mov	 rax, rcx
  066b2	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  066ba	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  066c2	48 33 d1	 xor	 rdx, rcx
  066c5	48 8b ca	 mov	 rcx, rdx
  066c8	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  066d0	48 23 d1	 and	 rdx, rcx
  066d3	48 8b ca	 mov	 rcx, rdx
  066d6	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  066de	48 33 d1	 xor	 rdx, rcx
  066e1	48 8b ca	 mov	 rcx, rdx
  066e4	48 8b 94 24 20
	02 00 00	 mov	 rdx, QWORD PTR W$[rsp+512]
  066ec	48 03 d0	 add	 rdx, rax
  066ef	48 8b c2	 mov	 rax, rdx
  066f2	48 ba 9c 61 26
	ea ce 3e 27 ca	 mov	 rdx, -3880063495543823972 ; ca273eceea26619cH
  066fc	48 03 ca	 add	 rcx, rdx
  066ff	48 03 c1	 add	 rax, rcx
  06702	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  0670a	48 8b 84 24 b0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp]
  06712	48 c1 e8 1c	 shr	 rax, 28
  06716	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  0671e	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  06722	48 0b c1	 or	 rax, rcx
  06725	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  0672d	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  06731	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  06739	48 c1 e2 1e	 shl	 rdx, 30
  0673d	48 0b ca	 or	 rcx, rdx
  06740	48 33 c1	 xor	 rax, rcx
  06743	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  0674b	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  0674f	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  06757	48 c1 e2 19	 shl	 rdx, 25
  0675b	48 0b ca	 or	 rcx, rdx
  0675e	48 33 c1	 xor	 rax, rcx
  06761	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  06769	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  06771	48 0b d1	 or	 rdx, rcx
  06774	48 8b ca	 mov	 rcx, rdx
  06777	48 23 8c 24 c0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+16]
  0677f	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  06787	4c 8b 84 24 b0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp]
  0678f	4c 23 c2	 and	 r8, rdx
  06792	49 8b d0	 mov	 rdx, r8
  06795	48 0b ca	 or	 rcx, rdx
  06798	48 03 c1	 add	 rax, rcx
  0679b	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  067a3	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  067ab	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  067b3	48 03 c8	 add	 rcx, rax
  067b6	48 8b c1	 mov	 rax, rcx
  067b9	48 89 84 24 c8
	02 00 00	 mov	 QWORD PTR S$[rsp+24], rax
  067c1	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  067c9	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  067d1	48 03 c8	 add	 rcx, rax
  067d4	48 8b c1	 mov	 rax, rcx
  067d7	48 89 84 24 e8
	02 00 00	 mov	 QWORD PTR S$[rsp+56], rax

; 225  :     RND(S[7],S[0],S[1],S[2],S[3],S[4],S[5],S[6],65,Py_ULL(0xd186b8c721c0c207));

  067df	48 8b 84 24 c8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+24]
  067e7	48 c1 e8 0e	 shr	 rax, 14
  067eb	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  067f3	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  067f7	48 0b c1	 or	 rax, rcx
  067fa	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  06802	48 c1 e9 12	 shr	 rcx, 18
  06806	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  0680e	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  06812	48 0b ca	 or	 rcx, rdx
  06815	48 33 c1	 xor	 rax, rcx
  06818	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  06820	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  06824	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  0682c	48 c1 e2 17	 shl	 rdx, 23
  06830	48 0b ca	 or	 rcx, rdx
  06833	48 33 c1	 xor	 rax, rcx
  06836	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  0683e	48 03 c8	 add	 rcx, rax
  06841	48 8b c1	 mov	 rax, rcx
  06844	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  0684c	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  06854	48 33 d1	 xor	 rdx, rcx
  06857	48 8b ca	 mov	 rcx, rdx
  0685a	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  06862	48 23 d1	 and	 rdx, rcx
  06865	48 8b ca	 mov	 rcx, rdx
  06868	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  06870	48 33 d1	 xor	 rdx, rcx
  06873	48 8b ca	 mov	 rcx, rdx
  06876	48 8b 94 24 28
	02 00 00	 mov	 rdx, QWORD PTR W$[rsp+520]
  0687e	48 03 d0	 add	 rdx, rax
  06881	48 8b c2	 mov	 rax, rdx
  06884	48 ba 07 c2 c0
	21 c7 b8 86 d1	 mov	 rdx, -3348786107499101689 ; d186b8c721c0c207H
  0688e	48 03 ca	 add	 rcx, rdx
  06891	48 03 c1	 add	 rax, rcx
  06894	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  0689c	48 8b 84 24 e8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+56]
  068a4	48 c1 e8 1c	 shr	 rax, 28
  068a8	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  068b0	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  068b4	48 0b c1	 or	 rax, rcx
  068b7	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  068bf	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  068c3	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  068cb	48 c1 e2 1e	 shl	 rdx, 30
  068cf	48 0b ca	 or	 rcx, rdx
  068d2	48 33 c1	 xor	 rax, rcx
  068d5	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  068dd	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  068e1	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  068e9	48 c1 e2 19	 shl	 rdx, 25
  068ed	48 0b ca	 or	 rcx, rdx
  068f0	48 33 c1	 xor	 rax, rcx
  068f3	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  068fb	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  06903	48 0b d1	 or	 rdx, rcx
  06906	48 8b ca	 mov	 rcx, rdx
  06909	48 23 8c 24 b8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+8]
  06911	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  06919	4c 8b 84 24 e8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+56]
  06921	4c 23 c2	 and	 r8, rdx
  06924	49 8b d0	 mov	 rdx, r8
  06927	48 0b ca	 or	 rcx, rdx
  0692a	48 03 c1	 add	 rax, rcx
  0692d	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  06935	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  0693d	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  06945	48 03 c8	 add	 rcx, rax
  06948	48 8b c1	 mov	 rax, rcx
  0694b	48 89 84 24 c0
	02 00 00	 mov	 QWORD PTR S$[rsp+16], rax
  06953	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  0695b	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  06963	48 03 c8	 add	 rcx, rax
  06966	48 8b c1	 mov	 rax, rcx
  06969	48 89 84 24 e0
	02 00 00	 mov	 QWORD PTR S$[rsp+48], rax

; 226  :     RND(S[6],S[7],S[0],S[1],S[2],S[3],S[4],S[5],66,Py_ULL(0xeada7dd6cde0eb1e));

  06971	48 8b 84 24 c0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+16]
  06979	48 c1 e8 0e	 shr	 rax, 14
  0697d	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  06985	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  06989	48 0b c1	 or	 rax, rcx
  0698c	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  06994	48 c1 e9 12	 shr	 rcx, 18
  06998	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  069a0	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  069a4	48 0b ca	 or	 rcx, rdx
  069a7	48 33 c1	 xor	 rax, rcx
  069aa	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  069b2	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  069b6	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  069be	48 c1 e2 17	 shl	 rdx, 23
  069c2	48 0b ca	 or	 rcx, rdx
  069c5	48 33 c1	 xor	 rax, rcx
  069c8	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  069d0	48 03 c8	 add	 rcx, rax
  069d3	48 8b c1	 mov	 rax, rcx
  069d6	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  069de	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  069e6	48 33 d1	 xor	 rdx, rcx
  069e9	48 8b ca	 mov	 rcx, rdx
  069ec	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  069f4	48 23 d1	 and	 rdx, rcx
  069f7	48 8b ca	 mov	 rcx, rdx
  069fa	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  06a02	48 33 d1	 xor	 rdx, rcx
  06a05	48 8b ca	 mov	 rcx, rdx
  06a08	48 8b 94 24 30
	02 00 00	 mov	 rdx, QWORD PTR W$[rsp+528]
  06a10	48 03 d0	 add	 rdx, rax
  06a13	48 8b c2	 mov	 rax, rdx
  06a16	48 ba 1e eb e0
	cd d6 7d da ea	 mov	 rdx, -1523767162380948706 ; eada7dd6cde0eb1eH
  06a20	48 03 ca	 add	 rcx, rdx
  06a23	48 03 c1	 add	 rax, rcx
  06a26	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  06a2e	48 8b 84 24 e0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+48]
  06a36	48 c1 e8 1c	 shr	 rax, 28
  06a3a	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  06a42	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  06a46	48 0b c1	 or	 rax, rcx
  06a49	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  06a51	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  06a55	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  06a5d	48 c1 e2 1e	 shl	 rdx, 30
  06a61	48 0b ca	 or	 rcx, rdx
  06a64	48 33 c1	 xor	 rax, rcx
  06a67	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  06a6f	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  06a73	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  06a7b	48 c1 e2 19	 shl	 rdx, 25
  06a7f	48 0b ca	 or	 rcx, rdx
  06a82	48 33 c1	 xor	 rax, rcx
  06a85	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  06a8d	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  06a95	48 0b d1	 or	 rdx, rcx
  06a98	48 8b ca	 mov	 rcx, rdx
  06a9b	48 23 8c 24 b0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp]
  06aa3	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  06aab	4c 8b 84 24 e0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+48]
  06ab3	4c 23 c2	 and	 r8, rdx
  06ab6	49 8b d0	 mov	 rdx, r8
  06ab9	48 0b ca	 or	 rcx, rdx
  06abc	48 03 c1	 add	 rax, rcx
  06abf	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  06ac7	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  06acf	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  06ad7	48 03 c8	 add	 rcx, rax
  06ada	48 8b c1	 mov	 rax, rcx
  06add	48 89 84 24 b8
	02 00 00	 mov	 QWORD PTR S$[rsp+8], rax
  06ae5	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  06aed	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  06af5	48 03 c8	 add	 rcx, rax
  06af8	48 8b c1	 mov	 rax, rcx
  06afb	48 89 84 24 d8
	02 00 00	 mov	 QWORD PTR S$[rsp+40], rax

; 227  :     RND(S[5],S[6],S[7],S[0],S[1],S[2],S[3],S[4],67,Py_ULL(0xf57d4f7fee6ed178));

  06b03	48 8b 84 24 b8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+8]
  06b0b	48 c1 e8 0e	 shr	 rax, 14
  06b0f	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  06b17	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  06b1b	48 0b c1	 or	 rax, rcx
  06b1e	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  06b26	48 c1 e9 12	 shr	 rcx, 18
  06b2a	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  06b32	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  06b36	48 0b ca	 or	 rcx, rdx
  06b39	48 33 c1	 xor	 rax, rcx
  06b3c	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  06b44	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  06b48	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  06b50	48 c1 e2 17	 shl	 rdx, 23
  06b54	48 0b ca	 or	 rcx, rdx
  06b57	48 33 c1	 xor	 rax, rcx
  06b5a	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  06b62	48 03 c8	 add	 rcx, rax
  06b65	48 8b c1	 mov	 rax, rcx
  06b68	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  06b70	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  06b78	48 33 d1	 xor	 rdx, rcx
  06b7b	48 8b ca	 mov	 rcx, rdx
  06b7e	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  06b86	48 23 d1	 and	 rdx, rcx
  06b89	48 8b ca	 mov	 rcx, rdx
  06b8c	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  06b94	48 33 d1	 xor	 rdx, rcx
  06b97	48 8b ca	 mov	 rcx, rdx
  06b9a	48 8b 94 24 38
	02 00 00	 mov	 rdx, QWORD PTR W$[rsp+536]
  06ba2	48 03 d0	 add	 rdx, rax
  06ba5	48 8b c2	 mov	 rax, rdx
  06ba8	48 ba 78 d1 6e
	ee 7f 4f 7d f5	 mov	 rdx, -757361751448694408 ; f57d4f7fee6ed178H
  06bb2	48 03 ca	 add	 rcx, rdx
  06bb5	48 03 c1	 add	 rax, rcx
  06bb8	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  06bc0	48 8b 84 24 d8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+40]
  06bc8	48 c1 e8 1c	 shr	 rax, 28
  06bcc	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  06bd4	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  06bd8	48 0b c1	 or	 rax, rcx
  06bdb	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  06be3	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  06be7	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  06bef	48 c1 e2 1e	 shl	 rdx, 30
  06bf3	48 0b ca	 or	 rcx, rdx
  06bf6	48 33 c1	 xor	 rax, rcx
  06bf9	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  06c01	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  06c05	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  06c0d	48 c1 e2 19	 shl	 rdx, 25
  06c11	48 0b ca	 or	 rcx, rdx
  06c14	48 33 c1	 xor	 rax, rcx
  06c17	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  06c1f	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  06c27	48 0b d1	 or	 rdx, rcx
  06c2a	48 8b ca	 mov	 rcx, rdx
  06c2d	48 23 8c 24 e8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+56]
  06c35	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  06c3d	4c 8b 84 24 d8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+40]
  06c45	4c 23 c2	 and	 r8, rdx
  06c48	49 8b d0	 mov	 rdx, r8
  06c4b	48 0b ca	 or	 rcx, rdx
  06c4e	48 03 c1	 add	 rax, rcx
  06c51	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  06c59	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  06c61	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  06c69	48 03 c8	 add	 rcx, rax
  06c6c	48 8b c1	 mov	 rax, rcx
  06c6f	48 89 84 24 b0
	02 00 00	 mov	 QWORD PTR S$[rsp], rax
  06c77	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  06c7f	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  06c87	48 03 c8	 add	 rcx, rax
  06c8a	48 8b c1	 mov	 rax, rcx
  06c8d	48 89 84 24 d0
	02 00 00	 mov	 QWORD PTR S$[rsp+32], rax

; 228  :     RND(S[4],S[5],S[6],S[7],S[0],S[1],S[2],S[3],68,Py_ULL(0x06f067aa72176fba));

  06c95	48 8b 84 24 b0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp]
  06c9d	48 c1 e8 0e	 shr	 rax, 14
  06ca1	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  06ca9	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  06cad	48 0b c1	 or	 rax, rcx
  06cb0	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  06cb8	48 c1 e9 12	 shr	 rcx, 18
  06cbc	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  06cc4	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  06cc8	48 0b ca	 or	 rcx, rdx
  06ccb	48 33 c1	 xor	 rax, rcx
  06cce	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  06cd6	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  06cda	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  06ce2	48 c1 e2 17	 shl	 rdx, 23
  06ce6	48 0b ca	 or	 rcx, rdx
  06ce9	48 33 c1	 xor	 rax, rcx
  06cec	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  06cf4	48 03 c8	 add	 rcx, rax
  06cf7	48 8b c1	 mov	 rax, rcx
  06cfa	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  06d02	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  06d0a	48 33 d1	 xor	 rdx, rcx
  06d0d	48 8b ca	 mov	 rcx, rdx
  06d10	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  06d18	48 23 d1	 and	 rdx, rcx
  06d1b	48 8b ca	 mov	 rcx, rdx
  06d1e	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  06d26	48 33 d1	 xor	 rdx, rcx
  06d29	48 8b ca	 mov	 rcx, rdx
  06d2c	48 8b 94 24 40
	02 00 00	 mov	 rdx, QWORD PTR W$[rsp+544]
  06d34	48 03 d0	 add	 rdx, rax
  06d37	48 8b c2	 mov	 rax, rdx
  06d3a	48 ba ba 6f 17
	72 aa 67 f0 06	 mov	 rdx, 500013540394364858	; 06f067aa72176fbaH
  06d44	48 03 ca	 add	 rcx, rdx
  06d47	48 03 c1	 add	 rax, rcx
  06d4a	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  06d52	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+32]
  06d5a	48 c1 e8 1c	 shr	 rax, 28
  06d5e	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  06d66	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  06d6a	48 0b c1	 or	 rax, rcx
  06d6d	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  06d75	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  06d79	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  06d81	48 c1 e2 1e	 shl	 rdx, 30
  06d85	48 0b ca	 or	 rcx, rdx
  06d88	48 33 c1	 xor	 rax, rcx
  06d8b	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  06d93	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  06d97	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  06d9f	48 c1 e2 19	 shl	 rdx, 25
  06da3	48 0b ca	 or	 rcx, rdx
  06da6	48 33 c1	 xor	 rax, rcx
  06da9	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  06db1	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  06db9	48 0b d1	 or	 rdx, rcx
  06dbc	48 8b ca	 mov	 rcx, rdx
  06dbf	48 23 8c 24 e0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+48]
  06dc7	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  06dcf	4c 8b 84 24 d0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+32]
  06dd7	4c 23 c2	 and	 r8, rdx
  06dda	49 8b d0	 mov	 rdx, r8
  06ddd	48 0b ca	 or	 rcx, rdx
  06de0	48 03 c1	 add	 rax, rcx
  06de3	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  06deb	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  06df3	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  06dfb	48 03 c8	 add	 rcx, rax
  06dfe	48 8b c1	 mov	 rax, rcx
  06e01	48 89 84 24 e8
	02 00 00	 mov	 QWORD PTR S$[rsp+56], rax
  06e09	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  06e11	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  06e19	48 03 c8	 add	 rcx, rax
  06e1c	48 8b c1	 mov	 rax, rcx
  06e1f	48 89 84 24 c8
	02 00 00	 mov	 QWORD PTR S$[rsp+24], rax

; 229  :     RND(S[3],S[4],S[5],S[6],S[7],S[0],S[1],S[2],69,Py_ULL(0x0a637dc5a2c898a6));

  06e27	48 8b 84 24 e8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+56]
  06e2f	48 c1 e8 0e	 shr	 rax, 14
  06e33	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  06e3b	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  06e3f	48 0b c1	 or	 rax, rcx
  06e42	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  06e4a	48 c1 e9 12	 shr	 rcx, 18
  06e4e	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  06e56	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  06e5a	48 0b ca	 or	 rcx, rdx
  06e5d	48 33 c1	 xor	 rax, rcx
  06e60	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  06e68	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  06e6c	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  06e74	48 c1 e2 17	 shl	 rdx, 23
  06e78	48 0b ca	 or	 rcx, rdx
  06e7b	48 33 c1	 xor	 rax, rcx
  06e7e	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  06e86	48 03 c8	 add	 rcx, rax
  06e89	48 8b c1	 mov	 rax, rcx
  06e8c	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  06e94	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  06e9c	48 33 d1	 xor	 rdx, rcx
  06e9f	48 8b ca	 mov	 rcx, rdx
  06ea2	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  06eaa	48 23 d1	 and	 rdx, rcx
  06ead	48 8b ca	 mov	 rcx, rdx
  06eb0	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  06eb8	48 33 d1	 xor	 rdx, rcx
  06ebb	48 8b ca	 mov	 rcx, rdx
  06ebe	48 8b 94 24 48
	02 00 00	 mov	 rdx, QWORD PTR W$[rsp+552]
  06ec6	48 03 d0	 add	 rdx, rax
  06ec9	48 8b c2	 mov	 rax, rdx
  06ecc	48 ba a6 98 c8
	a2 c5 7d 63 0a	 mov	 rdx, 748580250866718886	; 0a637dc5a2c898a6H
  06ed6	48 03 ca	 add	 rcx, rdx
  06ed9	48 03 c1	 add	 rax, rcx
  06edc	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  06ee4	48 8b 84 24 c8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+24]
  06eec	48 c1 e8 1c	 shr	 rax, 28
  06ef0	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  06ef8	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  06efc	48 0b c1	 or	 rax, rcx
  06eff	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  06f07	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  06f0b	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  06f13	48 c1 e2 1e	 shl	 rdx, 30
  06f17	48 0b ca	 or	 rcx, rdx
  06f1a	48 33 c1	 xor	 rax, rcx
  06f1d	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  06f25	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  06f29	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  06f31	48 c1 e2 19	 shl	 rdx, 25
  06f35	48 0b ca	 or	 rcx, rdx
  06f38	48 33 c1	 xor	 rax, rcx
  06f3b	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  06f43	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  06f4b	48 0b d1	 or	 rdx, rcx
  06f4e	48 8b ca	 mov	 rcx, rdx
  06f51	48 23 8c 24 d8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+40]
  06f59	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  06f61	4c 8b 84 24 c8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+24]
  06f69	4c 23 c2	 and	 r8, rdx
  06f6c	49 8b d0	 mov	 rdx, r8
  06f6f	48 0b ca	 or	 rcx, rdx
  06f72	48 03 c1	 add	 rax, rcx
  06f75	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  06f7d	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  06f85	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  06f8d	48 03 c8	 add	 rcx, rax
  06f90	48 8b c1	 mov	 rax, rcx
  06f93	48 89 84 24 e0
	02 00 00	 mov	 QWORD PTR S$[rsp+48], rax
  06f9b	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  06fa3	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  06fab	48 03 c8	 add	 rcx, rax
  06fae	48 8b c1	 mov	 rax, rcx
  06fb1	48 89 84 24 c0
	02 00 00	 mov	 QWORD PTR S$[rsp+16], rax

; 230  :     RND(S[2],S[3],S[4],S[5],S[6],S[7],S[0],S[1],70,Py_ULL(0x113f9804bef90dae));

  06fb9	48 8b 84 24 e0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+48]
  06fc1	48 c1 e8 0e	 shr	 rax, 14
  06fc5	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  06fcd	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  06fd1	48 0b c1	 or	 rax, rcx
  06fd4	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  06fdc	48 c1 e9 12	 shr	 rcx, 18
  06fe0	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  06fe8	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  06fec	48 0b ca	 or	 rcx, rdx
  06fef	48 33 c1	 xor	 rax, rcx
  06ff2	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  06ffa	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  06ffe	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  07006	48 c1 e2 17	 shl	 rdx, 23
  0700a	48 0b ca	 or	 rcx, rdx
  0700d	48 33 c1	 xor	 rax, rcx
  07010	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  07018	48 03 c8	 add	 rcx, rax
  0701b	48 8b c1	 mov	 rax, rcx
  0701e	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  07026	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  0702e	48 33 d1	 xor	 rdx, rcx
  07031	48 8b ca	 mov	 rcx, rdx
  07034	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  0703c	48 23 d1	 and	 rdx, rcx
  0703f	48 8b ca	 mov	 rcx, rdx
  07042	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  0704a	48 33 d1	 xor	 rdx, rcx
  0704d	48 8b ca	 mov	 rcx, rdx
  07050	48 8b 94 24 50
	02 00 00	 mov	 rdx, QWORD PTR W$[rsp+560]
  07058	48 03 d0	 add	 rdx, rax
  0705b	48 8b c2	 mov	 rax, rdx
  0705e	48 ba ae 0d f9
	be 04 98 3f 11	 mov	 rdx, 1242879168328830382 ; 113f9804bef90daeH
  07068	48 03 ca	 add	 rcx, rdx
  0706b	48 03 c1	 add	 rax, rcx
  0706e	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  07076	48 8b 84 24 c0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+16]
  0707e	48 c1 e8 1c	 shr	 rax, 28
  07082	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  0708a	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  0708e	48 0b c1	 or	 rax, rcx
  07091	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  07099	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  0709d	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  070a5	48 c1 e2 1e	 shl	 rdx, 30
  070a9	48 0b ca	 or	 rcx, rdx
  070ac	48 33 c1	 xor	 rax, rcx
  070af	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  070b7	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  070bb	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  070c3	48 c1 e2 19	 shl	 rdx, 25
  070c7	48 0b ca	 or	 rcx, rdx
  070ca	48 33 c1	 xor	 rax, rcx
  070cd	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  070d5	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  070dd	48 0b d1	 or	 rdx, rcx
  070e0	48 8b ca	 mov	 rcx, rdx
  070e3	48 23 8c 24 d0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+32]
  070eb	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  070f3	4c 8b 84 24 c0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+16]
  070fb	4c 23 c2	 and	 r8, rdx
  070fe	49 8b d0	 mov	 rdx, r8
  07101	48 0b ca	 or	 rcx, rdx
  07104	48 03 c1	 add	 rax, rcx
  07107	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  0710f	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  07117	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  0711f	48 03 c8	 add	 rcx, rax
  07122	48 8b c1	 mov	 rax, rcx
  07125	48 89 84 24 d8
	02 00 00	 mov	 QWORD PTR S$[rsp+40], rax
  0712d	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  07135	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  0713d	48 03 c8	 add	 rcx, rax
  07140	48 8b c1	 mov	 rax, rcx
  07143	48 89 84 24 b8
	02 00 00	 mov	 QWORD PTR S$[rsp+8], rax

; 231  :     RND(S[1],S[2],S[3],S[4],S[5],S[6],S[7],S[0],71,Py_ULL(0x1b710b35131c471b));

  0714b	48 8b 84 24 d8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+40]
  07153	48 c1 e8 0e	 shr	 rax, 14
  07157	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  0715f	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  07163	48 0b c1	 or	 rax, rcx
  07166	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  0716e	48 c1 e9 12	 shr	 rcx, 18
  07172	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  0717a	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  0717e	48 0b ca	 or	 rcx, rdx
  07181	48 33 c1	 xor	 rax, rcx
  07184	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  0718c	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  07190	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  07198	48 c1 e2 17	 shl	 rdx, 23
  0719c	48 0b ca	 or	 rcx, rdx
  0719f	48 33 c1	 xor	 rax, rcx
  071a2	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  071aa	48 03 c8	 add	 rcx, rax
  071ad	48 8b c1	 mov	 rax, rcx
  071b0	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  071b8	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  071c0	48 33 d1	 xor	 rdx, rcx
  071c3	48 8b ca	 mov	 rcx, rdx
  071c6	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  071ce	48 23 d1	 and	 rdx, rcx
  071d1	48 8b ca	 mov	 rcx, rdx
  071d4	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  071dc	48 33 d1	 xor	 rdx, rcx
  071df	48 8b ca	 mov	 rcx, rdx
  071e2	48 8b 94 24 58
	02 00 00	 mov	 rdx, QWORD PTR W$[rsp+568]
  071ea	48 03 d0	 add	 rdx, rax
  071ed	48 8b c2	 mov	 rax, rdx
  071f0	48 ba 1b 47 1c
	13 35 0b 71 1b	 mov	 rdx, 1977374033974150939 ; 1b710b35131c471bH
  071fa	48 03 ca	 add	 rcx, rdx
  071fd	48 03 c1	 add	 rax, rcx
  07200	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  07208	48 8b 84 24 b8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+8]
  07210	48 c1 e8 1c	 shr	 rax, 28
  07214	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  0721c	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  07220	48 0b c1	 or	 rax, rcx
  07223	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  0722b	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  0722f	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  07237	48 c1 e2 1e	 shl	 rdx, 30
  0723b	48 0b ca	 or	 rcx, rdx
  0723e	48 33 c1	 xor	 rax, rcx
  07241	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  07249	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  0724d	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  07255	48 c1 e2 19	 shl	 rdx, 25
  07259	48 0b ca	 or	 rcx, rdx
  0725c	48 33 c1	 xor	 rax, rcx
  0725f	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  07267	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  0726f	48 0b d1	 or	 rdx, rcx
  07272	48 8b ca	 mov	 rcx, rdx
  07275	48 23 8c 24 c8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+24]
  0727d	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  07285	4c 8b 84 24 b8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+8]
  0728d	4c 23 c2	 and	 r8, rdx
  07290	49 8b d0	 mov	 rdx, r8
  07293	48 0b ca	 or	 rcx, rdx
  07296	48 03 c1	 add	 rax, rcx
  07299	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  072a1	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  072a9	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  072b1	48 03 c8	 add	 rcx, rax
  072b4	48 8b c1	 mov	 rax, rcx
  072b7	48 89 84 24 d0
	02 00 00	 mov	 QWORD PTR S$[rsp+32], rax
  072bf	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  072c7	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  072cf	48 03 c8	 add	 rcx, rax
  072d2	48 8b c1	 mov	 rax, rcx
  072d5	48 89 84 24 b0
	02 00 00	 mov	 QWORD PTR S$[rsp], rax

; 232  :     RND(S[0],S[1],S[2],S[3],S[4],S[5],S[6],S[7],72,Py_ULL(0x28db77f523047d84));

  072dd	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+32]
  072e5	48 c1 e8 0e	 shr	 rax, 14
  072e9	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  072f1	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  072f5	48 0b c1	 or	 rax, rcx
  072f8	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  07300	48 c1 e9 12	 shr	 rcx, 18
  07304	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  0730c	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  07310	48 0b ca	 or	 rcx, rdx
  07313	48 33 c1	 xor	 rax, rcx
  07316	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  0731e	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  07322	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  0732a	48 c1 e2 17	 shl	 rdx, 23
  0732e	48 0b ca	 or	 rcx, rdx
  07331	48 33 c1	 xor	 rax, rcx
  07334	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  0733c	48 03 c8	 add	 rcx, rax
  0733f	48 8b c1	 mov	 rax, rcx
  07342	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  0734a	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  07352	48 33 d1	 xor	 rdx, rcx
  07355	48 8b ca	 mov	 rcx, rdx
  07358	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  07360	48 23 d1	 and	 rdx, rcx
  07363	48 8b ca	 mov	 rcx, rdx
  07366	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  0736e	48 33 d1	 xor	 rdx, rcx
  07371	48 8b ca	 mov	 rcx, rdx
  07374	48 8b 94 24 60
	02 00 00	 mov	 rdx, QWORD PTR W$[rsp+576]
  0737c	48 03 d0	 add	 rdx, rax
  0737f	48 8b c2	 mov	 rax, rdx
  07382	48 ba 84 7d 04
	23 f5 77 db 28	 mov	 rdx, 2944078676154940804 ; 28db77f523047d84H
  0738c	48 03 ca	 add	 rcx, rdx
  0738f	48 03 c1	 add	 rax, rcx
  07392	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  0739a	48 8b 84 24 b0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp]
  073a2	48 c1 e8 1c	 shr	 rax, 28
  073a6	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  073ae	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  073b2	48 0b c1	 or	 rax, rcx
  073b5	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  073bd	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  073c1	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  073c9	48 c1 e2 1e	 shl	 rdx, 30
  073cd	48 0b ca	 or	 rcx, rdx
  073d0	48 33 c1	 xor	 rax, rcx
  073d3	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  073db	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  073df	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  073e7	48 c1 e2 19	 shl	 rdx, 25
  073eb	48 0b ca	 or	 rcx, rdx
  073ee	48 33 c1	 xor	 rax, rcx
  073f1	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  073f9	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  07401	48 0b d1	 or	 rdx, rcx
  07404	48 8b ca	 mov	 rcx, rdx
  07407	48 23 8c 24 c0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+16]
  0740f	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  07417	4c 8b 84 24 b0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp]
  0741f	4c 23 c2	 and	 r8, rdx
  07422	49 8b d0	 mov	 rdx, r8
  07425	48 0b ca	 or	 rcx, rdx
  07428	48 03 c1	 add	 rax, rcx
  0742b	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  07433	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  0743b	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  07443	48 03 c8	 add	 rcx, rax
  07446	48 8b c1	 mov	 rax, rcx
  07449	48 89 84 24 c8
	02 00 00	 mov	 QWORD PTR S$[rsp+24], rax
  07451	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  07459	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  07461	48 03 c8	 add	 rcx, rax
  07464	48 8b c1	 mov	 rax, rcx
  07467	48 89 84 24 e8
	02 00 00	 mov	 QWORD PTR S$[rsp+56], rax

; 233  :     RND(S[7],S[0],S[1],S[2],S[3],S[4],S[5],S[6],73,Py_ULL(0x32caab7b40c72493));

  0746f	48 8b 84 24 c8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+24]
  07477	48 c1 e8 0e	 shr	 rax, 14
  0747b	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  07483	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  07487	48 0b c1	 or	 rax, rcx
  0748a	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  07492	48 c1 e9 12	 shr	 rcx, 18
  07496	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  0749e	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  074a2	48 0b ca	 or	 rcx, rdx
  074a5	48 33 c1	 xor	 rax, rcx
  074a8	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  074b0	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  074b4	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  074bc	48 c1 e2 17	 shl	 rdx, 23
  074c0	48 0b ca	 or	 rcx, rdx
  074c3	48 33 c1	 xor	 rax, rcx
  074c6	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  074ce	48 03 c8	 add	 rcx, rax
  074d1	48 8b c1	 mov	 rax, rcx
  074d4	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  074dc	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  074e4	48 33 d1	 xor	 rdx, rcx
  074e7	48 8b ca	 mov	 rcx, rdx
  074ea	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  074f2	48 23 d1	 and	 rdx, rcx
  074f5	48 8b ca	 mov	 rcx, rdx
  074f8	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  07500	48 33 d1	 xor	 rdx, rcx
  07503	48 8b ca	 mov	 rcx, rdx
  07506	48 8b 94 24 68
	02 00 00	 mov	 rdx, QWORD PTR W$[rsp+584]
  0750e	48 03 d0	 add	 rdx, rax
  07511	48 8b c2	 mov	 rax, rdx
  07514	48 ba 93 24 c7
	40 7b ab ca 32	 mov	 rdx, 3659926193048069267 ; 32caab7b40c72493H
  0751e	48 03 ca	 add	 rcx, rdx
  07521	48 03 c1	 add	 rax, rcx
  07524	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  0752c	48 8b 84 24 e8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+56]
  07534	48 c1 e8 1c	 shr	 rax, 28
  07538	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  07540	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  07544	48 0b c1	 or	 rax, rcx
  07547	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  0754f	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  07553	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  0755b	48 c1 e2 1e	 shl	 rdx, 30
  0755f	48 0b ca	 or	 rcx, rdx
  07562	48 33 c1	 xor	 rax, rcx
  07565	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  0756d	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  07571	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  07579	48 c1 e2 19	 shl	 rdx, 25
  0757d	48 0b ca	 or	 rcx, rdx
  07580	48 33 c1	 xor	 rax, rcx
  07583	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  0758b	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  07593	48 0b d1	 or	 rdx, rcx
  07596	48 8b ca	 mov	 rcx, rdx
  07599	48 23 8c 24 b8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+8]
  075a1	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  075a9	4c 8b 84 24 e8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+56]
  075b1	4c 23 c2	 and	 r8, rdx
  075b4	49 8b d0	 mov	 rdx, r8
  075b7	48 0b ca	 or	 rcx, rdx
  075ba	48 03 c1	 add	 rax, rcx
  075bd	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  075c5	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  075cd	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  075d5	48 03 c8	 add	 rcx, rax
  075d8	48 8b c1	 mov	 rax, rcx
  075db	48 89 84 24 c0
	02 00 00	 mov	 QWORD PTR S$[rsp+16], rax
  075e3	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  075eb	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  075f3	48 03 c8	 add	 rcx, rax
  075f6	48 8b c1	 mov	 rax, rcx
  075f9	48 89 84 24 e0
	02 00 00	 mov	 QWORD PTR S$[rsp+48], rax

; 234  :     RND(S[6],S[7],S[0],S[1],S[2],S[3],S[4],S[5],74,Py_ULL(0x3c9ebe0a15c9bebc));

  07601	48 8b 84 24 c0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+16]
  07609	48 c1 e8 0e	 shr	 rax, 14
  0760d	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  07615	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  07619	48 0b c1	 or	 rax, rcx
  0761c	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  07624	48 c1 e9 12	 shr	 rcx, 18
  07628	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  07630	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  07634	48 0b ca	 or	 rcx, rdx
  07637	48 33 c1	 xor	 rax, rcx
  0763a	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  07642	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  07646	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  0764e	48 c1 e2 17	 shl	 rdx, 23
  07652	48 0b ca	 or	 rcx, rdx
  07655	48 33 c1	 xor	 rax, rcx
  07658	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  07660	48 03 c8	 add	 rcx, rax
  07663	48 8b c1	 mov	 rax, rcx
  07666	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  0766e	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  07676	48 33 d1	 xor	 rdx, rcx
  07679	48 8b ca	 mov	 rcx, rdx
  0767c	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  07684	48 23 d1	 and	 rdx, rcx
  07687	48 8b ca	 mov	 rcx, rdx
  0768a	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  07692	48 33 d1	 xor	 rdx, rcx
  07695	48 8b ca	 mov	 rcx, rdx
  07698	48 8b 94 24 70
	02 00 00	 mov	 rdx, QWORD PTR W$[rsp+592]
  076a0	48 03 d0	 add	 rdx, rax
  076a3	48 8b c2	 mov	 rax, rdx
  076a6	48 ba bc be c9
	15 0a be 9e 3c	 mov	 rdx, 4368137639120453308 ; 3c9ebe0a15c9bebcH
  076b0	48 03 ca	 add	 rcx, rdx
  076b3	48 03 c1	 add	 rax, rcx
  076b6	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  076be	48 8b 84 24 e0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+48]
  076c6	48 c1 e8 1c	 shr	 rax, 28
  076ca	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  076d2	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  076d6	48 0b c1	 or	 rax, rcx
  076d9	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  076e1	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  076e5	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  076ed	48 c1 e2 1e	 shl	 rdx, 30
  076f1	48 0b ca	 or	 rcx, rdx
  076f4	48 33 c1	 xor	 rax, rcx
  076f7	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  076ff	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  07703	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  0770b	48 c1 e2 19	 shl	 rdx, 25
  0770f	48 0b ca	 or	 rcx, rdx
  07712	48 33 c1	 xor	 rax, rcx
  07715	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  0771d	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  07725	48 0b d1	 or	 rdx, rcx
  07728	48 8b ca	 mov	 rcx, rdx
  0772b	48 23 8c 24 b0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp]
  07733	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  0773b	4c 8b 84 24 e0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+48]
  07743	4c 23 c2	 and	 r8, rdx
  07746	49 8b d0	 mov	 rdx, r8
  07749	48 0b ca	 or	 rcx, rdx
  0774c	48 03 c1	 add	 rax, rcx
  0774f	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  07757	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  0775f	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  07767	48 03 c8	 add	 rcx, rax
  0776a	48 8b c1	 mov	 rax, rcx
  0776d	48 89 84 24 b8
	02 00 00	 mov	 QWORD PTR S$[rsp+8], rax
  07775	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  0777d	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  07785	48 03 c8	 add	 rcx, rax
  07788	48 8b c1	 mov	 rax, rcx
  0778b	48 89 84 24 d8
	02 00 00	 mov	 QWORD PTR S$[rsp+40], rax

; 235  :     RND(S[5],S[6],S[7],S[0],S[1],S[2],S[3],S[4],75,Py_ULL(0x431d67c49c100d4c));

  07793	48 8b 84 24 b8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+8]
  0779b	48 c1 e8 0e	 shr	 rax, 14
  0779f	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  077a7	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  077ab	48 0b c1	 or	 rax, rcx
  077ae	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  077b6	48 c1 e9 12	 shr	 rcx, 18
  077ba	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  077c2	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  077c6	48 0b ca	 or	 rcx, rdx
  077c9	48 33 c1	 xor	 rax, rcx
  077cc	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  077d4	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  077d8	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  077e0	48 c1 e2 17	 shl	 rdx, 23
  077e4	48 0b ca	 or	 rcx, rdx
  077e7	48 33 c1	 xor	 rax, rcx
  077ea	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  077f2	48 03 c8	 add	 rcx, rax
  077f5	48 8b c1	 mov	 rax, rcx
  077f8	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  07800	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  07808	48 33 d1	 xor	 rdx, rcx
  0780b	48 8b ca	 mov	 rcx, rdx
  0780e	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  07816	48 23 d1	 and	 rdx, rcx
  07819	48 8b ca	 mov	 rcx, rdx
  0781c	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  07824	48 33 d1	 xor	 rdx, rcx
  07827	48 8b ca	 mov	 rcx, rdx
  0782a	48 8b 94 24 78
	02 00 00	 mov	 rdx, QWORD PTR W$[rsp+600]
  07832	48 03 d0	 add	 rdx, rax
  07835	48 8b c2	 mov	 rax, rdx
  07838	48 ba 4c 0d 10
	9c c4 67 1d 43	 mov	 rdx, 4836135668995329356 ; 431d67c49c100d4cH
  07842	48 03 ca	 add	 rcx, rdx
  07845	48 03 c1	 add	 rax, rcx
  07848	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  07850	48 8b 84 24 d8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+40]
  07858	48 c1 e8 1c	 shr	 rax, 28
  0785c	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  07864	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  07868	48 0b c1	 or	 rax, rcx
  0786b	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  07873	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  07877	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  0787f	48 c1 e2 1e	 shl	 rdx, 30
  07883	48 0b ca	 or	 rcx, rdx
  07886	48 33 c1	 xor	 rax, rcx
  07889	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  07891	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  07895	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  0789d	48 c1 e2 19	 shl	 rdx, 25
  078a1	48 0b ca	 or	 rcx, rdx
  078a4	48 33 c1	 xor	 rax, rcx
  078a7	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  078af	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  078b7	48 0b d1	 or	 rdx, rcx
  078ba	48 8b ca	 mov	 rcx, rdx
  078bd	48 23 8c 24 e8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+56]
  078c5	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  078cd	4c 8b 84 24 d8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+40]
  078d5	4c 23 c2	 and	 r8, rdx
  078d8	49 8b d0	 mov	 rdx, r8
  078db	48 0b ca	 or	 rcx, rdx
  078de	48 03 c1	 add	 rax, rcx
  078e1	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  078e9	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  078f1	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  078f9	48 03 c8	 add	 rcx, rax
  078fc	48 8b c1	 mov	 rax, rcx
  078ff	48 89 84 24 b0
	02 00 00	 mov	 QWORD PTR S$[rsp], rax
  07907	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  0790f	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  07917	48 03 c8	 add	 rcx, rax
  0791a	48 8b c1	 mov	 rax, rcx
  0791d	48 89 84 24 d0
	02 00 00	 mov	 QWORD PTR S$[rsp+32], rax

; 236  :     RND(S[4],S[5],S[6],S[7],S[0],S[1],S[2],S[3],76,Py_ULL(0x4cc5d4becb3e42b6));

  07925	48 8b 84 24 b0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp]
  0792d	48 c1 e8 0e	 shr	 rax, 14
  07931	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  07939	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  0793d	48 0b c1	 or	 rax, rcx
  07940	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  07948	48 c1 e9 12	 shr	 rcx, 18
  0794c	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  07954	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  07958	48 0b ca	 or	 rcx, rdx
  0795b	48 33 c1	 xor	 rax, rcx
  0795e	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  07966	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  0796a	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  07972	48 c1 e2 17	 shl	 rdx, 23
  07976	48 0b ca	 or	 rcx, rdx
  07979	48 33 c1	 xor	 rax, rcx
  0797c	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  07984	48 03 c8	 add	 rcx, rax
  07987	48 8b c1	 mov	 rax, rcx
  0798a	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  07992	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  0799a	48 33 d1	 xor	 rdx, rcx
  0799d	48 8b ca	 mov	 rcx, rdx
  079a0	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  079a8	48 23 d1	 and	 rdx, rcx
  079ab	48 8b ca	 mov	 rcx, rdx
  079ae	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  079b6	48 33 d1	 xor	 rdx, rcx
  079b9	48 8b ca	 mov	 rcx, rdx
  079bc	48 8b 94 24 80
	02 00 00	 mov	 rdx, QWORD PTR W$[rsp+608]
  079c4	48 03 d0	 add	 rdx, rax
  079c7	48 8b c2	 mov	 rax, rdx
  079ca	48 ba b6 42 3e
	cb be d4 c5 4c	 mov	 rdx, 5532061633213252278 ; 4cc5d4becb3e42b6H
  079d4	48 03 ca	 add	 rcx, rdx
  079d7	48 03 c1	 add	 rax, rcx
  079da	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  079e2	48 8b 84 24 d0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+32]
  079ea	48 c1 e8 1c	 shr	 rax, 28
  079ee	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  079f6	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  079fa	48 0b c1	 or	 rax, rcx
  079fd	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  07a05	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  07a09	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  07a11	48 c1 e2 1e	 shl	 rdx, 30
  07a15	48 0b ca	 or	 rcx, rdx
  07a18	48 33 c1	 xor	 rax, rcx
  07a1b	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  07a23	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  07a27	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  07a2f	48 c1 e2 19	 shl	 rdx, 25
  07a33	48 0b ca	 or	 rcx, rdx
  07a36	48 33 c1	 xor	 rax, rcx
  07a39	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  07a41	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  07a49	48 0b d1	 or	 rdx, rcx
  07a4c	48 8b ca	 mov	 rcx, rdx
  07a4f	48 23 8c 24 e0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+48]
  07a57	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  07a5f	4c 8b 84 24 d0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+32]
  07a67	4c 23 c2	 and	 r8, rdx
  07a6a	49 8b d0	 mov	 rdx, r8
  07a6d	48 0b ca	 or	 rcx, rdx
  07a70	48 03 c1	 add	 rax, rcx
  07a73	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  07a7b	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  07a83	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  07a8b	48 03 c8	 add	 rcx, rax
  07a8e	48 8b c1	 mov	 rax, rcx
  07a91	48 89 84 24 e8
	02 00 00	 mov	 QWORD PTR S$[rsp+56], rax
  07a99	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  07aa1	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  07aa9	48 03 c8	 add	 rcx, rax
  07aac	48 8b c1	 mov	 rax, rcx
  07aaf	48 89 84 24 c8
	02 00 00	 mov	 QWORD PTR S$[rsp+24], rax

; 237  :     RND(S[3],S[4],S[5],S[6],S[7],S[0],S[1],S[2],77,Py_ULL(0x597f299cfc657e2a));

  07ab7	48 8b 84 24 e8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+56]
  07abf	48 c1 e8 0e	 shr	 rax, 14
  07ac3	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  07acb	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  07acf	48 0b c1	 or	 rax, rcx
  07ad2	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  07ada	48 c1 e9 12	 shr	 rcx, 18
  07ade	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  07ae6	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  07aea	48 0b ca	 or	 rcx, rdx
  07aed	48 33 c1	 xor	 rax, rcx
  07af0	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  07af8	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  07afc	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  07b04	48 c1 e2 17	 shl	 rdx, 23
  07b08	48 0b ca	 or	 rcx, rdx
  07b0b	48 33 c1	 xor	 rax, rcx
  07b0e	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  07b16	48 03 c8	 add	 rcx, rax
  07b19	48 8b c1	 mov	 rax, rcx
  07b1c	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  07b24	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  07b2c	48 33 d1	 xor	 rdx, rcx
  07b2f	48 8b ca	 mov	 rcx, rdx
  07b32	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  07b3a	48 23 d1	 and	 rdx, rcx
  07b3d	48 8b ca	 mov	 rcx, rdx
  07b40	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  07b48	48 33 d1	 xor	 rdx, rcx
  07b4b	48 8b ca	 mov	 rcx, rdx
  07b4e	48 8b 94 24 88
	02 00 00	 mov	 rdx, QWORD PTR W$[rsp+616]
  07b56	48 03 d0	 add	 rdx, rax
  07b59	48 8b c2	 mov	 rax, rdx
  07b5c	48 ba 2a 7e 65
	fc 9c 29 7f 59	 mov	 rdx, 6448918945643986474 ; 597f299cfc657e2aH
  07b66	48 03 ca	 add	 rcx, rdx
  07b69	48 03 c1	 add	 rax, rcx
  07b6c	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  07b74	48 8b 84 24 c8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+24]
  07b7c	48 c1 e8 1c	 shr	 rax, 28
  07b80	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  07b88	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  07b8c	48 0b c1	 or	 rax, rcx
  07b8f	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  07b97	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  07b9b	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  07ba3	48 c1 e2 1e	 shl	 rdx, 30
  07ba7	48 0b ca	 or	 rcx, rdx
  07baa	48 33 c1	 xor	 rax, rcx
  07bad	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  07bb5	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  07bb9	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  07bc1	48 c1 e2 19	 shl	 rdx, 25
  07bc5	48 0b ca	 or	 rcx, rdx
  07bc8	48 33 c1	 xor	 rax, rcx
  07bcb	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  07bd3	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  07bdb	48 0b d1	 or	 rdx, rcx
  07bde	48 8b ca	 mov	 rcx, rdx
  07be1	48 23 8c 24 d8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+40]
  07be9	48 8b 94 24 d0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+32]
  07bf1	4c 8b 84 24 c8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+24]
  07bf9	4c 23 c2	 and	 r8, rdx
  07bfc	49 8b d0	 mov	 rdx, r8
  07bff	48 0b ca	 or	 rcx, rdx
  07c02	48 03 c1	 add	 rax, rcx
  07c05	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  07c0d	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  07c15	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  07c1d	48 03 c8	 add	 rcx, rax
  07c20	48 8b c1	 mov	 rax, rcx
  07c23	48 89 84 24 e0
	02 00 00	 mov	 QWORD PTR S$[rsp+48], rax
  07c2b	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  07c33	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  07c3b	48 03 c8	 add	 rcx, rax
  07c3e	48 8b c1	 mov	 rax, rcx
  07c41	48 89 84 24 c0
	02 00 00	 mov	 QWORD PTR S$[rsp+16], rax

; 238  :     RND(S[2],S[3],S[4],S[5],S[6],S[7],S[0],S[1],78,Py_ULL(0x5fcb6fab3ad6faec));

  07c49	48 8b 84 24 e0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+48]
  07c51	48 c1 e8 0e	 shr	 rax, 14
  07c55	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  07c5d	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  07c61	48 0b c1	 or	 rax, rcx
  07c64	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  07c6c	48 c1 e9 12	 shr	 rcx, 18
  07c70	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  07c78	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  07c7c	48 0b ca	 or	 rcx, rdx
  07c7f	48 33 c1	 xor	 rax, rcx
  07c82	48 8b 8c 24 e0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+48]
  07c8a	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  07c8e	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  07c96	48 c1 e2 17	 shl	 rdx, 23
  07c9a	48 0b ca	 or	 rcx, rdx
  07c9d	48 33 c1	 xor	 rax, rcx
  07ca0	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  07ca8	48 03 c8	 add	 rcx, rax
  07cab	48 8b c1	 mov	 rax, rcx
  07cae	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  07cb6	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  07cbe	48 33 d1	 xor	 rdx, rcx
  07cc1	48 8b ca	 mov	 rcx, rdx
  07cc4	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  07ccc	48 23 d1	 and	 rdx, rcx
  07ccf	48 8b ca	 mov	 rcx, rdx
  07cd2	48 8b 94 24 b0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp]
  07cda	48 33 d1	 xor	 rdx, rcx
  07cdd	48 8b ca	 mov	 rcx, rdx
  07ce0	48 8b 94 24 90
	02 00 00	 mov	 rdx, QWORD PTR W$[rsp+624]
  07ce8	48 03 d0	 add	 rdx, rax
  07ceb	48 8b c2	 mov	 rax, rdx
  07cee	48 ba ec fa d6
	3a ab 6f cb 5f	 mov	 rdx, 6902733635092675308 ; 5fcb6fab3ad6faecH
  07cf8	48 03 ca	 add	 rcx, rdx
  07cfb	48 03 c1	 add	 rax, rcx
  07cfe	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  07d06	48 8b 84 24 c0
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+16]
  07d0e	48 c1 e8 1c	 shr	 rax, 28
  07d12	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  07d1a	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  07d1e	48 0b c1	 or	 rax, rcx
  07d21	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  07d29	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  07d2d	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  07d35	48 c1 e2 1e	 shl	 rdx, 30
  07d39	48 0b ca	 or	 rcx, rdx
  07d3c	48 33 c1	 xor	 rax, rcx
  07d3f	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  07d47	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  07d4b	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  07d53	48 c1 e2 19	 shl	 rdx, 25
  07d57	48 0b ca	 or	 rcx, rdx
  07d5a	48 33 c1	 xor	 rax, rcx
  07d5d	48 8b 8c 24 c8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+24]
  07d65	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  07d6d	48 0b d1	 or	 rdx, rcx
  07d70	48 8b ca	 mov	 rcx, rdx
  07d73	48 23 8c 24 d0
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+32]
  07d7b	48 8b 94 24 c8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+24]
  07d83	4c 8b 84 24 c0
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+16]
  07d8b	4c 23 c2	 and	 r8, rdx
  07d8e	49 8b d0	 mov	 rdx, r8
  07d91	48 0b ca	 or	 rcx, rdx
  07d94	48 03 c1	 add	 rax, rcx
  07d97	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  07d9f	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  07da7	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  07daf	48 03 c8	 add	 rcx, rax
  07db2	48 8b c1	 mov	 rax, rcx
  07db5	48 89 84 24 d8
	02 00 00	 mov	 QWORD PTR S$[rsp+40], rax
  07dbd	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  07dc5	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  07dcd	48 03 c8	 add	 rcx, rax
  07dd0	48 8b c1	 mov	 rax, rcx
  07dd3	48 89 84 24 b8
	02 00 00	 mov	 QWORD PTR S$[rsp+8], rax

; 239  :     RND(S[1],S[2],S[3],S[4],S[5],S[6],S[7],S[0],79,Py_ULL(0x6c44198c4a475817));

  07ddb	48 8b 84 24 d8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+40]
  07de3	48 c1 e8 0e	 shr	 rax, 14
  07de7	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  07def	48 c1 e1 32	 shl	 rcx, 50			; 00000032H
  07df3	48 0b c1	 or	 rax, rcx
  07df6	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  07dfe	48 c1 e9 12	 shr	 rcx, 18
  07e02	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  07e0a	48 c1 e2 2e	 shl	 rdx, 46			; 0000002eH
  07e0e	48 0b ca	 or	 rcx, rdx
  07e11	48 33 c1	 xor	 rax, rcx
  07e14	48 8b 8c 24 d8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+40]
  07e1c	48 c1 e9 29	 shr	 rcx, 41			; 00000029H
  07e20	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  07e28	48 c1 e2 17	 shl	 rdx, 23
  07e2c	48 0b ca	 or	 rcx, rdx
  07e2f	48 33 c1	 xor	 rax, rcx
  07e32	48 8b 8c 24 b0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp]
  07e3a	48 03 c8	 add	 rcx, rax
  07e3d	48 8b c1	 mov	 rax, rcx
  07e40	48 8b 8c 24 e8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+56]
  07e48	48 8b 94 24 e0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+48]
  07e50	48 33 d1	 xor	 rdx, rcx
  07e53	48 8b ca	 mov	 rcx, rdx
  07e56	48 8b 94 24 d8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+40]
  07e5e	48 23 d1	 and	 rdx, rcx
  07e61	48 8b ca	 mov	 rcx, rdx
  07e64	48 8b 94 24 e8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+56]
  07e6c	48 33 d1	 xor	 rdx, rcx
  07e6f	48 8b ca	 mov	 rcx, rdx
  07e72	48 8b 94 24 98
	02 00 00	 mov	 rdx, QWORD PTR W$[rsp+632]
  07e7a	48 03 d0	 add	 rdx, rax
  07e7d	48 8b c2	 mov	 rax, rdx
  07e80	48 ba 17 58 47
	4a 8c 19 44 6c	 mov	 rdx, 7801388544844847127 ; 6c44198c4a475817H
  07e8a	48 03 ca	 add	 rcx, rdx
  07e8d	48 03 c1	 add	 rax, rcx
  07e90	48 89 84 24 f8
	02 00 00	 mov	 QWORD PTR t0$[rsp], rax
  07e98	48 8b 84 24 b8
	02 00 00	 mov	 rax, QWORD PTR S$[rsp+8]
  07ea0	48 c1 e8 1c	 shr	 rax, 28
  07ea4	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  07eac	48 c1 e1 24	 shl	 rcx, 36			; 00000024H
  07eb0	48 0b c1	 or	 rax, rcx
  07eb3	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  07ebb	48 c1 e9 22	 shr	 rcx, 34			; 00000022H
  07ebf	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  07ec7	48 c1 e2 1e	 shl	 rdx, 30
  07ecb	48 0b ca	 or	 rcx, rdx
  07ece	48 33 c1	 xor	 rax, rcx
  07ed1	48 8b 8c 24 b8
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+8]
  07ed9	48 c1 e9 27	 shr	 rcx, 39			; 00000027H
  07edd	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  07ee5	48 c1 e2 19	 shl	 rdx, 25
  07ee9	48 0b ca	 or	 rcx, rdx
  07eec	48 33 c1	 xor	 rax, rcx
  07eef	48 8b 8c 24 c0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+16]
  07ef7	48 8b 94 24 b8
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+8]
  07eff	48 0b d1	 or	 rdx, rcx
  07f02	48 8b ca	 mov	 rcx, rdx
  07f05	48 23 8c 24 c8
	02 00 00	 and	 rcx, QWORD PTR S$[rsp+24]
  07f0d	48 8b 94 24 c0
	02 00 00	 mov	 rdx, QWORD PTR S$[rsp+16]
  07f15	4c 8b 84 24 b8
	02 00 00	 mov	 r8, QWORD PTR S$[rsp+8]
  07f1d	4c 23 c2	 and	 r8, rdx
  07f20	49 8b d0	 mov	 rdx, r8
  07f23	48 0b ca	 or	 rcx, rdx
  07f26	48 03 c1	 add	 rax, rcx
  07f29	48 89 84 24 f0
	02 00 00	 mov	 QWORD PTR t1$[rsp], rax
  07f31	48 8b 84 24 f8
	02 00 00	 mov	 rax, QWORD PTR t0$[rsp]
  07f39	48 8b 8c 24 d0
	02 00 00	 mov	 rcx, QWORD PTR S$[rsp+32]
  07f41	48 03 c8	 add	 rcx, rax
  07f44	48 8b c1	 mov	 rax, rcx
  07f47	48 89 84 24 d0
	02 00 00	 mov	 QWORD PTR S$[rsp+32], rax
  07f4f	48 8b 84 24 f0
	02 00 00	 mov	 rax, QWORD PTR t1$[rsp]
  07f57	48 8b 8c 24 f8
	02 00 00	 mov	 rcx, QWORD PTR t0$[rsp]
  07f5f	48 03 c8	 add	 rcx, rax
  07f62	48 8b c1	 mov	 rax, rcx
  07f65	48 89 84 24 b0
	02 00 00	 mov	 QWORD PTR S$[rsp], rax

; 240  : 
; 241  : #undef RND
; 242  : 
; 243  :     /* feedback */
; 244  :     for (i = 0; i < 8; i++) {

  07f6d	c7 84 24 a0 02
	00 00 00 00 00
	00		 mov	 DWORD PTR i$[rsp], 0
  07f78	eb 10		 jmp	 SHORT $LN3@sha512_tra
$LN2@sha512_tra:
  07f7a	8b 84 24 a0 02
	00 00		 mov	 eax, DWORD PTR i$[rsp]
  07f81	ff c0		 inc	 eax
  07f83	89 84 24 a0 02
	00 00		 mov	 DWORD PTR i$[rsp], eax
$LN3@sha512_tra:
  07f8a	83 bc 24 a0 02
	00 00 08	 cmp	 DWORD PTR i$[rsp], 8
  07f92	7d 3c		 jge	 SHORT $LN1@sha512_tra

; 245  :         sha_info->digest[i] = sha_info->digest[i] + S[i];

  07f94	48 63 84 24 a0
	02 00 00	 movsxd	 rax, DWORD PTR i$[rsp]
  07f9c	48 63 8c 24 a0
	02 00 00	 movsxd	 rcx, DWORD PTR i$[rsp]
  07fa4	48 8b 94 24 10
	03 00 00	 mov	 rdx, QWORD PTR sha_info$[rsp]
  07fac	48 8b 44 c2 60	 mov	 rax, QWORD PTR [rdx+rax*8+96]
  07fb1	48 03 84 cc b0
	02 00 00	 add	 rax, QWORD PTR S$[rsp+rcx*8]
  07fb9	48 63 8c 24 a0
	02 00 00	 movsxd	 rcx, DWORD PTR i$[rsp]
  07fc1	48 8b 94 24 10
	03 00 00	 mov	 rdx, QWORD PTR sha_info$[rsp]
  07fc9	48 89 44 ca 60	 mov	 QWORD PTR [rdx+rcx*8+96], rax

; 246  :     }

  07fce	eb aa		 jmp	 SHORT $LN2@sha512_tra
$LN1@sha512_tra:

; 247  : 
; 248  : }

  07fd0	48 81 c4 08 03
	00 00		 add	 rsp, 776		; 00000308H
  07fd7	c3		 ret	 0
sha512_transform ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$longReverse DD imagerel longReverse
	DD	imagerel longReverse+291
	DD	imagerel $unwind$longReverse
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$longReverse DD 011201H
	DD	02212H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT longReverse
_TEXT	SEGMENT
value$ = 0
buffer$ = 32
byteCount$ = 40
Endianness$ = 48
longReverse PROC					; COMDAT

; 64   : {

  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	48 83 ec 18	 sub	 rsp, 24

; 65   :     SHA_INT64 value;
; 66   : 
; 67   :     if ( Endianness == PCT_BIG_ENDIAN )

  00012	83 7c 24 30 00	 cmp	 DWORD PTR Endianness$[rsp], 0
  00017	75 05		 jne	 SHORT $LN3@longRevers

; 68   :         return;

  00019	e9 00 01 00 00	 jmp	 $LN4@longRevers
$LN3@longRevers:

; 69   : 
; 70   :     byteCount /= sizeof(*buffer);

  0001e	48 63 44 24 28	 movsxd	 rax, DWORD PTR byteCount$[rsp]
  00023	33 d2		 xor	 edx, edx
  00025	b9 08 00 00 00	 mov	 ecx, 8
  0002a	48 f7 f1	 div	 rcx
  0002d	89 44 24 28	 mov	 DWORD PTR byteCount$[rsp], eax
$LN2@longRevers:

; 71   :     while (byteCount--) {

  00031	8b 44 24 28	 mov	 eax, DWORD PTR byteCount$[rsp]
  00035	8b 4c 24 28	 mov	 ecx, DWORD PTR byteCount$[rsp]
  00039	ff c9		 dec	 ecx
  0003b	89 4c 24 28	 mov	 DWORD PTR byteCount$[rsp], ecx
  0003f	85 c0		 test	 eax, eax
  00041	0f 84 d7 00 00
	00		 je	 $LN1@longRevers

; 72   :         value = *buffer;

  00047	48 8b 44 24 20	 mov	 rax, QWORD PTR buffer$[rsp]
  0004c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004f	48 89 04 24	 mov	 QWORD PTR value$[rsp], rax

; 73   : 
; 74   :                 ((unsigned char*)buffer)[0] = (unsigned char)(value >> 56) & 0xff;

  00053	48 8b 04 24	 mov	 rax, QWORD PTR value$[rsp]
  00057	48 c1 e8 38	 shr	 rax, 56			; 00000038H
  0005b	0f b6 c0	 movzx	 eax, al
  0005e	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00063	48 8b 4c 24 20	 mov	 rcx, QWORD PTR buffer$[rsp]
  00068	88 01		 mov	 BYTE PTR [rcx], al

; 75   :                 ((unsigned char*)buffer)[1] = (unsigned char)(value >> 48) & 0xff;

  0006a	48 8b 04 24	 mov	 rax, QWORD PTR value$[rsp]
  0006e	48 c1 e8 30	 shr	 rax, 48			; 00000030H
  00072	0f b6 c0	 movzx	 eax, al
  00075	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0007a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR buffer$[rsp]
  0007f	88 41 01	 mov	 BYTE PTR [rcx+1], al

; 76   :                 ((unsigned char*)buffer)[2] = (unsigned char)(value >> 40) & 0xff;

  00082	48 8b 04 24	 mov	 rax, QWORD PTR value$[rsp]
  00086	48 c1 e8 28	 shr	 rax, 40			; 00000028H
  0008a	0f b6 c0	 movzx	 eax, al
  0008d	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00092	48 8b 4c 24 20	 mov	 rcx, QWORD PTR buffer$[rsp]
  00097	88 41 02	 mov	 BYTE PTR [rcx+2], al

; 77   :                 ((unsigned char*)buffer)[3] = (unsigned char)(value >> 32) & 0xff;

  0009a	48 8b 04 24	 mov	 rax, QWORD PTR value$[rsp]
  0009e	48 c1 e8 20	 shr	 rax, 32			; 00000020H
  000a2	0f b6 c0	 movzx	 eax, al
  000a5	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  000aa	48 8b 4c 24 20	 mov	 rcx, QWORD PTR buffer$[rsp]
  000af	88 41 03	 mov	 BYTE PTR [rcx+3], al

; 78   :                 ((unsigned char*)buffer)[4] = (unsigned char)(value >> 24) & 0xff;

  000b2	48 8b 04 24	 mov	 rax, QWORD PTR value$[rsp]
  000b6	48 c1 e8 18	 shr	 rax, 24
  000ba	0f b6 c0	 movzx	 eax, al
  000bd	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  000c2	48 8b 4c 24 20	 mov	 rcx, QWORD PTR buffer$[rsp]
  000c7	88 41 04	 mov	 BYTE PTR [rcx+4], al

; 79   :                 ((unsigned char*)buffer)[5] = (unsigned char)(value >> 16) & 0xff;

  000ca	48 8b 04 24	 mov	 rax, QWORD PTR value$[rsp]
  000ce	48 c1 e8 10	 shr	 rax, 16
  000d2	0f b6 c0	 movzx	 eax, al
  000d5	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  000da	48 8b 4c 24 20	 mov	 rcx, QWORD PTR buffer$[rsp]
  000df	88 41 05	 mov	 BYTE PTR [rcx+5], al

; 80   :                 ((unsigned char*)buffer)[6] = (unsigned char)(value >>  8) & 0xff;

  000e2	48 8b 04 24	 mov	 rax, QWORD PTR value$[rsp]
  000e6	48 c1 e8 08	 shr	 rax, 8
  000ea	0f b6 c0	 movzx	 eax, al
  000ed	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  000f2	48 8b 4c 24 20	 mov	 rcx, QWORD PTR buffer$[rsp]
  000f7	88 41 06	 mov	 BYTE PTR [rcx+6], al

; 81   :                 ((unsigned char*)buffer)[7] = (unsigned char)(value      ) & 0xff;

  000fa	0f b6 04 24	 movzx	 eax, BYTE PTR value$[rsp]
  000fe	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  00103	48 8b 4c 24 20	 mov	 rcx, QWORD PTR buffer$[rsp]
  00108	88 41 07	 mov	 BYTE PTR [rcx+7], al

; 82   : 
; 83   :                 buffer++;

  0010b	48 8b 44 24 20	 mov	 rax, QWORD PTR buffer$[rsp]
  00110	48 83 c0 08	 add	 rax, 8
  00114	48 89 44 24 20	 mov	 QWORD PTR buffer$[rsp], rax

; 84   :     }

  00119	e9 13 ff ff ff	 jmp	 $LN2@longRevers
$LN1@longRevers:
$LN4@longRevers:

; 85   : }

  0011e	48 83 c4 18	 add	 rsp, 24
  00122	c3		 ret	 0
longReverse ENDP
_TEXT	ENDS
PUBLIC	??_C@_1EO@BJKIFCAJ@?$AA_?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AAC?$AAo?$AAn?$AAs?$AAi?$AAs?$AAt?$AAe?$AAn?$AAc?$AAy?$AA?$CI?$AAr?$AAe?$AAt?$AAv@ ; `string'
PUBLIC	??_C@_1EO@LALHLELK@?$AA?$CI?$AA?$CI?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?$CK?$AA?$CJ?$AA?$CI?$AAr?$AAe?$AAt?$AAv?$AAa?$AAl?$AA?$CJ?$AA?$CJ?$AA?9?$AA?$DO?$AAd?$AAa@ ; `string'
PUBLIC	??_C@_1DG@MMKMIIBJ@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAI?$AAS?$AA_?$AAR?$AAE?$AAA?$AAD?$AAY?$AA?$CI?$AAr?$AAe?$AAt?$AAv?$AAa?$AAl?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DA@FHOAPDMD@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAr?$AAe?$AAt?$AAv?$AAa?$AAl?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1DE@JEFPGCBC@?$AA?4?$AA?4?$AA?2?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AAs?$AA?2?$AAs?$AAh?$AAa?$AA5?$AA1?$AA2?$AAm?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?4?$AAc?$AA?$AA@ ; `string'
EXTRN	_PyUnicode_CheckConsistency:PROC
EXTRN	Py_hexdigits:QWORD
EXTRN	__imp__wassert:PROC
EXTRN	PyUnicode_New:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$SHA512_hexdigest DD imagerel SHA512_hexdigest
	DD	imagerel SHA512_hexdigest+713
	DD	imagerel $unwind$SHA512_hexdigest
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SHA512_hexdigest DD 021101H
	DD	03b0111H
xdata	ENDS
;	COMDAT ??_C@_1EO@BJKIFCAJ@?$AA_?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AAC?$AAo?$AAn?$AAs?$AAi?$AAs?$AAt?$AAe?$AAn?$AAc?$AAy?$AA?$CI?$AAr?$AAe?$AAt?$AAv@
CONST	SEGMENT
??_C@_1EO@BJKIFCAJ@?$AA_?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AAC?$AAo?$AAn?$AAs?$AAi?$AAs?$AAt?$AAe?$AAn?$AAc?$AAy?$AA?$CI?$AAr?$AAe?$AAt?$AAv@ DB '_'
	DB	00H, 'P', 00H, 'y', 00H, 'U', 00H, 'n', 00H, 'i', 00H, 'c', 00H
	DB	'o', 00H, 'd', 00H, 'e', 00H, '_', 00H, 'C', 00H, 'h', 00H, 'e'
	DB	00H, 'c', 00H, 'k', 00H, 'C', 00H, 'o', 00H, 'n', 00H, 's', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'y'
	DB	00H, '(', 00H, 'r', 00H, 'e', 00H, 't', 00H, 'v', 00H, 'a', 00H
	DB	'l', 00H, ',', 00H, ' ', 00H, '1', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@LALHLELK@?$AA?$CI?$AA?$CI?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?$CK?$AA?$CJ?$AA?$CI?$AAr?$AAe?$AAt?$AAv?$AAa?$AAl?$AA?$CJ?$AA?$CJ?$AA?9?$AA?$DO?$AAd?$AAa@
CONST	SEGMENT
??_C@_1EO@LALHLELK@?$AA?$CI?$AA?$CI?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?$CK?$AA?$CJ?$AA?$CI?$AAr?$AAe?$AAt?$AAv?$AAa?$AAl?$AA?$CJ?$AA?$CJ?$AA?9?$AA?$DO?$AAd?$AAa@ DB '('
	DB	00H, '(', 00H, 'P', 00H, 'y', 00H, 'U', 00H, 'n', 00H, 'i', 00H
	DB	'c', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, '*', 00H, ')', 00H, '(', 00H
	DB	'r', 00H, 'e', 00H, 't', 00H, 'v', 00H, 'a', 00H, 'l', 00H, ')'
	DB	00H, ')', 00H, '-', 00H, '>', 00H, 'd', 00H, 'a', 00H, 't', 00H
	DB	'a', 00H, '.', 00H, 'a', 00H, 'n', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@MMKMIIBJ@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAI?$AAS?$AA_?$AAR?$AAE?$AAA?$AAD?$AAY?$AA?$CI?$AAr?$AAe?$AAt?$AAv?$AAa?$AAl?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1DG@MMKMIIBJ@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAI?$AAS?$AA_?$AAR?$AAE?$AAA?$AAD?$AAY?$AA?$CI?$AAr?$AAe?$AAt?$AAv?$AAa?$AAl?$AA?$CJ?$AA?$AA@ DB 'P'
	DB	00H, 'y', 00H, 'U', 00H, 'n', 00H, 'i', 00H, 'c', 00H, 'o', 00H
	DB	'd', 00H, 'e', 00H, '_', 00H, 'I', 00H, 'S', 00H, '_', 00H, 'R'
	DB	00H, 'E', 00H, 'A', 00H, 'D', 00H, 'Y', 00H, '(', 00H, 'r', 00H
	DB	'e', 00H, 't', 00H, 'v', 00H, 'a', 00H, 'l', 00H, ')', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1DA@FHOAPDMD@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAr?$AAe?$AAt?$AAv?$AAa?$AAl?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1DA@FHOAPDMD@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAr?$AAe?$AAt?$AAv?$AAa?$AAl?$AA?$CJ?$AA?$AA@ DB 'P'
	DB	00H, 'y', 00H, 'U', 00H, 'n', 00H, 'i', 00H, 'c', 00H, 'o', 00H
	DB	'd', 00H, 'e', 00H, '_', 00H, 'C', 00H, 'h', 00H, 'e', 00H, 'c'
	DB	00H, 'k', 00H, '(', 00H, 'r', 00H, 'e', 00H, 't', 00H, 'v', 00H
	DB	'a', 00H, 'l', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DE@JEFPGCBC@?$AA?4?$AA?4?$AA?2?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AAs?$AA?2?$AAs?$AAh?$AAa?$AA5?$AA1?$AA2?$AAm?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?4?$AAc?$AA?$AA@
CONST	SEGMENT
??_C@_1DE@JEFPGCBC@?$AA?4?$AA?4?$AA?2?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AAs?$AA?2?$AAs?$AAh?$AAa?$AA5?$AA1?$AA2?$AAm?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?4?$AAc?$AA?$AA@ DB '.'
	DB	00H, '.', 00H, '\', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'u', 00H
	DB	'l', 00H, 'e', 00H, 's', 00H, '\', 00H, 's', 00H, 'h', 00H, 'a'
	DB	00H, '5', 00H, '1', 00H, '2', 00H, 'm', 00H, 'o', 00H, 'd', 00H
	DB	'u', 00H, 'l', 00H, 'e', 00H, '.', 00H, 'c', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT SHA512_hexdigest
_TEXT	SEGMENT
i$ = 32
retval$ = 40
temp$ = 48
digest$ = 368
hex_digest$ = 432
j$ = 440
c$21579 = 444
tv140 = 448
tv149 = 456
self$ = 480
unused$ = 488
SHA512_hexdigest PROC					; COMDAT

; 510  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 81 ec d8 01
	00 00		 sub	 rsp, 472		; 000001d8H

; 511  :     unsigned char digest[SHA_DIGESTSIZE];
; 512  :     SHAobject temp;
; 513  :     PyObject *retval;
; 514  :     Py_UCS1 *hex_digest;
; 515  :     int i, j;
; 516  : 
; 517  :     /* Get the raw (binary) digest value */
; 518  :     SHAcopy(self, &temp);

  00011	48 8d 54 24 30	 lea	 rdx, QWORD PTR temp$[rsp]
  00016	48 8b 8c 24 e0
	01 00 00	 mov	 rcx, QWORD PTR self$[rsp]
  0001e	e8 00 00 00 00	 call	 SHAcopy

; 519  :     sha512_final(digest, &temp);

  00023	48 8d 54 24 30	 lea	 rdx, QWORD PTR temp$[rsp]
  00028	48 8d 8c 24 70
	01 00 00	 lea	 rcx, QWORD PTR digest$[rsp]
  00030	e8 00 00 00 00	 call	 sha512_final

; 520  : 
; 521  :     /* Create a new string */
; 522  :     retval = PyUnicode_New(self->digestsize * 2, 127);

  00035	48 8b 84 24 e0
	01 00 00	 mov	 rax, QWORD PTR self$[rsp]
  0003d	8b 80 30 01 00
	00		 mov	 eax, DWORD PTR [rax+304]
  00043	d1 e0		 shl	 eax, 1
  00045	48 98		 cdqe
  00047	ba 7f 00 00 00	 mov	 edx, 127		; 0000007fH
  0004c	48 8b c8	 mov	 rcx, rax
  0004f	e8 00 00 00 00	 call	 PyUnicode_New
  00054	48 89 44 24 28	 mov	 QWORD PTR retval$[rsp], rax

; 523  :     if (!retval)

  00059	48 83 7c 24 28
	00		 cmp	 QWORD PTR retval$[rsp], 0
  0005f	75 07		 jne	 SHORT $LN4@SHA512_hex

; 524  :             return NULL;

  00061	33 c0		 xor	 eax, eax
  00063	e9 59 02 00 00	 jmp	 $LN5@SHA512_hex
$LN4@SHA512_hex:

; 525  :     hex_digest = PyUnicode_1BYTE_DATA(retval);

  00068	48 8b 44 24 28	 mov	 rax, QWORD PTR retval$[rsp]
  0006d	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00071	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  00077	25 00 00 00 10	 and	 eax, 268435456		; 10000000H
  0007c	85 c0		 test	 eax, eax
  0007e	75 1c		 jne	 SHORT $LN7@SHA512_hex
  00080	41 b8 0d 02 00
	00		 mov	 r8d, 525		; 0000020dH
  00086	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DE@JEFPGCBC@?$AA?4?$AA?4?$AA?2?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AAs?$AA?2?$AAs?$AAh?$AAa?$AA5?$AA1?$AA2?$AAm?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?4?$AAc?$AA?$AA@
  0008d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DA@FHOAPDMD@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAr?$AAe?$AAt?$AAv?$AAa?$AAl?$AA?$CJ?$AA?$AA@
  00094	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  0009a	33 c0		 xor	 eax, eax
$LN7@SHA512_hex:
  0009c	48 8b 44 24 28	 mov	 rax, QWORD PTR retval$[rsp]
  000a1	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  000a4	c1 e8 05	 shr	 eax, 5
  000a7	83 e0 01	 and	 eax, 1
  000aa	85 c0		 test	 eax, eax
  000ac	0f 84 ae 00 00
	00		 je	 $LN13@SHA512_hex
  000b2	48 8b 44 24 28	 mov	 rax, QWORD PTR retval$[rsp]
  000b7	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  000bb	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  000c1	25 00 00 00 10	 and	 eax, 268435456		; 10000000H
  000c6	85 c0		 test	 eax, eax
  000c8	75 1c		 jne	 SHORT $LN8@SHA512_hex
  000ca	41 b8 0d 02 00
	00		 mov	 r8d, 525		; 0000020dH
  000d0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DE@JEFPGCBC@?$AA?4?$AA?4?$AA?2?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AAs?$AA?2?$AAs?$AAh?$AAa?$AA5?$AA1?$AA2?$AAm?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?4?$AAc?$AA?$AA@
  000d7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DA@FHOAPDMD@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAr?$AAe?$AAt?$AAv?$AAa?$AAl?$AA?$CJ?$AA?$AA@
  000de	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  000e4	33 c0		 xor	 eax, eax
$LN8@SHA512_hex:
  000e6	48 8b 44 24 28	 mov	 rax, QWORD PTR retval$[rsp]
  000eb	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  000ee	c1 e8 07	 shr	 eax, 7
  000f1	83 e0 01	 and	 eax, 1
  000f4	85 c0		 test	 eax, eax
  000f6	75 1c		 jne	 SHORT $LN9@SHA512_hex
  000f8	41 b8 0d 02 00
	00		 mov	 r8d, 525		; 0000020dH
  000fe	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DE@JEFPGCBC@?$AA?4?$AA?4?$AA?2?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AAs?$AA?2?$AAs?$AAh?$AAa?$AA5?$AA1?$AA2?$AAm?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?4?$AAc?$AA?$AA@
  00105	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DG@MMKMIIBJ@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAI?$AAS?$AA_?$AAR?$AAE?$AAA?$AAD?$AAY?$AA?$CI?$AAr?$AAe?$AAt?$AAv?$AAa?$AAl?$AA?$CJ?$AA?$AA@
  0010c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  00112	33 c0		 xor	 eax, eax
$LN9@SHA512_hex:
  00114	48 8b 44 24 28	 mov	 rax, QWORD PTR retval$[rsp]
  00119	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  0011c	c1 e8 06	 shr	 eax, 6
  0011f	83 e0 01	 and	 eax, 1
  00122	85 c0		 test	 eax, eax
  00124	74 15		 je	 SHORT $LN10@SHA512_hex
  00126	48 8b 44 24 28	 mov	 rax, QWORD PTR retval$[rsp]
  0012b	48 05 80 00 00
	00		 add	 rax, 128		; 00000080H
  00131	48 89 84 24 c0
	01 00 00	 mov	 QWORD PTR tv140[rsp], rax
  00139	eb 13		 jmp	 SHORT $LN11@SHA512_hex
$LN10@SHA512_hex:
  0013b	48 8b 44 24 28	 mov	 rax, QWORD PTR retval$[rsp]
  00140	48 05 a0 00 00
	00		 add	 rax, 160		; 000000a0H
  00146	48 89 84 24 c0
	01 00 00	 mov	 QWORD PTR tv140[rsp], rax
$LN11@SHA512_hex:
  0014e	48 8b 84 24 c0
	01 00 00	 mov	 rax, QWORD PTR tv140[rsp]
  00156	48 89 84 24 c8
	01 00 00	 mov	 QWORD PTR tv149[rsp], rax
  0015e	eb 3f		 jmp	 SHORT $LN14@SHA512_hex
$LN13@SHA512_hex:
  00160	48 8b 44 24 28	 mov	 rax, QWORD PTR retval$[rsp]
  00165	48 83 b8 a0 00
	00 00 00	 cmp	 QWORD PTR [rax+160], 0
  0016d	75 1c		 jne	 SHORT $LN12@SHA512_hex
  0016f	41 b8 0d 02 00
	00		 mov	 r8d, 525		; 0000020dH
  00175	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DE@JEFPGCBC@?$AA?4?$AA?4?$AA?2?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AAs?$AA?2?$AAs?$AAh?$AAa?$AA5?$AA1?$AA2?$AAm?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?4?$AAc?$AA?$AA@
  0017c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EO@LALHLELK@?$AA?$CI?$AA?$CI?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?$CK?$AA?$CJ?$AA?$CI?$AAr?$AAe?$AAt?$AAv?$AAa?$AAl?$AA?$CJ?$AA?$CJ?$AA?9?$AA?$DO?$AAd?$AAa@
  00183	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  00189	33 c0		 xor	 eax, eax
$LN12@SHA512_hex:
  0018b	48 8b 44 24 28	 mov	 rax, QWORD PTR retval$[rsp]
  00190	48 8b 80 a0 00
	00 00		 mov	 rax, QWORD PTR [rax+160]
  00197	48 89 84 24 c8
	01 00 00	 mov	 QWORD PTR tv149[rsp], rax
$LN14@SHA512_hex:
  0019f	48 8b 84 24 c8
	01 00 00	 mov	 rax, QWORD PTR tv149[rsp]
  001a7	48 89 84 24 b0
	01 00 00	 mov	 QWORD PTR hex_digest$[rsp], rax

; 526  : 
; 527  :     /* Make hex version of the digest */
; 528  :     for (i=j=0; i<self->digestsize; i++) {

  001af	c7 84 24 b8 01
	00 00 00 00 00
	00		 mov	 DWORD PTR j$[rsp], 0
  001ba	8b 84 24 b8 01
	00 00		 mov	 eax, DWORD PTR j$[rsp]
  001c1	89 44 24 20	 mov	 DWORD PTR i$[rsp], eax
  001c5	eb 0a		 jmp	 SHORT $LN3@SHA512_hex
$LN2@SHA512_hex:
  001c7	8b 44 24 20	 mov	 eax, DWORD PTR i$[rsp]
  001cb	ff c0		 inc	 eax
  001cd	89 44 24 20	 mov	 DWORD PTR i$[rsp], eax
$LN3@SHA512_hex:
  001d1	48 8b 84 24 e0
	01 00 00	 mov	 rax, QWORD PTR self$[rsp]
  001d9	8b 80 30 01 00
	00		 mov	 eax, DWORD PTR [rax+304]
  001df	39 44 24 20	 cmp	 DWORD PTR i$[rsp], eax
  001e3	0f 8d a4 00 00
	00		 jge	 $LN1@SHA512_hex

; 529  :         unsigned char c;
; 530  :         c = (digest[i] >> 4) & 0xf;

  001e9	48 63 44 24 20	 movsxd	 rax, DWORD PTR i$[rsp]
  001ee	0f b6 84 04 70
	01 00 00	 movzx	 eax, BYTE PTR digest$[rsp+rax]
  001f6	c1 f8 04	 sar	 eax, 4
  001f9	83 e0 0f	 and	 eax, 15
  001fc	88 84 24 bc 01
	00 00		 mov	 BYTE PTR c$21579[rsp], al

; 531  :         hex_digest[j++] = Py_hexdigits[c];

  00203	0f b6 84 24 bc
	01 00 00	 movzx	 eax, BYTE PTR c$21579[rsp]
  0020b	48 63 8c 24 b8
	01 00 00	 movsxd	 rcx, DWORD PTR j$[rsp]
  00213	48 8b 94 24 b0
	01 00 00	 mov	 rdx, QWORD PTR hex_digest$[rsp]
  0021b	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR Py_hexdigits
  00222	41 0f b6 04 00	 movzx	 eax, BYTE PTR [r8+rax]
  00227	88 04 0a	 mov	 BYTE PTR [rdx+rcx], al
  0022a	8b 84 24 b8 01
	00 00		 mov	 eax, DWORD PTR j$[rsp]
  00231	ff c0		 inc	 eax
  00233	89 84 24 b8 01
	00 00		 mov	 DWORD PTR j$[rsp], eax

; 532  :         c = (digest[i] & 0xf);

  0023a	48 63 44 24 20	 movsxd	 rax, DWORD PTR i$[rsp]
  0023f	0f b6 84 04 70
	01 00 00	 movzx	 eax, BYTE PTR digest$[rsp+rax]
  00247	83 e0 0f	 and	 eax, 15
  0024a	88 84 24 bc 01
	00 00		 mov	 BYTE PTR c$21579[rsp], al

; 533  :         hex_digest[j++] = Py_hexdigits[c];

  00251	0f b6 84 24 bc
	01 00 00	 movzx	 eax, BYTE PTR c$21579[rsp]
  00259	48 63 8c 24 b8
	01 00 00	 movsxd	 rcx, DWORD PTR j$[rsp]
  00261	48 8b 94 24 b0
	01 00 00	 mov	 rdx, QWORD PTR hex_digest$[rsp]
  00269	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR Py_hexdigits
  00270	41 0f b6 04 00	 movzx	 eax, BYTE PTR [r8+rax]
  00275	88 04 0a	 mov	 BYTE PTR [rdx+rcx], al
  00278	8b 84 24 b8 01
	00 00		 mov	 eax, DWORD PTR j$[rsp]
  0027f	ff c0		 inc	 eax
  00281	89 84 24 b8 01
	00 00		 mov	 DWORD PTR j$[rsp], eax

; 534  :     }

  00288	e9 3a ff ff ff	 jmp	 $LN2@SHA512_hex
$LN1@SHA512_hex:

; 535  : #ifdef Py_DEBUG
; 536  :     assert(_PyUnicode_CheckConsistency(retval, 1));

  0028d	ba 01 00 00 00	 mov	 edx, 1
  00292	48 8b 4c 24 28	 mov	 rcx, QWORD PTR retval$[rsp]
  00297	e8 00 00 00 00	 call	 _PyUnicode_CheckConsistency
  0029c	85 c0		 test	 eax, eax
  0029e	75 1c		 jne	 SHORT $LN15@SHA512_hex
  002a0	41 b8 18 02 00
	00		 mov	 r8d, 536		; 00000218H
  002a6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DE@JEFPGCBC@?$AA?4?$AA?4?$AA?2?$AAM?$AAo?$AAd?$AAu?$AAl?$AAe?$AAs?$AA?2?$AAs?$AAh?$AAa?$AA5?$AA1?$AA2?$AAm?$AAo?$AAd?$AAu?$AAl?$AAe?$AA?4?$AAc?$AA?$AA@
  002ad	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EO@BJKIFCAJ@?$AA_?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AAC?$AAo?$AAn?$AAs?$AAi?$AAs?$AAt?$AAe?$AAn?$AAc?$AAy?$AA?$CI?$AAr?$AAe?$AAt?$AAv@
  002b4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  002ba	33 c0		 xor	 eax, eax
$LN15@SHA512_hex:

; 537  : #endif
; 538  :     return retval;

  002bc	48 8b 44 24 28	 mov	 rax, QWORD PTR retval$[rsp]
$LN5@SHA512_hex:

; 539  : }

  002c1	48 81 c4 d8 01
	00 00		 add	 rsp, 472		; 000001d8H
  002c8	c3		 ret	 0
SHA512_hexdigest ENDP
_TEXT	ENDS
PUBLIC	_Py_IncRef
PUBLIC	??_C@_0CA@DGKHNIN@Buffer?5must?5be?5single?5dimension?$AA@ ; `string'
PUBLIC	??_C@_0CK@NHOOCGGK@object?5supporting?5the?5buffer?5API@ ; `string'
PUBLIC	??_C@_0CP@IBHDLOCD@Unicode?9objects?5must?5be?5encoded?5@ ; `string'
PUBLIC	??_C@_08BNPIIEPK@O?3update?$AA@			; `string'
EXTRN	_Py_NoneStruct:BYTE
EXTRN	PyBuffer_Release:PROC
EXTRN	PyExc_BufferError:QWORD
EXTRN	PyObject_GetBuffer:PROC
EXTRN	PyErr_SetString:PROC
EXTRN	PyExc_TypeError:QWORD
EXTRN	PyArg_ParseTuple:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$SHA512_update DD imagerel SHA512_update
	DD	imagerel SHA512_update+307
	DD	imagerel $unwind$SHA512_update
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SHA512_update DD 021101H
	DD	0110111H
xdata	ENDS
;	COMDAT ??_C@_0CA@DGKHNIN@Buffer?5must?5be?5single?5dimension?$AA@
CONST	SEGMENT
??_C@_0CA@DGKHNIN@Buffer?5must?5be?5single?5dimension?$AA@ DB 'Buffer mus'
	DB	't be single dimension', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@NHOOCGGK@object?5supporting?5the?5buffer?5API@
CONST	SEGMENT
??_C@_0CK@NHOOCGGK@object?5supporting?5the?5buffer?5API@ DB 'object suppo'
	DB	'rting the buffer API required', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@IBHDLOCD@Unicode?9objects?5must?5be?5encoded?5@
CONST	SEGMENT
??_C@_0CP@IBHDLOCD@Unicode?9objects?5must?5be?5encoded?5@ DB 'Unicode-obj'
	DB	'ects must be encoded before hashing', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_08BNPIIEPK@O?3update?$AA@
CONST	SEGMENT
??_C@_08BNPIIEPK@O?3update?$AA@ DB 'O:update', 00H	; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT SHA512_update
_TEXT	SEGMENT
buf$ = 32
obj$ = 112
self$ = 144
args$ = 152
SHA512_update PROC					; COMDAT

; 546  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 81 ec 88 00
	00 00		 sub	 rsp, 136		; 00000088H

; 547  :     PyObject *obj;
; 548  :     Py_buffer buf;
; 549  : 
; 550  :     if (!PyArg_ParseTuple(args, "O:update", &obj))

  00011	4c 8d 44 24 70	 lea	 r8, QWORD PTR obj$[rsp]
  00016	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_08BNPIIEPK@O?3update?$AA@
  0001d	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR args$[rsp]
  00025	e8 00 00 00 00	 call	 PyArg_ParseTuple
  0002a	85 c0		 test	 eax, eax
  0002c	75 07		 jne	 SHORT $LN9@SHA512_upd

; 551  :         return NULL;

  0002e	33 c0		 xor	 eax, eax
  00030	e9 f6 00 00 00	 jmp	 $LN10@SHA512_upd
$LN9@SHA512_upd:
$LN8@SHA512_upd:

; 552  : 
; 553  :     GET_BUFFER_VIEW_OR_ERROUT(obj, &buf);

  00035	48 8b 44 24 70	 mov	 rax, QWORD PTR obj$[rsp]
  0003a	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  0003e	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  00044	25 00 00 00 10	 and	 eax, 268435456		; 10000000H
  00049	85 c0		 test	 eax, eax
  0004b	74 1a		 je	 SHORT $LN5@SHA512_upd
  0004d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CP@IBHDLOCD@Unicode?9objects?5must?5be?5encoded?5@
  00054	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  0005b	e8 00 00 00 00	 call	 PyErr_SetString
  00060	33 c0		 xor	 eax, eax
  00062	e9 c4 00 00 00	 jmp	 $LN10@SHA512_upd
$LN5@SHA512_upd:
  00067	48 8b 44 24 70	 mov	 rax, QWORD PTR obj$[rsp]
  0006c	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00070	48 83 b8 f8 00
	00 00 00	 cmp	 QWORD PTR [rax+248], 0
  00078	74 16		 je	 SHORT $LN3@SHA512_upd
  0007a	48 8b 44 24 70	 mov	 rax, QWORD PTR obj$[rsp]
  0007f	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00083	48 8b 80 f8 00
	00 00		 mov	 rax, QWORD PTR [rax+248]
  0008a	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0008e	75 1a		 jne	 SHORT $LN4@SHA512_upd
$LN3@SHA512_upd:
  00090	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CK@NHOOCGGK@object?5supporting?5the?5buffer?5API@
  00097	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  0009e	e8 00 00 00 00	 call	 PyErr_SetString
  000a3	33 c0		 xor	 eax, eax
  000a5	e9 81 00 00 00	 jmp	 $LN10@SHA512_upd
$LN4@SHA512_upd:
  000aa	45 33 c0	 xor	 r8d, r8d
  000ad	48 8d 54 24 20	 lea	 rdx, QWORD PTR buf$[rsp]
  000b2	48 8b 4c 24 70	 mov	 rcx, QWORD PTR obj$[rsp]
  000b7	e8 00 00 00 00	 call	 PyObject_GetBuffer
  000bc	83 f8 ff	 cmp	 eax, -1
  000bf	75 04		 jne	 SHORT $LN2@SHA512_upd
  000c1	33 c0		 xor	 eax, eax
  000c3	eb 66		 jmp	 SHORT $LN10@SHA512_upd
$LN2@SHA512_upd:
  000c5	83 7c 24 44 01	 cmp	 DWORD PTR buf$[rsp+36], 1
  000ca	7e 21		 jle	 SHORT $LN1@SHA512_upd
  000cc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CA@DGKHNIN@Buffer?5must?5be?5single?5dimension?$AA@
  000d3	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_BufferError
  000da	e8 00 00 00 00	 call	 PyErr_SetString
  000df	48 8d 4c 24 20	 lea	 rcx, QWORD PTR buf$[rsp]
  000e4	e8 00 00 00 00	 call	 PyBuffer_Release
  000e9	33 c0		 xor	 eax, eax
  000eb	eb 3e		 jmp	 SHORT $LN10@SHA512_upd
$LN1@SHA512_upd:
  000ed	33 c0		 xor	 eax, eax
  000ef	85 c0		 test	 eax, eax
  000f1	0f 85 3e ff ff
	ff		 jne	 $LN8@SHA512_upd

; 554  : 
; 555  :     sha512_update(self, buf.buf, buf.len);

  000f7	4c 8b 44 24 30	 mov	 r8, QWORD PTR buf$[rsp+16]
  000fc	48 8b 54 24 20	 mov	 rdx, QWORD PTR buf$[rsp]
  00101	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR self$[rsp]
  00109	e8 00 00 00 00	 call	 sha512_update

; 556  : 
; 557  :     PyBuffer_Release(&buf);

  0010e	48 8d 4c 24 20	 lea	 rcx, QWORD PTR buf$[rsp]
  00113	e8 00 00 00 00	 call	 PyBuffer_Release

; 558  :     Py_INCREF(Py_None);

  00118	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_Py_NoneStruct
  0011f	e8 00 00 00 00	 call	 _Py_IncRef

; 559  :     return Py_None;

  00124	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_NoneStruct
$LN10@SHA512_upd:

; 560  : }

  0012b	48 81 c4 88 00
	00 00		 add	 rsp, 136		; 00000088H
  00132	c3		 ret	 0
SHA512_update ENDP
_TEXT	ENDS
PUBLIC	??_C@_0L@DHGMCEID@_Py_IncRef?$AA@		; `string'
PUBLIC	??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@ ; `string'
EXTRN	_Py_RefTotal:QWORD
EXTRN	_PyParallel_Guard:PROC
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$_Py_IncRef DD imagerel $LN7
	DD	imagerel $LN7+132
	DD	imagerel $unwind$_Py_IncRef
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_Py_IncRef DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT ??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
CONST	SEGMENT
??_C@_0L@DHGMCEID@_Py_IncRef?$AA@ DB '_Py_IncRef', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
CONST	SEGMENT
??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@ DB 'c:\src\pypa'
	DB	'rallel\include\object.h', 00H		; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT _Py_IncRef
_TEXT	SEGMENT
op$ = 64
_Py_IncRef PROC						; COMDAT

; 904  : {

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 905  :     if ((!Py_PXCTX && (Py_ISPY(op) || Px_PERSISTED(op)))) {

  00009	e8 00 00 00 00	 call	 _Py_PXCTX
  0000e	85 c0		 test	 eax, eax
  00010	75 6d		 jne	 SHORT $LN2@Py_IncRef
  00012	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  0001a	4c 8b 4c 24 40	 mov	 r9, QWORD PTR op$[rsp]
  0001f	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00025	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0002c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00033	e8 00 00 00 00	 call	 _PyParallel_Guard
  00038	85 c0		 test	 eax, eax
  0003a	75 12		 jne	 SHORT $LN1@Py_IncRef
  0003c	48 8b 44 24 40	 mov	 rax, QWORD PTR op$[rsp]
  00041	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00045	48 83 e0 20	 and	 rax, 32			; 00000020H
  00049	48 85 c0	 test	 rax, rax
  0004c	74 31		 je	 SHORT $LN2@Py_IncRef
$LN1@Py_IncRef:

; 906  :         _Py_INC_REFTOTAL;

  0004e	e8 00 00 00 00	 call	 _Py_PXCTX
  00053	85 c0		 test	 eax, eax
  00055	74 02		 je	 SHORT $LN5@Py_IncRef
  00057	eb 11		 jmp	 SHORT $LN6@Py_IncRef
$LN5@Py_IncRef:
  00059	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR _Py_RefTotal
  00060	48 ff c0	 inc	 rax
  00063	48 89 05 00 00
	00 00		 mov	 QWORD PTR _Py_RefTotal, rax
$LN6@Py_IncRef:

; 907  :         (((PyObject*)(op))->ob_refcnt++);

  0006a	48 8b 44 24 40	 mov	 rax, QWORD PTR op$[rsp]
  0006f	48 8b 40 50	 mov	 rax, QWORD PTR [rax+80]
  00073	48 ff c0	 inc	 rax
  00076	48 8b 4c 24 40	 mov	 rcx, QWORD PTR op$[rsp]
  0007b	48 89 41 50	 mov	 QWORD PTR [rcx+80], rax
$LN2@Py_IncRef:

; 908  :     }
; 909  : }

  0007f	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00083	c3		 ret	 0
_Py_IncRef ENDP
_TEXT	ENDS
;	COMDAT pdata
; File c:\src\pyparallel\modules\sha512module.c
pdata	SEGMENT
$pdata$sha512_update DD imagerel sha512_update
	DD	imagerel sha512_update+472
	DD	imagerel $unwind$sha512_update
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$sha512_update DD 011301H
	DD	06213H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT sha512_update
_TEXT	SEGMENT
clo$ = 32
i$ = 40
sha_info$ = 64
buffer$ = 72
count$ = 80
sha512_update PROC					; COMDAT

; 295  : {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 296  :     Py_ssize_t i;
; 297  :     SHA_INT32 clo;
; 298  : 
; 299  :     clo = sha_info->count_lo + ((SHA_INT32) count << 3);

  00013	48 8b 44 24 40	 mov	 rax, QWORD PTR sha_info$[rsp]
  00018	8b 80 a0 00 00
	00		 mov	 eax, DWORD PTR [rax+160]
  0001e	8b 4c 24 50	 mov	 ecx, DWORD PTR count$[rsp]
  00022	8d 04 c8	 lea	 eax, DWORD PTR [rax+rcx*8]
  00025	89 44 24 20	 mov	 DWORD PTR clo$[rsp], eax

; 300  :     if (clo < sha_info->count_lo) {

  00029	48 8b 44 24 40	 mov	 rax, QWORD PTR sha_info$[rsp]
  0002e	8b 80 a0 00 00
	00		 mov	 eax, DWORD PTR [rax+160]
  00034	39 44 24 20	 cmp	 DWORD PTR clo$[rsp], eax
  00038	73 18		 jae	 SHORT $LN7@sha512_upd

; 301  :         ++sha_info->count_hi;

  0003a	48 8b 44 24 40	 mov	 rax, QWORD PTR sha_info$[rsp]
  0003f	8b 80 a4 00 00
	00		 mov	 eax, DWORD PTR [rax+164]
  00045	ff c0		 inc	 eax
  00047	48 8b 4c 24 40	 mov	 rcx, QWORD PTR sha_info$[rsp]
  0004c	89 81 a4 00 00
	00		 mov	 DWORD PTR [rcx+164], eax
$LN7@sha512_upd:

; 302  :     }
; 303  :     sha_info->count_lo = clo;

  00052	48 8b 44 24 40	 mov	 rax, QWORD PTR sha_info$[rsp]
  00057	8b 4c 24 20	 mov	 ecx, DWORD PTR clo$[rsp]
  0005b	89 88 a0 00 00
	00		 mov	 DWORD PTR [rax+160], ecx

; 304  :     sha_info->count_hi += (SHA_INT32) count >> 29;

  00061	8b 44 24 50	 mov	 eax, DWORD PTR count$[rsp]
  00065	c1 e8 1d	 shr	 eax, 29
  00068	48 8b 4c 24 40	 mov	 rcx, QWORD PTR sha_info$[rsp]
  0006d	03 81 a4 00 00
	00		 add	 eax, DWORD PTR [rcx+164]
  00073	48 8b 4c 24 40	 mov	 rcx, QWORD PTR sha_info$[rsp]
  00078	89 81 a4 00 00
	00		 mov	 DWORD PTR [rcx+164], eax

; 305  :     if (sha_info->local) {

  0007e	48 8b 44 24 40	 mov	 rax, QWORD PTR sha_info$[rsp]
  00083	83 b8 2c 01 00
	00 00		 cmp	 DWORD PTR [rax+300], 0
  0008a	0f 84 c2 00 00
	00		 je	 $LN6@sha512_upd

; 306  :         i = SHA_BLOCKSIZE - sha_info->local;

  00090	48 8b 44 24 40	 mov	 rax, QWORD PTR sha_info$[rsp]
  00095	b9 80 00 00 00	 mov	 ecx, 128		; 00000080H
  0009a	2b 88 2c 01 00
	00		 sub	 ecx, DWORD PTR [rax+300]
  000a0	8b c1		 mov	 eax, ecx
  000a2	48 98		 cdqe
  000a4	48 89 44 24 28	 mov	 QWORD PTR i$[rsp], rax

; 307  :         if (i > count) {

  000a9	48 8b 44 24 50	 mov	 rax, QWORD PTR count$[rsp]
  000ae	48 39 44 24 28	 cmp	 QWORD PTR i$[rsp], rax
  000b3	7e 0a		 jle	 SHORT $LN5@sha512_upd

; 308  :             i = count;

  000b5	48 8b 44 24 50	 mov	 rax, QWORD PTR count$[rsp]
  000ba	48 89 44 24 28	 mov	 QWORD PTR i$[rsp], rax
$LN5@sha512_upd:

; 309  :         }
; 310  :         memcpy(((SHA_BYTE *) sha_info->data) + sha_info->local, buffer, i);

  000bf	48 8b 44 24 40	 mov	 rax, QWORD PTR sha_info$[rsp]
  000c4	48 63 80 2c 01
	00 00		 movsxd	 rax, DWORD PTR [rax+300]
  000cb	48 8b 4c 24 40	 mov	 rcx, QWORD PTR sha_info$[rsp]
  000d0	48 8d 84 01 a8
	00 00 00	 lea	 rax, QWORD PTR [rcx+rax+168]
  000d8	4c 8b 44 24 28	 mov	 r8, QWORD PTR i$[rsp]
  000dd	48 8b 54 24 48	 mov	 rdx, QWORD PTR buffer$[rsp]
  000e2	48 8b c8	 mov	 rcx, rax
  000e5	e8 00 00 00 00	 call	 memcpy

; 311  :         count -= i;

  000ea	48 8b 44 24 28	 mov	 rax, QWORD PTR i$[rsp]
  000ef	48 8b 4c 24 50	 mov	 rcx, QWORD PTR count$[rsp]
  000f4	48 2b c8	 sub	 rcx, rax
  000f7	48 8b c1	 mov	 rax, rcx
  000fa	48 89 44 24 50	 mov	 QWORD PTR count$[rsp], rax

; 312  :         buffer += i;

  000ff	48 8b 44 24 28	 mov	 rax, QWORD PTR i$[rsp]
  00104	48 8b 4c 24 48	 mov	 rcx, QWORD PTR buffer$[rsp]
  00109	48 03 c8	 add	 rcx, rax
  0010c	48 8b c1	 mov	 rax, rcx
  0010f	48 89 44 24 48	 mov	 QWORD PTR buffer$[rsp], rax

; 313  :         sha_info->local += i;

  00114	48 8b 44 24 40	 mov	 rax, QWORD PTR sha_info$[rsp]
  00119	48 63 80 2c 01
	00 00		 movsxd	 rax, DWORD PTR [rax+300]
  00120	48 03 44 24 28	 add	 rax, QWORD PTR i$[rsp]
  00125	48 8b 4c 24 40	 mov	 rcx, QWORD PTR sha_info$[rsp]
  0012a	89 81 2c 01 00
	00		 mov	 DWORD PTR [rcx+300], eax

; 314  :         if (sha_info->local == SHA_BLOCKSIZE) {

  00130	48 8b 44 24 40	 mov	 rax, QWORD PTR sha_info$[rsp]
  00135	81 b8 2c 01 00
	00 80 00 00 00	 cmp	 DWORD PTR [rax+300], 128 ; 00000080H
  0013f	75 0c		 jne	 SHORT $LN4@sha512_upd

; 315  :             sha512_transform(sha_info);

  00141	48 8b 4c 24 40	 mov	 rcx, QWORD PTR sha_info$[rsp]
  00146	e8 00 00 00 00	 call	 sha512_transform

; 316  :         }
; 317  :         else {

  0014b	eb 05		 jmp	 SHORT $LN3@sha512_upd
$LN4@sha512_upd:

; 318  :             return;

  0014d	e9 81 00 00 00	 jmp	 $LN8@sha512_upd
$LN3@sha512_upd:
$LN6@sha512_upd:
$LN2@sha512_upd:

; 319  :         }
; 320  :     }
; 321  :     while (count >= SHA_BLOCKSIZE) {

  00152	48 81 7c 24 50
	80 00 00 00	 cmp	 QWORD PTR count$[rsp], 128 ; 00000080H
  0015b	7c 4a		 jl	 SHORT $LN1@sha512_upd

; 322  :         memcpy(sha_info->data, buffer, SHA_BLOCKSIZE);

  0015d	48 8b 44 24 40	 mov	 rax, QWORD PTR sha_info$[rsp]
  00162	48 05 a8 00 00
	00		 add	 rax, 168		; 000000a8H
  00168	41 b8 80 00 00
	00		 mov	 r8d, 128		; 00000080H
  0016e	48 8b 54 24 48	 mov	 rdx, QWORD PTR buffer$[rsp]
  00173	48 8b c8	 mov	 rcx, rax
  00176	e8 00 00 00 00	 call	 memcpy

; 323  :         buffer += SHA_BLOCKSIZE;

  0017b	48 8b 44 24 48	 mov	 rax, QWORD PTR buffer$[rsp]
  00180	48 05 80 00 00
	00		 add	 rax, 128		; 00000080H
  00186	48 89 44 24 48	 mov	 QWORD PTR buffer$[rsp], rax

; 324  :         count -= SHA_BLOCKSIZE;

  0018b	48 8b 44 24 50	 mov	 rax, QWORD PTR count$[rsp]
  00190	48 2d 80 00 00
	00		 sub	 rax, 128		; 00000080H
  00196	48 89 44 24 50	 mov	 QWORD PTR count$[rsp], rax

; 325  :         sha512_transform(sha_info);

  0019b	48 8b 4c 24 40	 mov	 rcx, QWORD PTR sha_info$[rsp]
  001a0	e8 00 00 00 00	 call	 sha512_transform

; 326  :     }

  001a5	eb ab		 jmp	 SHORT $LN2@sha512_upd
$LN1@sha512_upd:

; 327  :     memcpy(sha_info->data, buffer, count);

  001a7	48 8b 44 24 40	 mov	 rax, QWORD PTR sha_info$[rsp]
  001ac	48 05 a8 00 00
	00		 add	 rax, 168		; 000000a8H
  001b2	4c 8b 44 24 50	 mov	 r8, QWORD PTR count$[rsp]
  001b7	48 8b 54 24 48	 mov	 rdx, QWORD PTR buffer$[rsp]
  001bc	48 8b c8	 mov	 rcx, rax
  001bf	e8 00 00 00 00	 call	 memcpy

; 328  :     sha_info->local = count;

  001c4	48 8b 44 24 40	 mov	 rax, QWORD PTR sha_info$[rsp]
  001c9	8b 4c 24 50	 mov	 ecx, DWORD PTR count$[rsp]
  001cd	89 88 2c 01 00
	00		 mov	 DWORD PTR [rax+300], ecx
$LN8@sha512_upd:

; 329  : }

  001d3	48 83 c4 38	 add	 rsp, 56			; 00000038H
  001d7	c3		 ret	 0
sha512_update ENDP
_TEXT	ENDS
EXTRN	PyLong_FromLong:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$SHA512_get_block_size DD imagerel SHA512_get_block_size
	DD	imagerel SHA512_get_block_size+29
	DD	imagerel $unwind$SHA512_get_block_size
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SHA512_get_block_size DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT SHA512_get_block_size
_TEXT	SEGMENT
self$ = 48
closure$ = 56
SHA512_get_block_size PROC				; COMDAT

; 572  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 573  :     return PyLong_FromLong(SHA_BLOCKSIZE);

  0000e	b9 80 00 00 00	 mov	 ecx, 128		; 00000080H
  00013	e8 00 00 00 00	 call	 PyLong_FromLong

; 574  : }

  00018	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0001c	c3		 ret	 0
SHA512_get_block_size ENDP
_TEXT	ENDS
PUBLIC	??_C@_06IFPKDKMD@SHA384?$AA@			; `string'
PUBLIC	??_C@_06PJBKPJBG@SHA512?$AA@			; `string'
EXTRN	PyUnicode_FromStringAndSize:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$SHA512_get_name DD imagerel SHA512_get_name
	DD	imagerel SHA512_get_name+71
	DD	imagerel $unwind$SHA512_get_name
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SHA512_get_name DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT ??_C@_06IFPKDKMD@SHA384?$AA@
CONST	SEGMENT
??_C@_06IFPKDKMD@SHA384?$AA@ DB 'SHA384', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06PJBKPJBG@SHA512?$AA@
CONST	SEGMENT
??_C@_06PJBKPJBG@SHA512?$AA@ DB 'SHA512', 00H		; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT SHA512_get_name
_TEXT	SEGMENT
self$ = 48
closure$ = 56
SHA512_get_name PROC					; COMDAT

; 578  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 579  :     if (((SHAobject *)self)->digestsize == 64)

  0000e	48 8b 44 24 30	 mov	 rax, QWORD PTR self$[rsp]
  00013	83 b8 30 01 00
	00 40		 cmp	 DWORD PTR [rax+304], 64	; 00000040H
  0001a	75 15		 jne	 SHORT $LN2@SHA512_get

; 580  :         return PyUnicode_FromStringAndSize("SHA512", 6);

  0001c	ba 06 00 00 00	 mov	 edx, 6
  00021	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_06PJBKPJBG@SHA512?$AA@
  00028	e8 00 00 00 00	 call	 PyUnicode_FromStringAndSize
  0002d	eb 13		 jmp	 SHORT $LN3@SHA512_get

; 581  :     else

  0002f	eb 11		 jmp	 SHORT $LN1@SHA512_get
$LN2@SHA512_get:

; 582  :         return PyUnicode_FromStringAndSize("SHA384", 6);

  00031	ba 06 00 00 00	 mov	 edx, 6
  00036	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_06IFPKDKMD@SHA384?$AA@
  0003d	e8 00 00 00 00	 call	 PyUnicode_FromStringAndSize
$LN1@SHA512_get:
$LN3@SHA512_get:

; 583  : }

  00042	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00046	c3		 ret	 0
SHA512_get_name ENDP
_TEXT	ENDS
PUBLIC	_Py_DecRef
PUBLIC	??_C@_06KJFPOEIK@?$HMO?3new?$AA@		; `string'
EXTRN	PyErr_Occurred:PROC
EXTRN	PyArg_ParseTupleAndKeywords:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$SHA512_new DD imagerel SHA512_new
	DD	imagerel SHA512_new+460
	DD	imagerel $unwind$SHA512_new
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SHA512_new DD 021601H
	DD	0150116H
xdata	ENDS
;	COMDAT ??_C@_06KJFPOEIK@?$HMO?3new?$AA@
CONST	SEGMENT
??_C@_06KJFPOEIK@?$HMO?3new?$AA@ DB '|O:new', 00H	; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT SHA512_new
_TEXT	SEGMENT
data_obj$ = 48
buf$ = 64
new$ = 144
self$ = 176
args$ = 184
kwdict$ = 192
SHA512_new PROC						; COMDAT

; 678  : {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 81 ec a8 00
	00 00		 sub	 rsp, 168		; 000000a8H

; 679  :     static char *kwlist[] = {"string", NULL};
; 680  :     SHAobject *new;
; 681  :     PyObject *data_obj = NULL;

  00016	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR data_obj$[rsp], 0

; 682  :     Py_buffer buf;
; 683  : 
; 684  :     if (!PyArg_ParseTupleAndKeywords(args, kwdict, "|O:new", kwlist,
; 685  :                                      &data_obj)) {

  0001f	48 8d 44 24 30	 lea	 rax, QWORD PTR data_obj$[rsp]
  00024	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00029	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:?kwlist@?1??SHA512_new@@9@9
  00030	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_06KJFPOEIK@?$HMO?3new?$AA@
  00037	48 8b 94 24 c0
	00 00 00	 mov	 rdx, QWORD PTR kwdict$[rsp]
  0003f	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR args$[rsp]
  00047	e8 00 00 00 00	 call	 PyArg_ParseTupleAndKeywords
  0004c	85 c0		 test	 eax, eax
  0004e	75 07		 jne	 SHORT $LN15@SHA512_new

; 686  :         return NULL;

  00050	33 c0		 xor	 eax, eax
  00052	e9 6d 01 00 00	 jmp	 $LN16@SHA512_new
$LN15@SHA512_new:

; 687  :     }
; 688  : 
; 689  :     if (data_obj)

  00057	48 83 7c 24 30
	00		 cmp	 QWORD PTR data_obj$[rsp], 0
  0005d	0f 84 c8 00 00
	00		 je	 $LN14@SHA512_new
$LN13@SHA512_new:

; 690  :         GET_BUFFER_VIEW_OR_ERROUT(data_obj, &buf);

  00063	48 8b 44 24 30	 mov	 rax, QWORD PTR data_obj$[rsp]
  00068	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  0006c	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  00072	25 00 00 00 10	 and	 eax, 268435456		; 10000000H
  00077	85 c0		 test	 eax, eax
  00079	74 1a		 je	 SHORT $LN10@SHA512_new
  0007b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CP@IBHDLOCD@Unicode?9objects?5must?5be?5encoded?5@
  00082	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  00089	e8 00 00 00 00	 call	 PyErr_SetString
  0008e	33 c0		 xor	 eax, eax
  00090	e9 2f 01 00 00	 jmp	 $LN16@SHA512_new
$LN10@SHA512_new:
  00095	48 8b 44 24 30	 mov	 rax, QWORD PTR data_obj$[rsp]
  0009a	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  0009e	48 83 b8 f8 00
	00 00 00	 cmp	 QWORD PTR [rax+248], 0
  000a6	74 16		 je	 SHORT $LN8@SHA512_new
  000a8	48 8b 44 24 30	 mov	 rax, QWORD PTR data_obj$[rsp]
  000ad	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  000b1	48 8b 80 f8 00
	00 00		 mov	 rax, QWORD PTR [rax+248]
  000b8	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  000bc	75 1a		 jne	 SHORT $LN9@SHA512_new
$LN8@SHA512_new:
  000be	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CK@NHOOCGGK@object?5supporting?5the?5buffer?5API@
  000c5	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  000cc	e8 00 00 00 00	 call	 PyErr_SetString
  000d1	33 c0		 xor	 eax, eax
  000d3	e9 ec 00 00 00	 jmp	 $LN16@SHA512_new
$LN9@SHA512_new:
  000d8	45 33 c0	 xor	 r8d, r8d
  000db	48 8d 54 24 40	 lea	 rdx, QWORD PTR buf$[rsp]
  000e0	48 8b 4c 24 30	 mov	 rcx, QWORD PTR data_obj$[rsp]
  000e5	e8 00 00 00 00	 call	 PyObject_GetBuffer
  000ea	83 f8 ff	 cmp	 eax, -1
  000ed	75 07		 jne	 SHORT $LN7@SHA512_new
  000ef	33 c0		 xor	 eax, eax
  000f1	e9 ce 00 00 00	 jmp	 $LN16@SHA512_new
$LN7@SHA512_new:
  000f6	83 7c 24 64 01	 cmp	 DWORD PTR buf$[rsp+36], 1
  000fb	7e 24		 jle	 SHORT $LN6@SHA512_new
  000fd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CA@DGKHNIN@Buffer?5must?5be?5single?5dimension?$AA@
  00104	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_BufferError
  0010b	e8 00 00 00 00	 call	 PyErr_SetString
  00110	48 8d 4c 24 40	 lea	 rcx, QWORD PTR buf$[rsp]
  00115	e8 00 00 00 00	 call	 PyBuffer_Release
  0011a	33 c0		 xor	 eax, eax
  0011c	e9 a3 00 00 00	 jmp	 $LN16@SHA512_new
$LN6@SHA512_new:
  00121	33 c0		 xor	 eax, eax
  00123	85 c0		 test	 eax, eax
  00125	0f 85 38 ff ff
	ff		 jne	 $LN13@SHA512_new
$LN14@SHA512_new:

; 691  : 
; 692  :     if ((new = newSHA512object()) == NULL) {

  0012b	e8 00 00 00 00	 call	 newSHA512object
  00130	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR new$[rsp], rax
  00138	48 83 bc 24 90
	00 00 00 00	 cmp	 QWORD PTR new$[rsp], 0
  00141	75 16		 jne	 SHORT $LN5@SHA512_new

; 693  :         if (data_obj)

  00143	48 83 7c 24 30
	00		 cmp	 QWORD PTR data_obj$[rsp], 0
  00149	74 0a		 je	 SHORT $LN4@SHA512_new

; 694  :             PyBuffer_Release(&buf);

  0014b	48 8d 4c 24 40	 lea	 rcx, QWORD PTR buf$[rsp]
  00150	e8 00 00 00 00	 call	 PyBuffer_Release
$LN4@SHA512_new:

; 695  :         return NULL;

  00155	33 c0		 xor	 eax, eax
  00157	eb 6b		 jmp	 SHORT $LN16@SHA512_new
$LN5@SHA512_new:

; 696  :     }
; 697  : 
; 698  :     sha512_init(new);

  00159	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR new$[rsp]
  00161	e8 00 00 00 00	 call	 sha512_init

; 699  : 
; 700  :     if (PyErr_Occurred()) {

  00166	e8 00 00 00 00	 call	 PyErr_Occurred
  0016b	48 85 c0	 test	 rax, rax
  0016e	74 23		 je	 SHORT $LN3@SHA512_new

; 701  :         Py_DECREF(new);

  00170	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR new$[rsp]
  00178	e8 00 00 00 00	 call	 _Py_DecRef

; 702  :         if (data_obj)

  0017d	48 83 7c 24 30
	00		 cmp	 QWORD PTR data_obj$[rsp], 0
  00183	74 0a		 je	 SHORT $LN2@SHA512_new

; 703  :             PyBuffer_Release(&buf);

  00185	48 8d 4c 24 40	 lea	 rcx, QWORD PTR buf$[rsp]
  0018a	e8 00 00 00 00	 call	 PyBuffer_Release
$LN2@SHA512_new:

; 704  :         return NULL;

  0018f	33 c0		 xor	 eax, eax
  00191	eb 31		 jmp	 SHORT $LN16@SHA512_new
$LN3@SHA512_new:

; 705  :     }
; 706  :     if (data_obj) {

  00193	48 83 7c 24 30
	00		 cmp	 QWORD PTR data_obj$[rsp], 0
  00199	74 21		 je	 SHORT $LN1@SHA512_new

; 707  :         sha512_update(new, buf.buf, buf.len);

  0019b	4c 8b 44 24 50	 mov	 r8, QWORD PTR buf$[rsp+16]
  001a0	48 8b 54 24 40	 mov	 rdx, QWORD PTR buf$[rsp]
  001a5	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR new$[rsp]
  001ad	e8 00 00 00 00	 call	 sha512_update

; 708  :         PyBuffer_Release(&buf);

  001b2	48 8d 4c 24 40	 lea	 rcx, QWORD PTR buf$[rsp]
  001b7	e8 00 00 00 00	 call	 PyBuffer_Release
$LN1@SHA512_new:

; 709  :     }
; 710  : 
; 711  :     return (PyObject *)new;

  001bc	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR new$[rsp]
$LN16@SHA512_new:

; 712  : }

  001c4	48 81 c4 a8 00
	00 00		 add	 rsp, 168		; 000000a8H
  001cb	c3		 ret	 0
SHA512_new ENDP
_TEXT	ENDS
PUBLIC	??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@		; `string'
EXTRN	_Py_Dealloc:PROC
EXTRN	_Py_NegativeRefcount:PROC
EXTRN	Px_DecRef:PROC
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$_Py_DecRef DD imagerel $LN13
	DD	imagerel $LN13+257
	DD	imagerel $unwind$_Py_DecRef
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_Py_DecRef DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT ??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
CONST	SEGMENT
??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@ DB '_Py_DecRef', 00H	; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT _Py_DecRef
_TEXT	SEGMENT
tv81 = 48
op$ = 80
_Py_DecRef PROC						; COMDAT

; 923  : {

$LN13:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 924  :     if (!Py_PXCTX) {

  00009	e8 00 00 00 00	 call	 _Py_PXCTX
  0000e	85 c0		 test	 eax, eax
  00010	0f 85 e6 00 00
	00		 jne	 $LN8@Py_DecRef

; 925  :         if (Px_PERSISTED(op) || Px_CLONED(op))

  00016	48 8b 44 24 50	 mov	 rax, QWORD PTR op$[rsp]
  0001b	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0001f	48 83 e0 20	 and	 rax, 32			; 00000020H
  00023	48 85 c0	 test	 rax, rax
  00026	75 14		 jne	 SHORT $LN6@Py_DecRef
  00028	48 8b 44 24 50	 mov	 rax, QWORD PTR op$[rsp]
  0002d	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00031	48 25 80 00 00
	00		 and	 rax, 128		; 00000080H
  00037	48 85 c0	 test	 rax, rax
  0003a	74 0f		 je	 SHORT $LN7@Py_DecRef
$LN6@Py_DecRef:

; 926  :             Px_DECREF(op);

  0003c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR op$[rsp]
  00041	e8 00 00 00 00	 call	 Px_DecRef
  00046	e9 b1 00 00 00	 jmp	 $LN5@Py_DecRef
$LN7@Py_DecRef:

; 927  :         else if (!Px_ISPX(op)) {

  0004b	48 8b 44 24 50	 mov	 rax, QWORD PTR op$[rsp]
  00050	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00054	48 83 e0 02	 and	 rax, 2
  00058	48 85 c0	 test	 rax, rax
  0005b	0f 85 9b 00 00
	00		 jne	 $LN4@Py_DecRef

; 928  :             _Py_DEC_REFTOTAL;

  00061	e8 00 00 00 00	 call	 _Py_PXCTX
  00066	85 c0		 test	 eax, eax
  00068	74 02		 je	 SHORT $LN11@Py_DecRef
  0006a	eb 11		 jmp	 SHORT $LN12@Py_DecRef
$LN11@Py_DecRef:
  0006c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR _Py_RefTotal
  00073	48 ff c8	 dec	 rax
  00076	48 89 05 00 00
	00 00		 mov	 QWORD PTR _Py_RefTotal, rax
$LN12@Py_DecRef:

; 929  :             if ((--((PyObject *)(op))->ob_refcnt) != 0) {

  0007d	48 8b 44 24 50	 mov	 rax, QWORD PTR op$[rsp]
  00082	48 8b 40 50	 mov	 rax, QWORD PTR [rax+80]
  00086	48 ff c8	 dec	 rax
  00089	48 89 44 24 30	 mov	 QWORD PTR tv81[rsp], rax
  0008e	48 8b 44 24 50	 mov	 rax, QWORD PTR op$[rsp]
  00093	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv81[rsp]
  00098	48 89 48 50	 mov	 QWORD PTR [rax+80], rcx
  0009c	48 83 7c 24 30
	00		 cmp	 QWORD PTR tv81[rsp], 0
  000a2	74 4e		 je	 SHORT $LN3@Py_DecRef

; 930  :                 _Py_CHECK_REFCNT(op);

  000a4	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  000ac	4c 8b 4c 24 50	 mov	 r9, QWORD PTR op$[rsp]
  000b1	41 b8 a2 03 00
	00		 mov	 r8d, 930		; 000003a2H
  000b7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  000be	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  000c5	e8 00 00 00 00	 call	 _PyParallel_Guard
  000ca	85 c0		 test	 eax, eax
  000cc	75 22		 jne	 SHORT $LN2@Py_DecRef
  000ce	48 8b 44 24 50	 mov	 rax, QWORD PTR op$[rsp]
  000d3	48 83 78 50 00	 cmp	 QWORD PTR [rax+80], 0
  000d8	7d 16		 jge	 SHORT $LN2@Py_DecRef
  000da	4c 8b 44 24 50	 mov	 r8, QWORD PTR op$[rsp]
  000df	ba a2 03 00 00	 mov	 edx, 930		; 000003a2H
  000e4	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  000eb	e8 00 00 00 00	 call	 _Py_NegativeRefcount
$LN2@Py_DecRef:

; 931  :             } else

  000f0	eb 0a		 jmp	 SHORT $LN1@Py_DecRef
$LN3@Py_DecRef:

; 932  :                 _Py_Dealloc((PyObject *)(op));

  000f2	48 8b 4c 24 50	 mov	 rcx, QWORD PTR op$[rsp]
  000f7	e8 00 00 00 00	 call	 _Py_Dealloc
$LN1@Py_DecRef:
$LN4@Py_DecRef:
$LN5@Py_DecRef:
$LN8@Py_DecRef:

; 933  :         }
; 934  :     }
; 935  : }

  000fc	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00100	c3		 ret	 0
_Py_DecRef ENDP
_TEXT	ENDS
;	COMDAT pdata
; File c:\src\pyparallel\modules\sha512module.c
pdata	SEGMENT
$pdata$sha512_init DD imagerel sha512_init
	DD	imagerel sha512_init+284
	DD	imagerel $unwind$sha512_init
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$sha512_init DD 010901H
	DD	02209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT sha512_init
_TEXT	SEGMENT
i$21384 = 0
sha_info$ = 32
sha512_init PROC					; COMDAT

; 256  : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24

; 257  :     TestEndianness(sha_info->Endianness)

  00009	c7 04 24 01 00
	00 00		 mov	 DWORD PTR i$21384[rsp], 1
  00010	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  00015	c7 80 28 01 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+296], 0
  0001f	0f be 04 24	 movsx	 eax, BYTE PTR i$21384[rsp]
  00023	83 f8 01	 cmp	 eax, 1
  00026	75 0f		 jne	 SHORT $LN1@sha512_ini
  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  0002d	c7 80 28 01 00
	00 01 00 00 00	 mov	 DWORD PTR [rax+296], 1
$LN1@sha512_ini:

; 258  :     sha_info->digest[0] = Py_ULL(0x6a09e667f3bcc908);

  00037	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  0003c	48 b9 08 c9 bc
	f3 67 e6 09 6a	 mov	 rcx, 7640891576956012808 ; 6a09e667f3bcc908H
  00046	48 89 48 60	 mov	 QWORD PTR [rax+96], rcx

; 259  :     sha_info->digest[1] = Py_ULL(0xbb67ae8584caa73b);

  0004a	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  0004f	48 b9 3b a7 ca
	84 85 ae 67 bb	 mov	 rcx, -4942790177534073029 ; bb67ae8584caa73bH
  00059	48 89 48 68	 mov	 QWORD PTR [rax+104], rcx

; 260  :     sha_info->digest[2] = Py_ULL(0x3c6ef372fe94f82b);

  0005d	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  00062	48 b9 2b f8 94
	fe 72 f3 6e 3c	 mov	 rcx, 4354685564936845355 ; 3c6ef372fe94f82bH
  0006c	48 89 48 70	 mov	 QWORD PTR [rax+112], rcx

; 261  :     sha_info->digest[3] = Py_ULL(0xa54ff53a5f1d36f1);

  00070	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  00075	48 b9 f1 36 1d
	5f 3a f5 4f a5	 mov	 rcx, -6534734903238641935 ; a54ff53a5f1d36f1H
  0007f	48 89 48 78	 mov	 QWORD PTR [rax+120], rcx

; 262  :     sha_info->digest[4] = Py_ULL(0x510e527fade682d1);

  00083	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  00088	48 b9 d1 82 e6
	ad 7f 52 0e 51	 mov	 rcx, 5840696475078001361 ; 510e527fade682d1H
  00092	48 89 88 80 00
	00 00		 mov	 QWORD PTR [rax+128], rcx

; 263  :     sha_info->digest[5] = Py_ULL(0x9b05688c2b3e6c1f);

  00099	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  0009e	48 b9 1f 6c 3e
	2b 8c 68 05 9b	 mov	 rcx, -7276294671716946913 ; 9b05688c2b3e6c1fH
  000a8	48 89 88 88 00
	00 00		 mov	 QWORD PTR [rax+136], rcx

; 264  :     sha_info->digest[6] = Py_ULL(0x1f83d9abfb41bd6b);

  000af	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  000b4	48 b9 6b bd 41
	fb ab d9 83 1f	 mov	 rcx, 2270897969802886507 ; 1f83d9abfb41bd6bH
  000be	48 89 88 90 00
	00 00		 mov	 QWORD PTR [rax+144], rcx

; 265  :     sha_info->digest[7] = Py_ULL(0x5be0cd19137e2179);

  000c5	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  000ca	48 b9 79 21 7e
	13 19 cd e0 5b	 mov	 rcx, 6620516959819538809 ; 5be0cd19137e2179H
  000d4	48 89 88 98 00
	00 00		 mov	 QWORD PTR [rax+152], rcx

; 266  :     sha_info->count_lo = 0L;

  000db	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  000e0	c7 80 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+160], 0

; 267  :     sha_info->count_hi = 0L;

  000ea	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  000ef	c7 80 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+164], 0

; 268  :     sha_info->local = 0;

  000f9	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  000fe	c7 80 2c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+300], 0

; 269  :     sha_info->digestsize = 64;

  00108	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  0010d	c7 80 30 01 00
	00 40 00 00 00	 mov	 DWORD PTR [rax+304], 64	; 00000040H

; 270  : }

  00117	48 83 c4 18	 add	 rsp, 24
  0011b	c3		 ret	 0
sha512_init ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$SHA384_new DD imagerel SHA384_new
	DD	imagerel SHA384_new+460
	DD	imagerel $unwind$SHA384_new
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SHA384_new DD 021601H
	DD	0150116H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT SHA384_new
_TEXT	SEGMENT
data_obj$ = 48
buf$ = 64
new$ = 144
self$ = 176
args$ = 184
kwdict$ = 192
SHA384_new PROC						; COMDAT

; 719  : {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 81 ec a8 00
	00 00		 sub	 rsp, 168		; 000000a8H

; 720  :     static char *kwlist[] = {"string", NULL};
; 721  :     SHAobject *new;
; 722  :     PyObject *data_obj = NULL;

  00016	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR data_obj$[rsp], 0

; 723  :     Py_buffer buf;
; 724  : 
; 725  :     if (!PyArg_ParseTupleAndKeywords(args, kwdict, "|O:new", kwlist,
; 726  :                                      &data_obj)) {

  0001f	48 8d 44 24 30	 lea	 rax, QWORD PTR data_obj$[rsp]
  00024	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00029	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:?kwlist@?1??SHA384_new@@9@9
  00030	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_06KJFPOEIK@?$HMO?3new?$AA@
  00037	48 8b 94 24 c0
	00 00 00	 mov	 rdx, QWORD PTR kwdict$[rsp]
  0003f	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR args$[rsp]
  00047	e8 00 00 00 00	 call	 PyArg_ParseTupleAndKeywords
  0004c	85 c0		 test	 eax, eax
  0004e	75 07		 jne	 SHORT $LN15@SHA384_new

; 727  :         return NULL;

  00050	33 c0		 xor	 eax, eax
  00052	e9 6d 01 00 00	 jmp	 $LN16@SHA384_new
$LN15@SHA384_new:

; 728  :     }
; 729  : 
; 730  :     if (data_obj)

  00057	48 83 7c 24 30
	00		 cmp	 QWORD PTR data_obj$[rsp], 0
  0005d	0f 84 c8 00 00
	00		 je	 $LN14@SHA384_new
$LN13@SHA384_new:

; 731  :         GET_BUFFER_VIEW_OR_ERROUT(data_obj, &buf);

  00063	48 8b 44 24 30	 mov	 rax, QWORD PTR data_obj$[rsp]
  00068	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  0006c	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  00072	25 00 00 00 10	 and	 eax, 268435456		; 10000000H
  00077	85 c0		 test	 eax, eax
  00079	74 1a		 je	 SHORT $LN10@SHA384_new
  0007b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CP@IBHDLOCD@Unicode?9objects?5must?5be?5encoded?5@
  00082	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  00089	e8 00 00 00 00	 call	 PyErr_SetString
  0008e	33 c0		 xor	 eax, eax
  00090	e9 2f 01 00 00	 jmp	 $LN16@SHA384_new
$LN10@SHA384_new:
  00095	48 8b 44 24 30	 mov	 rax, QWORD PTR data_obj$[rsp]
  0009a	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  0009e	48 83 b8 f8 00
	00 00 00	 cmp	 QWORD PTR [rax+248], 0
  000a6	74 16		 je	 SHORT $LN8@SHA384_new
  000a8	48 8b 44 24 30	 mov	 rax, QWORD PTR data_obj$[rsp]
  000ad	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  000b1	48 8b 80 f8 00
	00 00		 mov	 rax, QWORD PTR [rax+248]
  000b8	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  000bc	75 1a		 jne	 SHORT $LN9@SHA384_new
$LN8@SHA384_new:
  000be	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CK@NHOOCGGK@object?5supporting?5the?5buffer?5API@
  000c5	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  000cc	e8 00 00 00 00	 call	 PyErr_SetString
  000d1	33 c0		 xor	 eax, eax
  000d3	e9 ec 00 00 00	 jmp	 $LN16@SHA384_new
$LN9@SHA384_new:
  000d8	45 33 c0	 xor	 r8d, r8d
  000db	48 8d 54 24 40	 lea	 rdx, QWORD PTR buf$[rsp]
  000e0	48 8b 4c 24 30	 mov	 rcx, QWORD PTR data_obj$[rsp]
  000e5	e8 00 00 00 00	 call	 PyObject_GetBuffer
  000ea	83 f8 ff	 cmp	 eax, -1
  000ed	75 07		 jne	 SHORT $LN7@SHA384_new
  000ef	33 c0		 xor	 eax, eax
  000f1	e9 ce 00 00 00	 jmp	 $LN16@SHA384_new
$LN7@SHA384_new:
  000f6	83 7c 24 64 01	 cmp	 DWORD PTR buf$[rsp+36], 1
  000fb	7e 24		 jle	 SHORT $LN6@SHA384_new
  000fd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CA@DGKHNIN@Buffer?5must?5be?5single?5dimension?$AA@
  00104	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_BufferError
  0010b	e8 00 00 00 00	 call	 PyErr_SetString
  00110	48 8d 4c 24 40	 lea	 rcx, QWORD PTR buf$[rsp]
  00115	e8 00 00 00 00	 call	 PyBuffer_Release
  0011a	33 c0		 xor	 eax, eax
  0011c	e9 a3 00 00 00	 jmp	 $LN16@SHA384_new
$LN6@SHA384_new:
  00121	33 c0		 xor	 eax, eax
  00123	85 c0		 test	 eax, eax
  00125	0f 85 38 ff ff
	ff		 jne	 $LN13@SHA384_new
$LN14@SHA384_new:

; 732  : 
; 733  :     if ((new = newSHA384object()) == NULL) {

  0012b	e8 00 00 00 00	 call	 newSHA384object
  00130	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR new$[rsp], rax
  00138	48 83 bc 24 90
	00 00 00 00	 cmp	 QWORD PTR new$[rsp], 0
  00141	75 16		 jne	 SHORT $LN5@SHA384_new

; 734  :         if (data_obj)

  00143	48 83 7c 24 30
	00		 cmp	 QWORD PTR data_obj$[rsp], 0
  00149	74 0a		 je	 SHORT $LN4@SHA384_new

; 735  :             PyBuffer_Release(&buf);

  0014b	48 8d 4c 24 40	 lea	 rcx, QWORD PTR buf$[rsp]
  00150	e8 00 00 00 00	 call	 PyBuffer_Release
$LN4@SHA384_new:

; 736  :         return NULL;

  00155	33 c0		 xor	 eax, eax
  00157	eb 6b		 jmp	 SHORT $LN16@SHA384_new
$LN5@SHA384_new:

; 737  :     }
; 738  : 
; 739  :     sha384_init(new);

  00159	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR new$[rsp]
  00161	e8 00 00 00 00	 call	 sha384_init

; 740  : 
; 741  :     if (PyErr_Occurred()) {

  00166	e8 00 00 00 00	 call	 PyErr_Occurred
  0016b	48 85 c0	 test	 rax, rax
  0016e	74 23		 je	 SHORT $LN3@SHA384_new

; 742  :         Py_DECREF(new);

  00170	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR new$[rsp]
  00178	e8 00 00 00 00	 call	 _Py_DecRef

; 743  :         if (data_obj)

  0017d	48 83 7c 24 30
	00		 cmp	 QWORD PTR data_obj$[rsp], 0
  00183	74 0a		 je	 SHORT $LN2@SHA384_new

; 744  :             PyBuffer_Release(&buf);

  00185	48 8d 4c 24 40	 lea	 rcx, QWORD PTR buf$[rsp]
  0018a	e8 00 00 00 00	 call	 PyBuffer_Release
$LN2@SHA384_new:

; 745  :         return NULL;

  0018f	33 c0		 xor	 eax, eax
  00191	eb 31		 jmp	 SHORT $LN16@SHA384_new
$LN3@SHA384_new:

; 746  :     }
; 747  :     if (data_obj) {

  00193	48 83 7c 24 30
	00		 cmp	 QWORD PTR data_obj$[rsp], 0
  00199	74 21		 je	 SHORT $LN1@SHA384_new

; 748  :         sha512_update(new, buf.buf, buf.len);

  0019b	4c 8b 44 24 50	 mov	 r8, QWORD PTR buf$[rsp+16]
  001a0	48 8b 54 24 40	 mov	 rdx, QWORD PTR buf$[rsp]
  001a5	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR new$[rsp]
  001ad	e8 00 00 00 00	 call	 sha512_update

; 749  :         PyBuffer_Release(&buf);

  001b2	48 8d 4c 24 40	 lea	 rcx, QWORD PTR buf$[rsp]
  001b7	e8 00 00 00 00	 call	 PyBuffer_Release
$LN1@SHA384_new:

; 750  :     }
; 751  : 
; 752  :     return (PyObject *)new;

  001bc	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR new$[rsp]
$LN16@SHA384_new:

; 753  : }

  001c4	48 81 c4 a8 00
	00 00		 add	 rsp, 168		; 000000a8H
  001cb	c3		 ret	 0
SHA384_new ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$sha384_init DD imagerel sha384_init
	DD	imagerel sha384_init+284
	DD	imagerel $unwind$sha384_init
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$sha384_init DD 010901H
	DD	02209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT sha384_init
_TEXT	SEGMENT
i$21391 = 0
sha_info$ = 32
sha384_init PROC					; COMDAT

; 274  : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 18	 sub	 rsp, 24

; 275  :     TestEndianness(sha_info->Endianness)

  00009	c7 04 24 01 00
	00 00		 mov	 DWORD PTR i$21391[rsp], 1
  00010	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  00015	c7 80 28 01 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+296], 0
  0001f	0f be 04 24	 movsx	 eax, BYTE PTR i$21391[rsp]
  00023	83 f8 01	 cmp	 eax, 1
  00026	75 0f		 jne	 SHORT $LN1@sha384_ini
  00028	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  0002d	c7 80 28 01 00
	00 01 00 00 00	 mov	 DWORD PTR [rax+296], 1
$LN1@sha384_ini:

; 276  :     sha_info->digest[0] = Py_ULL(0xcbbb9d5dc1059ed8);

  00037	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  0003c	48 b9 d8 9e 05
	c1 5d 9d bb cb	 mov	 rcx, -3766243637369397544 ; cbbb9d5dc1059ed8H
  00046	48 89 48 60	 mov	 QWORD PTR [rax+96], rcx

; 277  :     sha_info->digest[1] = Py_ULL(0x629a292a367cd507);

  0004a	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  0004f	48 b9 07 d5 7c
	36 2a 29 9a 62	 mov	 rcx, 7105036623409894663 ; 629a292a367cd507H
  00059	48 89 48 68	 mov	 QWORD PTR [rax+104], rcx

; 278  :     sha_info->digest[2] = Py_ULL(0x9159015a3070dd17);

  0005d	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  00062	48 b9 17 dd 70
	30 5a 01 59 91	 mov	 rcx, -7973340178411365097 ; 9159015a3070dd17H
  0006c	48 89 48 70	 mov	 QWORD PTR [rax+112], rcx

; 279  :     sha_info->digest[3] = Py_ULL(0x152fecd8f70e5939);

  00070	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  00075	48 b9 39 59 0e
	f7 d8 ec 2f 15	 mov	 rcx, 1526699215303891257 ; 152fecd8f70e5939H
  0007f	48 89 48 78	 mov	 QWORD PTR [rax+120], rcx

; 280  :     sha_info->digest[4] = Py_ULL(0x67332667ffc00b31);

  00083	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  00088	48 b9 31 0b c0
	ff 67 26 33 67	 mov	 rcx, 7436329637833083697 ; 67332667ffc00b31H
  00092	48 89 88 80 00
	00 00		 mov	 QWORD PTR [rax+128], rcx

; 281  :     sha_info->digest[5] = Py_ULL(0x8eb44a8768581511);

  00099	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  0009e	48 b9 11 15 58
	68 87 4a b4 8e	 mov	 rcx, -8163818279084223215 ; 8eb44a8768581511H
  000a8	48 89 88 88 00
	00 00		 mov	 QWORD PTR [rax+136], rcx

; 282  :     sha_info->digest[6] = Py_ULL(0xdb0c2e0d64f98fa7);

  000af	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  000b4	48 b9 a7 8f f9
	64 0d 2e 0c db	 mov	 rcx, -2662702644619276377 ; db0c2e0d64f98fa7H
  000be	48 89 88 90 00
	00 00		 mov	 QWORD PTR [rax+144], rcx

; 283  :     sha_info->digest[7] = Py_ULL(0x47b5481dbefa4fa4);

  000c5	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  000ca	48 b9 a4 4f fa
	be 1d 48 b5 47	 mov	 rcx, 5167115440072839076 ; 47b5481dbefa4fa4H
  000d4	48 89 88 98 00
	00 00		 mov	 QWORD PTR [rax+152], rcx

; 284  :     sha_info->count_lo = 0L;

  000db	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  000e0	c7 80 a0 00 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+160], 0

; 285  :     sha_info->count_hi = 0L;

  000ea	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  000ef	c7 80 a4 00 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+164], 0

; 286  :     sha_info->local = 0;

  000f9	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  000fe	c7 80 2c 01 00
	00 00 00 00 00	 mov	 DWORD PTR [rax+300], 0

; 287  :     sha_info->digestsize = 48;

  00108	48 8b 44 24 20	 mov	 rax, QWORD PTR sha_info$[rsp]
  0010d	c7 80 30 01 00
	00 30 00 00 00	 mov	 DWORD PTR [rax+304], 48	; 00000030H

; 288  : }

  00117	48 83 c4 18	 add	 rsp, 24
  0011b	c3		 ret	 0
sha384_init ENDP
_TEXT	ENDS
PUBLIC	PyInit__sha512
EXTRN	PyModule_Create2TraceRefs:PROC
EXTRN	PyType_Ready:PROC
EXTRN	PyType_Type:BYTE
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyInit__sha512 DD imagerel $LN5
	DD	imagerel $LN5+94
	DD	imagerel $unwind$PyInit__sha512
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyInit__sha512 DD 010401H
	DD	04204H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT PyInit__sha512
_TEXT	SEGMENT
PyInit__sha512 PROC					; COMDAT

; 784  : {

$LN5:
  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 785  :     Py_TYPE(&SHA384type) = &PyType_Type;

  00004	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:PyType_Type
  0000b	48 89 05 58 00
	00 00		 mov	 QWORD PTR SHA384type+88, rax

; 786  :     if (PyType_Ready(&SHA384type) < 0)

  00012	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:SHA384type
  00019	e8 00 00 00 00	 call	 PyType_Ready
  0001e	85 c0		 test	 eax, eax
  00020	7d 04		 jge	 SHORT $LN2@PyInit__sh

; 787  :         return NULL;

  00022	33 c0		 xor	 eax, eax
  00024	eb 33		 jmp	 SHORT $LN3@PyInit__sh
$LN2@PyInit__sh:

; 788  :     Py_TYPE(&SHA512type) = &PyType_Type;

  00026	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:PyType_Type
  0002d	48 89 05 58 00
	00 00		 mov	 QWORD PTR SHA512type+88, rax

; 789  :     if (PyType_Ready(&SHA512type) < 0)

  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:SHA512type
  0003b	e8 00 00 00 00	 call	 PyType_Ready
  00040	85 c0		 test	 eax, eax
  00042	7d 04		 jge	 SHORT $LN1@PyInit__sh

; 790  :         return NULL;

  00044	33 c0		 xor	 eax, eax
  00046	eb 11		 jmp	 SHORT $LN3@PyInit__sh
$LN1@PyInit__sh:

; 791  :     return PyModule_Create(&_sha512module);

  00048	ba f5 03 00 00	 mov	 edx, 1013		; 000003f5H
  0004d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_sha512module
  00054	e8 00 00 00 00	 call	 PyModule_Create2TraceRefs
$LN3@PyInit__sh:

; 792  : }

  00059	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0005d	c3		 ret	 0
PyInit__sha512 ENDP
_TEXT	ENDS
END
