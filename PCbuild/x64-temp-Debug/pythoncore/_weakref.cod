; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0BP@JCNIEMPM@Weak?9reference?5support?5module?4?$AA@ ; `string'
PUBLIC	??_C@_08FKMBKJGD@_weakref?$AA@			; `string'
PUBLIC	??_C@_05BFHPMDA@proxy?$AA@			; `string'
PUBLIC	??_C@_0M@ICFIDCLN@getweakrefs?$AA@		; `string'
PUBLIC	??_C@_0BA@PEGMHKJI@getweakrefcount?$AA@		; `string'
;	COMDAT ??_C@_0BP@JCNIEMPM@Weak?9reference?5support?5module?4?$AA@
CONST	SEGMENT
??_C@_0BP@JCNIEMPM@Weak?9reference?5support?5module?4?$AA@ DB 'Weak-refer'
	DB	'ence support module.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08FKMBKJGD@_weakref?$AA@
CONST	SEGMENT
??_C@_08FKMBKJGD@_weakref?$AA@ DB '_weakref', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_05BFHPMDA@proxy?$AA@
CONST	SEGMENT
??_C@_05BFHPMDA@proxy?$AA@ DB 'proxy', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@ICFIDCLN@getweakrefs?$AA@
CONST	SEGMENT
??_C@_0M@ICFIDCLN@getweakrefs?$AA@ DB 'getweakrefs', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@PEGMHKJI@getweakrefcount?$AA@
CONST	SEGMENT
??_C@_0BA@PEGMHKJI@getweakrefcount?$AA@ DB 'getweakrefcount', 00H ; `string'
CONST	ENDS
_DATA	SEGMENT
weakref_getweakrefcount__doc__ DB 'getweakrefcount(object) -- return the '
	DB	'number of weak references', 0aH, 'to ''object''.', 00H
	ORG $+3
weakref_getweakrefs__doc__ DB 'getweakrefs(object) -- return a list of al'
	DB	'l weak reference objects', 0aH, 'that point to ''object''.', 00H
	ORG $+5
weakref_proxy__doc__ DB 'proxy(object[, callback]) -- create a proxy obje'
	DB	'ct that weakly', 0aH, 'references ''object''.  ''callback'', '
	DB	'if given, is called with a', 0aH, 'reference to the proxy whe'
	DB	'n ''object'' is about to be finalized.', 00H
	ORG $+5
weakref_functions DQ FLAT:??_C@_0BA@PEGMHKJI@getweakrefcount?$AA@
	DQ	FLAT:weakref_getweakrefcount
	DD	08H
	ORG $+4
	DQ	FLAT:weakref_getweakrefcount__doc__
	DQ	FLAT:??_C@_0M@ICFIDCLN@getweakrefs?$AA@
	DQ	FLAT:weakref_getweakrefs
	DD	08H
	ORG $+4
	DQ	FLAT:weakref_getweakrefs__doc__
	DQ	FLAT:??_C@_05BFHPMDA@proxy?$AA@
	DQ	FLAT:weakref_proxy
	DD	01H
	ORG $+4
	DQ	FLAT:weakref_proxy__doc__
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	0000000000000000H
weakrefmodule DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_08FKMBKJGD@_weakref?$AA@
	DQ	FLAT:??_C@_0BP@JCNIEMPM@Weak?9reference?5support?5module?4?$AA@
	DQ	ffffffffffffffffH
	DQ	FLAT:weakref_functions
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
_DATA	ENDS
EXTRN	PyLong_FromLong:PROC
EXTRN	PyLong_FromSsize_t:PROC
EXTRN	_PyWeakref_GetWeakrefCount:PROC
;	COMDAT pdata
; File c:\src\pyparallel\modules\_weakref.c
pdata	SEGMENT
$pdata$weakref_getweakrefcount DD imagerel weakref_getweakrefcount
	DD	imagerel weakref_getweakrefcount+124
	DD	imagerel $unwind$weakref_getweakrefcount
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$weakref_getweakrefcount DD 010e01H
	DD	0620eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT weakref_getweakrefcount
_TEXT	SEGMENT
result$ = 32
list$20299 = 40
self$ = 64
object$ = 72
weakref_getweakrefcount PROC				; COMDAT

; 14   : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 15   :     PyObject *result = NULL;

  0000e	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR result$[rsp], 0

; 16   : 
; 17   :     if (PyType_SUPPORTS_WEAKREFS(Py_TYPE(object))) {

  00017	48 8b 44 24 48	 mov	 rax, QWORD PTR object$[rsp]
  0001c	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00020	48 83 b8 28 01
	00 00 00	 cmp	 QWORD PTR [rax+296], 0
  00028	7e 3c		 jle	 SHORT $LN2@weakref_ge

; 18   :         PyWeakReference **list = GET_WEAKREFS_LISTPTR(object);

  0002a	48 8b 44 24 48	 mov	 rax, QWORD PTR object$[rsp]
  0002f	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00033	48 8b 80 28 01
	00 00		 mov	 rax, QWORD PTR [rax+296]
  0003a	48 8b 4c 24 48	 mov	 rcx, QWORD PTR object$[rsp]
  0003f	48 03 c8	 add	 rcx, rax
  00042	48 8b c1	 mov	 rax, rcx
  00045	48 89 44 24 28	 mov	 QWORD PTR list$20299[rsp], rax

; 19   : 
; 20   :         result = PyLong_FromSsize_t(_PyWeakref_GetWeakrefCount(*list));

  0004a	48 8b 44 24 28	 mov	 rax, QWORD PTR list$20299[rsp]
  0004f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00052	e8 00 00 00 00	 call	 _PyWeakref_GetWeakrefCount
  00057	48 8b c8	 mov	 rcx, rax
  0005a	e8 00 00 00 00	 call	 PyLong_FromSsize_t
  0005f	48 89 44 24 20	 mov	 QWORD PTR result$[rsp], rax

; 21   :     }
; 22   :     else

  00064	eb 0c		 jmp	 SHORT $LN1@weakref_ge
$LN2@weakref_ge:

; 23   :         result = PyLong_FromLong(0);

  00066	33 c9		 xor	 ecx, ecx
  00068	e8 00 00 00 00	 call	 PyLong_FromLong
  0006d	48 89 44 24 20	 mov	 QWORD PTR result$[rsp], rax
$LN1@weakref_ge:

; 24   : 
; 25   :     return result;

  00072	48 8b 44 24 20	 mov	 rax, QWORD PTR result$[rsp]

; 26   : }

  00077	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0007b	c3		 ret	 0
weakref_getweakrefcount ENDP
_TEXT	ENDS
PUBLIC	_Py_IncRef
EXTRN	PyList_New:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$weakref_getweakrefs DD imagerel weakref_getweakrefs
	DD	imagerel weakref_getweakrefs+244
	DD	imagerel $unwind$weakref_getweakrefs
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$weakref_getweakrefs DD 010e01H
	DD	0a20eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT weakref_getweakrefs
_TEXT	SEGMENT
result$ = 32
count$20321 = 40
list$20316 = 48
current$20324 = 56
i$20325 = 64
self$ = 96
object$ = 104
weakref_getweakrefs PROC				; COMDAT

; 35   : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 58	 sub	 rsp, 88			; 00000058H

; 36   :     PyObject *result = NULL;

  0000e	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR result$[rsp], 0

; 37   : 
; 38   :     if (PyType_SUPPORTS_WEAKREFS(Py_TYPE(object))) {

  00017	48 8b 44 24 68	 mov	 rax, QWORD PTR object$[rsp]
  0001c	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00020	48 83 b8 28 01
	00 00 00	 cmp	 QWORD PTR [rax+296], 0
  00028	0f 8e b0 00 00
	00		 jle	 $LN6@weakref_ge@2

; 39   :         PyWeakReference **list = GET_WEAKREFS_LISTPTR(object);

  0002e	48 8b 44 24 68	 mov	 rax, QWORD PTR object$[rsp]
  00033	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00037	48 8b 80 28 01
	00 00		 mov	 rax, QWORD PTR [rax+296]
  0003e	48 8b 4c 24 68	 mov	 rcx, QWORD PTR object$[rsp]
  00043	48 03 c8	 add	 rcx, rax
  00046	48 8b c1	 mov	 rax, rcx
  00049	48 89 44 24 30	 mov	 QWORD PTR list$20316[rsp], rax

; 40   :         Py_ssize_t count = _PyWeakref_GetWeakrefCount(*list);

  0004e	48 8b 44 24 30	 mov	 rax, QWORD PTR list$20316[rsp]
  00053	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00056	e8 00 00 00 00	 call	 _PyWeakref_GetWeakrefCount
  0005b	48 89 44 24 28	 mov	 QWORD PTR count$20321[rsp], rax

; 41   : 
; 42   :         result = PyList_New(count);

  00060	48 8b 4c 24 28	 mov	 rcx, QWORD PTR count$20321[rsp]
  00065	e8 00 00 00 00	 call	 PyList_New
  0006a	48 89 44 24 20	 mov	 QWORD PTR result$[rsp], rax

; 43   :         if (result != NULL) {

  0006f	48 83 7c 24 20
	00		 cmp	 QWORD PTR result$[rsp], 0
  00075	74 65		 je	 SHORT $LN5@weakref_ge@2

; 44   :             PyWeakReference *current = *list;

  00077	48 8b 44 24 30	 mov	 rax, QWORD PTR list$20316[rsp]
  0007c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0007f	48 89 44 24 38	 mov	 QWORD PTR current$20324[rsp], rax

; 45   :             Py_ssize_t i;
; 46   :             for (i = 0; i < count; ++i) {

  00084	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR i$20325[rsp], 0
  0008d	eb 0d		 jmp	 SHORT $LN4@weakref_ge@2
$LN3@weakref_ge@2:
  0008f	48 8b 44 24 40	 mov	 rax, QWORD PTR i$20325[rsp]
  00094	48 ff c0	 inc	 rax
  00097	48 89 44 24 40	 mov	 QWORD PTR i$20325[rsp], rax
$LN4@weakref_ge@2:
  0009c	48 8b 44 24 28	 mov	 rax, QWORD PTR count$20321[rsp]
  000a1	48 39 44 24 40	 cmp	 QWORD PTR i$20325[rsp], rax
  000a6	7d 34		 jge	 SHORT $LN2@weakref_ge@2

; 47   :                 PyList_SET_ITEM(result, i, (PyObject *) current);

  000a8	48 8b 44 24 20	 mov	 rax, QWORD PTR result$[rsp]
  000ad	48 8b 40 70	 mov	 rax, QWORD PTR [rax+112]
  000b1	48 8b 4c 24 40	 mov	 rcx, QWORD PTR i$20325[rsp]
  000b6	48 8b 54 24 38	 mov	 rdx, QWORD PTR current$20324[rsp]
  000bb	48 89 14 c8	 mov	 QWORD PTR [rax+rcx*8], rdx

; 48   :                 Py_INCREF(current);

  000bf	48 8b 4c 24 38	 mov	 rcx, QWORD PTR current$20324[rsp]
  000c4	e8 00 00 00 00	 call	 _Py_IncRef

; 49   :                 current = current->wr_next;

  000c9	48 8b 44 24 38	 mov	 rax, QWORD PTR current$20324[rsp]
  000ce	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  000d5	48 89 44 24 38	 mov	 QWORD PTR current$20324[rsp], rax

; 50   :             }

  000da	eb b3		 jmp	 SHORT $LN3@weakref_ge@2
$LN2@weakref_ge@2:
$LN5@weakref_ge@2:

; 51   :         }
; 52   :     }
; 53   :     else {

  000dc	eb 0c		 jmp	 SHORT $LN1@weakref_ge@2
$LN6@weakref_ge@2:

; 54   :         result = PyList_New(0);

  000de	33 c9		 xor	 ecx, ecx
  000e0	e8 00 00 00 00	 call	 PyList_New
  000e5	48 89 44 24 20	 mov	 QWORD PTR result$[rsp], rax
$LN1@weakref_ge@2:

; 55   :     }
; 56   :     return result;

  000ea	48 8b 44 24 20	 mov	 rax, QWORD PTR result$[rsp]

; 57   : }

  000ef	48 83 c4 58	 add	 rsp, 88			; 00000058H
  000f3	c3		 ret	 0
weakref_getweakrefs ENDP
_TEXT	ENDS
PUBLIC	??_C@_0L@DHGMCEID@_Py_IncRef?$AA@		; `string'
PUBLIC	??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@ ; `string'
EXTRN	_Py_RefTotal:QWORD
EXTRN	_PyParallel_Guard:PROC
EXTRN	_Py_PXCTX:PROC
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$_Py_IncRef DD imagerel $LN7
	DD	imagerel $LN7+132
	DD	imagerel $unwind$_Py_IncRef
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_Py_IncRef DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT ??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
CONST	SEGMENT
??_C@_0L@DHGMCEID@_Py_IncRef?$AA@ DB '_Py_IncRef', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
CONST	SEGMENT
??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@ DB 'c:\src\pypa'
	DB	'rallel\include\object.h', 00H		; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT _Py_IncRef
_TEXT	SEGMENT
op$ = 64
_Py_IncRef PROC						; COMDAT

; 904  : {

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 905  :     if ((!Py_PXCTX && (Py_ISPY(op) || Px_PERSISTED(op)))) {

  00009	e8 00 00 00 00	 call	 _Py_PXCTX
  0000e	85 c0		 test	 eax, eax
  00010	75 6d		 jne	 SHORT $LN2@Py_IncRef
  00012	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  0001a	4c 8b 4c 24 40	 mov	 r9, QWORD PTR op$[rsp]
  0001f	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00025	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0002c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00033	e8 00 00 00 00	 call	 _PyParallel_Guard
  00038	85 c0		 test	 eax, eax
  0003a	75 12		 jne	 SHORT $LN1@Py_IncRef
  0003c	48 8b 44 24 40	 mov	 rax, QWORD PTR op$[rsp]
  00041	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00045	48 83 e0 20	 and	 rax, 32			; 00000020H
  00049	48 85 c0	 test	 rax, rax
  0004c	74 31		 je	 SHORT $LN2@Py_IncRef
$LN1@Py_IncRef:

; 906  :         _Py_INC_REFTOTAL;

  0004e	e8 00 00 00 00	 call	 _Py_PXCTX
  00053	85 c0		 test	 eax, eax
  00055	74 02		 je	 SHORT $LN5@Py_IncRef
  00057	eb 11		 jmp	 SHORT $LN6@Py_IncRef
$LN5@Py_IncRef:
  00059	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR _Py_RefTotal
  00060	48 ff c0	 inc	 rax
  00063	48 89 05 00 00
	00 00		 mov	 QWORD PTR _Py_RefTotal, rax
$LN6@Py_IncRef:

; 907  :         (((PyObject*)(op))->ob_refcnt++);

  0006a	48 8b 44 24 40	 mov	 rax, QWORD PTR op$[rsp]
  0006f	48 8b 40 50	 mov	 rax, QWORD PTR [rax+80]
  00073	48 ff c0	 inc	 rax
  00076	48 8b 4c 24 40	 mov	 rcx, QWORD PTR op$[rsp]
  0007b	48 89 41 50	 mov	 QWORD PTR [rcx+80], rax
$LN2@Py_IncRef:

; 908  :     }
; 909  : }

  0007f	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00083	c3		 ret	 0
_Py_IncRef ENDP
_TEXT	ENDS
EXTRN	PyWeakref_NewProxy:PROC
EXTRN	PyArg_UnpackTuple:PROC
;	COMDAT pdata
; File c:\src\pyparallel\modules\_weakref.c
pdata	SEGMENT
$pdata$weakref_proxy DD imagerel weakref_proxy
	DD	imagerel weakref_proxy+115
	DD	imagerel $unwind$weakref_proxy
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$weakref_proxy DD 010e01H
	DD	0a20eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT weakref_proxy
_TEXT	SEGMENT
result$ = 48
object$ = 56
callback$ = 64
self$ = 96
args$ = 104
weakref_proxy PROC					; COMDAT

; 67   : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 58	 sub	 rsp, 88			; 00000058H

; 68   :     PyObject *object;
; 69   :     PyObject *callback = NULL;

  0000e	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR callback$[rsp], 0

; 70   :     PyObject *result = NULL;

  00017	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR result$[rsp], 0

; 71   : 
; 72   :     if (PyArg_UnpackTuple(args, "proxy", 1, 2, &object, &callback)) {

  00020	48 8d 44 24 40	 lea	 rax, QWORD PTR callback$[rsp]
  00025	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0002a	48 8d 44 24 38	 lea	 rax, QWORD PTR object$[rsp]
  0002f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00034	41 b9 02 00 00
	00		 mov	 r9d, 2
  0003a	41 b8 01 00 00
	00		 mov	 r8d, 1
  00040	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_05BFHPMDA@proxy?$AA@
  00047	48 8b 4c 24 68	 mov	 rcx, QWORD PTR args$[rsp]
  0004c	e8 00 00 00 00	 call	 PyArg_UnpackTuple
  00051	85 c0		 test	 eax, eax
  00053	74 14		 je	 SHORT $LN1@weakref_pr

; 73   :         result = PyWeakref_NewProxy(object, callback);

  00055	48 8b 54 24 40	 mov	 rdx, QWORD PTR callback$[rsp]
  0005a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR object$[rsp]
  0005f	e8 00 00 00 00	 call	 PyWeakref_NewProxy
  00064	48 89 44 24 30	 mov	 QWORD PTR result$[rsp], rax
$LN1@weakref_pr:

; 74   :     }
; 75   :     return result;

  00069	48 8b 44 24 30	 mov	 rax, QWORD PTR result$[rsp]

; 76   : }

  0006e	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00072	c3		 ret	 0
weakref_proxy ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BC@NMFNMFOK@CallableProxyType?$AA@	; `string'
PUBLIC	??_C@_09BGIKPLGP@ProxyType?$AA@			; `string'
PUBLIC	??_C@_0O@EJIAIJCO@ReferenceType?$AA@		; `string'
PUBLIC	??_C@_03GCDGINBO@ref?$AA@			; `string'
PUBLIC	PyInit__weakref
EXTRN	_PyWeakref_CallableProxyType:BYTE
EXTRN	_PyWeakref_ProxyType:BYTE
EXTRN	PyModule_AddObject:PROC
EXTRN	_PyWeakref_RefType:BYTE
EXTRN	PyModule_Create2TraceRefs:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyInit__weakref DD imagerel $LN4
	DD	imagerel $LN4+192
	DD	imagerel $unwind$PyInit__weakref
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyInit__weakref DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT ??_C@_0BC@NMFNMFOK@CallableProxyType?$AA@
CONST	SEGMENT
??_C@_0BC@NMFNMFOK@CallableProxyType?$AA@ DB 'CallableProxyType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09BGIKPLGP@ProxyType?$AA@
CONST	SEGMENT
??_C@_09BGIKPLGP@ProxyType?$AA@ DB 'ProxyType', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EJIAIJCO@ReferenceType?$AA@
CONST	SEGMENT
??_C@_0O@EJIAIJCO@ReferenceType?$AA@ DB 'ReferenceType', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03GCDGINBO@ref?$AA@
CONST	SEGMENT
??_C@_03GCDGINBO@ref?$AA@ DB 'ref', 00H			; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT PyInit__weakref
_TEXT	SEGMENT
m$ = 32
PyInit__weakref PROC					; COMDAT

; 105  : {

$LN4:
  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 106  :     PyObject *m;
; 107  : 
; 108  :     m = PyModule_Create(&weakrefmodule);

  00004	ba f5 03 00 00	 mov	 edx, 1013		; 000003f5H
  00009	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:weakrefmodule
  00010	e8 00 00 00 00	 call	 PyModule_Create2TraceRefs
  00015	48 89 44 24 20	 mov	 QWORD PTR m$[rsp], rax

; 109  :                        
; 110  :     if (m != NULL) {

  0001a	48 83 7c 24 20
	00		 cmp	 QWORD PTR m$[rsp], 0
  00020	0f 84 90 00 00
	00		 je	 $LN1@PyInit__we

; 111  :         Py_INCREF(&_PyWeakref_RefType);

  00026	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyWeakref_RefType
  0002d	e8 00 00 00 00	 call	 _Py_IncRef

; 112  :         PyModule_AddObject(m, "ref",
; 113  :                            (PyObject *) &_PyWeakref_RefType);

  00032	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:_PyWeakref_RefType
  00039	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_03GCDGINBO@ref?$AA@
  00040	48 8b 4c 24 20	 mov	 rcx, QWORD PTR m$[rsp]
  00045	e8 00 00 00 00	 call	 PyModule_AddObject

; 114  :         Py_INCREF(&_PyWeakref_RefType);

  0004a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyWeakref_RefType
  00051	e8 00 00 00 00	 call	 _Py_IncRef

; 115  :         PyModule_AddObject(m, "ReferenceType",
; 116  :                            (PyObject *) &_PyWeakref_RefType);

  00056	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:_PyWeakref_RefType
  0005d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0O@EJIAIJCO@ReferenceType?$AA@
  00064	48 8b 4c 24 20	 mov	 rcx, QWORD PTR m$[rsp]
  00069	e8 00 00 00 00	 call	 PyModule_AddObject

; 117  :         Py_INCREF(&_PyWeakref_ProxyType);

  0006e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyWeakref_ProxyType
  00075	e8 00 00 00 00	 call	 _Py_IncRef

; 118  :         PyModule_AddObject(m, "ProxyType",
; 119  :                            (PyObject *) &_PyWeakref_ProxyType);

  0007a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:_PyWeakref_ProxyType
  00081	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_09BGIKPLGP@ProxyType?$AA@
  00088	48 8b 4c 24 20	 mov	 rcx, QWORD PTR m$[rsp]
  0008d	e8 00 00 00 00	 call	 PyModule_AddObject

; 120  :         Py_INCREF(&_PyWeakref_CallableProxyType);

  00092	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyWeakref_CallableProxyType
  00099	e8 00 00 00 00	 call	 _Py_IncRef

; 121  :         PyModule_AddObject(m, "CallableProxyType",
; 122  :                            (PyObject *) &_PyWeakref_CallableProxyType);

  0009e	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:_PyWeakref_CallableProxyType
  000a5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BC@NMFNMFOK@CallableProxyType?$AA@
  000ac	48 8b 4c 24 20	 mov	 rcx, QWORD PTR m$[rsp]
  000b1	e8 00 00 00 00	 call	 PyModule_AddObject
$LN1@PyInit__we:

; 123  :     }
; 124  :     return m;

  000b6	48 8b 44 24 20	 mov	 rax, QWORD PTR m$[rsp]

; 125  : }

  000bb	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000bf	c3		 ret	 0
PyInit__weakref ENDP
_TEXT	ENDS
END
