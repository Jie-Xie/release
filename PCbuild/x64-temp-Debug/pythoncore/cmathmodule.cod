; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_05NMLJCBBB@cmath?$AA@			; `string'
PUBLIC	??_C@_04FJHINJAO@tanh?$AA@			; `string'
PUBLIC	??_C@_03IIINPABG@tan?$AA@			; `string'
PUBLIC	??_C@_04EIAKFFMI@sqrt?$AA@			; `string'
PUBLIC	??_C@_04COOMCNPB@sinh?$AA@			; `string'
PUBLIC	??_C@_03BLEJJJBH@sin?$AA@			; `string'
PUBLIC	??_C@_04LHPFHFPH@rect?$AA@			; `string'
PUBLIC	??_C@_05HLJBEBNJ@polar?$AA@			; `string'
PUBLIC	??_C@_05CBPKLGJM@phase?$AA@			; `string'
PUBLIC	??_C@_05HGHHAHAP@log10?$AA@			; `string'
PUBLIC	??_C@_03MGHMBJCF@log?$AA@			; `string'
PUBLIC	??_C@_05LGCGPNNP@isnan?$AA@			; `string'
PUBLIC	??_C@_05OIHEAIFD@isinf?$AA@			; `string'
PUBLIC	??_C@_08CHCKEDFL@isfinite?$AA@			; `string'
PUBLIC	??_C@_03KHJOGHMM@exp?$AA@			; `string'
PUBLIC	??_C@_04HPJJNFIM@cosh?$AA@			; `string'
PUBLIC	??_C@_03LALBNOCG@cos?$AA@			; `string'
PUBLIC	??_C@_05ONDAFDEP@atanh?$AA@			; `string'
PUBLIC	??_C@_04MLLJIGOK@atan?$AA@			; `string'
PUBLIC	??_C@_05JKKEKHLA@asinh?$AA@			; `string'
PUBLIC	??_C@_04FIHNOPOL@asin?$AA@			; `string'
PUBLIC	??_C@_05MLNBFPMN@acosh?$AA@			; `string'
PUBLIC	??_C@_04PDIFKINK@acos?$AA@			; `string'
;	COMDAT ??_C@_05NMLJCBBB@cmath?$AA@
CONST	SEGMENT
??_C@_05NMLJCBBB@cmath?$AA@ DB 'cmath', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04FJHINJAO@tanh?$AA@
CONST	SEGMENT
??_C@_04FJHINJAO@tanh?$AA@ DB 'tanh', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03IIINPABG@tan?$AA@
CONST	SEGMENT
??_C@_03IIINPABG@tan?$AA@ DB 'tan', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04EIAKFFMI@sqrt?$AA@
CONST	SEGMENT
??_C@_04EIAKFFMI@sqrt?$AA@ DB 'sqrt', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04COOMCNPB@sinh?$AA@
CONST	SEGMENT
??_C@_04COOMCNPB@sinh?$AA@ DB 'sinh', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03BLEJJJBH@sin?$AA@
CONST	SEGMENT
??_C@_03BLEJJJBH@sin?$AA@ DB 'sin', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04LHPFHFPH@rect?$AA@
CONST	SEGMENT
??_C@_04LHPFHFPH@rect?$AA@ DB 'rect', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05HLJBEBNJ@polar?$AA@
CONST	SEGMENT
??_C@_05HLJBEBNJ@polar?$AA@ DB 'polar', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05CBPKLGJM@phase?$AA@
CONST	SEGMENT
??_C@_05CBPKLGJM@phase?$AA@ DB 'phase', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05HGHHAHAP@log10?$AA@
CONST	SEGMENT
??_C@_05HGHHAHAP@log10?$AA@ DB 'log10', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03MGHMBJCF@log?$AA@
CONST	SEGMENT
??_C@_03MGHMBJCF@log?$AA@ DB 'log', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05LGCGPNNP@isnan?$AA@
CONST	SEGMENT
??_C@_05LGCGPNNP@isnan?$AA@ DB 'isnan', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05OIHEAIFD@isinf?$AA@
CONST	SEGMENT
??_C@_05OIHEAIFD@isinf?$AA@ DB 'isinf', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08CHCKEDFL@isfinite?$AA@
CONST	SEGMENT
??_C@_08CHCKEDFL@isfinite?$AA@ DB 'isfinite', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_03KHJOGHMM@exp?$AA@
CONST	SEGMENT
??_C@_03KHJOGHMM@exp?$AA@ DB 'exp', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04HPJJNFIM@cosh?$AA@
CONST	SEGMENT
??_C@_04HPJJNFIM@cosh?$AA@ DB 'cosh', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03LALBNOCG@cos?$AA@
CONST	SEGMENT
??_C@_03LALBNOCG@cos?$AA@ DB 'cos', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05ONDAFDEP@atanh?$AA@
CONST	SEGMENT
??_C@_05ONDAFDEP@atanh?$AA@ DB 'atanh', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04MLLJIGOK@atan?$AA@
CONST	SEGMENT
??_C@_04MLLJIGOK@atan?$AA@ DB 'atan', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05JKKEKHLA@asinh?$AA@
CONST	SEGMENT
??_C@_05JKKEKHLA@asinh?$AA@ DB 'asinh', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04FIHNOPOL@asin?$AA@
CONST	SEGMENT
??_C@_04FIHNOPOL@asin?$AA@ DB 'asin', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05MLNBFPMN@acosh?$AA@
CONST	SEGMENT
??_C@_05MLNBFPMN@acosh?$AA@ DB 'acosh', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04PDIFKINK@acos?$AA@
CONST	SEGMENT
??_C@_04PDIFKINK@acos?$AA@ DB 'acos', 00H		; `string'
CONST	ENDS
_DATA	SEGMENT
c_acos_doc DB	'acos(x)', 0aH, 0aH, 'Return the arc cosine of x.', 00H
	ORG $+3
c_acosh_doc DB	'acosh(x)', 0aH, 0aH, 'Return the hyperbolic arccosine of'
	DB	' x.', 00H
c_asin_doc DB	'asin(x)', 0aH, 0aH, 'Return the arc sine of x.', 00H
	ORG $+5
c_asinh_doc DB	'asinh(x)', 0aH, 0aH, 'Return the hyperbolic arc sine of '
	DB	'x.', 00H
	ORG $+1
c_atan_doc DB	'atan(x)', 0aH, 0aH, 'Return the arc tangent of x.', 00H
	ORG $+2
c_atanh_doc DB	'atanh(x)', 0aH, 0aH, 'Return the hyperbolic arc tangent '
	DB	'of x.', 00H
	ORG $+6
c_cos_doc DB	'cos(x)', 0aH, 0aH, 'Return the cosine of x.', 00H
c_cosh_doc DB	'cosh(x)', 0aH, 0aH, 'Return the hyperbolic cosine of x.', 00H
	ORG $+4
c_exp_doc DB	'exp(x)', 0aH, 0aH, 'Return the exponential value e**x.', 00H
	ORG $+5
c_log10_doc DB	'log10(x)', 0aH, 0aH, 'Return the base-10 logarithm of x.'
	DB	00H
	ORG $+3
c_sin_doc DB	'sin(x)', 0aH, 0aH, 'Return the sine of x.', 00H
	ORG $+2
c_sinh_doc DB	'sinh(x)', 0aH, 0aH, 'Return the hyperbolic sine of x.', 00H
	ORG $+6
c_sqrt_doc DB	'sqrt(x)', 0aH, 0aH, 'Return the square root of x.', 00H
	ORG $+2
c_tan_doc DB	'tan(x)', 0aH, 0aH, 'Return the tangent of x.', 00H
	ORG $+7
c_tanh_doc DB	'tanh(x)', 0aH, 0aH, 'Return the hyperbolic tangent of x.'
	DB	00H
	ORG $+3
cmath_log_doc DB 'log(x[, base]) -> the logarithm of x to the given base.'
	DB	0aH, 'If the base not specified, returns the natural logarithm'
	DB	' (base e) of x.', 00H
cmath_phase_doc DB 'phase(z) -> float', 0aH, 0aH, 'Return argument, also '
	DB	'known as the phase angle, of a complex.', 00H
	ORG $+15
cmath_polar_doc DB 'polar(z) -> r: float, phi: float', 0aH, 0aH, 'Convert'
	DB	' a complex from rectangular coordinates to polar coordinates.'
	DB	' r is', 0aH, 'the distance from 0 and phi the phase angle.', 00H
	ORG $+7
cmath_rect_doc DB 'rect(r, phi) -> z: complex', 0aH, 0aH, 'Convert from p'
	DB	'olar coordinates to rectangular coordinates.', 00H
	ORG $+9
cmath_isfinite_doc DB 'isfinite(z) -> bool', 0aH, 'Return True if both th'
	DB	'e real and imaginary parts of z are finite, else False.', 00H
	ORG $+14
cmath_isnan_doc DB 'isnan(z) -> bool', 0aH, 'Checks if the real or imagin'
	DB	'ary part of z not a number (NaN)', 00H
	ORG $+2
cmath_isinf_doc DB 'isinf(z) -> bool', 0aH, 'Checks if the real or imagin'
	DB	'ary part of z is infinite.', 00H
	ORG $+8
module_doc DB	'This module is always available. It provides access to m'
	DB	'athematical', 0aH, 'functions for complex numbers.', 00H
	ORG $+13
cmath_methods DQ FLAT:??_C@_04PDIFKINK@acos?$AA@
	DQ	FLAT:cmath_acos
	DD	01H
	ORG $+4
	DQ	FLAT:c_acos_doc
	DQ	FLAT:??_C@_05MLNBFPMN@acosh?$AA@
	DQ	FLAT:cmath_acosh
	DD	01H
	ORG $+4
	DQ	FLAT:c_acosh_doc
	DQ	FLAT:??_C@_04FIHNOPOL@asin?$AA@
	DQ	FLAT:cmath_asin
	DD	01H
	ORG $+4
	DQ	FLAT:c_asin_doc
	DQ	FLAT:??_C@_05JKKEKHLA@asinh?$AA@
	DQ	FLAT:cmath_asinh
	DD	01H
	ORG $+4
	DQ	FLAT:c_asinh_doc
	DQ	FLAT:??_C@_04MLLJIGOK@atan?$AA@
	DQ	FLAT:cmath_atan
	DD	01H
	ORG $+4
	DQ	FLAT:c_atan_doc
	DQ	FLAT:??_C@_05ONDAFDEP@atanh?$AA@
	DQ	FLAT:cmath_atanh
	DD	01H
	ORG $+4
	DQ	FLAT:c_atanh_doc
	DQ	FLAT:??_C@_03LALBNOCG@cos?$AA@
	DQ	FLAT:cmath_cos
	DD	01H
	ORG $+4
	DQ	FLAT:c_cos_doc
	DQ	FLAT:??_C@_04HPJJNFIM@cosh?$AA@
	DQ	FLAT:cmath_cosh
	DD	01H
	ORG $+4
	DQ	FLAT:c_cosh_doc
	DQ	FLAT:??_C@_03KHJOGHMM@exp?$AA@
	DQ	FLAT:cmath_exp
	DD	01H
	ORG $+4
	DQ	FLAT:c_exp_doc
	DQ	FLAT:??_C@_08CHCKEDFL@isfinite?$AA@
	DQ	FLAT:cmath_isfinite
	DD	01H
	ORG $+4
	DQ	FLAT:cmath_isfinite_doc
	DQ	FLAT:??_C@_05OIHEAIFD@isinf?$AA@
	DQ	FLAT:cmath_isinf
	DD	01H
	ORG $+4
	DQ	FLAT:cmath_isinf_doc
	DQ	FLAT:??_C@_05LGCGPNNP@isnan?$AA@
	DQ	FLAT:cmath_isnan
	DD	01H
	ORG $+4
	DQ	FLAT:cmath_isnan_doc
	DQ	FLAT:??_C@_03MGHMBJCF@log?$AA@
	DQ	FLAT:cmath_log
	DD	01H
	ORG $+4
	DQ	FLAT:cmath_log_doc
	DQ	FLAT:??_C@_05HGHHAHAP@log10?$AA@
	DQ	FLAT:cmath_log10
	DD	01H
	ORG $+4
	DQ	FLAT:c_log10_doc
	DQ	FLAT:??_C@_05CBPKLGJM@phase?$AA@
	DQ	FLAT:cmath_phase
	DD	01H
	ORG $+4
	DQ	FLAT:cmath_phase_doc
	DQ	FLAT:??_C@_05HLJBEBNJ@polar?$AA@
	DQ	FLAT:cmath_polar
	DD	01H
	ORG $+4
	DQ	FLAT:cmath_polar_doc
	DQ	FLAT:??_C@_04LHPFHFPH@rect?$AA@
	DQ	FLAT:cmath_rect
	DD	01H
	ORG $+4
	DQ	FLAT:cmath_rect_doc
	DQ	FLAT:??_C@_03BLEJJJBH@sin?$AA@
	DQ	FLAT:cmath_sin
	DD	01H
	ORG $+4
	DQ	FLAT:c_sin_doc
	DQ	FLAT:??_C@_04COOMCNPB@sinh?$AA@
	DQ	FLAT:cmath_sinh
	DD	01H
	ORG $+4
	DQ	FLAT:c_sinh_doc
	DQ	FLAT:??_C@_04EIAKFFMI@sqrt?$AA@
	DQ	FLAT:cmath_sqrt
	DD	01H
	ORG $+4
	DQ	FLAT:c_sqrt_doc
	DQ	FLAT:??_C@_03IIINPABG@tan?$AA@
	DQ	FLAT:cmath_tan
	DD	01H
	ORG $+4
	DQ	FLAT:c_tan_doc
	DQ	FLAT:??_C@_04FJHINJAO@tanh?$AA@
	DQ	FLAT:cmath_tanh
	DD	01H
	ORG $+4
	DQ	FLAT:c_tanh_doc
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+16
cmathmodule DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_05NMLJCBBB@cmath?$AA@
	DQ	FLAT:module_doc
	DQ	ffffffffffffffffH
	DQ	FLAT:cmath_methods
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
_DATA	ENDS
PUBLIC	$T21133
PUBLIC	$T21134
PUBLIC	$T21131
PUBLIC	$T21132
PUBLIC	$T21135
PUBLIC	$T21130
PUBLIC	$T21136
PUBLIC	$T21129
PUBLIC	??_C@_03DDDPELM@D?$HMD?$AA@			; `string'
EXTRN	PyComplex_FromCComplex:PROC
EXTRN	_Py_c_quot:PROC
EXTRN	__imp__errno:PROC
EXTRN	PyArg_ParseTuple:PROC
;	COMDAT pdata
; File c:\src\pyparallel\modules\cmathmodule.c
pdata	SEGMENT
$pdata$cmath_log DD imagerel cmath_log
	DD	imagerel cmath_log+459
	DD	imagerel $unwind$cmath_log
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$cmath_log DD 041301H
	DD	01f0113H
	DD	0600b700cH
xdata	ENDS
;	COMDAT ??_C@_03DDDPELM@D?$HMD?$AA@
CONST	SEGMENT
??_C@_03DDDPELM@D?$HMD?$AA@ DB 'D|D', 00H		; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT cmath_log
_TEXT	SEGMENT
y$ = 32
x$ = 48
$T21126 = 64
$T21127 = 80
$T21128 = 96
$T21129 = 112
$T21130 = 128
$T21131 = 144
$T21132 = 160
$T21133 = 176
$T21134 = 192
$T21135 = 208
$T21136 = 224
self$ = 272
args$ = 280
cmath_log PROC						; COMDAT

; 833  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H

; 834  :     Py_complex x;
; 835  :     Py_complex y;
; 836  : 
; 837  :     if (!PyArg_ParseTuple(args, "D|D", &x, &y))

  00013	4c 8d 4c 24 20	 lea	 r9, QWORD PTR y$[rsp]
  00018	4c 8d 44 24 30	 lea	 r8, QWORD PTR x$[rsp]
  0001d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_03DDDPELM@D?$HMD?$AA@
  00024	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR args$[rsp]
  0002c	e8 00 00 00 00	 call	 PyArg_ParseTuple
  00031	85 c0		 test	 eax, eax
  00033	75 07		 jne	 SHORT $LN3@cmath_log

; 838  :         return NULL;

  00035	33 c0		 xor	 eax, eax
  00037	e9 85 01 00 00	 jmp	 $LN4@cmath_log
$LN3@cmath_log:

; 839  : 
; 840  :     errno = 0;

  0003c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  00042	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 841  :     PyFPE_START_PROTECT("complex function", return 0)
; 842  :     x = c_log(x);

  00048	48 8d 44 24 70	 lea	 rax, QWORD PTR $T21129[rsp]
  0004d	48 8d 4c 24 30	 lea	 rcx, QWORD PTR x$[rsp]
  00052	48 8b f8	 mov	 rdi, rax
  00055	48 8b f1	 mov	 rsi, rcx
  00058	b9 10 00 00 00	 mov	 ecx, 16
  0005d	f3 a4		 rep movsb
  0005f	48 8d 54 24 70	 lea	 rdx, QWORD PTR $T21129[rsp]
  00064	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T21126[rsp]
  00069	e8 00 00 00 00	 call	 c_log
  0006e	48 8d 8c 24 e0
	00 00 00	 lea	 rcx, QWORD PTR $T21136[rsp]
  00076	48 8b f9	 mov	 rdi, rcx
  00079	48 8b f0	 mov	 rsi, rax
  0007c	b9 10 00 00 00	 mov	 ecx, 16
  00081	f3 a4		 rep movsb
  00083	48 8d 44 24 30	 lea	 rax, QWORD PTR x$[rsp]
  00088	48 8d 8c 24 e0
	00 00 00	 lea	 rcx, QWORD PTR $T21136[rsp]
  00090	48 8b f8	 mov	 rdi, rax
  00093	48 8b f1	 mov	 rsi, rcx
  00096	b9 10 00 00 00	 mov	 ecx, 16
  0009b	f3 a4		 rep movsb

; 843  :     if (PyTuple_GET_SIZE(args) == 2) {

  0009d	48 8b 84 24 18
	01 00 00	 mov	 rax, QWORD PTR args$[rsp]
  000a5	48 83 78 60 02	 cmp	 QWORD PTR [rax+96], 2
  000aa	0f 85 d8 00 00
	00		 jne	 $LN2@cmath_log

; 844  :         y = c_log(y);

  000b0	48 8d 84 24 80
	00 00 00	 lea	 rax, QWORD PTR $T21130[rsp]
  000b8	48 8d 4c 24 20	 lea	 rcx, QWORD PTR y$[rsp]
  000bd	48 8b f8	 mov	 rdi, rax
  000c0	48 8b f1	 mov	 rsi, rcx
  000c3	b9 10 00 00 00	 mov	 ecx, 16
  000c8	f3 a4		 rep movsb
  000ca	48 8d 94 24 80
	00 00 00	 lea	 rdx, QWORD PTR $T21130[rsp]
  000d2	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T21127[rsp]
  000d7	e8 00 00 00 00	 call	 c_log
  000dc	48 8d 8c 24 d0
	00 00 00	 lea	 rcx, QWORD PTR $T21135[rsp]
  000e4	48 8b f9	 mov	 rdi, rcx
  000e7	48 8b f0	 mov	 rsi, rax
  000ea	b9 10 00 00 00	 mov	 ecx, 16
  000ef	f3 a4		 rep movsb
  000f1	48 8d 44 24 20	 lea	 rax, QWORD PTR y$[rsp]
  000f6	48 8d 8c 24 d0
	00 00 00	 lea	 rcx, QWORD PTR $T21135[rsp]
  000fe	48 8b f8	 mov	 rdi, rax
  00101	48 8b f1	 mov	 rsi, rcx
  00104	b9 10 00 00 00	 mov	 ecx, 16
  00109	f3 a4		 rep movsb

; 845  :         x = c_quot(x, y);

  0010b	48 8d 84 24 a0
	00 00 00	 lea	 rax, QWORD PTR $T21132[rsp]
  00113	48 8d 4c 24 20	 lea	 rcx, QWORD PTR y$[rsp]
  00118	48 8b f8	 mov	 rdi, rax
  0011b	48 8b f1	 mov	 rsi, rcx
  0011e	b9 10 00 00 00	 mov	 ecx, 16
  00123	f3 a4		 rep movsb
  00125	48 8d 84 24 90
	00 00 00	 lea	 rax, QWORD PTR $T21131[rsp]
  0012d	48 8d 4c 24 30	 lea	 rcx, QWORD PTR x$[rsp]
  00132	48 8b f8	 mov	 rdi, rax
  00135	48 8b f1	 mov	 rsi, rcx
  00138	b9 10 00 00 00	 mov	 ecx, 16
  0013d	f3 a4		 rep movsb
  0013f	4c 8d 84 24 a0
	00 00 00	 lea	 r8, QWORD PTR $T21132[rsp]
  00147	48 8d 94 24 90
	00 00 00	 lea	 rdx, QWORD PTR $T21131[rsp]
  0014f	48 8d 4c 24 60	 lea	 rcx, QWORD PTR $T21128[rsp]
  00154	e8 00 00 00 00	 call	 _Py_c_quot
  00159	48 8d 8c 24 c0
	00 00 00	 lea	 rcx, QWORD PTR $T21134[rsp]
  00161	48 8b f9	 mov	 rdi, rcx
  00164	48 8b f0	 mov	 rsi, rax
  00167	b9 10 00 00 00	 mov	 ecx, 16
  0016c	f3 a4		 rep movsb
  0016e	48 8d 44 24 30	 lea	 rax, QWORD PTR x$[rsp]
  00173	48 8d 8c 24 c0
	00 00 00	 lea	 rcx, QWORD PTR $T21134[rsp]
  0017b	48 8b f8	 mov	 rdi, rax
  0017e	48 8b f1	 mov	 rsi, rcx
  00181	b9 10 00 00 00	 mov	 ecx, 16
  00186	f3 a4		 rep movsb
$LN2@cmath_log:

; 846  :     }
; 847  :     PyFPE_END_PROTECT(x)
; 848  :     if (errno != 0)

  00188	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  0018e	83 38 00	 cmp	 DWORD PTR [rax], 0
  00191	74 07		 je	 SHORT $LN1@cmath_log

; 849  :         return math_error();

  00193	e8 00 00 00 00	 call	 math_error
  00198	eb 27		 jmp	 SHORT $LN4@cmath_log
$LN1@cmath_log:

; 850  :     return PyComplex_FromCComplex(x);

  0019a	48 8d 84 24 b0
	00 00 00	 lea	 rax, QWORD PTR $T21133[rsp]
  001a2	48 8d 4c 24 30	 lea	 rcx, QWORD PTR x$[rsp]
  001a7	48 8b f8	 mov	 rdi, rax
  001aa	48 8b f1	 mov	 rsi, rcx
  001ad	b9 10 00 00 00	 mov	 ecx, 16
  001b2	f3 a4		 rep movsb
  001b4	48 8d 8c 24 b0
	00 00 00	 lea	 rcx, QWORD PTR $T21133[rsp]
  001bc	e8 00 00 00 00	 call	 PyComplex_FromCComplex
$LN4@cmath_log:

; 851  : }

  001c1	48 81 c4 f8 00
	00 00		 add	 rsp, 248		; 000000f8H
  001c8	5f		 pop	 rdi
  001c9	5e		 pop	 rsi
  001ca	c3		 ret	 0
cmath_log ENDP
_TEXT	ENDS
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@3ffbae147ae147ae
PUBLIC	__real@3fe6b851eb851eb8
PUBLIC	__mask@@NegDouble@
PUBLIC	__real@40425e4f7b2737fa
PUBLIC	__real@0000000000000000
PUBLIC	__real@0010000000000000
PUBLIC	__real@3fe62e42fefa39ef
PUBLIC	__real@4000000000000000
PUBLIC	__real@7fcfffffffffffff
EXTRN	_Py_log1p:PROC
EXTRN	atan2:PROC
EXTRN	__imp__HUGE:QWORD
EXTRN	__imp_ldexp:PROC
EXTRN	log:PROC
EXTRN	fabs:PROC
EXTRN	__imp__finite:PROC
EXTRN	_fltused:DWORD
_BSS	SEGMENT
log_special_values DB 0310H DUP (?)
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$c_log DD	imagerel c_log
	DD	imagerel c_log+930
	DD	imagerel $unwind$c_log
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$c_log DD 041301H
	DD	0110113H
	DD	0600b700cH
xdata	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3ffbae147ae147ae
CONST	SEGMENT
__real@3ffbae147ae147ae DQ 03ffbae147ae147aer	; 1.73
CONST	ENDS
;	COMDAT __real@3fe6b851eb851eb8
CONST	SEGMENT
__real@3fe6b851eb851eb8 DQ 03fe6b851eb851eb8r	; 0.71
CONST	ENDS
;	COMDAT __mask@@NegDouble@
CONST	SEGMENT
__mask@@NegDouble@ DB 00H, 00H, 00H, 00H, 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@40425e4f7b2737fa
CONST	SEGMENT
__real@40425e4f7b2737fa DQ 040425e4f7b2737far	; 36.7368
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@0010000000000000
CONST	SEGMENT
__real@0010000000000000 DQ 00010000000000000r	; 2.22507e-308
CONST	ENDS
;	COMDAT __real@3fe62e42fefa39ef
CONST	SEGMENT
__real@3fe62e42fefa39ef DQ 03fe62e42fefa39efr	; 0.693147
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@7fcfffffffffffff
CONST	SEGMENT
__real@7fcfffffffffffff DQ 07fcfffffffffffffr	; 4.49423e+307
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT c_log
_TEXT	SEGMENT
h$ = 32
ay$ = 40
an$ = 48
ax$ = 56
am$ = 64
r$ = 72
tv76 = 88
tv94 = 96
tv136 = 104
tv158 = 112
tv160 = 120
$T21143 = 160
z$ = 168
c_log	PROC						; COMDAT

; 499  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 81 ec 88 00
	00 00		 sub	 rsp, 136		; 00000088H

; 500  :     /*
; 501  :        The usual formula for the real part is log(hypot(z.real, z.imag)).
; 502  :        There are four situations where this formula is potentially
; 503  :        problematic:
; 504  : 
; 505  :        (1) the absolute value of z is subnormal.  Then hypot is subnormal,
; 506  :        so has fewer than the usual number of bits of accuracy, hence may
; 507  :        have large relative error.  This then gives a large absolute error
; 508  :        in the log.  This can be solved by rescaling z by a suitable power
; 509  :        of 2.
; 510  : 
; 511  :        (2) the absolute value of z is greater than DBL_MAX (e.g. when both
; 512  :        z.real and z.imag are within a factor of 1/sqrt(2) of DBL_MAX)
; 513  :        Again, rescaling solves this.
; 514  : 
; 515  :        (3) the absolute value of z is close to 1.  In this case it's
; 516  :        difficult to achieve good accuracy, at least in part because a
; 517  :        change of 1ulp in the real or imaginary part of z can result in a
; 518  :        change of billions of ulps in the correctly rounded answer.
; 519  : 
; 520  :        (4) z = 0.  The simplest thing to do here is to call the
; 521  :        floating-point log with an argument of 0, and let its behaviour
; 522  :        (returning -infinity, signaling a floating-point exception, setting
; 523  :        errno, or whatever) determine that of c_log.  So the usual formula
; 524  :        is fine here.
; 525  : 
; 526  :      */
; 527  : 
; 528  :     Py_complex r;
; 529  :     double ax, ay, am, an, h;
; 530  : 
; 531  :     SPECIAL_VALUE(z, log_special_values);

  00013	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0001b	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0001f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00025	85 c0		 test	 eax, eax
  00027	74 17		 je	 SHORT $LN11@c_log
  00029	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00031	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00036	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  0003c	85 c0		 test	 eax, eax
  0003e	75 72		 jne	 SHORT $LN12@c_log
$LN11@c_log:
  00040	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  00046	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
  0004c	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00054	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00058	e8 00 00 00 00	 call	 special_type
  0005d	48 98		 cdqe
  0005f	48 6b c0 70	 imul	 rax, 112		; 00000070H
  00063	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:log_special_values
  0006a	48 03 c8	 add	 rcx, rax
  0006d	48 8b c1	 mov	 rax, rcx
  00070	48 89 44 24 58	 mov	 QWORD PTR tv76[rsp], rax
  00075	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR z$[rsp]
  0007d	f2 0f 10 41 08	 movsdx	 xmm0, QWORD PTR [rcx+8]
  00082	e8 00 00 00 00	 call	 special_type
  00087	48 98		 cdqe
  00089	48 6b c0 10	 imul	 rax, 16
  0008d	48 8b bc 24 a0
	00 00 00	 mov	 rdi, QWORD PTR $T21143[rsp]
  00095	48 8b 4c 24 58	 mov	 rcx, QWORD PTR tv76[rsp]
  0009a	48 8d 34 01	 lea	 rsi, QWORD PTR [rcx+rax]
  0009e	b9 10 00 00 00	 mov	 ecx, 16
  000a3	f3 a4		 rep movsb
  000a5	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR $T21143[rsp]
  000ad	e9 e6 02 00 00	 jmp	 $LN13@c_log
$LN12@c_log:

; 532  : 
; 533  :     ax = fabs(z.real);

  000b2	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  000ba	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  000be	e8 00 00 00 00	 call	 fabs
  000c3	f2 0f 11 44 24
	38		 movsdx	 QWORD PTR ax$[rsp], xmm0

; 534  :     ay = fabs(z.imag);

  000c9	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  000d1	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  000d6	e8 00 00 00 00	 call	 fabs
  000db	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR ay$[rsp], xmm0

; 535  : 
; 536  :     if (ax > CM_LARGE_DOUBLE || ay > CM_LARGE_DOUBLE) {

  000e1	f2 0f 10 44 24
	38		 movsdx	 xmm0, QWORD PTR ax$[rsp]
  000e7	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@7fcfffffffffffff
  000ef	77 10		 ja	 SHORT $LN9@c_log
  000f1	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR ay$[rsp]
  000f7	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@7fcfffffffffffff
  000ff	76 49		 jbe	 SHORT $LN10@c_log
$LN9@c_log:

; 537  :         r.real = log(hypot(ax/2., ay/2.)) + M_LN2;

  00101	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR ay$[rsp]
  00107	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  0010f	f2 0f 10 4c 24
	38		 movsdx	 xmm1, QWORD PTR ax$[rsp]
  00115	f2 0f 5e 0d 00
	00 00 00	 divsd	 xmm1, QWORD PTR __real@4000000000000000
  0011d	f2 0f 11 4c 24
	60		 movsdx	 QWORD PTR tv94[rsp], xmm1
  00123	66 0f 28 c8	 movapd	 xmm1, xmm0
  00127	f2 0f 10 44 24
	60		 movsdx	 xmm0, QWORD PTR tv94[rsp]
  0012d	e8 00 00 00 00	 call	 hypot
  00132	e8 00 00 00 00	 call	 log
  00137	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3fe62e42fefa39ef
  0013f	f2 0f 11 44 24
	48		 movsdx	 QWORD PTR r$[rsp], xmm0
  00145	e9 ff 01 00 00	 jmp	 $LN8@c_log
$LN10@c_log:

; 538  :     } else if (ax < DBL_MIN && ay < DBL_MIN) {

  0014a	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@0010000000000000
  00152	66 0f 2f 44 24
	38		 comisd	 xmm0, QWORD PTR ax$[rsp]
  00158	0f 86 ee 00 00
	00		 jbe	 $LN7@c_log
  0015e	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@0010000000000000
  00166	66 0f 2f 44 24
	28		 comisd	 xmm0, QWORD PTR ay$[rsp]
  0016c	0f 86 da 00 00
	00		 jbe	 $LN7@c_log

; 539  :         if (ax > 0. || ay > 0.) {

  00172	f2 0f 10 44 24
	38		 movsdx	 xmm0, QWORD PTR ax$[rsp]
  00178	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00180	77 10		 ja	 SHORT $LN5@c_log
  00182	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR ay$[rsp]
  00188	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00190	76 48		 jbe	 SHORT $LN6@c_log
$LN5@c_log:

; 540  :             /* catch cases where hypot(ax, ay) is subnormal */
; 541  :             r.real = log(hypot(ldexp(ax, DBL_MANT_DIG),
; 542  :                      ldexp(ay, DBL_MANT_DIG))) - DBL_MANT_DIG*M_LN2;

  00192	ba 35 00 00 00	 mov	 edx, 53			; 00000035H
  00197	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR ay$[rsp]
  0019d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_ldexp
  001a3	f2 0f 11 44 24
	68		 movsdx	 QWORD PTR tv136[rsp], xmm0
  001a9	ba 35 00 00 00	 mov	 edx, 53			; 00000035H
  001ae	f2 0f 10 44 24
	38		 movsdx	 xmm0, QWORD PTR ax$[rsp]
  001b4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_ldexp
  001ba	f2 0f 10 4c 24
	68		 movsdx	 xmm1, QWORD PTR tv136[rsp]
  001c0	e8 00 00 00 00	 call	 hypot
  001c5	e8 00 00 00 00	 call	 log
  001ca	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@40425e4f7b2737fa
  001d2	f2 0f 11 44 24
	48		 movsdx	 QWORD PTR r$[rsp], xmm0

; 543  :         }
; 544  :         else {

  001d8	eb 6d		 jmp	 SHORT $LN4@c_log
$LN6@c_log:

; 545  :             /* log(+/-0. +/- 0i) */
; 546  :             r.real = -INF;

  001da	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  001e1	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  001e5	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  001ed	f2 0f 11 44 24
	48		 movsdx	 QWORD PTR r$[rsp], xmm0

; 547  :             r.imag = atan2(z.imag, z.real);

  001f3	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  001fb	f2 0f 10 08	 movsdx	 xmm1, QWORD PTR [rax]
  001ff	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00207	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0020c	e8 00 00 00 00	 call	 atan2
  00211	f2 0f 11 44 24
	50		 movsdx	 QWORD PTR r$[rsp+8], xmm0

; 548  :             errno = EDOM;

  00217	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  0021d	c7 00 21 00 00
	00		 mov	 DWORD PTR [rax], 33	; 00000021H

; 549  :             return r;

  00223	48 8d 44 24 48	 lea	 rax, QWORD PTR r$[rsp]
  00228	48 8b bc 24 a0
	00 00 00	 mov	 rdi, QWORD PTR $T21143[rsp]
  00230	48 8b f0	 mov	 rsi, rax
  00233	b9 10 00 00 00	 mov	 ecx, 16
  00238	f3 a4		 rep movsb
  0023a	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR $T21143[rsp]
  00242	e9 51 01 00 00	 jmp	 $LN13@c_log
$LN4@c_log:

; 550  :         }
; 551  :     } else {

  00247	e9 fd 00 00 00	 jmp	 $LN3@c_log
$LN7@c_log:

; 552  :         h = hypot(ax, ay);

  0024c	f2 0f 10 4c 24
	28		 movsdx	 xmm1, QWORD PTR ay$[rsp]
  00252	f2 0f 10 44 24
	38		 movsdx	 xmm0, QWORD PTR ax$[rsp]
  00258	e8 00 00 00 00	 call	 hypot
  0025d	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR h$[rsp], xmm0

; 553  :         if (0.71 <= h && h <= 1.73) {

  00263	f2 0f 10 44 24
	20		 movsdx	 xmm0, QWORD PTR h$[rsp]
  00269	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@3fe6b851eb851eb8
  00271	0f 82 c1 00 00
	00		 jb	 $LN2@c_log
  00277	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ffbae147ae147ae
  0027f	66 0f 2f 44 24
	20		 comisd	 xmm0, QWORD PTR h$[rsp]
  00285	0f 82 ad 00 00
	00		 jb	 $LN2@c_log

; 554  :             am = ax > ay ? ax : ay;  /* max(ax, ay) */

  0028b	f2 0f 10 44 24
	38		 movsdx	 xmm0, QWORD PTR ax$[rsp]
  00291	66 0f 2f 44 24
	28		 comisd	 xmm0, QWORD PTR ay$[rsp]
  00297	76 0e		 jbe	 SHORT $LN15@c_log
  00299	f2 0f 10 44 24
	38		 movsdx	 xmm0, QWORD PTR ax$[rsp]
  0029f	f2 0f 11 44 24
	70		 movsdx	 QWORD PTR tv158[rsp], xmm0
  002a5	eb 0c		 jmp	 SHORT $LN16@c_log
$LN15@c_log:
  002a7	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR ay$[rsp]
  002ad	f2 0f 11 44 24
	70		 movsdx	 QWORD PTR tv158[rsp], xmm0
$LN16@c_log:
  002b3	f2 0f 10 44 24
	70		 movsdx	 xmm0, QWORD PTR tv158[rsp]
  002b9	f2 0f 11 44 24
	40		 movsdx	 QWORD PTR am$[rsp], xmm0

; 555  :             an = ax > ay ? ay : ax;  /* min(ax, ay) */

  002bf	f2 0f 10 44 24
	38		 movsdx	 xmm0, QWORD PTR ax$[rsp]
  002c5	66 0f 2f 44 24
	28		 comisd	 xmm0, QWORD PTR ay$[rsp]
  002cb	76 0e		 jbe	 SHORT $LN17@c_log
  002cd	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR ay$[rsp]
  002d3	f2 0f 11 44 24
	78		 movsdx	 QWORD PTR tv160[rsp], xmm0
  002d9	eb 0c		 jmp	 SHORT $LN18@c_log
$LN17@c_log:
  002db	f2 0f 10 44 24
	38		 movsdx	 xmm0, QWORD PTR ax$[rsp]
  002e1	f2 0f 11 44 24
	78		 movsdx	 QWORD PTR tv160[rsp], xmm0
$LN18@c_log:
  002e7	f2 0f 10 44 24
	78		 movsdx	 xmm0, QWORD PTR tv160[rsp]
  002ed	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR an$[rsp], xmm0

; 556  :             r.real = m_log1p((am-1)*(am+1)+an*an)/2.;

  002f3	f2 0f 10 44 24
	40		 movsdx	 xmm0, QWORD PTR am$[rsp]
  002f9	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00301	f2 0f 10 4c 24
	40		 movsdx	 xmm1, QWORD PTR am$[rsp]
  00307	f2 0f 58 0d 00
	00 00 00	 addsd	 xmm1, QWORD PTR __real@3ff0000000000000
  0030f	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00313	f2 0f 10 4c 24
	30		 movsdx	 xmm1, QWORD PTR an$[rsp]
  00319	f2 0f 59 4c 24
	30		 mulsd	 xmm1, QWORD PTR an$[rsp]
  0031f	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00323	e8 00 00 00 00	 call	 _Py_log1p
  00328	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  00330	f2 0f 11 44 24
	48		 movsdx	 QWORD PTR r$[rsp], xmm0

; 557  :         } else {

  00336	eb 11		 jmp	 SHORT $LN1@c_log
$LN2@c_log:

; 558  :             r.real = log(h);

  00338	f2 0f 10 44 24
	20		 movsdx	 xmm0, QWORD PTR h$[rsp]
  0033e	e8 00 00 00 00	 call	 log
  00343	f2 0f 11 44 24
	48		 movsdx	 QWORD PTR r$[rsp], xmm0
$LN1@c_log:
$LN3@c_log:
$LN8@c_log:

; 559  :         }
; 560  :     }
; 561  :     r.imag = atan2(z.imag, z.real);

  00349	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00351	f2 0f 10 08	 movsdx	 xmm1, QWORD PTR [rax]
  00355	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0035d	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00362	e8 00 00 00 00	 call	 atan2
  00367	f2 0f 11 44 24
	50		 movsdx	 QWORD PTR r$[rsp+8], xmm0

; 562  :     errno = 0;

  0036d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  00373	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 563  :     return r;

  00379	48 8d 44 24 48	 lea	 rax, QWORD PTR r$[rsp]
  0037e	48 8b bc 24 a0
	00 00 00	 mov	 rdi, QWORD PTR $T21143[rsp]
  00386	48 8b f0	 mov	 rsi, rax
  00389	b9 10 00 00 00	 mov	 ecx, 16
  0038e	f3 a4		 rep movsb
  00390	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR $T21143[rsp]
$LN13@c_log:

; 564  : }

  00398	48 81 c4 88 00
	00 00		 add	 rsp, 136		; 00000088H
  0039f	5f		 pop	 rdi
  003a0	5e		 pop	 rsi
  003a1	c3		 ret	 0
c_log	ENDP
_TEXT	ENDS
EXTRN	__imp__hypot:PROC
;	COMDAT pdata
; File c:\program files (x86)\microsoft visual studio 10.0\vc\include\math.h
pdata	SEGMENT
$pdata$hypot DD	imagerel hypot
	DD	imagerel hypot+39
	DD	imagerel $unwind$hypot
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$hypot DD 011001H
	DD	04210H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT hypot
_TEXT	SEGMENT
_X$ = 48
_Y$ = 56
hypot	PROC						; COMDAT

; 162  : {

  00000	f2 0f 11 4c 24
	10		 movsdx	 QWORD PTR [rsp+16], xmm1
  00006	f2 0f 11 44 24
	08		 movsdx	 QWORD PTR [rsp+8], xmm0
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 163  :     return _hypot(_X, _Y);

  00010	f2 0f 10 4c 24
	38		 movsdx	 xmm1, QWORD PTR _Y$[rsp]
  00016	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR _X$[rsp]
  0001c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__hypot

; 164  : }

  00022	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00026	c3		 ret	 0
hypot	ENDP
_TEXT	ENDS
EXTRN	__imp__isnan:PROC
EXTRN	__imp__copysign:PROC
;	COMDAT pdata
; File c:\src\pyparallel\modules\cmathmodule.c
pdata	SEGMENT
$pdata$special_type DD imagerel special_type
	DD	imagerel special_type+213
	DD	imagerel $unwind$special_type
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$special_type DD 010a01H
	DD	0420aH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT special_type
_TEXT	SEGMENT
d$ = 48
special_type PROC					; COMDAT

; 77   : {

  00000	f2 0f 11 44 24
	08		 movsdx	 QWORD PTR [rsp+8], xmm0
  00006	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 78   :     if (Py_IS_FINITE(d)) {

  0000a	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR d$[rsp]
  00010	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00016	85 c0		 test	 eax, eax
  00018	74 74		 je	 SHORT $LN10@special_ty

; 79   :         if (d != 0) {

  0001a	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR d$[rsp]
  00020	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00028	7a 02		 jp	 SHORT $LN13@special_ty
  0002a	74 32		 je	 SHORT $LN9@special_ty
$LN13@special_ty:

; 80   :             if (copysign(1., d) == 1.)

  0002c	f2 0f 10 4c 24
	30		 movsdx	 xmm1, QWORD PTR d$[rsp]
  00032	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff0000000000000
  0003a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  00040	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@3ff0000000000000
  00048	7a 0b		 jp	 SHORT $LN8@special_ty
  0004a	75 09		 jne	 SHORT $LN8@special_ty

; 81   :                 return ST_POS;

  0004c	b8 04 00 00 00	 mov	 eax, 4
  00051	eb 7d		 jmp	 SHORT $LN11@special_ty

; 82   :             else

  00053	eb 07		 jmp	 SHORT $LN7@special_ty
$LN8@special_ty:

; 83   :                 return ST_NEG;

  00055	b8 01 00 00 00	 mov	 eax, 1
  0005a	eb 74		 jmp	 SHORT $LN11@special_ty
$LN7@special_ty:

; 84   :         }
; 85   :         else {

  0005c	eb 30		 jmp	 SHORT $LN6@special_ty
$LN9@special_ty:

; 86   :             if (copysign(1., d) == 1.)

  0005e	f2 0f 10 4c 24
	30		 movsdx	 xmm1, QWORD PTR d$[rsp]
  00064	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff0000000000000
  0006c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  00072	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@3ff0000000000000
  0007a	7a 0b		 jp	 SHORT $LN5@special_ty
  0007c	75 09		 jne	 SHORT $LN5@special_ty

; 87   :                 return ST_PZERO;

  0007e	b8 03 00 00 00	 mov	 eax, 3
  00083	eb 4b		 jmp	 SHORT $LN11@special_ty

; 88   :             else

  00085	eb 07		 jmp	 SHORT $LN4@special_ty
$LN5@special_ty:

; 89   :                 return ST_NZERO;

  00087	b8 02 00 00 00	 mov	 eax, 2
  0008c	eb 42		 jmp	 SHORT $LN11@special_ty
$LN4@special_ty:
$LN6@special_ty:
$LN10@special_ty:

; 90   :         }
; 91   :     }
; 92   :     if (Py_IS_NAN(d))

  0008e	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR d$[rsp]
  00094	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__isnan
  0009a	85 c0		 test	 eax, eax
  0009c	74 07		 je	 SHORT $LN3@special_ty

; 93   :         return ST_NAN;

  0009e	b8 06 00 00 00	 mov	 eax, 6
  000a3	eb 2b		 jmp	 SHORT $LN11@special_ty
$LN3@special_ty:

; 94   :     if (copysign(1., d) == 1.)

  000a5	f2 0f 10 4c 24
	30		 movsdx	 xmm1, QWORD PTR d$[rsp]
  000ab	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff0000000000000
  000b3	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  000b9	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@3ff0000000000000
  000c1	7a 0b		 jp	 SHORT $LN2@special_ty
  000c3	75 09		 jne	 SHORT $LN2@special_ty

; 95   :         return ST_PINF;

  000c5	b8 05 00 00 00	 mov	 eax, 5
  000ca	eb 04		 jmp	 SHORT $LN11@special_ty

; 96   :     else

  000cc	eb 02		 jmp	 SHORT $LN1@special_ty
$LN2@special_ty:

; 97   :         return ST_NINF;

  000ce	33 c0		 xor	 eax, eax
$LN1@special_ty:
$LN11@special_ty:

; 98   : }

  000d0	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000d4	c3		 ret	 0
special_type ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BB@PNJGEICL@math?5range?5error?$AA@	; `string'
PUBLIC	??_C@_0BC@LMCJDMHE@math?5domain?5error?$AA@	; `string'
EXTRN	PyErr_SetFromErrno:PROC
EXTRN	PyExc_OverflowError:QWORD
EXTRN	PyErr_SetString:PROC
EXTRN	PyExc_ValueError:QWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$math_error DD imagerel math_error
	DD	imagerel math_error+87
	DD	imagerel $unwind$math_error
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$math_error DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT ??_C@_0BB@PNJGEICL@math?5range?5error?$AA@
CONST	SEGMENT
??_C@_0BB@PNJGEICL@math?5range?5error?$AA@ DB 'math range error', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LMCJDMHE@math?5domain?5error?$AA@
CONST	SEGMENT
??_C@_0BC@LMCJDMHE@math?5domain?5error?$AA@ DB 'math domain error', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT math_error
_TEXT	SEGMENT
math_error PROC						; COMDAT

; 862  : {

  00000	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 863  :     if (errno == EDOM)

  00004	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  0000a	83 38 21	 cmp	 DWORD PTR [rax], 33	; 00000021H
  0000d	75 15		 jne	 SHORT $LN4@math_error

; 864  :         PyErr_SetString(PyExc_ValueError, "math domain error");

  0000f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BC@LMCJDMHE@math?5domain?5error?$AA@
  00016	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ValueError
  0001d	e8 00 00 00 00	 call	 PyErr_SetString
  00022	eb 2c		 jmp	 SHORT $LN3@math_error
$LN4@math_error:

; 865  :     else if (errno == ERANGE)

  00024	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  0002a	83 38 22	 cmp	 DWORD PTR [rax], 34	; 00000022H
  0002d	75 15		 jne	 SHORT $LN2@math_error

; 866  :         PyErr_SetString(PyExc_OverflowError, "math range error");

  0002f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BB@PNJGEICL@math?5range?5error?$AA@
  00036	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_OverflowError
  0003d	e8 00 00 00 00	 call	 PyErr_SetString

; 867  :     else    /* Unexpected math error */

  00042	eb 0c		 jmp	 SHORT $LN1@math_error
$LN2@math_error:

; 868  :         PyErr_SetFromErrno(PyExc_ValueError);

  00044	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ValueError
  0004b	e8 00 00 00 00	 call	 PyErr_SetFromErrno
$LN1@math_error:
$LN3@math_error:

; 869  :     return NULL;

  00050	33 c0		 xor	 eax, eax

; 870  : }

  00052	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00056	c3		 ret	 0
math_error ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$cmath_acos DD imagerel cmath_acos
	DD	imagerel cmath_acos+36
	DD	imagerel $unwind$cmath_acos
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$cmath_acos DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT cmath_acos
_TEXT	SEGMENT
self$ = 48
args$ = 56
cmath_acos PROC						; COMDAT

; 900  : FUNC1(cmath_acos, c_acos)

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:c_acos
  00015	48 8b 4c 24 38	 mov	 rcx, QWORD PTR args$[rsp]
  0001a	e8 00 00 00 00	 call	 math_1
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	c3		 ret	 0
cmath_acos ENDP
_TEXT	ENDS
PUBLIC	$T21206
PUBLIC	$T21205
PUBLIC	$T21207
PUBLIC	$T21204
PUBLIC	__real@3ff62e42fefa39ef
EXTRN	_Py_asinh:PROC
_BSS	SEGMENT
acos_special_values DB 0310H DUP (?)
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$c_acos DD imagerel c_acos
	DD	imagerel c_acos+942
	DD	imagerel $unwind$c_acos
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$c_acos DD 041301H
	DD	01b0113H
	DD	0600b700cH
xdata	ENDS
;	COMDAT __real@3ff62e42fefa39ef
CONST	SEGMENT
__real@3ff62e42fefa39ef DQ 03ff62e42fefa39efr	; 1.38629
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT c_acos
_TEXT	SEGMENT
s2$ = 32
s1$ = 48
r$ = 64
$T21202 = 80
$T21203 = 96
$T21204 = 112
$T21205 = 128
$T21206 = 144
$T21207 = 160
tv76 = 176
tv137 = 184
tv145 = 192
$T21201 = 240
z$ = 248
c_acos	PROC						; COMDAT

; 128  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 81 ec d8 00
	00 00		 sub	 rsp, 216		; 000000d8H

; 129  :     Py_complex s1, s2, r;
; 130  : 
; 131  :     SPECIAL_VALUE(z, acos_special_values);

  00013	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0001b	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0001f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00025	85 c0		 test	 eax, eax
  00027	74 17		 je	 SHORT $LN6@c_acos
  00029	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00031	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00036	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  0003c	85 c0		 test	 eax, eax
  0003e	75 78		 jne	 SHORT $LN7@c_acos
$LN6@c_acos:
  00040	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  00046	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
  0004c	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00054	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00058	e8 00 00 00 00	 call	 special_type
  0005d	48 98		 cdqe
  0005f	48 6b c0 70	 imul	 rax, 112		; 00000070H
  00063	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:acos_special_values
  0006a	48 03 c8	 add	 rcx, rax
  0006d	48 8b c1	 mov	 rax, rcx
  00070	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR tv76[rsp], rax
  00078	48 8b 8c 24 f8
	00 00 00	 mov	 rcx, QWORD PTR z$[rsp]
  00080	f2 0f 10 41 08	 movsdx	 xmm0, QWORD PTR [rcx+8]
  00085	e8 00 00 00 00	 call	 special_type
  0008a	48 98		 cdqe
  0008c	48 6b c0 10	 imul	 rax, 16
  00090	48 8b bc 24 f0
	00 00 00	 mov	 rdi, QWORD PTR $T21201[rsp]
  00098	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR tv76[rsp]
  000a0	48 8d 34 01	 lea	 rsi, QWORD PTR [rcx+rax]
  000a4	b9 10 00 00 00	 mov	 ecx, 16
  000a9	f3 a4		 rep movsb
  000ab	48 8b 84 24 f0
	00 00 00	 mov	 rax, QWORD PTR $T21201[rsp]
  000b3	e9 ec 02 00 00	 jmp	 $LN8@c_acos
$LN7@c_acos:

; 132  : 
; 133  :     if (fabs(z.real) > CM_LARGE_DOUBLE || fabs(z.imag) > CM_LARGE_DOUBLE) {

  000b8	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  000c0	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  000c4	e8 00 00 00 00	 call	 fabs
  000c9	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@7fcfffffffffffff
  000d1	77 20		 ja	 SHORT $LN4@c_acos
  000d3	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  000db	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  000e0	e8 00 00 00 00	 call	 fabs
  000e5	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@7fcfffffffffffff
  000ed	0f 86 26 01 00
	00		 jbe	 $LN5@c_acos
$LN4@c_acos:

; 134  :         /* avoid unnecessary overflow for large arguments */
; 135  :         r.real = atan2(fabs(z.imag), z.real);

  000f3	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  000fb	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00100	e8 00 00 00 00	 call	 fabs
  00105	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0010d	f2 0f 10 08	 movsdx	 xmm1, QWORD PTR [rax]
  00111	e8 00 00 00 00	 call	 atan2
  00116	f2 0f 11 44 24
	40		 movsdx	 QWORD PTR r$[rsp], xmm0

; 136  :         /* split into cases to make sure that the branch cut has the
; 137  :            correct continuity on systems with unsigned zeros */
; 138  :         if (z.real < 0.) {

  0011c	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00124	66 0f 57 c0	 xorpd	 xmm0, xmm0
  00128	66 0f 2f 00	 comisd	 xmm0, QWORD PTR [rax]
  0012c	76 74		 jbe	 SHORT $LN3@c_acos

; 139  :             r.imag = -copysign(log(hypot(z.real/2., z.imag/2.)) +
; 140  :                                M_LN2*2., z.imag);

  0012e	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00136	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0013b	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  00143	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0014b	f2 0f 10 08	 movsdx	 xmm1, QWORD PTR [rax]
  0014f	f2 0f 5e 0d 00
	00 00 00	 divsd	 xmm1, QWORD PTR __real@4000000000000000
  00157	f2 0f 11 8c 24
	b8 00 00 00	 movsdx	 QWORD PTR tv137[rsp], xmm1
  00160	66 0f 28 c8	 movapd	 xmm1, xmm0
  00164	f2 0f 10 84 24
	b8 00 00 00	 movsdx	 xmm0, QWORD PTR tv137[rsp]
  0016d	e8 00 00 00 00	 call	 hypot
  00172	e8 00 00 00 00	 call	 log
  00177	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff62e42fefa39ef
  0017f	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00187	f2 0f 10 48 08	 movsdx	 xmm1, QWORD PTR [rax+8]
  0018c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  00192	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  0019a	f2 0f 11 44 24
	48		 movsdx	 QWORD PTR r$[rsp+8], xmm0

; 141  :         } else {

  001a0	eb 72		 jmp	 SHORT $LN2@c_acos
$LN3@c_acos:

; 142  :             r.imag = copysign(log(hypot(z.real/2., z.imag/2.)) +
; 143  :                               M_LN2*2., -z.imag);

  001a2	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  001aa	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  001af	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  001b7	f2 0f 11 84 24
	c0 00 00 00	 movsdx	 QWORD PTR tv145[rsp], xmm0
  001c0	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  001c8	f2 0f 10 48 08	 movsdx	 xmm1, QWORD PTR [rax+8]
  001cd	f2 0f 5e 0d 00
	00 00 00	 divsd	 xmm1, QWORD PTR __real@4000000000000000
  001d5	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  001dd	f2 0f 10 10	 movsdx	 xmm2, QWORD PTR [rax]
  001e1	f2 0f 5e 15 00
	00 00 00	 divsd	 xmm2, QWORD PTR __real@4000000000000000
  001e9	66 0f 28 c2	 movapd	 xmm0, xmm2
  001ed	e8 00 00 00 00	 call	 hypot
  001f2	e8 00 00 00 00	 call	 log
  001f7	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff62e42fefa39ef
  001ff	f2 0f 10 8c 24
	c0 00 00 00	 movsdx	 xmm1, QWORD PTR tv145[rsp]
  00208	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  0020e	f2 0f 11 44 24
	48		 movsdx	 QWORD PTR r$[rsp+8], xmm0
$LN2@c_acos:

; 144  :         }
; 145  :     } else {

  00214	e9 60 01 00 00	 jmp	 $LN1@c_acos
$LN5@c_acos:

; 146  :         s1.real = 1.-z.real;

  00219	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00221	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff0000000000000
  00229	f2 0f 5c 00	 subsd	 xmm0, QWORD PTR [rax]
  0022d	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR s1$[rsp], xmm0

; 147  :         s1.imag = -z.imag;

  00233	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0023b	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00240	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  00248	f2 0f 11 44 24
	38		 movsdx	 QWORD PTR s1$[rsp+8], xmm0

; 148  :         s1 = c_sqrt(s1);

  0024e	48 8d 44 24 70	 lea	 rax, QWORD PTR $T21204[rsp]
  00253	48 8d 4c 24 30	 lea	 rcx, QWORD PTR s1$[rsp]
  00258	48 8b f8	 mov	 rdi, rax
  0025b	48 8b f1	 mov	 rsi, rcx
  0025e	b9 10 00 00 00	 mov	 ecx, 16
  00263	f3 a4		 rep movsb
  00265	48 8d 54 24 70	 lea	 rdx, QWORD PTR $T21204[rsp]
  0026a	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T21202[rsp]
  0026f	e8 00 00 00 00	 call	 c_sqrt
  00274	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR $T21207[rsp]
  0027c	48 8b f9	 mov	 rdi, rcx
  0027f	48 8b f0	 mov	 rsi, rax
  00282	b9 10 00 00 00	 mov	 ecx, 16
  00287	f3 a4		 rep movsb
  00289	48 8d 44 24 30	 lea	 rax, QWORD PTR s1$[rsp]
  0028e	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR $T21207[rsp]
  00296	48 8b f8	 mov	 rdi, rax
  00299	48 8b f1	 mov	 rsi, rcx
  0029c	b9 10 00 00 00	 mov	 ecx, 16
  002a1	f3 a4		 rep movsb

; 149  :         s2.real = 1.+z.real;

  002a3	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  002ab	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff0000000000000
  002b3	f2 0f 58 00	 addsd	 xmm0, QWORD PTR [rax]
  002b7	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR s2$[rsp], xmm0

; 150  :         s2.imag = z.imag;

  002bd	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  002c5	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  002ca	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR s2$[rsp+8], xmm0

; 151  :         s2 = c_sqrt(s2);

  002d0	48 8d 84 24 80
	00 00 00	 lea	 rax, QWORD PTR $T21205[rsp]
  002d8	48 8d 4c 24 20	 lea	 rcx, QWORD PTR s2$[rsp]
  002dd	48 8b f8	 mov	 rdi, rax
  002e0	48 8b f1	 mov	 rsi, rcx
  002e3	b9 10 00 00 00	 mov	 ecx, 16
  002e8	f3 a4		 rep movsb
  002ea	48 8d 94 24 80
	00 00 00	 lea	 rdx, QWORD PTR $T21205[rsp]
  002f2	48 8d 4c 24 60	 lea	 rcx, QWORD PTR $T21203[rsp]
  002f7	e8 00 00 00 00	 call	 c_sqrt
  002fc	48 8d 8c 24 90
	00 00 00	 lea	 rcx, QWORD PTR $T21206[rsp]
  00304	48 8b f9	 mov	 rdi, rcx
  00307	48 8b f0	 mov	 rsi, rax
  0030a	b9 10 00 00 00	 mov	 ecx, 16
  0030f	f3 a4		 rep movsb
  00311	48 8d 44 24 20	 lea	 rax, QWORD PTR s2$[rsp]
  00316	48 8d 8c 24 90
	00 00 00	 lea	 rcx, QWORD PTR $T21206[rsp]
  0031e	48 8b f8	 mov	 rdi, rax
  00321	48 8b f1	 mov	 rsi, rcx
  00324	b9 10 00 00 00	 mov	 ecx, 16
  00329	f3 a4		 rep movsb

; 152  :         r.real = 2.*atan2(s1.real, s2.real);

  0032b	f2 0f 10 4c 24
	20		 movsdx	 xmm1, QWORD PTR s2$[rsp]
  00331	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR s1$[rsp]
  00337	e8 00 00 00 00	 call	 atan2
  0033c	f2 0f 10 0d 00
	00 00 00	 movsdx	 xmm1, QWORD PTR __real@4000000000000000
  00344	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  00348	66 0f 28 c1	 movapd	 xmm0, xmm1
  0034c	f2 0f 11 44 24
	40		 movsdx	 QWORD PTR r$[rsp], xmm0

; 153  :         r.imag = m_asinh(s2.real*s1.imag - s2.imag*s1.real);

  00352	f2 0f 10 44 24
	20		 movsdx	 xmm0, QWORD PTR s2$[rsp]
  00358	f2 0f 59 44 24
	38		 mulsd	 xmm0, QWORD PTR s1$[rsp+8]
  0035e	f2 0f 10 4c 24
	28		 movsdx	 xmm1, QWORD PTR s2$[rsp+8]
  00364	f2 0f 59 4c 24
	30		 mulsd	 xmm1, QWORD PTR s1$[rsp]
  0036a	f2 0f 5c c1	 subsd	 xmm0, xmm1
  0036e	e8 00 00 00 00	 call	 _Py_asinh
  00373	f2 0f 11 44 24
	48		 movsdx	 QWORD PTR r$[rsp+8], xmm0
$LN1@c_acos:

; 154  :     }
; 155  :     errno = 0;

  00379	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  0037f	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 156  :     return r;

  00385	48 8d 44 24 40	 lea	 rax, QWORD PTR r$[rsp]
  0038a	48 8b bc 24 f0
	00 00 00	 mov	 rdi, QWORD PTR $T21201[rsp]
  00392	48 8b f0	 mov	 rsi, rax
  00395	b9 10 00 00 00	 mov	 ecx, 16
  0039a	f3 a4		 rep movsb
  0039c	48 8b 84 24 f0
	00 00 00	 mov	 rax, QWORD PTR $T21201[rsp]
$LN8@c_acos:

; 157  : }

  003a4	48 81 c4 d8 00
	00 00		 add	 rsp, 216		; 000000d8H
  003ab	5f		 pop	 rdi
  003ac	5e		 pop	 rsi
  003ad	c3		 ret	 0
c_acos	ENDP
_TEXT	ENDS
PUBLIC	__real@4020000000000000
EXTRN	sqrt:PROC
_BSS	SEGMENT
sqrt_special_values DB 0310H DUP (?)
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$c_sqrt DD imagerel c_sqrt
	DD	imagerel c_sqrt+781
	DD	imagerel $unwind$c_sqrt
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$c_sqrt DD 031001H
	DD	0700cc210H
	DD	0600bH
xdata	ENDS
;	COMDAT __real@4020000000000000
CONST	SEGMENT
__real@4020000000000000 DQ 04020000000000000r	; 8
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT c_sqrt
_TEXT	SEGMENT
ay$ = 32
s$ = 40
ax$ = 48
d$ = 56
r$ = 64
tv76 = 80
$T21216 = 128
z$ = 136
c_sqrt	PROC						; COMDAT

; 668  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 83 ec 68	 sub	 rsp, 104		; 00000068H

; 669  :     /*
; 670  :        Method: use symmetries to reduce to the case when x = z.real and y
; 671  :        = z.imag are nonnegative.  Then the real part of the result is
; 672  :        given by
; 673  : 
; 674  :          s = sqrt((x + hypot(x, y))/2)
; 675  : 
; 676  :        and the imaginary part is
; 677  : 
; 678  :          d = (y/2)/s
; 679  : 
; 680  :        If either x or y is very large then there's a risk of overflow in
; 681  :        computation of the expression x + hypot(x, y).  We can avoid this
; 682  :        by rewriting the formula for s as:
; 683  : 
; 684  :          s = 2*sqrt(x/8 + hypot(x/8, y/8))
; 685  : 
; 686  :        This costs us two extra multiplications/divisions, but avoids the
; 687  :        overhead of checking for x and y large.
; 688  : 
; 689  :        If both x and y are subnormal then hypot(x, y) may also be
; 690  :        subnormal, so will lack full precision.  We solve this by rescaling
; 691  :        x and y by a sufficiently large power of 2 to ensure that x and y
; 692  :        are normal.
; 693  :     */
; 694  : 
; 695  : 
; 696  :     Py_complex r;
; 697  :     double s,d;
; 698  :     double ax, ay;
; 699  : 
; 700  :     SPECIAL_VALUE(z, sqrt_special_values);

  00010	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00018	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0001c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00022	85 c0		 test	 eax, eax
  00024	74 17		 je	 SHORT $LN7@c_sqrt
  00026	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0002e	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00033	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00039	85 c0		 test	 eax, eax
  0003b	75 72		 jne	 SHORT $LN8@c_sqrt
$LN7@c_sqrt:
  0003d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  00043	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
  00049	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00051	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00055	e8 00 00 00 00	 call	 special_type
  0005a	48 98		 cdqe
  0005c	48 6b c0 70	 imul	 rax, 112		; 00000070H
  00060	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:sqrt_special_values
  00067	48 03 c8	 add	 rcx, rax
  0006a	48 8b c1	 mov	 rax, rcx
  0006d	48 89 44 24 50	 mov	 QWORD PTR tv76[rsp], rax
  00072	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR z$[rsp]
  0007a	f2 0f 10 41 08	 movsdx	 xmm0, QWORD PTR [rcx+8]
  0007f	e8 00 00 00 00	 call	 special_type
  00084	48 98		 cdqe
  00086	48 6b c0 10	 imul	 rax, 16
  0008a	48 8b bc 24 80
	00 00 00	 mov	 rdi, QWORD PTR $T21216[rsp]
  00092	48 8b 4c 24 50	 mov	 rcx, QWORD PTR tv76[rsp]
  00097	48 8d 34 01	 lea	 rsi, QWORD PTR [rcx+rax]
  0009b	b9 10 00 00 00	 mov	 ecx, 16
  000a0	f3 a4		 rep movsb
  000a2	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR $T21216[rsp]
  000aa	e9 57 02 00 00	 jmp	 $LN9@c_sqrt
$LN8@c_sqrt:

; 701  : 
; 702  :     if (z.real == 0. && z.imag == 0.) {

  000af	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  000b7	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  000bb	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  000c3	7a 5c		 jp	 SHORT $LN6@c_sqrt
  000c5	75 5a		 jne	 SHORT $LN6@c_sqrt
  000c7	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  000cf	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  000d4	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  000dc	7a 43		 jp	 SHORT $LN6@c_sqrt
  000de	75 41		 jne	 SHORT $LN6@c_sqrt

; 703  :         r.real = 0.;

  000e0	66 0f 57 c0	 xorpd	 xmm0, xmm0
  000e4	f2 0f 11 44 24
	40		 movsdx	 QWORD PTR r$[rsp], xmm0

; 704  :         r.imag = z.imag;

  000ea	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  000f2	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  000f7	f2 0f 11 44 24
	48		 movsdx	 QWORD PTR r$[rsp+8], xmm0

; 705  :         return r;

  000fd	48 8d 44 24 40	 lea	 rax, QWORD PTR r$[rsp]
  00102	48 8b bc 24 80
	00 00 00	 mov	 rdi, QWORD PTR $T21216[rsp]
  0010a	48 8b f0	 mov	 rsi, rax
  0010d	b9 10 00 00 00	 mov	 ecx, 16
  00112	f3 a4		 rep movsb
  00114	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR $T21216[rsp]
  0011c	e9 e5 01 00 00	 jmp	 $LN9@c_sqrt
$LN6@c_sqrt:

; 706  :     }
; 707  : 
; 708  :     ax = fabs(z.real);

  00121	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00129	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0012d	e8 00 00 00 00	 call	 fabs
  00132	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR ax$[rsp], xmm0

; 709  :     ay = fabs(z.imag);

  00138	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00140	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00145	e8 00 00 00 00	 call	 fabs
  0014a	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR ay$[rsp], xmm0

; 710  : 
; 711  :     if (ax < DBL_MIN && ay < DBL_MIN && (ax > 0. || ay > 0.)) {

  00150	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@0010000000000000
  00158	66 0f 2f 44 24
	30		 comisd	 xmm0, QWORD PTR ax$[rsp]
  0015e	0f 86 8d 00 00
	00		 jbe	 $LN5@c_sqrt
  00164	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@0010000000000000
  0016c	66 0f 2f 44 24
	20		 comisd	 xmm0, QWORD PTR ay$[rsp]
  00172	76 7d		 jbe	 SHORT $LN5@c_sqrt
  00174	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR ax$[rsp]
  0017a	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00182	77 10		 ja	 SHORT $LN4@c_sqrt
  00184	f2 0f 10 44 24
	20		 movsdx	 xmm0, QWORD PTR ay$[rsp]
  0018a	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00192	76 5d		 jbe	 SHORT $LN5@c_sqrt
$LN4@c_sqrt:

; 712  :         /* here we catch cases where hypot(ax, ay) is subnormal */
; 713  :         ax = ldexp(ax, CM_SCALE_UP);

  00194	ba 35 00 00 00	 mov	 edx, 53			; 00000035H
  00199	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR ax$[rsp]
  0019f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_ldexp
  001a5	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR ax$[rsp], xmm0

; 714  :         s = ldexp(sqrt(ax + hypot(ax, ldexp(ay, CM_SCALE_UP))),
; 715  :                   CM_SCALE_DOWN);

  001ab	ba 35 00 00 00	 mov	 edx, 53			; 00000035H
  001b0	f2 0f 10 44 24
	20		 movsdx	 xmm0, QWORD PTR ay$[rsp]
  001b6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_ldexp
  001bc	66 0f 28 c8	 movapd	 xmm1, xmm0
  001c0	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR ax$[rsp]
  001c6	e8 00 00 00 00	 call	 hypot
  001cb	f2 0f 10 4c 24
	30		 movsdx	 xmm1, QWORD PTR ax$[rsp]
  001d1	f2 0f 58 c8	 addsd	 xmm1, xmm0
  001d5	66 0f 28 c1	 movapd	 xmm0, xmm1
  001d9	e8 00 00 00 00	 call	 sqrt
  001de	ba e5 ff ff ff	 mov	 edx, -27
  001e3	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_ldexp
  001e9	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR s$[rsp], xmm0

; 716  :     } else {

  001ef	eb 5a		 jmp	 SHORT $LN3@c_sqrt
$LN5@c_sqrt:

; 717  :         ax /= 8.;

  001f1	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR ax$[rsp]
  001f7	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4020000000000000
  001ff	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR ax$[rsp], xmm0

; 718  :         s = 2.*sqrt(ax + hypot(ax, ay/8.));

  00205	f2 0f 10 44 24
	20		 movsdx	 xmm0, QWORD PTR ay$[rsp]
  0020b	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4020000000000000
  00213	66 0f 28 c8	 movapd	 xmm1, xmm0
  00217	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR ax$[rsp]
  0021d	e8 00 00 00 00	 call	 hypot
  00222	f2 0f 10 4c 24
	30		 movsdx	 xmm1, QWORD PTR ax$[rsp]
  00228	f2 0f 58 c8	 addsd	 xmm1, xmm0
  0022c	66 0f 28 c1	 movapd	 xmm0, xmm1
  00230	e8 00 00 00 00	 call	 sqrt
  00235	f2 0f 10 0d 00
	00 00 00	 movsdx	 xmm1, QWORD PTR __real@4000000000000000
  0023d	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  00241	66 0f 28 c1	 movapd	 xmm0, xmm1
  00245	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR s$[rsp], xmm0
$LN3@c_sqrt:

; 719  :     }
; 720  :     d = ay/(2.*s);

  0024b	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@4000000000000000
  00253	f2 0f 59 44 24
	28		 mulsd	 xmm0, QWORD PTR s$[rsp]
  00259	f2 0f 10 4c 24
	20		 movsdx	 xmm1, QWORD PTR ay$[rsp]
  0025f	f2 0f 5e c8	 divsd	 xmm1, xmm0
  00263	66 0f 28 c1	 movapd	 xmm0, xmm1
  00267	f2 0f 11 44 24
	38		 movsdx	 QWORD PTR d$[rsp], xmm0

; 721  : 
; 722  :     if (z.real >= 0.) {

  0026d	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00275	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00279	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00281	72 2d		 jb	 SHORT $LN2@c_sqrt

; 723  :         r.real = s;

  00283	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR s$[rsp]
  00289	f2 0f 11 44 24
	40		 movsdx	 QWORD PTR r$[rsp], xmm0

; 724  :         r.imag = copysign(d, z.imag);

  0028f	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00297	f2 0f 10 48 08	 movsdx	 xmm1, QWORD PTR [rax+8]
  0029c	f2 0f 10 44 24
	38		 movsdx	 xmm0, QWORD PTR d$[rsp]
  002a2	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  002a8	f2 0f 11 44 24
	48		 movsdx	 QWORD PTR r$[rsp+8], xmm0

; 725  :     } else {

  002ae	eb 2b		 jmp	 SHORT $LN1@c_sqrt
$LN2@c_sqrt:

; 726  :         r.real = d;

  002b0	f2 0f 10 44 24
	38		 movsdx	 xmm0, QWORD PTR d$[rsp]
  002b6	f2 0f 11 44 24
	40		 movsdx	 QWORD PTR r$[rsp], xmm0

; 727  :         r.imag = copysign(s, z.imag);

  002bc	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  002c4	f2 0f 10 48 08	 movsdx	 xmm1, QWORD PTR [rax+8]
  002c9	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR s$[rsp]
  002cf	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  002d5	f2 0f 11 44 24
	48		 movsdx	 QWORD PTR r$[rsp+8], xmm0
$LN1@c_sqrt:

; 728  :     }
; 729  :     errno = 0;

  002db	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  002e1	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 730  :     return r;

  002e7	48 8d 44 24 40	 lea	 rax, QWORD PTR r$[rsp]
  002ec	48 8b bc 24 80
	00 00 00	 mov	 rdi, QWORD PTR $T21216[rsp]
  002f4	48 8b f0	 mov	 rsi, rax
  002f7	b9 10 00 00 00	 mov	 ecx, 16
  002fc	f3 a4		 rep movsb
  002fe	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR $T21216[rsp]
$LN9@c_sqrt:

; 731  : }

  00306	48 83 c4 68	 add	 rsp, 104		; 00000068H
  0030a	5f		 pop	 rdi
  0030b	5e		 pop	 rsi
  0030c	c3		 ret	 0
c_sqrt	ENDP
_TEXT	ENDS
PUBLIC	$T21227
PUBLIC	$T21228
PUBLIC	$T21226
PUBLIC	??_C@_01CKDDGHAB@D?$AA@				; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$math_1 DD imagerel math_1
	DD	imagerel math_1+263
	DD	imagerel $unwind$math_1
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$math_1 DD 041301H
	DD	0110113H
	DD	0600b700cH
xdata	ENDS
;	COMDAT ??_C@_01CKDDGHAB@D?$AA@
CONST	SEGMENT
??_C@_01CKDDGHAB@D?$AA@ DB 'D', 00H			; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT math_1
_TEXT	SEGMENT
x$ = 32
r$ = 48
$T21225 = 64
$T21226 = 80
$T21227 = 96
$T21228 = 112
args$ = 160
func$ = 168
math_1	PROC						; COMDAT

; 874  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 81 ec 88 00
	00 00		 sub	 rsp, 136		; 00000088H

; 875  :     Py_complex x,r ;
; 876  :     if (!PyArg_ParseTuple(args, "D", &x))

  00013	4c 8d 44 24 20	 lea	 r8, QWORD PTR x$[rsp]
  00018	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_01CKDDGHAB@D?$AA@
  0001f	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR args$[rsp]
  00027	e8 00 00 00 00	 call	 PyArg_ParseTuple
  0002c	85 c0		 test	 eax, eax
  0002e	75 07		 jne	 SHORT $LN5@math_1

; 877  :         return NULL;

  00030	33 c0		 xor	 eax, eax
  00032	e9 c6 00 00 00	 jmp	 $LN6@math_1
$LN5@math_1:

; 878  :     errno = 0;

  00037	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  0003d	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 879  :     PyFPE_START_PROTECT("complex function", return 0);
; 880  :     r = (*func)(x);

  00043	48 8d 44 24 50	 lea	 rax, QWORD PTR $T21226[rsp]
  00048	48 8d 4c 24 20	 lea	 rcx, QWORD PTR x$[rsp]
  0004d	48 8b f8	 mov	 rdi, rax
  00050	48 8b f1	 mov	 rsi, rcx
  00053	b9 10 00 00 00	 mov	 ecx, 16
  00058	f3 a4		 rep movsb
  0005a	48 8d 54 24 50	 lea	 rdx, QWORD PTR $T21226[rsp]
  0005f	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T21225[rsp]
  00064	ff 94 24 a8 00
	00 00		 call	 QWORD PTR func$[rsp]
  0006b	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T21228[rsp]
  00070	48 8b f9	 mov	 rdi, rcx
  00073	48 8b f0	 mov	 rsi, rax
  00076	b9 10 00 00 00	 mov	 ecx, 16
  0007b	f3 a4		 rep movsb
  0007d	48 8d 44 24 30	 lea	 rax, QWORD PTR r$[rsp]
  00082	48 8d 4c 24 70	 lea	 rcx, QWORD PTR $T21228[rsp]
  00087	48 8b f8	 mov	 rdi, rax
  0008a	48 8b f1	 mov	 rsi, rcx
  0008d	b9 10 00 00 00	 mov	 ecx, 16
  00092	f3 a4		 rep movsb

; 881  :     PyFPE_END_PROTECT(r);
; 882  :     if (errno == EDOM) {

  00094	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  0009a	83 38 21	 cmp	 DWORD PTR [rax], 33	; 00000021H
  0009d	75 19		 jne	 SHORT $LN4@math_1

; 883  :         PyErr_SetString(PyExc_ValueError, "math domain error");

  0009f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BC@LMCJDMHE@math?5domain?5error?$AA@
  000a6	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ValueError
  000ad	e8 00 00 00 00	 call	 PyErr_SetString

; 884  :         return NULL;

  000b2	33 c0		 xor	 eax, eax
  000b4	eb 47		 jmp	 SHORT $LN6@math_1
  000b6	eb 45		 jmp	 SHORT $LN3@math_1
$LN4@math_1:

; 885  :     }
; 886  :     else if (errno == ERANGE) {

  000b8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  000be	83 38 22	 cmp	 DWORD PTR [rax], 34	; 00000022H
  000c1	75 19		 jne	 SHORT $LN2@math_1

; 887  :         PyErr_SetString(PyExc_OverflowError, "math range error");

  000c3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BB@PNJGEICL@math?5range?5error?$AA@
  000ca	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_OverflowError
  000d1	e8 00 00 00 00	 call	 PyErr_SetString

; 888  :         return NULL;

  000d6	33 c0		 xor	 eax, eax
  000d8	eb 23		 jmp	 SHORT $LN6@math_1

; 889  :     }
; 890  :     else {

  000da	eb 21		 jmp	 SHORT $LN1@math_1
$LN2@math_1:

; 891  :         return PyComplex_FromCComplex(r);

  000dc	48 8d 44 24 60	 lea	 rax, QWORD PTR $T21227[rsp]
  000e1	48 8d 4c 24 30	 lea	 rcx, QWORD PTR r$[rsp]
  000e6	48 8b f8	 mov	 rdi, rax
  000e9	48 8b f1	 mov	 rsi, rcx
  000ec	b9 10 00 00 00	 mov	 ecx, 16
  000f1	f3 a4		 rep movsb
  000f3	48 8d 4c 24 60	 lea	 rcx, QWORD PTR $T21227[rsp]
  000f8	e8 00 00 00 00	 call	 PyComplex_FromCComplex
$LN1@math_1:
$LN3@math_1:
$LN6@math_1:

; 892  :     }
; 893  : }

  000fd	48 81 c4 88 00
	00 00		 add	 rsp, 136		; 00000088H
  00104	5f		 pop	 rdi
  00105	5e		 pop	 rsi
  00106	c3		 ret	 0
math_1	ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$cmath_acosh DD imagerel cmath_acosh
	DD	imagerel cmath_acosh+36
	DD	imagerel $unwind$cmath_acosh
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$cmath_acosh DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT cmath_acosh
_TEXT	SEGMENT
self$ = 48
args$ = 56
cmath_acosh PROC					; COMDAT

; 901  : FUNC1(cmath_acosh, c_acosh)

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:c_acosh
  00015	48 8b 4c 24 38	 mov	 rcx, QWORD PTR args$[rsp]
  0001a	e8 00 00 00 00	 call	 math_1
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	c3		 ret	 0
cmath_acosh ENDP
_TEXT	ENDS
PUBLIC	$T21246
PUBLIC	$T21245
PUBLIC	$T21247
PUBLIC	$T21244
_BSS	SEGMENT
acosh_special_values DB 0310H DUP (?)
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$c_acosh DD imagerel c_acosh
	DD	imagerel c_acosh+768
	DD	imagerel $unwind$c_acosh
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$c_acosh DD 041301H
	DD	0190113H
	DD	0600b700cH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT c_acosh
_TEXT	SEGMENT
s2$ = 32
s1$ = 48
r$ = 64
$T21242 = 80
$T21243 = 96
$T21244 = 112
$T21245 = 128
$T21246 = 144
$T21247 = 160
tv76 = 176
tv95 = 184
$T21241 = 224
z$ = 232
c_acosh	PROC						; COMDAT

; 169  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H

; 170  :     Py_complex s1, s2, r;
; 171  : 
; 172  :     SPECIAL_VALUE(z, acosh_special_values);

  00013	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0001b	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0001f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00025	85 c0		 test	 eax, eax
  00027	74 17		 je	 SHORT $LN4@c_acosh
  00029	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00031	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00036	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  0003c	85 c0		 test	 eax, eax
  0003e	75 78		 jne	 SHORT $LN5@c_acosh
$LN4@c_acosh:
  00040	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  00046	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
  0004c	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00054	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00058	e8 00 00 00 00	 call	 special_type
  0005d	48 98		 cdqe
  0005f	48 6b c0 70	 imul	 rax, 112		; 00000070H
  00063	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:acosh_special_values
  0006a	48 03 c8	 add	 rcx, rax
  0006d	48 8b c1	 mov	 rax, rcx
  00070	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR tv76[rsp], rax
  00078	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR z$[rsp]
  00080	f2 0f 10 41 08	 movsdx	 xmm0, QWORD PTR [rcx+8]
  00085	e8 00 00 00 00	 call	 special_type
  0008a	48 98		 cdqe
  0008c	48 6b c0 10	 imul	 rax, 16
  00090	48 8b bc 24 e0
	00 00 00	 mov	 rdi, QWORD PTR $T21241[rsp]
  00098	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR tv76[rsp]
  000a0	48 8d 34 01	 lea	 rsi, QWORD PTR [rcx+rax]
  000a4	b9 10 00 00 00	 mov	 ecx, 16
  000a9	f3 a4		 rep movsb
  000ab	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR $T21241[rsp]
  000b3	e9 3e 02 00 00	 jmp	 $LN6@c_acosh
$LN5@c_acosh:

; 173  : 
; 174  :     if (fabs(z.real) > CM_LARGE_DOUBLE || fabs(z.imag) > CM_LARGE_DOUBLE) {

  000b8	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  000c0	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  000c4	e8 00 00 00 00	 call	 fabs
  000c9	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@7fcfffffffffffff
  000d1	77 20		 ja	 SHORT $LN2@c_acosh
  000d3	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  000db	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  000e0	e8 00 00 00 00	 call	 fabs
  000e5	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@7fcfffffffffffff
  000ed	0f 86 80 00 00
	00		 jbe	 $LN3@c_acosh
$LN2@c_acosh:

; 175  :         /* avoid unnecessary overflow for large arguments */
; 176  :         r.real = log(hypot(z.real/2., z.imag/2.)) + M_LN2*2.;

  000f3	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  000fb	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00100	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  00108	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00110	f2 0f 10 08	 movsdx	 xmm1, QWORD PTR [rax]
  00114	f2 0f 5e 0d 00
	00 00 00	 divsd	 xmm1, QWORD PTR __real@4000000000000000
  0011c	f2 0f 11 8c 24
	b8 00 00 00	 movsdx	 QWORD PTR tv95[rsp], xmm1
  00125	66 0f 28 c8	 movapd	 xmm1, xmm0
  00129	f2 0f 10 84 24
	b8 00 00 00	 movsdx	 xmm0, QWORD PTR tv95[rsp]
  00132	e8 00 00 00 00	 call	 hypot
  00137	e8 00 00 00 00	 call	 log
  0013c	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff62e42fefa39ef
  00144	f2 0f 11 44 24
	40		 movsdx	 QWORD PTR r$[rsp], xmm0

; 177  :         r.imag = atan2(z.imag, z.real);

  0014a	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00152	f2 0f 10 08	 movsdx	 xmm1, QWORD PTR [rax]
  00156	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0015e	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00163	e8 00 00 00 00	 call	 atan2
  00168	f2 0f 11 44 24
	48		 movsdx	 QWORD PTR r$[rsp+8], xmm0

; 178  :     } else {

  0016e	e9 58 01 00 00	 jmp	 $LN1@c_acosh
$LN3@c_acosh:

; 179  :         s1.real = z.real - 1.;

  00173	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0017b	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0017f	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00187	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR s1$[rsp], xmm0

; 180  :         s1.imag = z.imag;

  0018d	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00195	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0019a	f2 0f 11 44 24
	38		 movsdx	 QWORD PTR s1$[rsp+8], xmm0

; 181  :         s1 = c_sqrt(s1);

  001a0	48 8d 44 24 70	 lea	 rax, QWORD PTR $T21244[rsp]
  001a5	48 8d 4c 24 30	 lea	 rcx, QWORD PTR s1$[rsp]
  001aa	48 8b f8	 mov	 rdi, rax
  001ad	48 8b f1	 mov	 rsi, rcx
  001b0	b9 10 00 00 00	 mov	 ecx, 16
  001b5	f3 a4		 rep movsb
  001b7	48 8d 54 24 70	 lea	 rdx, QWORD PTR $T21244[rsp]
  001bc	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T21242[rsp]
  001c1	e8 00 00 00 00	 call	 c_sqrt
  001c6	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR $T21247[rsp]
  001ce	48 8b f9	 mov	 rdi, rcx
  001d1	48 8b f0	 mov	 rsi, rax
  001d4	b9 10 00 00 00	 mov	 ecx, 16
  001d9	f3 a4		 rep movsb
  001db	48 8d 44 24 30	 lea	 rax, QWORD PTR s1$[rsp]
  001e0	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR $T21247[rsp]
  001e8	48 8b f8	 mov	 rdi, rax
  001eb	48 8b f1	 mov	 rsi, rcx
  001ee	b9 10 00 00 00	 mov	 ecx, 16
  001f3	f3 a4		 rep movsb

; 182  :         s2.real = z.real + 1.;

  001f5	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  001fd	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00201	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00209	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR s2$[rsp], xmm0

; 183  :         s2.imag = z.imag;

  0020f	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00217	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0021c	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR s2$[rsp+8], xmm0

; 184  :         s2 = c_sqrt(s2);

  00222	48 8d 84 24 80
	00 00 00	 lea	 rax, QWORD PTR $T21245[rsp]
  0022a	48 8d 4c 24 20	 lea	 rcx, QWORD PTR s2$[rsp]
  0022f	48 8b f8	 mov	 rdi, rax
  00232	48 8b f1	 mov	 rsi, rcx
  00235	b9 10 00 00 00	 mov	 ecx, 16
  0023a	f3 a4		 rep movsb
  0023c	48 8d 94 24 80
	00 00 00	 lea	 rdx, QWORD PTR $T21245[rsp]
  00244	48 8d 4c 24 60	 lea	 rcx, QWORD PTR $T21243[rsp]
  00249	e8 00 00 00 00	 call	 c_sqrt
  0024e	48 8d 8c 24 90
	00 00 00	 lea	 rcx, QWORD PTR $T21246[rsp]
  00256	48 8b f9	 mov	 rdi, rcx
  00259	48 8b f0	 mov	 rsi, rax
  0025c	b9 10 00 00 00	 mov	 ecx, 16
  00261	f3 a4		 rep movsb
  00263	48 8d 44 24 20	 lea	 rax, QWORD PTR s2$[rsp]
  00268	48 8d 8c 24 90
	00 00 00	 lea	 rcx, QWORD PTR $T21246[rsp]
  00270	48 8b f8	 mov	 rdi, rax
  00273	48 8b f1	 mov	 rsi, rcx
  00276	b9 10 00 00 00	 mov	 ecx, 16
  0027b	f3 a4		 rep movsb

; 185  :         r.real = m_asinh(s1.real*s2.real + s1.imag*s2.imag);

  0027d	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR s1$[rsp]
  00283	f2 0f 59 44 24
	20		 mulsd	 xmm0, QWORD PTR s2$[rsp]
  00289	f2 0f 10 4c 24
	38		 movsdx	 xmm1, QWORD PTR s1$[rsp+8]
  0028f	f2 0f 59 4c 24
	28		 mulsd	 xmm1, QWORD PTR s2$[rsp+8]
  00295	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00299	e8 00 00 00 00	 call	 _Py_asinh
  0029e	f2 0f 11 44 24
	40		 movsdx	 QWORD PTR r$[rsp], xmm0

; 186  :         r.imag = 2.*atan2(s1.imag, s2.real);

  002a4	f2 0f 10 4c 24
	20		 movsdx	 xmm1, QWORD PTR s2$[rsp]
  002aa	f2 0f 10 44 24
	38		 movsdx	 xmm0, QWORD PTR s1$[rsp+8]
  002b0	e8 00 00 00 00	 call	 atan2
  002b5	f2 0f 10 0d 00
	00 00 00	 movsdx	 xmm1, QWORD PTR __real@4000000000000000
  002bd	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  002c1	66 0f 28 c1	 movapd	 xmm0, xmm1
  002c5	f2 0f 11 44 24
	48		 movsdx	 QWORD PTR r$[rsp+8], xmm0
$LN1@c_acosh:

; 187  :     }
; 188  :     errno = 0;

  002cb	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  002d1	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 189  :     return r;

  002d7	48 8d 44 24 40	 lea	 rax, QWORD PTR r$[rsp]
  002dc	48 8b bc 24 e0
	00 00 00	 mov	 rdi, QWORD PTR $T21241[rsp]
  002e4	48 8b f0	 mov	 rsi, rax
  002e7	b9 10 00 00 00	 mov	 ecx, 16
  002ec	f3 a4		 rep movsb
  002ee	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR $T21241[rsp]
$LN6@c_acosh:

; 190  : }

  002f6	48 81 c4 c8 00
	00 00		 add	 rsp, 200		; 000000c8H
  002fd	5f		 pop	 rdi
  002fe	5e		 pop	 rsi
  002ff	c3		 ret	 0
c_acosh	ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$cmath_asin DD imagerel cmath_asin
	DD	imagerel cmath_asin+36
	DD	imagerel $unwind$cmath_asin
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$cmath_asin DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT cmath_asin
_TEXT	SEGMENT
self$ = 48
args$ = 56
cmath_asin PROC						; COMDAT

; 902  : FUNC1(cmath_asin, c_asin)

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:c_asin
  00015	48 8b 4c 24 38	 mov	 rcx, QWORD PTR args$[rsp]
  0001a	e8 00 00 00 00	 call	 math_1
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	c3		 ret	 0
cmath_asin ENDP
_TEXT	ENDS
PUBLIC	$T21263
PUBLIC	$T21262
;	COMDAT pdata
pdata	SEGMENT
$pdata$c_asin DD imagerel c_asin
	DD	imagerel c_asin+210
	DD	imagerel $unwind$c_asin
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$c_asin DD 031001H
	DD	0700ce210H
	DD	0600bH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT c_asin
_TEXT	SEGMENT
s$ = 32
r$ = 48
$T21261 = 64
$T21262 = 80
$T21263 = 96
$T21260 = 144
z$ = 152
c_asin	PROC						; COMDAT

; 200  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 83 ec 78	 sub	 rsp, 120		; 00000078H

; 201  :     /* asin(z) = -i asinh(iz) */
; 202  :     Py_complex s, r;
; 203  :     s.real = -z.imag;

  00010	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00018	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0001d	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  00025	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR s$[rsp], xmm0

; 204  :     s.imag = z.real;

  0002b	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00033	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00037	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR s$[rsp+8], xmm0

; 205  :     s = c_asinh(s);

  0003d	48 8d 44 24 50	 lea	 rax, QWORD PTR $T21262[rsp]
  00042	48 8d 4c 24 20	 lea	 rcx, QWORD PTR s$[rsp]
  00047	48 8b f8	 mov	 rdi, rax
  0004a	48 8b f1	 mov	 rsi, rcx
  0004d	b9 10 00 00 00	 mov	 ecx, 16
  00052	f3 a4		 rep movsb
  00054	48 8d 54 24 50	 lea	 rdx, QWORD PTR $T21262[rsp]
  00059	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T21261[rsp]
  0005e	e8 00 00 00 00	 call	 c_asinh
  00063	48 8d 4c 24 60	 lea	 rcx, QWORD PTR $T21263[rsp]
  00068	48 8b f9	 mov	 rdi, rcx
  0006b	48 8b f0	 mov	 rsi, rax
  0006e	b9 10 00 00 00	 mov	 ecx, 16
  00073	f3 a4		 rep movsb
  00075	48 8d 44 24 20	 lea	 rax, QWORD PTR s$[rsp]
  0007a	48 8d 4c 24 60	 lea	 rcx, QWORD PTR $T21263[rsp]
  0007f	48 8b f8	 mov	 rdi, rax
  00082	48 8b f1	 mov	 rsi, rcx
  00085	b9 10 00 00 00	 mov	 ecx, 16
  0008a	f3 a4		 rep movsb

; 206  :     r.real = s.imag;

  0008c	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR s$[rsp+8]
  00092	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR r$[rsp], xmm0

; 207  :     r.imag = -s.real;

  00098	f2 0f 10 44 24
	20		 movsdx	 xmm0, QWORD PTR s$[rsp]
  0009e	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  000a6	f2 0f 11 44 24
	38		 movsdx	 QWORD PTR r$[rsp+8], xmm0

; 208  :     return r;

  000ac	48 8d 44 24 30	 lea	 rax, QWORD PTR r$[rsp]
  000b1	48 8b bc 24 90
	00 00 00	 mov	 rdi, QWORD PTR $T21260[rsp]
  000b9	48 8b f0	 mov	 rsi, rax
  000bc	b9 10 00 00 00	 mov	 ecx, 16
  000c1	f3 a4		 rep movsb
  000c3	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR $T21260[rsp]

; 209  : }

  000cb	48 83 c4 78	 add	 rsp, 120		; 00000078H
  000cf	5f		 pop	 rdi
  000d0	5e		 pop	 rsi
  000d1	c3		 ret	 0
c_asin	ENDP
_TEXT	ENDS
PUBLIC	$T21275
PUBLIC	$T21274
PUBLIC	$T21276
PUBLIC	$T21273
_BSS	SEGMENT
asinh_special_values DB 0310H DUP (?)
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$c_asinh DD imagerel c_asinh
	DD	imagerel c_asinh+966
	DD	imagerel $unwind$c_asinh
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$c_asinh DD 041301H
	DD	01b0113H
	DD	0600b700cH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT c_asinh
_TEXT	SEGMENT
s2$ = 32
s1$ = 48
r$ = 64
$T21271 = 80
$T21272 = 96
$T21273 = 112
$T21274 = 128
$T21275 = 144
$T21276 = 160
tv76 = 176
tv131 = 184
tv137 = 192
$T21270 = 240
z$ = 248
c_asinh	PROC						; COMDAT

; 221  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 81 ec d8 00
	00 00		 sub	 rsp, 216		; 000000d8H

; 222  :     Py_complex s1, s2, r;
; 223  : 
; 224  :     SPECIAL_VALUE(z, asinh_special_values);

  00013	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0001b	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0001f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00025	85 c0		 test	 eax, eax
  00027	74 17		 je	 SHORT $LN6@c_asinh
  00029	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00031	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00036	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  0003c	85 c0		 test	 eax, eax
  0003e	75 78		 jne	 SHORT $LN7@c_asinh
$LN6@c_asinh:
  00040	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  00046	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
  0004c	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00054	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00058	e8 00 00 00 00	 call	 special_type
  0005d	48 98		 cdqe
  0005f	48 6b c0 70	 imul	 rax, 112		; 00000070H
  00063	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:asinh_special_values
  0006a	48 03 c8	 add	 rcx, rax
  0006d	48 8b c1	 mov	 rax, rcx
  00070	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR tv76[rsp], rax
  00078	48 8b 8c 24 f8
	00 00 00	 mov	 rcx, QWORD PTR z$[rsp]
  00080	f2 0f 10 41 08	 movsdx	 xmm0, QWORD PTR [rcx+8]
  00085	e8 00 00 00 00	 call	 special_type
  0008a	48 98		 cdqe
  0008c	48 6b c0 10	 imul	 rax, 16
  00090	48 8b bc 24 f0
	00 00 00	 mov	 rdi, QWORD PTR $T21270[rsp]
  00098	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR tv76[rsp]
  000a0	48 8d 34 01	 lea	 rsi, QWORD PTR [rcx+rax]
  000a4	b9 10 00 00 00	 mov	 ecx, 16
  000a9	f3 a4		 rep movsb
  000ab	48 8b 84 24 f0
	00 00 00	 mov	 rax, QWORD PTR $T21270[rsp]
  000b3	e9 04 03 00 00	 jmp	 $LN8@c_asinh
$LN7@c_asinh:

; 225  : 
; 226  :     if (fabs(z.real) > CM_LARGE_DOUBLE || fabs(z.imag) > CM_LARGE_DOUBLE) {

  000b8	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  000c0	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  000c4	e8 00 00 00 00	 call	 fabs
  000c9	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@7fcfffffffffffff
  000d1	77 20		 ja	 SHORT $LN4@c_asinh
  000d3	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  000db	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  000e0	e8 00 00 00 00	 call	 fabs
  000e5	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@7fcfffffffffffff
  000ed	0f 86 2d 01 00
	00		 jbe	 $LN5@c_asinh
$LN4@c_asinh:

; 227  :         if (z.imag >= 0.) {

  000f3	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  000fb	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00100	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00108	72 6b		 jb	 SHORT $LN3@c_asinh

; 228  :             r.real = copysign(log(hypot(z.real/2., z.imag/2.)) +
; 229  :                               M_LN2*2., z.real);

  0010a	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00112	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00117	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  0011f	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00127	f2 0f 10 08	 movsdx	 xmm1, QWORD PTR [rax]
  0012b	f2 0f 5e 0d 00
	00 00 00	 divsd	 xmm1, QWORD PTR __real@4000000000000000
  00133	f2 0f 11 8c 24
	b8 00 00 00	 movsdx	 QWORD PTR tv131[rsp], xmm1
  0013c	66 0f 28 c8	 movapd	 xmm1, xmm0
  00140	f2 0f 10 84 24
	b8 00 00 00	 movsdx	 xmm0, QWORD PTR tv131[rsp]
  00149	e8 00 00 00 00	 call	 hypot
  0014e	e8 00 00 00 00	 call	 log
  00153	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff62e42fefa39ef
  0015b	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00163	f2 0f 10 08	 movsdx	 xmm1, QWORD PTR [rax]
  00167	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  0016d	f2 0f 11 44 24
	40		 movsdx	 QWORD PTR r$[rsp], xmm0

; 230  :         } else {

  00173	eb 79		 jmp	 SHORT $LN2@c_asinh
$LN3@c_asinh:

; 231  :             r.real = -copysign(log(hypot(z.real/2., z.imag/2.)) +
; 232  :                                M_LN2*2., -z.real);

  00175	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0017d	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00181	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  00189	f2 0f 11 84 24
	c0 00 00 00	 movsdx	 QWORD PTR tv137[rsp], xmm0
  00192	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0019a	f2 0f 10 48 08	 movsdx	 xmm1, QWORD PTR [rax+8]
  0019f	f2 0f 5e 0d 00
	00 00 00	 divsd	 xmm1, QWORD PTR __real@4000000000000000
  001a7	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  001af	f2 0f 10 10	 movsdx	 xmm2, QWORD PTR [rax]
  001b3	f2 0f 5e 15 00
	00 00 00	 divsd	 xmm2, QWORD PTR __real@4000000000000000
  001bb	66 0f 28 c2	 movapd	 xmm0, xmm2
  001bf	e8 00 00 00 00	 call	 hypot
  001c4	e8 00 00 00 00	 call	 log
  001c9	f2 0f 58 05 00
	00 00 00	 addsd	 xmm0, QWORD PTR __real@3ff62e42fefa39ef
  001d1	f2 0f 10 8c 24
	c0 00 00 00	 movsdx	 xmm1, QWORD PTR tv137[rsp]
  001da	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  001e0	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  001e8	f2 0f 11 44 24
	40		 movsdx	 QWORD PTR r$[rsp], xmm0
$LN2@c_asinh:

; 233  :         }
; 234  :         r.imag = atan2(z.imag, fabs(z.real));

  001ee	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  001f6	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  001fa	e8 00 00 00 00	 call	 fabs
  001ff	66 0f 28 c8	 movapd	 xmm1, xmm0
  00203	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0020b	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00210	e8 00 00 00 00	 call	 atan2
  00215	f2 0f 11 44 24
	48		 movsdx	 QWORD PTR r$[rsp+8], xmm0

; 235  :     } else {

  0021b	e9 71 01 00 00	 jmp	 $LN1@c_asinh
$LN5@c_asinh:

; 236  :         s1.real = 1.+z.imag;

  00220	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00228	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff0000000000000
  00230	f2 0f 58 40 08	 addsd	 xmm0, QWORD PTR [rax+8]
  00235	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR s1$[rsp], xmm0

; 237  :         s1.imag = -z.real;

  0023b	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00243	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00247	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  0024f	f2 0f 11 44 24
	38		 movsdx	 QWORD PTR s1$[rsp+8], xmm0

; 238  :         s1 = c_sqrt(s1);

  00255	48 8d 44 24 70	 lea	 rax, QWORD PTR $T21273[rsp]
  0025a	48 8d 4c 24 30	 lea	 rcx, QWORD PTR s1$[rsp]
  0025f	48 8b f8	 mov	 rdi, rax
  00262	48 8b f1	 mov	 rsi, rcx
  00265	b9 10 00 00 00	 mov	 ecx, 16
  0026a	f3 a4		 rep movsb
  0026c	48 8d 54 24 70	 lea	 rdx, QWORD PTR $T21273[rsp]
  00271	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T21271[rsp]
  00276	e8 00 00 00 00	 call	 c_sqrt
  0027b	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR $T21276[rsp]
  00283	48 8b f9	 mov	 rdi, rcx
  00286	48 8b f0	 mov	 rsi, rax
  00289	b9 10 00 00 00	 mov	 ecx, 16
  0028e	f3 a4		 rep movsb
  00290	48 8d 44 24 30	 lea	 rax, QWORD PTR s1$[rsp]
  00295	48 8d 8c 24 a0
	00 00 00	 lea	 rcx, QWORD PTR $T21276[rsp]
  0029d	48 8b f8	 mov	 rdi, rax
  002a0	48 8b f1	 mov	 rsi, rcx
  002a3	b9 10 00 00 00	 mov	 ecx, 16
  002a8	f3 a4		 rep movsb

; 239  :         s2.real = 1.-z.imag;

  002aa	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  002b2	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff0000000000000
  002ba	f2 0f 5c 40 08	 subsd	 xmm0, QWORD PTR [rax+8]
  002bf	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR s2$[rsp], xmm0

; 240  :         s2.imag = z.real;

  002c5	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  002cd	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  002d1	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR s2$[rsp+8], xmm0

; 241  :         s2 = c_sqrt(s2);

  002d7	48 8d 84 24 80
	00 00 00	 lea	 rax, QWORD PTR $T21274[rsp]
  002df	48 8d 4c 24 20	 lea	 rcx, QWORD PTR s2$[rsp]
  002e4	48 8b f8	 mov	 rdi, rax
  002e7	48 8b f1	 mov	 rsi, rcx
  002ea	b9 10 00 00 00	 mov	 ecx, 16
  002ef	f3 a4		 rep movsb
  002f1	48 8d 94 24 80
	00 00 00	 lea	 rdx, QWORD PTR $T21274[rsp]
  002f9	48 8d 4c 24 60	 lea	 rcx, QWORD PTR $T21272[rsp]
  002fe	e8 00 00 00 00	 call	 c_sqrt
  00303	48 8d 8c 24 90
	00 00 00	 lea	 rcx, QWORD PTR $T21275[rsp]
  0030b	48 8b f9	 mov	 rdi, rcx
  0030e	48 8b f0	 mov	 rsi, rax
  00311	b9 10 00 00 00	 mov	 ecx, 16
  00316	f3 a4		 rep movsb
  00318	48 8d 44 24 20	 lea	 rax, QWORD PTR s2$[rsp]
  0031d	48 8d 8c 24 90
	00 00 00	 lea	 rcx, QWORD PTR $T21275[rsp]
  00325	48 8b f8	 mov	 rdi, rax
  00328	48 8b f1	 mov	 rsi, rcx
  0032b	b9 10 00 00 00	 mov	 ecx, 16
  00330	f3 a4		 rep movsb

; 242  :         r.real = m_asinh(s1.real*s2.imag-s2.real*s1.imag);

  00332	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR s1$[rsp]
  00338	f2 0f 59 44 24
	28		 mulsd	 xmm0, QWORD PTR s2$[rsp+8]
  0033e	f2 0f 10 4c 24
	20		 movsdx	 xmm1, QWORD PTR s2$[rsp]
  00344	f2 0f 59 4c 24
	38		 mulsd	 xmm1, QWORD PTR s1$[rsp+8]
  0034a	f2 0f 5c c1	 subsd	 xmm0, xmm1
  0034e	e8 00 00 00 00	 call	 _Py_asinh
  00353	f2 0f 11 44 24
	40		 movsdx	 QWORD PTR r$[rsp], xmm0

; 243  :         r.imag = atan2(z.imag, s1.real*s2.real-s1.imag*s2.imag);

  00359	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR s1$[rsp]
  0035f	f2 0f 59 44 24
	20		 mulsd	 xmm0, QWORD PTR s2$[rsp]
  00365	f2 0f 10 4c 24
	38		 movsdx	 xmm1, QWORD PTR s1$[rsp+8]
  0036b	f2 0f 59 4c 24
	28		 mulsd	 xmm1, QWORD PTR s2$[rsp+8]
  00371	f2 0f 5c c1	 subsd	 xmm0, xmm1
  00375	66 0f 28 c8	 movapd	 xmm1, xmm0
  00379	48 8b 84 24 f8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00381	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00386	e8 00 00 00 00	 call	 atan2
  0038b	f2 0f 11 44 24
	48		 movsdx	 QWORD PTR r$[rsp+8], xmm0
$LN1@c_asinh:

; 244  :     }
; 245  :     errno = 0;

  00391	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  00397	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 246  :     return r;

  0039d	48 8d 44 24 40	 lea	 rax, QWORD PTR r$[rsp]
  003a2	48 8b bc 24 f0
	00 00 00	 mov	 rdi, QWORD PTR $T21270[rsp]
  003aa	48 8b f0	 mov	 rsi, rax
  003ad	b9 10 00 00 00	 mov	 ecx, 16
  003b2	f3 a4		 rep movsb
  003b4	48 8b 84 24 f0
	00 00 00	 mov	 rax, QWORD PTR $T21270[rsp]
$LN8@c_asinh:

; 247  : }

  003bc	48 81 c4 d8 00
	00 00		 add	 rsp, 216		; 000000d8H
  003c3	5f		 pop	 rdi
  003c4	5e		 pop	 rsi
  003c5	c3		 ret	 0
c_asinh	ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$cmath_asinh DD imagerel cmath_asinh
	DD	imagerel cmath_asinh+36
	DD	imagerel $unwind$cmath_asinh
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$cmath_asinh DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT cmath_asinh
_TEXT	SEGMENT
self$ = 48
args$ = 56
cmath_asinh PROC					; COMDAT

; 903  : FUNC1(cmath_asinh, c_asinh)

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:c_asinh
  00015	48 8b 4c 24 38	 mov	 rcx, QWORD PTR args$[rsp]
  0001a	e8 00 00 00 00	 call	 math_1
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	c3		 ret	 0
cmath_asinh ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$cmath_atan DD imagerel cmath_atan
	DD	imagerel cmath_atan+36
	DD	imagerel $unwind$cmath_atan
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$cmath_atan DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT cmath_atan
_TEXT	SEGMENT
self$ = 48
args$ = 56
cmath_atan PROC						; COMDAT

; 904  : FUNC1(cmath_atan, c_atan)

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:c_atan
  00015	48 8b 4c 24 38	 mov	 rcx, QWORD PTR args$[rsp]
  0001a	e8 00 00 00 00	 call	 math_1
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	c3		 ret	 0
cmath_atan ENDP
_TEXT	ENDS
PUBLIC	$T21298
PUBLIC	$T21297
;	COMDAT pdata
pdata	SEGMENT
$pdata$c_atan DD imagerel c_atan
	DD	imagerel c_atan+210
	DD	imagerel $unwind$c_atan
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$c_atan DD 031001H
	DD	0700ce210H
	DD	0600bH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT c_atan
_TEXT	SEGMENT
s$ = 32
r$ = 48
$T21296 = 64
$T21297 = 80
$T21298 = 96
$T21295 = 144
z$ = 152
c_atan	PROC						; COMDAT

; 257  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 83 ec 78	 sub	 rsp, 120		; 00000078H

; 258  :     /* atan(z) = -i atanh(iz) */
; 259  :     Py_complex s, r;
; 260  :     s.real = -z.imag;

  00010	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00018	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0001d	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  00025	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR s$[rsp], xmm0

; 261  :     s.imag = z.real;

  0002b	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00033	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00037	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR s$[rsp+8], xmm0

; 262  :     s = c_atanh(s);

  0003d	48 8d 44 24 50	 lea	 rax, QWORD PTR $T21297[rsp]
  00042	48 8d 4c 24 20	 lea	 rcx, QWORD PTR s$[rsp]
  00047	48 8b f8	 mov	 rdi, rax
  0004a	48 8b f1	 mov	 rsi, rcx
  0004d	b9 10 00 00 00	 mov	 ecx, 16
  00052	f3 a4		 rep movsb
  00054	48 8d 54 24 50	 lea	 rdx, QWORD PTR $T21297[rsp]
  00059	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T21296[rsp]
  0005e	e8 00 00 00 00	 call	 c_atanh
  00063	48 8d 4c 24 60	 lea	 rcx, QWORD PTR $T21298[rsp]
  00068	48 8b f9	 mov	 rdi, rcx
  0006b	48 8b f0	 mov	 rsi, rax
  0006e	b9 10 00 00 00	 mov	 ecx, 16
  00073	f3 a4		 rep movsb
  00075	48 8d 44 24 20	 lea	 rax, QWORD PTR s$[rsp]
  0007a	48 8d 4c 24 60	 lea	 rcx, QWORD PTR $T21298[rsp]
  0007f	48 8b f8	 mov	 rdi, rax
  00082	48 8b f1	 mov	 rsi, rcx
  00085	b9 10 00 00 00	 mov	 ecx, 16
  0008a	f3 a4		 rep movsb

; 263  :     r.real = s.imag;

  0008c	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR s$[rsp+8]
  00092	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR r$[rsp], xmm0

; 264  :     r.imag = -s.real;

  00098	f2 0f 10 44 24
	20		 movsdx	 xmm0, QWORD PTR s$[rsp]
  0009e	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  000a6	f2 0f 11 44 24
	38		 movsdx	 QWORD PTR r$[rsp+8], xmm0

; 265  :     return r;

  000ac	48 8d 44 24 30	 lea	 rax, QWORD PTR r$[rsp]
  000b1	48 8b bc 24 90
	00 00 00	 mov	 rdi, QWORD PTR $T21295[rsp]
  000b9	48 8b f0	 mov	 rsi, rax
  000bc	b9 10 00 00 00	 mov	 ecx, 16
  000c1	f3 a4		 rep movsb
  000c3	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR $T21295[rsp]

; 266  : }

  000cb	48 83 c4 78	 add	 rsp, 120		; 00000078H
  000cf	5f		 pop	 rdi
  000d0	5e		 pop	 rsi
  000d1	c3		 ret	 0
c_atan	ENDP
_TEXT	ENDS
PUBLIC	__real@c000000000000000
PUBLIC	__real@3ff921fb54442d18
PUBLIC	__real@4010000000000000
PUBLIC	$T21311
PUBLIC	$T21310
PUBLIC	$T21309
EXTRN	_Py_c_neg:PROC
_BSS	SEGMENT
atanh_special_values DB 0310H DUP (?)
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$c_atanh DD imagerel c_atanh
	DD	imagerel c_atanh+1194
	DD	imagerel $unwind$c_atanh
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$c_atanh DD 041301H
	DD	0190113H
	DD	0600b700cH
xdata	ENDS
;	COMDAT __real@c000000000000000
CONST	SEGMENT
__real@c000000000000000 DQ 0c000000000000000r	; -2
CONST	ENDS
;	COMDAT __real@3ff921fb54442d18
CONST	SEGMENT
__real@3ff921fb54442d18 DQ 03ff921fb54442d18r	; 1.5708
CONST	ENDS
;	COMDAT __real@4010000000000000
CONST	SEGMENT
__real@4010000000000000 DQ 04010000000000000r	; 4
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT c_atanh
_TEXT	SEGMENT
h$ = 32
ay$ = 40
r$ = 48
$T21306 = 64
$T21307 = 80
$T21308 = 96
$T21309 = 112
$T21310 = 128
$T21311 = 144
tv76 = 160
tv140 = 168
tv161 = 176
tv204 = 184
$T21305 = 224
z$ = 232
c_atanh	PROC						; COMDAT

; 308  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H

; 309  :     Py_complex r;
; 310  :     double ay, h;
; 311  : 
; 312  :     SPECIAL_VALUE(z, atanh_special_values);

  00013	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0001b	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0001f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00025	85 c0		 test	 eax, eax
  00027	74 17		 je	 SHORT $LN9@c_atanh
  00029	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00031	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00036	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  0003c	85 c0		 test	 eax, eax
  0003e	75 78		 jne	 SHORT $LN10@c_atanh
$LN9@c_atanh:
  00040	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  00046	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
  0004c	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00054	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00058	e8 00 00 00 00	 call	 special_type
  0005d	48 98		 cdqe
  0005f	48 6b c0 70	 imul	 rax, 112		; 00000070H
  00063	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:atanh_special_values
  0006a	48 03 c8	 add	 rcx, rax
  0006d	48 8b c1	 mov	 rax, rcx
  00070	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR tv76[rsp], rax
  00078	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR z$[rsp]
  00080	f2 0f 10 41 08	 movsdx	 xmm0, QWORD PTR [rcx+8]
  00085	e8 00 00 00 00	 call	 special_type
  0008a	48 98		 cdqe
  0008c	48 6b c0 10	 imul	 rax, 16
  00090	48 8b bc 24 e0
	00 00 00	 mov	 rdi, QWORD PTR $T21305[rsp]
  00098	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR tv76[rsp]
  000a0	48 8d 34 01	 lea	 rsi, QWORD PTR [rcx+rax]
  000a4	b9 10 00 00 00	 mov	 ecx, 16
  000a9	f3 a4		 rep movsb
  000ab	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR $T21305[rsp]
  000b3	e9 e8 03 00 00	 jmp	 $LN11@c_atanh
$LN10@c_atanh:

; 313  : 
; 314  :     /* Reduce to case where z.real >= 0., using atanh(z) = -atanh(-z). */
; 315  :     if (z.real < 0.) {

  000b8	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  000c0	66 0f 57 c0	 xorpd	 xmm0, xmm0
  000c4	66 0f 2f 00	 comisd	 xmm0, QWORD PTR [rax]
  000c8	0f 86 93 00 00
	00		 jbe	 $LN8@c_atanh

; 316  :         return c_neg(c_atanh(c_neg(z)));

  000ce	48 8d 44 24 70	 lea	 rax, QWORD PTR $T21309[rsp]
  000d3	48 8b f8	 mov	 rdi, rax
  000d6	48 8b b4 24 e8
	00 00 00	 mov	 rsi, QWORD PTR z$[rsp]
  000de	b9 10 00 00 00	 mov	 ecx, 16
  000e3	f3 a4		 rep movsb
  000e5	48 8d 54 24 70	 lea	 rdx, QWORD PTR $T21309[rsp]
  000ea	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T21306[rsp]
  000ef	e8 00 00 00 00	 call	 _Py_c_neg
  000f4	48 8d 8c 24 80
	00 00 00	 lea	 rcx, QWORD PTR $T21310[rsp]
  000fc	48 8b f9	 mov	 rdi, rcx
  000ff	48 8b f0	 mov	 rsi, rax
  00102	b9 10 00 00 00	 mov	 ecx, 16
  00107	f3 a4		 rep movsb
  00109	48 8d 94 24 80
	00 00 00	 lea	 rdx, QWORD PTR $T21310[rsp]
  00111	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T21307[rsp]
  00116	e8 00 00 00 00	 call	 c_atanh
  0011b	48 8d 8c 24 90
	00 00 00	 lea	 rcx, QWORD PTR $T21311[rsp]
  00123	48 8b f9	 mov	 rdi, rcx
  00126	48 8b f0	 mov	 rsi, rax
  00129	b9 10 00 00 00	 mov	 ecx, 16
  0012e	f3 a4		 rep movsb
  00130	48 8d 94 24 90
	00 00 00	 lea	 rdx, QWORD PTR $T21311[rsp]
  00138	48 8d 4c 24 60	 lea	 rcx, QWORD PTR $T21308[rsp]
  0013d	e8 00 00 00 00	 call	 _Py_c_neg
  00142	48 8b bc 24 e0
	00 00 00	 mov	 rdi, QWORD PTR $T21305[rsp]
  0014a	48 8b f0	 mov	 rsi, rax
  0014d	b9 10 00 00 00	 mov	 ecx, 16
  00152	f3 a4		 rep movsb
  00154	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR $T21305[rsp]
  0015c	e9 3f 03 00 00	 jmp	 $LN11@c_atanh
$LN8@c_atanh:

; 317  :     }
; 318  : 
; 319  :     ay = fabs(z.imag);

  00161	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00169	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0016e	e8 00 00 00 00	 call	 fabs
  00173	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR ay$[rsp], xmm0

; 320  :     if (z.real > CM_SQRT_LARGE_DOUBLE || ay > CM_SQRT_LARGE_DOUBLE) {

  00179	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@7fcfffffffffffff
  00181	e8 00 00 00 00	 call	 sqrt
  00186	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0018e	f2 0f 10 08	 movsdx	 xmm1, QWORD PTR [rax]
  00192	66 0f 2f c8	 comisd	 xmm1, xmm0
  00196	77 1d		 ja	 SHORT $LN6@c_atanh
  00198	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@7fcfffffffffffff
  001a0	e8 00 00 00 00	 call	 sqrt
  001a5	f2 0f 10 4c 24
	28		 movsdx	 xmm1, QWORD PTR ay$[rsp]
  001ab	66 0f 2f c8	 comisd	 xmm1, xmm0
  001af	0f 86 b6 00 00
	00		 jbe	 $LN7@c_atanh
$LN6@c_atanh:

; 321  :         /*
; 322  :            if abs(z) is large then we use the approximation
; 323  :            atanh(z) ~ 1/z +/- i*pi/2 (+/- depending on the sign
; 324  :            of z.imag)
; 325  :         */
; 326  :         h = hypot(z.real/2., z.imag/2.);  /* safe from overflow */

  001b5	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  001bd	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  001c2	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  001ca	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  001d2	f2 0f 10 08	 movsdx	 xmm1, QWORD PTR [rax]
  001d6	f2 0f 5e 0d 00
	00 00 00	 divsd	 xmm1, QWORD PTR __real@4000000000000000
  001de	f2 0f 11 8c 24
	a8 00 00 00	 movsdx	 QWORD PTR tv140[rsp], xmm1
  001e7	66 0f 28 c8	 movapd	 xmm1, xmm0
  001eb	f2 0f 10 84 24
	a8 00 00 00	 movsdx	 xmm0, QWORD PTR tv140[rsp]
  001f4	e8 00 00 00 00	 call	 hypot
  001f9	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR h$[rsp], xmm0

; 327  :         r.real = z.real/4./h/h;

  001ff	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00207	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0020b	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4010000000000000
  00213	f2 0f 5e 44 24
	20		 divsd	 xmm0, QWORD PTR h$[rsp]
  00219	f2 0f 5e 44 24
	20		 divsd	 xmm0, QWORD PTR h$[rsp]
  0021f	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR r$[rsp], xmm0

; 328  :         /* the two negations in the next line cancel each other out
; 329  :            except when working with unsigned zeros: they're there to
; 330  :            ensure that the branch cut has the correct continuity on
; 331  :            systems that don't support signed zeros */
; 332  :         r.imag = -copysign(Py_MATH_PI/2., -z.imag);

  00225	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0022d	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00232	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  0023a	66 0f 28 c8	 movapd	 xmm1, xmm0
  0023e	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  00246	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  0024c	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  00254	f2 0f 11 44 24
	38		 movsdx	 QWORD PTR r$[rsp+8], xmm0

; 333  :         errno = 0;

  0025a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  00260	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
  00266	e9 16 02 00 00	 jmp	 $LN5@c_atanh
$LN7@c_atanh:

; 334  :     } else if (z.real == 1. && ay < CM_SQRT_DBL_MIN) {

  0026b	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00273	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00277	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@3ff0000000000000
  0027f	0f 8a 07 01 00
	00		 jp	 $LN4@c_atanh
  00285	0f 85 01 01 00
	00		 jne	 $LN4@c_atanh
  0028b	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@0010000000000000
  00293	e8 00 00 00 00	 call	 sqrt
  00298	66 0f 2f 44 24
	28		 comisd	 xmm0, QWORD PTR ay$[rsp]
  0029e	0f 86 e8 00 00
	00		 jbe	 $LN4@c_atanh

; 335  :         /* C99 standard says:  atanh(1+/-0.) should be inf +/- 0i */
; 336  :         if (ay == 0.) {

  002a4	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR ay$[rsp]
  002aa	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  002b2	7a 37		 jp	 SHORT $LN3@c_atanh
  002b4	75 35		 jne	 SHORT $LN3@c_atanh

; 337  :             r.real = INF;

  002b6	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  002bd	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  002c1	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR r$[rsp], xmm0

; 338  :             r.imag = z.imag;

  002c7	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  002cf	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  002d4	f2 0f 11 44 24
	38		 movsdx	 QWORD PTR r$[rsp+8], xmm0

; 339  :             errno = EDOM;

  002da	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  002e0	c7 00 21 00 00
	00		 mov	 DWORD PTR [rax], 33	; 00000021H

; 340  :         } else {

  002e6	e9 9c 00 00 00	 jmp	 $LN2@c_atanh
$LN3@c_atanh:

; 341  :             r.real = -log(sqrt(ay)/sqrt(hypot(ay, 2.)));

  002eb	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR ay$[rsp]
  002f1	e8 00 00 00 00	 call	 sqrt
  002f6	f2 0f 11 84 24
	b0 00 00 00	 movsdx	 QWORD PTR tv161[rsp], xmm0
  002ff	f2 0f 10 0d 00
	00 00 00	 movsdx	 xmm1, QWORD PTR __real@4000000000000000
  00307	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR ay$[rsp]
  0030d	e8 00 00 00 00	 call	 hypot
  00312	e8 00 00 00 00	 call	 sqrt
  00317	f2 0f 10 8c 24
	b0 00 00 00	 movsdx	 xmm1, QWORD PTR tv161[rsp]
  00320	f2 0f 5e c8	 divsd	 xmm1, xmm0
  00324	66 0f 28 c1	 movapd	 xmm0, xmm1
  00328	e8 00 00 00 00	 call	 log
  0032d	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  00335	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR r$[rsp], xmm0

; 342  :             r.imag = copysign(atan2(2., -ay)/2, z.imag);

  0033b	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR ay$[rsp]
  00341	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  00349	66 0f 28 c8	 movapd	 xmm1, xmm0
  0034d	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@4000000000000000
  00355	e8 00 00 00 00	 call	 atan2
  0035a	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  00362	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0036a	f2 0f 10 48 08	 movsdx	 xmm1, QWORD PTR [rax+8]
  0036f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  00375	f2 0f 11 44 24
	38		 movsdx	 QWORD PTR r$[rsp+8], xmm0

; 343  :             errno = 0;

  0037b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  00381	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
$LN2@c_atanh:

; 344  :         }
; 345  :     } else {

  00387	e9 f5 00 00 00	 jmp	 $LN1@c_atanh
$LN4@c_atanh:

; 346  :         r.real = m_log1p(4.*z.real/((1-z.real)*(1-z.real) + ay*ay))/4.;

  0038c	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00394	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@4010000000000000
  0039c	f2 0f 59 00	 mulsd	 xmm0, QWORD PTR [rax]
  003a0	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  003a8	f2 0f 10 0d 00
	00 00 00	 movsdx	 xmm1, QWORD PTR __real@3ff0000000000000
  003b0	f2 0f 5c 08	 subsd	 xmm1, QWORD PTR [rax]
  003b4	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  003bc	f2 0f 10 15 00
	00 00 00	 movsdx	 xmm2, QWORD PTR __real@3ff0000000000000
  003c4	f2 0f 5c 10	 subsd	 xmm2, QWORD PTR [rax]
  003c8	f2 0f 59 ca	 mulsd	 xmm1, xmm2
  003cc	f2 0f 10 54 24
	28		 movsdx	 xmm2, QWORD PTR ay$[rsp]
  003d2	f2 0f 59 54 24
	28		 mulsd	 xmm2, QWORD PTR ay$[rsp]
  003d8	f2 0f 58 ca	 addsd	 xmm1, xmm2
  003dc	f2 0f 5e c1	 divsd	 xmm0, xmm1
  003e0	e8 00 00 00 00	 call	 _Py_log1p
  003e5	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4010000000000000
  003ed	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR r$[rsp], xmm0

; 347  :         r.imag = -atan2(-2.*z.imag, (1-z.real)*(1+z.real) - ay*ay)/2.;

  003f3	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  003fb	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff0000000000000
  00403	f2 0f 5c 00	 subsd	 xmm0, QWORD PTR [rax]
  00407	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0040f	f2 0f 10 0d 00
	00 00 00	 movsdx	 xmm1, QWORD PTR __real@3ff0000000000000
  00417	f2 0f 58 08	 addsd	 xmm1, QWORD PTR [rax]
  0041b	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  0041f	f2 0f 10 4c 24
	28		 movsdx	 xmm1, QWORD PTR ay$[rsp]
  00425	f2 0f 59 4c 24
	28		 mulsd	 xmm1, QWORD PTR ay$[rsp]
  0042b	f2 0f 5c c1	 subsd	 xmm0, xmm1
  0042f	48 8b 84 24 e8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00437	f2 0f 10 0d 00
	00 00 00	 movsdx	 xmm1, QWORD PTR __real@c000000000000000
  0043f	f2 0f 59 48 08	 mulsd	 xmm1, QWORD PTR [rax+8]
  00444	f2 0f 11 8c 24
	b8 00 00 00	 movsdx	 QWORD PTR tv204[rsp], xmm1
  0044d	66 0f 28 c8	 movapd	 xmm1, xmm0
  00451	f2 0f 10 84 24
	b8 00 00 00	 movsdx	 xmm0, QWORD PTR tv204[rsp]
  0045a	e8 00 00 00 00	 call	 atan2
  0045f	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  00467	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@4000000000000000
  0046f	f2 0f 11 44 24
	38		 movsdx	 QWORD PTR r$[rsp+8], xmm0

; 348  :         errno = 0;

  00475	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  0047b	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
$LN1@c_atanh:
$LN5@c_atanh:

; 349  :     }
; 350  :     return r;

  00481	48 8d 44 24 30	 lea	 rax, QWORD PTR r$[rsp]
  00486	48 8b bc 24 e0
	00 00 00	 mov	 rdi, QWORD PTR $T21305[rsp]
  0048e	48 8b f0	 mov	 rsi, rax
  00491	b9 10 00 00 00	 mov	 ecx, 16
  00496	f3 a4		 rep movsb
  00498	48 8b 84 24 e0
	00 00 00	 mov	 rax, QWORD PTR $T21305[rsp]
$LN11@c_atanh:

; 351  : }

  004a0	48 81 c4 c8 00
	00 00		 add	 rsp, 200		; 000000c8H
  004a7	5f		 pop	 rdi
  004a8	5e		 pop	 rsi
  004a9	c3		 ret	 0
c_atanh	ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$cmath_atanh DD imagerel cmath_atanh
	DD	imagerel cmath_atanh+36
	DD	imagerel $unwind$cmath_atanh
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$cmath_atanh DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT cmath_atanh
_TEXT	SEGMENT
self$ = 48
args$ = 56
cmath_atanh PROC					; COMDAT

; 905  : FUNC1(cmath_atanh, c_atanh)

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:c_atanh
  00015	48 8b 4c 24 38	 mov	 rcx, QWORD PTR args$[rsp]
  0001a	e8 00 00 00 00	 call	 math_1
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	c3		 ret	 0
cmath_atanh ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$cmath_cos DD imagerel cmath_cos
	DD	imagerel cmath_cos+36
	DD	imagerel $unwind$cmath_cos
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$cmath_cos DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT cmath_cos
_TEXT	SEGMENT
self$ = 48
args$ = 56
cmath_cos PROC						; COMDAT

; 906  : FUNC1(cmath_cos, c_cos)

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:c_cos
  00015	48 8b 4c 24 38	 mov	 rcx, QWORD PTR args$[rsp]
  0001a	e8 00 00 00 00	 call	 math_1
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	c3		 ret	 0
cmath_cos ENDP
_TEXT	ENDS
PUBLIC	$T21339
PUBLIC	$T21338
;	COMDAT pdata
pdata	SEGMENT
$pdata$c_cos DD	imagerel c_cos
	DD	imagerel c_cos+178
	DD	imagerel $unwind$c_cos
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$c_cos DD 031001H
	DD	0700cc210H
	DD	0600bH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT c_cos
_TEXT	SEGMENT
r$ = 32
$T21337 = 48
$T21338 = 64
$T21339 = 80
$T21336 = 128
z$ = 136
c_cos	PROC						; COMDAT

; 361  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 83 ec 68	 sub	 rsp, 104		; 00000068H

; 362  :     /* cos(z) = cosh(iz) */
; 363  :     Py_complex r;
; 364  :     r.real = -z.imag;

  00010	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00018	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0001d	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  00025	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR r$[rsp], xmm0

; 365  :     r.imag = z.real;

  0002b	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00033	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00037	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR r$[rsp+8], xmm0

; 366  :     r = c_cosh(r);

  0003d	48 8d 44 24 40	 lea	 rax, QWORD PTR $T21338[rsp]
  00042	48 8d 4c 24 20	 lea	 rcx, QWORD PTR r$[rsp]
  00047	48 8b f8	 mov	 rdi, rax
  0004a	48 8b f1	 mov	 rsi, rcx
  0004d	b9 10 00 00 00	 mov	 ecx, 16
  00052	f3 a4		 rep movsb
  00054	48 8d 54 24 40	 lea	 rdx, QWORD PTR $T21338[rsp]
  00059	48 8d 4c 24 30	 lea	 rcx, QWORD PTR $T21337[rsp]
  0005e	e8 00 00 00 00	 call	 c_cosh
  00063	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T21339[rsp]
  00068	48 8b f9	 mov	 rdi, rcx
  0006b	48 8b f0	 mov	 rsi, rax
  0006e	b9 10 00 00 00	 mov	 ecx, 16
  00073	f3 a4		 rep movsb
  00075	48 8d 44 24 20	 lea	 rax, QWORD PTR r$[rsp]
  0007a	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T21339[rsp]
  0007f	48 8b f8	 mov	 rdi, rax
  00082	48 8b f1	 mov	 rsi, rcx
  00085	b9 10 00 00 00	 mov	 ecx, 16
  0008a	f3 a4		 rep movsb

; 367  :     return r;

  0008c	48 8d 44 24 20	 lea	 rax, QWORD PTR r$[rsp]
  00091	48 8b bc 24 80
	00 00 00	 mov	 rdi, QWORD PTR $T21336[rsp]
  00099	48 8b f0	 mov	 rsi, rax
  0009c	b9 10 00 00 00	 mov	 ecx, 16
  000a1	f3 a4		 rep movsb
  000a3	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR $T21336[rsp]

; 368  : }

  000ab	48 83 c4 68	 add	 rsp, 104		; 00000068H
  000af	5f		 pop	 rdi
  000b0	5e		 pop	 rsi
  000b1	c3		 ret	 0
c_cos	ENDP
_TEXT	ENDS
PUBLIC	__real@4005bf0a8b145769
PUBLIC	$T21347
EXTRN	sinh:PROC
EXTRN	cosh:PROC
EXTRN	sin:PROC
EXTRN	cos:PROC
_BSS	SEGMENT
cosh_special_values DB 0310H DUP (?)
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$c_cosh DD imagerel c_cosh
	DD	imagerel c_cosh+1117
	DD	imagerel $unwind$c_cosh
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$c_cosh DD 041301H
	DD	0110113H
	DD	0600b700cH
xdata	ENDS
;	COMDAT __real@4005bf0a8b145769
CONST	SEGMENT
__real@4005bf0a8b145769 DQ 04005bf0a8b145769r	; 2.71828
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT c_cosh
_TEXT	SEGMENT
r$ = 32
x_minus_one$ = 48
$T21347 = 56
tv145 = 72
tv166 = 80
tv176 = 88
tv183 = 96
tv190 = 104
tv196 = 112
$T21346 = 160
z$ = 168
c_cosh	PROC						; COMDAT

; 381  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 81 ec 88 00
	00 00		 sub	 rsp, 136		; 00000088H

; 382  :     Py_complex r;
; 383  :     double x_minus_one;
; 384  : 
; 385  :     /* special treatment for cosh(+/-inf + iy) if y is not a NaN */
; 386  :     if (!Py_IS_FINITE(z.real) || !Py_IS_FINITE(z.imag)) {

  00013	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0001b	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0001f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00025	85 c0		 test	 eax, eax
  00027	74 1b		 je	 SHORT $LN13@c_cosh
  00029	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00031	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00036	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  0003c	85 c0		 test	 eax, eax
  0003e	0f 85 34 02 00
	00		 jne	 $LN14@c_cosh
$LN13@c_cosh:

; 387  :         if (Py_IS_INFINITY(z.real) && Py_IS_FINITE(z.imag) &&
; 388  :             (z.imag != 0.)) {

  00044	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0004c	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00050	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00056	85 c0		 test	 eax, eax
  00058	0f 85 28 01 00
	00		 jne	 $LN12@c_cosh
  0005e	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00066	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0006a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__isnan
  00070	85 c0		 test	 eax, eax
  00072	0f 85 0e 01 00
	00		 jne	 $LN12@c_cosh
  00078	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00080	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00085	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  0008b	85 c0		 test	 eax, eax
  0008d	0f 84 f3 00 00
	00		 je	 $LN12@c_cosh
  00093	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0009b	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  000a0	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  000a8	7a 06		 jp	 SHORT $LN17@c_cosh
  000aa	0f 84 d6 00 00
	00		 je	 $LN12@c_cosh
$LN17@c_cosh:

; 389  :             if (z.real > 0) {

  000b0	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  000b8	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  000bc	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  000c4	76 5c		 jbe	 SHORT $LN11@c_cosh

; 390  :                 r.real = copysign(INF, cos(z.imag));

  000c6	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  000ce	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  000d3	e8 00 00 00 00	 call	 cos
  000d8	66 0f 28 c8	 movapd	 xmm1, xmm0
  000dc	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  000e3	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  000e7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  000ed	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR r$[rsp], xmm0

; 391  :                 r.imag = copysign(INF, sin(z.imag));

  000f3	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  000fb	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00100	e8 00 00 00 00	 call	 sin
  00105	66 0f 28 c8	 movapd	 xmm1, xmm0
  00109	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  00110	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00114	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  0011a	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR r$[rsp+8], xmm0

; 392  :             }
; 393  :             else {

  00120	eb 62		 jmp	 SHORT $LN10@c_cosh
$LN11@c_cosh:

; 394  :                 r.real = copysign(INF, cos(z.imag));

  00122	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0012a	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0012f	e8 00 00 00 00	 call	 cos
  00134	66 0f 28 c8	 movapd	 xmm1, xmm0
  00138	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0013f	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00143	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  00149	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR r$[rsp], xmm0

; 395  :                 r.imag = -copysign(INF, sin(z.imag));

  0014f	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00157	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0015c	e8 00 00 00 00	 call	 sin
  00161	66 0f 28 c8	 movapd	 xmm1, xmm0
  00165	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0016c	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00170	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  00176	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  0017e	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR r$[rsp+8], xmm0
$LN10@c_cosh:

; 396  :             }
; 397  :         }
; 398  :         else {

  00184	eb 70		 jmp	 SHORT $LN9@c_cosh
$LN12@c_cosh:

; 399  :             r = cosh_special_values[special_type(z.real)]
; 400  :                                    [special_type(z.imag)];

  00186	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0018e	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00192	e8 00 00 00 00	 call	 special_type
  00197	48 98		 cdqe
  00199	48 6b c0 70	 imul	 rax, 112		; 00000070H
  0019d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:cosh_special_values
  001a4	48 03 c8	 add	 rcx, rax
  001a7	48 8b c1	 mov	 rax, rcx
  001aa	48 89 44 24 48	 mov	 QWORD PTR tv145[rsp], rax
  001af	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR z$[rsp]
  001b7	f2 0f 10 41 08	 movsdx	 xmm0, QWORD PTR [rcx+8]
  001bc	e8 00 00 00 00	 call	 special_type
  001c1	48 98		 cdqe
  001c3	48 6b c0 10	 imul	 rax, 16
  001c7	48 8d 4c 24 38	 lea	 rcx, QWORD PTR $T21347[rsp]
  001cc	48 8b f9	 mov	 rdi, rcx
  001cf	48 8b 4c 24 48	 mov	 rcx, QWORD PTR tv145[rsp]
  001d4	48 8d 34 01	 lea	 rsi, QWORD PTR [rcx+rax]
  001d8	b9 10 00 00 00	 mov	 ecx, 16
  001dd	f3 a4		 rep movsb
  001df	48 8d 44 24 20	 lea	 rax, QWORD PTR r$[rsp]
  001e4	48 8d 4c 24 38	 lea	 rcx, QWORD PTR $T21347[rsp]
  001e9	48 8b f8	 mov	 rdi, rax
  001ec	48 8b f1	 mov	 rsi, rcx
  001ef	b9 10 00 00 00	 mov	 ecx, 16
  001f4	f3 a4		 rep movsb
$LN9@c_cosh:

; 401  :         }
; 402  :         /* need to set errno = EDOM if y is +/- infinity and x is not
; 403  :            a NaN */
; 404  :         if (Py_IS_INFINITY(z.imag) && !Py_IS_NAN(z.real))

  001f6	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  001fe	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00203	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00209	85 c0		 test	 eax, eax
  0020b	75 3b		 jne	 SHORT $LN8@c_cosh
  0020d	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00215	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0021a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__isnan
  00220	85 c0		 test	 eax, eax
  00222	75 24		 jne	 SHORT $LN8@c_cosh
  00224	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0022c	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00230	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__isnan
  00236	85 c0		 test	 eax, eax
  00238	75 0e		 jne	 SHORT $LN8@c_cosh

; 405  :             errno = EDOM;

  0023a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  00240	c7 00 21 00 00
	00		 mov	 DWORD PTR [rax], 33	; 00000021H

; 406  :         else

  00246	eb 0c		 jmp	 SHORT $LN7@c_cosh
$LN8@c_cosh:

; 407  :             errno = 0;

  00248	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  0024e	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
$LN7@c_cosh:

; 408  :         return r;

  00254	48 8d 44 24 20	 lea	 rax, QWORD PTR r$[rsp]
  00259	48 8b bc 24 a0
	00 00 00	 mov	 rdi, QWORD PTR $T21346[rsp]
  00261	48 8b f0	 mov	 rsi, rax
  00264	b9 10 00 00 00	 mov	 ecx, 16
  00269	f3 a4		 rep movsb
  0026b	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR $T21346[rsp]
  00273	e9 db 01 00 00	 jmp	 $LN15@c_cosh
$LN14@c_cosh:

; 409  :     }
; 410  : 
; 411  :     if (fabs(z.real) > CM_LOG_LARGE_DOUBLE) {

  00278	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00280	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00284	e8 00 00 00 00	 call	 fabs
  00289	f2 0f 11 44 24
	50		 movsdx	 QWORD PTR tv166[rsp], xmm0
  0028f	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@7fcfffffffffffff
  00297	e8 00 00 00 00	 call	 log
  0029c	f2 0f 10 4c 24
	50		 movsdx	 xmm1, QWORD PTR tv166[rsp]
  002a2	66 0f 2f c8	 comisd	 xmm1, xmm0
  002a6	0f 86 b4 00 00
	00		 jbe	 $LN6@c_cosh

; 412  :         /* deal correctly with cases where cosh(z.real) overflows but
; 413  :            cosh(z) does not. */
; 414  :         x_minus_one = z.real - copysign(1., z.real);

  002ac	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  002b4	f2 0f 10 08	 movsdx	 xmm1, QWORD PTR [rax]
  002b8	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff0000000000000
  002c0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  002c6	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  002ce	f2 0f 10 08	 movsdx	 xmm1, QWORD PTR [rax]
  002d2	f2 0f 5c c8	 subsd	 xmm1, xmm0
  002d6	66 0f 28 c1	 movapd	 xmm0, xmm1
  002da	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR x_minus_one$[rsp], xmm0

; 415  :         r.real = cos(z.imag) * cosh(x_minus_one) * Py_MATH_E;

  002e0	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  002e8	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  002ed	e8 00 00 00 00	 call	 cos
  002f2	f2 0f 11 44 24
	58		 movsdx	 QWORD PTR tv176[rsp], xmm0
  002f8	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR x_minus_one$[rsp]
  002fe	e8 00 00 00 00	 call	 cosh
  00303	f2 0f 10 4c 24
	58		 movsdx	 xmm1, QWORD PTR tv176[rsp]
  00309	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  0030d	66 0f 28 c1	 movapd	 xmm0, xmm1
  00311	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4005bf0a8b145769
  00319	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR r$[rsp], xmm0

; 416  :         r.imag = sin(z.imag) * sinh(x_minus_one) * Py_MATH_E;

  0031f	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00327	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0032c	e8 00 00 00 00	 call	 sin
  00331	f2 0f 11 44 24
	60		 movsdx	 QWORD PTR tv183[rsp], xmm0
  00337	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR x_minus_one$[rsp]
  0033d	e8 00 00 00 00	 call	 sinh
  00342	f2 0f 10 4c 24
	60		 movsdx	 xmm1, QWORD PTR tv183[rsp]
  00348	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  0034c	66 0f 28 c1	 movapd	 xmm0, xmm1
  00350	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4005bf0a8b145769
  00358	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR r$[rsp+8], xmm0

; 417  :     } else {

  0035e	eb 7a		 jmp	 SHORT $LN5@c_cosh
$LN6@c_cosh:

; 418  :         r.real = cos(z.imag) * cosh(z.real);

  00360	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00368	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0036d	e8 00 00 00 00	 call	 cos
  00372	f2 0f 11 44 24
	68		 movsdx	 QWORD PTR tv190[rsp], xmm0
  00378	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00380	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00384	e8 00 00 00 00	 call	 cosh
  00389	f2 0f 10 4c 24
	68		 movsdx	 xmm1, QWORD PTR tv190[rsp]
  0038f	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  00393	66 0f 28 c1	 movapd	 xmm0, xmm1
  00397	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR r$[rsp], xmm0

; 419  :         r.imag = sin(z.imag) * sinh(z.real);

  0039d	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  003a5	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  003aa	e8 00 00 00 00	 call	 sin
  003af	f2 0f 11 44 24
	70		 movsdx	 QWORD PTR tv196[rsp], xmm0
  003b5	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  003bd	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  003c1	e8 00 00 00 00	 call	 sinh
  003c6	f2 0f 10 4c 24
	70		 movsdx	 xmm1, QWORD PTR tv196[rsp]
  003cc	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  003d0	66 0f 28 c1	 movapd	 xmm0, xmm1
  003d4	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR r$[rsp+8], xmm0
$LN5@c_cosh:

; 420  :     }
; 421  :     /* detect overflow, and set errno accordingly */
; 422  :     if (Py_IS_INFINITY(r.real) || Py_IS_INFINITY(r.imag))

  003da	f2 0f 10 44 24
	20		 movsdx	 xmm0, QWORD PTR r$[rsp]
  003e0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  003e6	85 c0		 test	 eax, eax
  003e8	75 10		 jne	 SHORT $LN2@c_cosh
  003ea	f2 0f 10 44 24
	20		 movsdx	 xmm0, QWORD PTR r$[rsp]
  003f0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__isnan
  003f6	85 c0		 test	 eax, eax
  003f8	74 20		 je	 SHORT $LN3@c_cosh
$LN2@c_cosh:
  003fa	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR r$[rsp+8]
  00400	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00406	85 c0		 test	 eax, eax
  00408	75 1e		 jne	 SHORT $LN4@c_cosh
  0040a	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR r$[rsp+8]
  00410	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__isnan
  00416	85 c0		 test	 eax, eax
  00418	75 0e		 jne	 SHORT $LN4@c_cosh
$LN3@c_cosh:

; 423  :         errno = ERANGE;

  0041a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  00420	c7 00 22 00 00
	00		 mov	 DWORD PTR [rax], 34	; 00000022H

; 424  :     else

  00426	eb 0c		 jmp	 SHORT $LN1@c_cosh
$LN4@c_cosh:

; 425  :         errno = 0;

  00428	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  0042e	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
$LN1@c_cosh:

; 426  :     return r;

  00434	48 8d 44 24 20	 lea	 rax, QWORD PTR r$[rsp]
  00439	48 8b bc 24 a0
	00 00 00	 mov	 rdi, QWORD PTR $T21346[rsp]
  00441	48 8b f0	 mov	 rsi, rax
  00444	b9 10 00 00 00	 mov	 ecx, 16
  00449	f3 a4		 rep movsb
  0044b	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR $T21346[rsp]
$LN15@c_cosh:

; 427  : }

  00453	48 81 c4 88 00
	00 00		 add	 rsp, 136		; 00000088H
  0045a	5f		 pop	 rdi
  0045b	5e		 pop	 rsi
  0045c	c3		 ret	 0
c_cosh	ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$cmath_cosh DD imagerel cmath_cosh
	DD	imagerel cmath_cosh+36
	DD	imagerel $unwind$cmath_cosh
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$cmath_cosh DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT cmath_cosh
_TEXT	SEGMENT
self$ = 48
args$ = 56
cmath_cosh PROC						; COMDAT

; 907  : FUNC1(cmath_cosh, c_cosh)

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:c_cosh
  00015	48 8b 4c 24 38	 mov	 rcx, QWORD PTR args$[rsp]
  0001a	e8 00 00 00 00	 call	 math_1
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	c3		 ret	 0
cmath_cosh ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$cmath_exp DD imagerel cmath_exp
	DD	imagerel cmath_exp+36
	DD	imagerel $unwind$cmath_exp
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$cmath_exp DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT cmath_exp
_TEXT	SEGMENT
self$ = 48
args$ = 56
cmath_exp PROC						; COMDAT

; 908  : FUNC1(cmath_exp, c_exp)

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:c_exp
  00015	48 8b 4c 24 38	 mov	 rcx, QWORD PTR args$[rsp]
  0001a	e8 00 00 00 00	 call	 math_1
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	c3		 ret	 0
cmath_exp ENDP
_TEXT	ENDS
PUBLIC	$T21370
EXTRN	exp:PROC
_BSS	SEGMENT
exp_special_values DB 0310H DUP (?)
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$c_exp DD	imagerel c_exp
	DD	imagerel c_exp+966
	DD	imagerel $unwind$c_exp
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$c_exp DD 031001H
	DD	0700ca210H
	DD	0600bH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT c_exp
_TEXT	SEGMENT
l$ = 32
r$ = 40
$T21370 = 56
tv144 = 72
$T21369 = 112
z$ = 120
c_exp	PROC						; COMDAT

; 441  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 83 ec 58	 sub	 rsp, 88			; 00000058H

; 442  :     Py_complex r;
; 443  :     double l;
; 444  : 
; 445  :     if (!Py_IS_FINITE(z.real) || !Py_IS_FINITE(z.imag)) {

  00010	48 8b 44 24 78	 mov	 rax, QWORD PTR z$[rsp]
  00015	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00019	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  0001f	85 c0		 test	 eax, eax
  00021	74 18		 je	 SHORT $LN14@c_exp
  00023	48 8b 44 24 78	 mov	 rax, QWORD PTR z$[rsp]
  00028	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0002d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00033	85 c0		 test	 eax, eax
  00035	0f 85 27 02 00
	00		 jne	 $LN15@c_exp
$LN14@c_exp:

; 446  :         if (Py_IS_INFINITY(z.real) && Py_IS_FINITE(z.imag)
; 447  :             && (z.imag != 0.)) {

  0003b	48 8b 44 24 78	 mov	 rax, QWORD PTR z$[rsp]
  00040	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00044	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  0004a	85 c0		 test	 eax, eax
  0004c	0f 85 fa 00 00
	00		 jne	 $LN13@c_exp
  00052	48 8b 44 24 78	 mov	 rax, QWORD PTR z$[rsp]
  00057	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0005b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__isnan
  00061	85 c0		 test	 eax, eax
  00063	0f 85 e3 00 00
	00		 jne	 $LN13@c_exp
  00069	48 8b 44 24 78	 mov	 rax, QWORD PTR z$[rsp]
  0006e	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00073	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00079	85 c0		 test	 eax, eax
  0007b	0f 84 cb 00 00
	00		 je	 $LN13@c_exp
  00081	48 8b 44 24 78	 mov	 rax, QWORD PTR z$[rsp]
  00086	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0008b	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00093	7a 06		 jp	 SHORT $LN18@c_exp
  00095	0f 84 b1 00 00
	00		 je	 $LN13@c_exp
$LN18@c_exp:

; 448  :             if (z.real > 0) {

  0009b	48 8b 44 24 78	 mov	 rax, QWORD PTR z$[rsp]
  000a0	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  000a4	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  000ac	76 56		 jbe	 SHORT $LN12@c_exp

; 449  :                 r.real = copysign(INF, cos(z.imag));

  000ae	48 8b 44 24 78	 mov	 rax, QWORD PTR z$[rsp]
  000b3	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  000b8	e8 00 00 00 00	 call	 cos
  000bd	66 0f 28 c8	 movapd	 xmm1, xmm0
  000c1	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  000c8	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  000cc	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  000d2	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR r$[rsp], xmm0

; 450  :                 r.imag = copysign(INF, sin(z.imag));

  000d8	48 8b 44 24 78	 mov	 rax, QWORD PTR z$[rsp]
  000dd	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  000e2	e8 00 00 00 00	 call	 sin
  000e7	66 0f 28 c8	 movapd	 xmm1, xmm0
  000eb	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  000f2	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  000f6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  000fc	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR r$[rsp+8], xmm0

; 451  :             }
; 452  :             else {

  00102	eb 46		 jmp	 SHORT $LN11@c_exp
$LN12@c_exp:

; 453  :                 r.real = copysign(0., cos(z.imag));

  00104	48 8b 44 24 78	 mov	 rax, QWORD PTR z$[rsp]
  00109	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0010e	e8 00 00 00 00	 call	 cos
  00113	66 0f 28 c8	 movapd	 xmm1, xmm0
  00117	66 0f 57 c0	 xorpd	 xmm0, xmm0
  0011b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  00121	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR r$[rsp], xmm0

; 454  :                 r.imag = copysign(0., sin(z.imag));

  00127	48 8b 44 24 78	 mov	 rax, QWORD PTR z$[rsp]
  0012c	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00131	e8 00 00 00 00	 call	 sin
  00136	66 0f 28 c8	 movapd	 xmm1, xmm0
  0013a	66 0f 57 c0	 xorpd	 xmm0, xmm0
  0013e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  00144	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR r$[rsp+8], xmm0
$LN11@c_exp:

; 455  :             }
; 456  :         }
; 457  :         else {

  0014a	eb 6a		 jmp	 SHORT $LN10@c_exp
$LN13@c_exp:

; 458  :             r = exp_special_values[special_type(z.real)]
; 459  :                                   [special_type(z.imag)];

  0014c	48 8b 44 24 78	 mov	 rax, QWORD PTR z$[rsp]
  00151	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00155	e8 00 00 00 00	 call	 special_type
  0015a	48 98		 cdqe
  0015c	48 6b c0 70	 imul	 rax, 112		; 00000070H
  00160	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:exp_special_values
  00167	48 03 c8	 add	 rcx, rax
  0016a	48 8b c1	 mov	 rax, rcx
  0016d	48 89 44 24 48	 mov	 QWORD PTR tv144[rsp], rax
  00172	48 8b 4c 24 78	 mov	 rcx, QWORD PTR z$[rsp]
  00177	f2 0f 10 41 08	 movsdx	 xmm0, QWORD PTR [rcx+8]
  0017c	e8 00 00 00 00	 call	 special_type
  00181	48 98		 cdqe
  00183	48 6b c0 10	 imul	 rax, 16
  00187	48 8d 4c 24 38	 lea	 rcx, QWORD PTR $T21370[rsp]
  0018c	48 8b f9	 mov	 rdi, rcx
  0018f	48 8b 4c 24 48	 mov	 rcx, QWORD PTR tv144[rsp]
  00194	48 8d 34 01	 lea	 rsi, QWORD PTR [rcx+rax]
  00198	b9 10 00 00 00	 mov	 ecx, 16
  0019d	f3 a4		 rep movsb
  0019f	48 8d 44 24 28	 lea	 rax, QWORD PTR r$[rsp]
  001a4	48 8d 4c 24 38	 lea	 rcx, QWORD PTR $T21370[rsp]
  001a9	48 8b f8	 mov	 rdi, rax
  001ac	48 8b f1	 mov	 rsi, rcx
  001af	b9 10 00 00 00	 mov	 ecx, 16
  001b4	f3 a4		 rep movsb
$LN10@c_exp:

; 460  :         }
; 461  :         /* need to set errno = EDOM if y is +/- infinity and x is not
; 462  :            a NaN and not -infinity */
; 463  :         if (Py_IS_INFINITY(z.imag) &&
; 464  :             (Py_IS_FINITE(z.real) ||
; 465  :              (Py_IS_INFINITY(z.real) && z.real > 0)))

  001b6	48 8b 44 24 78	 mov	 rax, QWORD PTR z$[rsp]
  001bb	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  001c0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  001c6	85 c0		 test	 eax, eax
  001c8	75 6e		 jne	 SHORT $LN9@c_exp
  001ca	48 8b 44 24 78	 mov	 rax, QWORD PTR z$[rsp]
  001cf	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  001d4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__isnan
  001da	85 c0		 test	 eax, eax
  001dc	75 5a		 jne	 SHORT $LN9@c_exp
  001de	48 8b 44 24 78	 mov	 rax, QWORD PTR z$[rsp]
  001e3	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  001e7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  001ed	85 c0		 test	 eax, eax
  001ef	75 39		 jne	 SHORT $LN8@c_exp
  001f1	48 8b 44 24 78	 mov	 rax, QWORD PTR z$[rsp]
  001f6	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  001fa	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00200	85 c0		 test	 eax, eax
  00202	75 34		 jne	 SHORT $LN9@c_exp
  00204	48 8b 44 24 78	 mov	 rax, QWORD PTR z$[rsp]
  00209	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0020d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__isnan
  00213	85 c0		 test	 eax, eax
  00215	75 21		 jne	 SHORT $LN9@c_exp
  00217	48 8b 44 24 78	 mov	 rax, QWORD PTR z$[rsp]
  0021c	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00220	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  00228	76 0e		 jbe	 SHORT $LN9@c_exp
$LN8@c_exp:

; 466  :             errno = EDOM;

  0022a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  00230	c7 00 21 00 00
	00		 mov	 DWORD PTR [rax], 33	; 00000021H

; 467  :         else

  00236	eb 0c		 jmp	 SHORT $LN7@c_exp
$LN9@c_exp:

; 468  :             errno = 0;

  00238	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  0023e	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
$LN7@c_exp:

; 469  :         return r;

  00244	48 8d 44 24 28	 lea	 rax, QWORD PTR r$[rsp]
  00249	48 8b 7c 24 70	 mov	 rdi, QWORD PTR $T21369[rsp]
  0024e	48 8b f0	 mov	 rsi, rax
  00251	b9 10 00 00 00	 mov	 ecx, 16
  00256	f3 a4		 rep movsb
  00258	48 8b 44 24 70	 mov	 rax, QWORD PTR $T21369[rsp]
  0025d	e9 5d 01 00 00	 jmp	 $LN16@c_exp
$LN15@c_exp:

; 470  :     }
; 471  : 
; 472  :     if (z.real > CM_LOG_LARGE_DOUBLE) {

  00262	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@7fcfffffffffffff
  0026a	e8 00 00 00 00	 call	 log
  0026f	48 8b 44 24 78	 mov	 rax, QWORD PTR z$[rsp]
  00274	f2 0f 10 08	 movsdx	 xmm1, QWORD PTR [rax]
  00278	66 0f 2f c8	 comisd	 xmm1, xmm0
  0027c	76 74		 jbe	 SHORT $LN6@c_exp

; 473  :         l = exp(z.real-1.);

  0027e	48 8b 44 24 78	 mov	 rax, QWORD PTR z$[rsp]
  00283	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00287	f2 0f 5c 05 00
	00 00 00	 subsd	 xmm0, QWORD PTR __real@3ff0000000000000
  0028f	e8 00 00 00 00	 call	 exp
  00294	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR l$[rsp], xmm0

; 474  :         r.real = l*cos(z.imag)*Py_MATH_E;

  0029a	48 8b 44 24 78	 mov	 rax, QWORD PTR z$[rsp]
  0029f	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  002a4	e8 00 00 00 00	 call	 cos
  002a9	f2 0f 10 4c 24
	20		 movsdx	 xmm1, QWORD PTR l$[rsp]
  002af	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  002b3	66 0f 28 c1	 movapd	 xmm0, xmm1
  002b7	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4005bf0a8b145769
  002bf	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR r$[rsp], xmm0

; 475  :         r.imag = l*sin(z.imag)*Py_MATH_E;

  002c5	48 8b 44 24 78	 mov	 rax, QWORD PTR z$[rsp]
  002ca	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  002cf	e8 00 00 00 00	 call	 sin
  002d4	f2 0f 10 4c 24
	20		 movsdx	 xmm1, QWORD PTR l$[rsp]
  002da	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  002de	66 0f 28 c1	 movapd	 xmm0, xmm1
  002e2	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4005bf0a8b145769
  002ea	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR r$[rsp+8], xmm0

; 476  :     } else {

  002f0	eb 5a		 jmp	 SHORT $LN5@c_exp
$LN6@c_exp:

; 477  :         l = exp(z.real);

  002f2	48 8b 44 24 78	 mov	 rax, QWORD PTR z$[rsp]
  002f7	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  002fb	e8 00 00 00 00	 call	 exp
  00300	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR l$[rsp], xmm0

; 478  :         r.real = l*cos(z.imag);

  00306	48 8b 44 24 78	 mov	 rax, QWORD PTR z$[rsp]
  0030b	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00310	e8 00 00 00 00	 call	 cos
  00315	f2 0f 10 4c 24
	20		 movsdx	 xmm1, QWORD PTR l$[rsp]
  0031b	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  0031f	66 0f 28 c1	 movapd	 xmm0, xmm1
  00323	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR r$[rsp], xmm0

; 479  :         r.imag = l*sin(z.imag);

  00329	48 8b 44 24 78	 mov	 rax, QWORD PTR z$[rsp]
  0032e	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00333	e8 00 00 00 00	 call	 sin
  00338	f2 0f 10 4c 24
	20		 movsdx	 xmm1, QWORD PTR l$[rsp]
  0033e	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  00342	66 0f 28 c1	 movapd	 xmm0, xmm1
  00346	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR r$[rsp+8], xmm0
$LN5@c_exp:

; 480  :     }
; 481  :     /* detect overflow, and set errno accordingly */
; 482  :     if (Py_IS_INFINITY(r.real) || Py_IS_INFINITY(r.imag))

  0034c	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR r$[rsp]
  00352	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00358	85 c0		 test	 eax, eax
  0035a	75 10		 jne	 SHORT $LN2@c_exp
  0035c	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR r$[rsp]
  00362	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__isnan
  00368	85 c0		 test	 eax, eax
  0036a	74 20		 je	 SHORT $LN3@c_exp
$LN2@c_exp:
  0036c	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR r$[rsp+8]
  00372	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00378	85 c0		 test	 eax, eax
  0037a	75 1e		 jne	 SHORT $LN4@c_exp
  0037c	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR r$[rsp+8]
  00382	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__isnan
  00388	85 c0		 test	 eax, eax
  0038a	75 0e		 jne	 SHORT $LN4@c_exp
$LN3@c_exp:

; 483  :         errno = ERANGE;

  0038c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  00392	c7 00 22 00 00
	00		 mov	 DWORD PTR [rax], 34	; 00000022H

; 484  :     else

  00398	eb 0c		 jmp	 SHORT $LN1@c_exp
$LN4@c_exp:

; 485  :         errno = 0;

  0039a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  003a0	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
$LN1@c_exp:

; 486  :     return r;

  003a6	48 8d 44 24 28	 lea	 rax, QWORD PTR r$[rsp]
  003ab	48 8b 7c 24 70	 mov	 rdi, QWORD PTR $T21369[rsp]
  003b0	48 8b f0	 mov	 rsi, rax
  003b3	b9 10 00 00 00	 mov	 ecx, 16
  003b8	f3 a4		 rep movsb
  003ba	48 8b 44 24 70	 mov	 rax, QWORD PTR $T21369[rsp]
$LN16@c_exp:

; 487  : }

  003bf	48 83 c4 58	 add	 rsp, 88			; 00000058H
  003c3	5f		 pop	 rdi
  003c4	5e		 pop	 rsi
  003c5	c3		 ret	 0
c_exp	ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$cmath_log10 DD imagerel cmath_log10
	DD	imagerel cmath_log10+36
	DD	imagerel $unwind$cmath_log10
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$cmath_log10 DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT cmath_log10
_TEXT	SEGMENT
self$ = 48
args$ = 56
cmath_log10 PROC					; COMDAT

; 909  : FUNC1(cmath_log10, c_log10)

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:c_log10
  00015	48 8b 4c 24 38	 mov	 rcx, QWORD PTR args$[rsp]
  0001a	e8 00 00 00 00	 call	 math_1
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	c3		 ret	 0
cmath_log10 ENDP
_TEXT	ENDS
PUBLIC	__real@40026bb1bbb55516
PUBLIC	$T21387
PUBLIC	$T21386
;	COMDAT pdata
pdata	SEGMENT
$pdata$c_log10 DD imagerel c_log10
	DD	imagerel c_log10+197
	DD	imagerel $unwind$c_log10
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$c_log10 DD 031001H
	DD	0700ce210H
	DD	0600bH
xdata	ENDS
;	COMDAT __real@40026bb1bbb55516
CONST	SEGMENT
__real@40026bb1bbb55516 DQ 040026bb1bbb55516r	; 2.30259
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT c_log10
_TEXT	SEGMENT
errno_save$ = 32
r$ = 40
$T21385 = 56
$T21386 = 80
$T21387 = 96
$T21384 = 144
z$ = 152
c_log10	PROC						; COMDAT

; 569  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 83 ec 78	 sub	 rsp, 120		; 00000078H

; 570  :     Py_complex r;
; 571  :     int errno_save;
; 572  : 
; 573  :     r = c_log(z);

  00010	48 8d 44 24 50	 lea	 rax, QWORD PTR $T21386[rsp]
  00015	48 8b f8	 mov	 rdi, rax
  00018	48 8b b4 24 98
	00 00 00	 mov	 rsi, QWORD PTR z$[rsp]
  00020	b9 10 00 00 00	 mov	 ecx, 16
  00025	f3 a4		 rep movsb
  00027	48 8d 54 24 50	 lea	 rdx, QWORD PTR $T21386[rsp]
  0002c	48 8d 4c 24 38	 lea	 rcx, QWORD PTR $T21385[rsp]
  00031	e8 00 00 00 00	 call	 c_log
  00036	48 8d 4c 24 60	 lea	 rcx, QWORD PTR $T21387[rsp]
  0003b	48 8b f9	 mov	 rdi, rcx
  0003e	48 8b f0	 mov	 rsi, rax
  00041	b9 10 00 00 00	 mov	 ecx, 16
  00046	f3 a4		 rep movsb
  00048	48 8d 44 24 28	 lea	 rax, QWORD PTR r$[rsp]
  0004d	48 8d 4c 24 60	 lea	 rcx, QWORD PTR $T21387[rsp]
  00052	48 8b f8	 mov	 rdi, rax
  00055	48 8b f1	 mov	 rsi, rcx
  00058	b9 10 00 00 00	 mov	 ecx, 16
  0005d	f3 a4		 rep movsb

; 574  :     errno_save = errno; /* just in case the divisions affect errno */

  0005f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  00065	8b 00		 mov	 eax, DWORD PTR [rax]
  00067	89 44 24 20	 mov	 DWORD PTR errno_save$[rsp], eax

; 575  :     r.real = r.real / M_LN10;

  0006b	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR r$[rsp]
  00071	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@40026bb1bbb55516
  00079	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR r$[rsp], xmm0

; 576  :     r.imag = r.imag / M_LN10;

  0007f	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR r$[rsp+8]
  00085	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@40026bb1bbb55516
  0008d	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR r$[rsp+8], xmm0

; 577  :     errno = errno_save;

  00093	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  00099	8b 4c 24 20	 mov	 ecx, DWORD PTR errno_save$[rsp]
  0009d	89 08		 mov	 DWORD PTR [rax], ecx

; 578  :     return r;

  0009f	48 8d 44 24 28	 lea	 rax, QWORD PTR r$[rsp]
  000a4	48 8b bc 24 90
	00 00 00	 mov	 rdi, QWORD PTR $T21384[rsp]
  000ac	48 8b f0	 mov	 rsi, rax
  000af	b9 10 00 00 00	 mov	 ecx, 16
  000b4	f3 a4		 rep movsb
  000b6	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR $T21384[rsp]

; 579  : }

  000be	48 83 c4 78	 add	 rsp, 120		; 00000078H
  000c2	5f		 pop	 rdi
  000c3	5e		 pop	 rsi
  000c4	c3		 ret	 0
c_log10	ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$cmath_sin DD imagerel cmath_sin
	DD	imagerel cmath_sin+36
	DD	imagerel $unwind$cmath_sin
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$cmath_sin DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT cmath_sin
_TEXT	SEGMENT
self$ = 48
args$ = 56
cmath_sin PROC						; COMDAT

; 910  : FUNC1(cmath_sin, c_sin)

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:c_sin
  00015	48 8b 4c 24 38	 mov	 rcx, QWORD PTR args$[rsp]
  0001a	e8 00 00 00 00	 call	 math_1
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	c3		 ret	 0
cmath_sin ENDP
_TEXT	ENDS
PUBLIC	$T21405
PUBLIC	$T21404
;	COMDAT pdata
pdata	SEGMENT
$pdata$c_sin DD	imagerel c_sin
	DD	imagerel c_sin+210
	DD	imagerel $unwind$c_sin
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$c_sin DD 031001H
	DD	0700ce210H
	DD	0600bH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT c_sin
_TEXT	SEGMENT
s$ = 32
r$ = 48
$T21403 = 64
$T21404 = 80
$T21405 = 96
$T21402 = 144
z$ = 152
c_sin	PROC						; COMDAT

; 589  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 83 ec 78	 sub	 rsp, 120		; 00000078H

; 590  :     /* sin(z) = -i sin(iz) */
; 591  :     Py_complex s, r;
; 592  :     s.real = -z.imag;

  00010	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00018	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0001d	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  00025	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR s$[rsp], xmm0

; 593  :     s.imag = z.real;

  0002b	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00033	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00037	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR s$[rsp+8], xmm0

; 594  :     s = c_sinh(s);

  0003d	48 8d 44 24 50	 lea	 rax, QWORD PTR $T21404[rsp]
  00042	48 8d 4c 24 20	 lea	 rcx, QWORD PTR s$[rsp]
  00047	48 8b f8	 mov	 rdi, rax
  0004a	48 8b f1	 mov	 rsi, rcx
  0004d	b9 10 00 00 00	 mov	 ecx, 16
  00052	f3 a4		 rep movsb
  00054	48 8d 54 24 50	 lea	 rdx, QWORD PTR $T21404[rsp]
  00059	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T21403[rsp]
  0005e	e8 00 00 00 00	 call	 c_sinh
  00063	48 8d 4c 24 60	 lea	 rcx, QWORD PTR $T21405[rsp]
  00068	48 8b f9	 mov	 rdi, rcx
  0006b	48 8b f0	 mov	 rsi, rax
  0006e	b9 10 00 00 00	 mov	 ecx, 16
  00073	f3 a4		 rep movsb
  00075	48 8d 44 24 20	 lea	 rax, QWORD PTR s$[rsp]
  0007a	48 8d 4c 24 60	 lea	 rcx, QWORD PTR $T21405[rsp]
  0007f	48 8b f8	 mov	 rdi, rax
  00082	48 8b f1	 mov	 rsi, rcx
  00085	b9 10 00 00 00	 mov	 ecx, 16
  0008a	f3 a4		 rep movsb

; 595  :     r.real = s.imag;

  0008c	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR s$[rsp+8]
  00092	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR r$[rsp], xmm0

; 596  :     r.imag = -s.real;

  00098	f2 0f 10 44 24
	20		 movsdx	 xmm0, QWORD PTR s$[rsp]
  0009e	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  000a6	f2 0f 11 44 24
	38		 movsdx	 QWORD PTR r$[rsp+8], xmm0

; 597  :     return r;

  000ac	48 8d 44 24 30	 lea	 rax, QWORD PTR r$[rsp]
  000b1	48 8b bc 24 90
	00 00 00	 mov	 rdi, QWORD PTR $T21402[rsp]
  000b9	48 8b f0	 mov	 rsi, rax
  000bc	b9 10 00 00 00	 mov	 ecx, 16
  000c1	f3 a4		 rep movsb
  000c3	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR $T21402[rsp]

; 598  : }

  000cb	48 83 c4 78	 add	 rsp, 120		; 00000078H
  000cf	5f		 pop	 rdi
  000d0	5e		 pop	 rsi
  000d1	c3		 ret	 0
c_sin	ENDP
_TEXT	ENDS
PUBLIC	$T21413
_BSS	SEGMENT
sinh_special_values DB 0310H DUP (?)
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$c_sinh DD imagerel c_sinh
	DD	imagerel c_sinh+1117
	DD	imagerel $unwind$c_sinh
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$c_sinh DD 041301H
	DD	0110113H
	DD	0600b700cH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT c_sinh
_TEXT	SEGMENT
r$ = 32
x_minus_one$ = 48
$T21413 = 56
tv145 = 72
tv166 = 80
tv176 = 88
tv183 = 96
tv190 = 104
tv196 = 112
$T21412 = 160
z$ = 168
c_sinh	PROC						; COMDAT

; 611  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 81 ec 88 00
	00 00		 sub	 rsp, 136		; 00000088H

; 612  :     Py_complex r;
; 613  :     double x_minus_one;
; 614  : 
; 615  :     /* special treatment for sinh(+/-inf + iy) if y is finite and
; 616  :        nonzero */
; 617  :     if (!Py_IS_FINITE(z.real) || !Py_IS_FINITE(z.imag)) {

  00013	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0001b	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0001f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00025	85 c0		 test	 eax, eax
  00027	74 1b		 je	 SHORT $LN13@c_sinh
  00029	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00031	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00036	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  0003c	85 c0		 test	 eax, eax
  0003e	0f 85 34 02 00
	00		 jne	 $LN14@c_sinh
$LN13@c_sinh:

; 618  :         if (Py_IS_INFINITY(z.real) && Py_IS_FINITE(z.imag)
; 619  :             && (z.imag != 0.)) {

  00044	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0004c	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00050	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00056	85 c0		 test	 eax, eax
  00058	0f 85 28 01 00
	00		 jne	 $LN12@c_sinh
  0005e	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00066	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0006a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__isnan
  00070	85 c0		 test	 eax, eax
  00072	0f 85 0e 01 00
	00		 jne	 $LN12@c_sinh
  00078	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00080	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00085	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  0008b	85 c0		 test	 eax, eax
  0008d	0f 84 f3 00 00
	00		 je	 $LN12@c_sinh
  00093	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0009b	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  000a0	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  000a8	7a 06		 jp	 SHORT $LN17@c_sinh
  000aa	0f 84 d6 00 00
	00		 je	 $LN12@c_sinh
$LN17@c_sinh:

; 620  :             if (z.real > 0) {

  000b0	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  000b8	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  000bc	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  000c4	76 5c		 jbe	 SHORT $LN11@c_sinh

; 621  :                 r.real = copysign(INF, cos(z.imag));

  000c6	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  000ce	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  000d3	e8 00 00 00 00	 call	 cos
  000d8	66 0f 28 c8	 movapd	 xmm1, xmm0
  000dc	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  000e3	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  000e7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  000ed	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR r$[rsp], xmm0

; 622  :                 r.imag = copysign(INF, sin(z.imag));

  000f3	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  000fb	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00100	e8 00 00 00 00	 call	 sin
  00105	66 0f 28 c8	 movapd	 xmm1, xmm0
  00109	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  00110	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00114	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  0011a	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR r$[rsp+8], xmm0

; 623  :             }
; 624  :             else {

  00120	eb 62		 jmp	 SHORT $LN10@c_sinh
$LN11@c_sinh:

; 625  :                 r.real = -copysign(INF, cos(z.imag));

  00122	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0012a	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0012f	e8 00 00 00 00	 call	 cos
  00134	66 0f 28 c8	 movapd	 xmm1, xmm0
  00138	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0013f	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00143	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  00149	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  00151	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR r$[rsp], xmm0

; 626  :                 r.imag = copysign(INF, sin(z.imag));

  00157	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0015f	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00164	e8 00 00 00 00	 call	 sin
  00169	66 0f 28 c8	 movapd	 xmm1, xmm0
  0016d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  00174	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00178	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  0017e	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR r$[rsp+8], xmm0
$LN10@c_sinh:

; 627  :             }
; 628  :         }
; 629  :         else {

  00184	eb 70		 jmp	 SHORT $LN9@c_sinh
$LN12@c_sinh:

; 630  :             r = sinh_special_values[special_type(z.real)]
; 631  :                                    [special_type(z.imag)];

  00186	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0018e	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00192	e8 00 00 00 00	 call	 special_type
  00197	48 98		 cdqe
  00199	48 6b c0 70	 imul	 rax, 112		; 00000070H
  0019d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:sinh_special_values
  001a4	48 03 c8	 add	 rcx, rax
  001a7	48 8b c1	 mov	 rax, rcx
  001aa	48 89 44 24 48	 mov	 QWORD PTR tv145[rsp], rax
  001af	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR z$[rsp]
  001b7	f2 0f 10 41 08	 movsdx	 xmm0, QWORD PTR [rcx+8]
  001bc	e8 00 00 00 00	 call	 special_type
  001c1	48 98		 cdqe
  001c3	48 6b c0 10	 imul	 rax, 16
  001c7	48 8d 4c 24 38	 lea	 rcx, QWORD PTR $T21413[rsp]
  001cc	48 8b f9	 mov	 rdi, rcx
  001cf	48 8b 4c 24 48	 mov	 rcx, QWORD PTR tv145[rsp]
  001d4	48 8d 34 01	 lea	 rsi, QWORD PTR [rcx+rax]
  001d8	b9 10 00 00 00	 mov	 ecx, 16
  001dd	f3 a4		 rep movsb
  001df	48 8d 44 24 20	 lea	 rax, QWORD PTR r$[rsp]
  001e4	48 8d 4c 24 38	 lea	 rcx, QWORD PTR $T21413[rsp]
  001e9	48 8b f8	 mov	 rdi, rax
  001ec	48 8b f1	 mov	 rsi, rcx
  001ef	b9 10 00 00 00	 mov	 ecx, 16
  001f4	f3 a4		 rep movsb
$LN9@c_sinh:

; 632  :         }
; 633  :         /* need to set errno = EDOM if y is +/- infinity and x is not
; 634  :            a NaN */
; 635  :         if (Py_IS_INFINITY(z.imag) && !Py_IS_NAN(z.real))

  001f6	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  001fe	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00203	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00209	85 c0		 test	 eax, eax
  0020b	75 3b		 jne	 SHORT $LN8@c_sinh
  0020d	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00215	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0021a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__isnan
  00220	85 c0		 test	 eax, eax
  00222	75 24		 jne	 SHORT $LN8@c_sinh
  00224	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0022c	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00230	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__isnan
  00236	85 c0		 test	 eax, eax
  00238	75 0e		 jne	 SHORT $LN8@c_sinh

; 636  :             errno = EDOM;

  0023a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  00240	c7 00 21 00 00
	00		 mov	 DWORD PTR [rax], 33	; 00000021H

; 637  :         else

  00246	eb 0c		 jmp	 SHORT $LN7@c_sinh
$LN8@c_sinh:

; 638  :             errno = 0;

  00248	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  0024e	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
$LN7@c_sinh:

; 639  :         return r;

  00254	48 8d 44 24 20	 lea	 rax, QWORD PTR r$[rsp]
  00259	48 8b bc 24 a0
	00 00 00	 mov	 rdi, QWORD PTR $T21412[rsp]
  00261	48 8b f0	 mov	 rsi, rax
  00264	b9 10 00 00 00	 mov	 ecx, 16
  00269	f3 a4		 rep movsb
  0026b	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR $T21412[rsp]
  00273	e9 db 01 00 00	 jmp	 $LN15@c_sinh
$LN14@c_sinh:

; 640  :     }
; 641  : 
; 642  :     if (fabs(z.real) > CM_LOG_LARGE_DOUBLE) {

  00278	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00280	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00284	e8 00 00 00 00	 call	 fabs
  00289	f2 0f 11 44 24
	50		 movsdx	 QWORD PTR tv166[rsp], xmm0
  0028f	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@7fcfffffffffffff
  00297	e8 00 00 00 00	 call	 log
  0029c	f2 0f 10 4c 24
	50		 movsdx	 xmm1, QWORD PTR tv166[rsp]
  002a2	66 0f 2f c8	 comisd	 xmm1, xmm0
  002a6	0f 86 b4 00 00
	00		 jbe	 $LN6@c_sinh

; 643  :         x_minus_one = z.real - copysign(1., z.real);

  002ac	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  002b4	f2 0f 10 08	 movsdx	 xmm1, QWORD PTR [rax]
  002b8	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff0000000000000
  002c0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  002c6	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  002ce	f2 0f 10 08	 movsdx	 xmm1, QWORD PTR [rax]
  002d2	f2 0f 5c c8	 subsd	 xmm1, xmm0
  002d6	66 0f 28 c1	 movapd	 xmm0, xmm1
  002da	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR x_minus_one$[rsp], xmm0

; 644  :         r.real = cos(z.imag) * sinh(x_minus_one) * Py_MATH_E;

  002e0	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  002e8	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  002ed	e8 00 00 00 00	 call	 cos
  002f2	f2 0f 11 44 24
	58		 movsdx	 QWORD PTR tv176[rsp], xmm0
  002f8	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR x_minus_one$[rsp]
  002fe	e8 00 00 00 00	 call	 sinh
  00303	f2 0f 10 4c 24
	58		 movsdx	 xmm1, QWORD PTR tv176[rsp]
  00309	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  0030d	66 0f 28 c1	 movapd	 xmm0, xmm1
  00311	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4005bf0a8b145769
  00319	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR r$[rsp], xmm0

; 645  :         r.imag = sin(z.imag) * cosh(x_minus_one) * Py_MATH_E;

  0031f	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00327	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0032c	e8 00 00 00 00	 call	 sin
  00331	f2 0f 11 44 24
	60		 movsdx	 QWORD PTR tv183[rsp], xmm0
  00337	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR x_minus_one$[rsp]
  0033d	e8 00 00 00 00	 call	 cosh
  00342	f2 0f 10 4c 24
	60		 movsdx	 xmm1, QWORD PTR tv183[rsp]
  00348	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  0034c	66 0f 28 c1	 movapd	 xmm0, xmm1
  00350	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@4005bf0a8b145769
  00358	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR r$[rsp+8], xmm0

; 646  :     } else {

  0035e	eb 7a		 jmp	 SHORT $LN5@c_sinh
$LN6@c_sinh:

; 647  :         r.real = cos(z.imag) * sinh(z.real);

  00360	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00368	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0036d	e8 00 00 00 00	 call	 cos
  00372	f2 0f 11 44 24
	68		 movsdx	 QWORD PTR tv190[rsp], xmm0
  00378	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00380	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00384	e8 00 00 00 00	 call	 sinh
  00389	f2 0f 10 4c 24
	68		 movsdx	 xmm1, QWORD PTR tv190[rsp]
  0038f	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  00393	66 0f 28 c1	 movapd	 xmm0, xmm1
  00397	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR r$[rsp], xmm0

; 648  :         r.imag = sin(z.imag) * cosh(z.real);

  0039d	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  003a5	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  003aa	e8 00 00 00 00	 call	 sin
  003af	f2 0f 11 44 24
	70		 movsdx	 QWORD PTR tv196[rsp], xmm0
  003b5	48 8b 84 24 a8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  003bd	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  003c1	e8 00 00 00 00	 call	 cosh
  003c6	f2 0f 10 4c 24
	70		 movsdx	 xmm1, QWORD PTR tv196[rsp]
  003cc	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  003d0	66 0f 28 c1	 movapd	 xmm0, xmm1
  003d4	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR r$[rsp+8], xmm0
$LN5@c_sinh:

; 649  :     }
; 650  :     /* detect overflow, and set errno accordingly */
; 651  :     if (Py_IS_INFINITY(r.real) || Py_IS_INFINITY(r.imag))

  003da	f2 0f 10 44 24
	20		 movsdx	 xmm0, QWORD PTR r$[rsp]
  003e0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  003e6	85 c0		 test	 eax, eax
  003e8	75 10		 jne	 SHORT $LN2@c_sinh
  003ea	f2 0f 10 44 24
	20		 movsdx	 xmm0, QWORD PTR r$[rsp]
  003f0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__isnan
  003f6	85 c0		 test	 eax, eax
  003f8	74 20		 je	 SHORT $LN3@c_sinh
$LN2@c_sinh:
  003fa	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR r$[rsp+8]
  00400	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00406	85 c0		 test	 eax, eax
  00408	75 1e		 jne	 SHORT $LN4@c_sinh
  0040a	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR r$[rsp+8]
  00410	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__isnan
  00416	85 c0		 test	 eax, eax
  00418	75 0e		 jne	 SHORT $LN4@c_sinh
$LN3@c_sinh:

; 652  :         errno = ERANGE;

  0041a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  00420	c7 00 22 00 00
	00		 mov	 DWORD PTR [rax], 34	; 00000022H

; 653  :     else

  00426	eb 0c		 jmp	 SHORT $LN1@c_sinh
$LN4@c_sinh:

; 654  :         errno = 0;

  00428	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  0042e	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
$LN1@c_sinh:

; 655  :     return r;

  00434	48 8d 44 24 20	 lea	 rax, QWORD PTR r$[rsp]
  00439	48 8b bc 24 a0
	00 00 00	 mov	 rdi, QWORD PTR $T21412[rsp]
  00441	48 8b f0	 mov	 rsi, rax
  00444	b9 10 00 00 00	 mov	 ecx, 16
  00449	f3 a4		 rep movsb
  0044b	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR $T21412[rsp]
$LN15@c_sinh:

; 656  : }

  00453	48 81 c4 88 00
	00 00		 add	 rsp, 136		; 00000088H
  0045a	5f		 pop	 rdi
  0045b	5e		 pop	 rsi
  0045c	c3		 ret	 0
c_sinh	ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$cmath_sinh DD imagerel cmath_sinh
	DD	imagerel cmath_sinh+36
	DD	imagerel $unwind$cmath_sinh
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$cmath_sinh DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT cmath_sinh
_TEXT	SEGMENT
self$ = 48
args$ = 56
cmath_sinh PROC						; COMDAT

; 911  : FUNC1(cmath_sinh, c_sinh)

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:c_sinh
  00015	48 8b 4c 24 38	 mov	 rcx, QWORD PTR args$[rsp]
  0001a	e8 00 00 00 00	 call	 math_1
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	c3		 ret	 0
cmath_sinh ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$cmath_sqrt DD imagerel cmath_sqrt
	DD	imagerel cmath_sqrt+36
	DD	imagerel $unwind$cmath_sqrt
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$cmath_sqrt DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT cmath_sqrt
_TEXT	SEGMENT
self$ = 48
args$ = 56
cmath_sqrt PROC						; COMDAT

; 912  : FUNC1(cmath_sqrt, c_sqrt)

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:c_sqrt
  00015	48 8b 4c 24 38	 mov	 rcx, QWORD PTR args$[rsp]
  0001a	e8 00 00 00 00	 call	 math_1
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	c3		 ret	 0
cmath_sqrt ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$cmath_tan DD imagerel cmath_tan
	DD	imagerel cmath_tan+36
	DD	imagerel $unwind$cmath_tan
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$cmath_tan DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT cmath_tan
_TEXT	SEGMENT
self$ = 48
args$ = 56
cmath_tan PROC						; COMDAT

; 913  : FUNC1(cmath_tan, c_tan)

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:c_tan
  00015	48 8b 4c 24 38	 mov	 rcx, QWORD PTR args$[rsp]
  0001a	e8 00 00 00 00	 call	 math_1
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	c3		 ret	 0
cmath_tan ENDP
_TEXT	ENDS
PUBLIC	$T21442
PUBLIC	$T21441
;	COMDAT pdata
pdata	SEGMENT
$pdata$c_tan DD	imagerel c_tan
	DD	imagerel c_tan+210
	DD	imagerel $unwind$c_tan
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$c_tan DD 031001H
	DD	0700ce210H
	DD	0600bH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT c_tan
_TEXT	SEGMENT
s$ = 32
r$ = 48
$T21440 = 64
$T21441 = 80
$T21442 = 96
$T21439 = 144
z$ = 152
c_tan	PROC						; COMDAT

; 741  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 83 ec 78	 sub	 rsp, 120		; 00000078H

; 742  :     /* tan(z) = -i tanh(iz) */
; 743  :     Py_complex s, r;
; 744  :     s.real = -z.imag;

  00010	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00018	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0001d	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  00025	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR s$[rsp], xmm0

; 745  :     s.imag = z.real;

  0002b	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00033	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00037	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR s$[rsp+8], xmm0

; 746  :     s = c_tanh(s);

  0003d	48 8d 44 24 50	 lea	 rax, QWORD PTR $T21441[rsp]
  00042	48 8d 4c 24 20	 lea	 rcx, QWORD PTR s$[rsp]
  00047	48 8b f8	 mov	 rdi, rax
  0004a	48 8b f1	 mov	 rsi, rcx
  0004d	b9 10 00 00 00	 mov	 ecx, 16
  00052	f3 a4		 rep movsb
  00054	48 8d 54 24 50	 lea	 rdx, QWORD PTR $T21441[rsp]
  00059	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T21440[rsp]
  0005e	e8 00 00 00 00	 call	 c_tanh
  00063	48 8d 4c 24 60	 lea	 rcx, QWORD PTR $T21442[rsp]
  00068	48 8b f9	 mov	 rdi, rcx
  0006b	48 8b f0	 mov	 rsi, rax
  0006e	b9 10 00 00 00	 mov	 ecx, 16
  00073	f3 a4		 rep movsb
  00075	48 8d 44 24 20	 lea	 rax, QWORD PTR s$[rsp]
  0007a	48 8d 4c 24 60	 lea	 rcx, QWORD PTR $T21442[rsp]
  0007f	48 8b f8	 mov	 rdi, rax
  00082	48 8b f1	 mov	 rsi, rcx
  00085	b9 10 00 00 00	 mov	 ecx, 16
  0008a	f3 a4		 rep movsb

; 747  :     r.real = s.imag;

  0008c	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR s$[rsp+8]
  00092	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR r$[rsp], xmm0

; 748  :     r.imag = -s.real;

  00098	f2 0f 10 44 24
	20		 movsdx	 xmm0, QWORD PTR s$[rsp]
  0009e	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  000a6	f2 0f 11 44 24
	38		 movsdx	 QWORD PTR r$[rsp+8], xmm0

; 749  :     return r;

  000ac	48 8d 44 24 30	 lea	 rax, QWORD PTR r$[rsp]
  000b1	48 8b bc 24 90
	00 00 00	 mov	 rdi, QWORD PTR $T21439[rsp]
  000b9	48 8b f0	 mov	 rsi, rax
  000bc	b9 10 00 00 00	 mov	 ecx, 16
  000c1	f3 a4		 rep movsb
  000c3	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR $T21439[rsp]

; 750  : }

  000cb	48 83 c4 78	 add	 rsp, 120		; 00000078H
  000cf	5f		 pop	 rdi
  000d0	5e		 pop	 rsi
  000d1	c3		 ret	 0
c_tan	ENDP
_TEXT	ENDS
PUBLIC	$T21450
PUBLIC	__real@bff0000000000000
EXTRN	tan:PROC
EXTRN	tanh:PROC
_BSS	SEGMENT
tanh_special_values DB 0310H DUP (?)
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$c_tanh DD imagerel c_tanh
	DD	imagerel c_tanh+1174
	DD	imagerel $unwind$c_tanh
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$c_tanh DD 041301H
	DD	0150113H
	DD	0600b700cH
xdata	ENDS
;	COMDAT __real@bff0000000000000
CONST	SEGMENT
__real@bff0000000000000 DQ 0bff0000000000000r	; -1
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT c_tanh
_TEXT	SEGMENT
denom$ = 32
cx$ = 40
ty$ = 48
txty$ = 56
r$ = 64
tx$ = 80
$T21450 = 88
tv88 = 104
tv131 = 112
tv142 = 120
tv163 = 128
tv175 = 136
tv179 = 144
$T21449 = 192
z$ = 200
c_tanh	PROC						; COMDAT

; 763  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 81 ec a8 00
	00 00		 sub	 rsp, 168		; 000000a8H

; 764  :     /* Formula:
; 765  : 
; 766  :        tanh(x+iy) = (tanh(x)(1+tan(y)^2) + i tan(y)(1-tanh(x))^2) /
; 767  :        (1+tan(y)^2 tanh(x)^2)
; 768  : 
; 769  :        To avoid excessive roundoff error, 1-tanh(x)^2 is better computed
; 770  :        as 1/cosh(x)^2.  When abs(x) is large, we approximate 1-tanh(x)^2
; 771  :        by 4 exp(-2*x) instead, to avoid possible overflow in the
; 772  :        computation of cosh(x).
; 773  : 
; 774  :     */
; 775  : 
; 776  :     Py_complex r;
; 777  :     double tx, ty, cx, txty, denom;
; 778  : 
; 779  :     /* special treatment for tanh(+/-inf + iy) if y is finite and
; 780  :        nonzero */
; 781  :     if (!Py_IS_FINITE(z.real) || !Py_IS_FINITE(z.imag)) {

  00013	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0001b	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0001f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00025	85 c0		 test	 eax, eax
  00027	74 1b		 je	 SHORT $LN9@c_tanh
  00029	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00031	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00036	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  0003c	85 c0		 test	 eax, eax
  0003e	0f 85 4c 02 00
	00		 jne	 $LN10@c_tanh
$LN9@c_tanh:

; 782  :         if (Py_IS_INFINITY(z.real) && Py_IS_FINITE(z.imag)
; 783  :             && (z.imag != 0.)) {

  00044	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0004c	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00050	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00056	85 c0		 test	 eax, eax
  00058	0f 85 40 01 00
	00		 jne	 $LN8@c_tanh
  0005e	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00066	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0006a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__isnan
  00070	85 c0		 test	 eax, eax
  00072	0f 85 26 01 00
	00		 jne	 $LN8@c_tanh
  00078	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00080	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00085	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  0008b	85 c0		 test	 eax, eax
  0008d	0f 84 0b 01 00
	00		 je	 $LN8@c_tanh
  00093	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0009b	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  000a0	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  000a8	7a 06		 jp	 SHORT $LN13@c_tanh
  000aa	0f 84 ee 00 00
	00		 je	 $LN8@c_tanh
$LN13@c_tanh:

; 784  :             if (z.real > 0) {

  000b0	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  000b8	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  000bc	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  000c4	76 6c		 jbe	 SHORT $LN7@c_tanh

; 785  :                 r.real = 1.0;

  000c6	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff0000000000000
  000ce	f2 0f 11 44 24
	40		 movsdx	 QWORD PTR r$[rsp], xmm0

; 786  :                 r.imag = copysign(0.,
; 787  :                                   2.*sin(z.imag)*cos(z.imag));

  000d4	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  000dc	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  000e1	e8 00 00 00 00	 call	 sin
  000e6	f2 0f 10 0d 00
	00 00 00	 movsdx	 xmm1, QWORD PTR __real@4000000000000000
  000ee	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  000f2	66 0f 28 c1	 movapd	 xmm0, xmm1
  000f6	f2 0f 11 44 24
	68		 movsdx	 QWORD PTR tv88[rsp], xmm0
  000fc	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00104	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00109	e8 00 00 00 00	 call	 cos
  0010e	f2 0f 10 4c 24
	68		 movsdx	 xmm1, QWORD PTR tv88[rsp]
  00114	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  00118	66 0f 28 c1	 movapd	 xmm0, xmm1
  0011c	66 0f 28 c8	 movapd	 xmm1, xmm0
  00120	66 0f 57 c0	 xorpd	 xmm0, xmm0
  00124	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  0012a	f2 0f 11 44 24
	48		 movsdx	 QWORD PTR r$[rsp+8], xmm0

; 788  :             }
; 789  :             else {

  00130	eb 6a		 jmp	 SHORT $LN6@c_tanh
$LN7@c_tanh:

; 790  :                 r.real = -1.0;

  00132	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bff0000000000000
  0013a	f2 0f 11 44 24
	40		 movsdx	 QWORD PTR r$[rsp], xmm0

; 791  :                 r.imag = copysign(0.,
; 792  :                                   2.*sin(z.imag)*cos(z.imag));

  00140	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00148	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0014d	e8 00 00 00 00	 call	 sin
  00152	f2 0f 10 0d 00
	00 00 00	 movsdx	 xmm1, QWORD PTR __real@4000000000000000
  0015a	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  0015e	66 0f 28 c1	 movapd	 xmm0, xmm1
  00162	f2 0f 11 44 24
	70		 movsdx	 QWORD PTR tv131[rsp], xmm0
  00168	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00170	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00175	e8 00 00 00 00	 call	 cos
  0017a	f2 0f 10 4c 24
	70		 movsdx	 xmm1, QWORD PTR tv131[rsp]
  00180	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  00184	66 0f 28 c1	 movapd	 xmm0, xmm1
  00188	66 0f 28 c8	 movapd	 xmm1, xmm0
  0018c	66 0f 57 c0	 xorpd	 xmm0, xmm0
  00190	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  00196	f2 0f 11 44 24
	48		 movsdx	 QWORD PTR r$[rsp+8], xmm0
$LN6@c_tanh:

; 793  :             }
; 794  :         }
; 795  :         else {

  0019c	eb 70		 jmp	 SHORT $LN5@c_tanh
$LN8@c_tanh:

; 796  :             r = tanh_special_values[special_type(z.real)]
; 797  :                                    [special_type(z.imag)];

  0019e	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  001a6	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  001aa	e8 00 00 00 00	 call	 special_type
  001af	48 98		 cdqe
  001b1	48 6b c0 70	 imul	 rax, 112		; 00000070H
  001b5	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:tanh_special_values
  001bc	48 03 c8	 add	 rcx, rax
  001bf	48 8b c1	 mov	 rax, rcx
  001c2	48 89 44 24 78	 mov	 QWORD PTR tv142[rsp], rax
  001c7	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR z$[rsp]
  001cf	f2 0f 10 41 08	 movsdx	 xmm0, QWORD PTR [rcx+8]
  001d4	e8 00 00 00 00	 call	 special_type
  001d9	48 98		 cdqe
  001db	48 6b c0 10	 imul	 rax, 16
  001df	48 8d 4c 24 58	 lea	 rcx, QWORD PTR $T21450[rsp]
  001e4	48 8b f9	 mov	 rdi, rcx
  001e7	48 8b 4c 24 78	 mov	 rcx, QWORD PTR tv142[rsp]
  001ec	48 8d 34 01	 lea	 rsi, QWORD PTR [rcx+rax]
  001f0	b9 10 00 00 00	 mov	 ecx, 16
  001f5	f3 a4		 rep movsb
  001f7	48 8d 44 24 40	 lea	 rax, QWORD PTR r$[rsp]
  001fc	48 8d 4c 24 58	 lea	 rcx, QWORD PTR $T21450[rsp]
  00201	48 8b f8	 mov	 rdi, rax
  00204	48 8b f1	 mov	 rsi, rcx
  00207	b9 10 00 00 00	 mov	 ecx, 16
  0020c	f3 a4		 rep movsb
$LN5@c_tanh:

; 798  :         }
; 799  :         /* need to set errno = EDOM if z.imag is +/-infinity and
; 800  :            z.real is finite */
; 801  :         if (Py_IS_INFINITY(z.imag) && Py_IS_FINITE(z.real))

  0020e	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00216	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0021b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00221	85 c0		 test	 eax, eax
  00223	75 3b		 jne	 SHORT $LN4@c_tanh
  00225	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0022d	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00232	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__isnan
  00238	85 c0		 test	 eax, eax
  0023a	75 24		 jne	 SHORT $LN4@c_tanh
  0023c	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00244	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00248	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  0024e	85 c0		 test	 eax, eax
  00250	74 0e		 je	 SHORT $LN4@c_tanh

; 802  :             errno = EDOM;

  00252	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  00258	c7 00 21 00 00
	00		 mov	 DWORD PTR [rax], 33	; 00000021H

; 803  :         else

  0025e	eb 0c		 jmp	 SHORT $LN3@c_tanh
$LN4@c_tanh:

; 804  :             errno = 0;

  00260	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  00266	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
$LN3@c_tanh:

; 805  :         return r;

  0026c	48 8d 44 24 40	 lea	 rax, QWORD PTR r$[rsp]
  00271	48 8b bc 24 c0
	00 00 00	 mov	 rdi, QWORD PTR $T21449[rsp]
  00279	48 8b f0	 mov	 rsi, rax
  0027c	b9 10 00 00 00	 mov	 ecx, 16
  00281	f3 a4		 rep movsb
  00283	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR $T21449[rsp]
  0028b	e9 fc 01 00 00	 jmp	 $LN11@c_tanh
$LN10@c_tanh:

; 806  :     }
; 807  : 
; 808  :     /* danger of overflow in 2.*z.imag !*/
; 809  :     if (fabs(z.real) > CM_LOG_LARGE_DOUBLE) {

  00290	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00298	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0029c	e8 00 00 00 00	 call	 fabs
  002a1	f2 0f 11 84 24
	80 00 00 00	 movsdx	 QWORD PTR tv163[rsp], xmm0
  002aa	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@7fcfffffffffffff
  002b2	e8 00 00 00 00	 call	 log
  002b7	f2 0f 10 8c 24
	80 00 00 00	 movsdx	 xmm1, QWORD PTR tv163[rsp]
  002c0	66 0f 2f c8	 comisd	 xmm1, xmm0
  002c4	0f 86 b9 00 00
	00		 jbe	 $LN2@c_tanh

; 810  :         r.real = copysign(1., z.real);

  002ca	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  002d2	f2 0f 10 08	 movsdx	 xmm1, QWORD PTR [rax]
  002d6	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff0000000000000
  002de	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  002e4	f2 0f 11 44 24
	40		 movsdx	 QWORD PTR r$[rsp], xmm0

; 811  :         r.imag = 4.*sin(z.imag)*cos(z.imag)*exp(-2.*fabs(z.real));

  002ea	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  002f2	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  002f7	e8 00 00 00 00	 call	 sin
  002fc	f2 0f 10 0d 00
	00 00 00	 movsdx	 xmm1, QWORD PTR __real@4010000000000000
  00304	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  00308	66 0f 28 c1	 movapd	 xmm0, xmm1
  0030c	f2 0f 11 84 24
	88 00 00 00	 movsdx	 QWORD PTR tv175[rsp], xmm0
  00315	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0031d	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00322	e8 00 00 00 00	 call	 cos
  00327	f2 0f 10 8c 24
	88 00 00 00	 movsdx	 xmm1, QWORD PTR tv175[rsp]
  00330	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  00334	66 0f 28 c1	 movapd	 xmm0, xmm1
  00338	f2 0f 11 84 24
	90 00 00 00	 movsdx	 QWORD PTR tv179[rsp], xmm0
  00341	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  00349	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0034d	e8 00 00 00 00	 call	 fabs
  00352	f2 0f 10 0d 00
	00 00 00	 movsdx	 xmm1, QWORD PTR __real@c000000000000000
  0035a	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  0035e	66 0f 28 c1	 movapd	 xmm0, xmm1
  00362	e8 00 00 00 00	 call	 exp
  00367	f2 0f 10 8c 24
	90 00 00 00	 movsdx	 xmm1, QWORD PTR tv179[rsp]
  00370	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  00374	66 0f 28 c1	 movapd	 xmm0, xmm1
  00378	f2 0f 11 44 24
	48		 movsdx	 QWORD PTR r$[rsp+8], xmm0

; 812  :     } else {

  0037e	e9 de 00 00 00	 jmp	 $LN1@c_tanh
$LN2@c_tanh:

; 813  :         tx = tanh(z.real);

  00383	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  0038b	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0038f	e8 00 00 00 00	 call	 tanh
  00394	f2 0f 11 44 24
	50		 movsdx	 QWORD PTR tx$[rsp], xmm0

; 814  :         ty = tan(z.imag);

  0039a	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  003a2	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  003a7	e8 00 00 00 00	 call	 tan
  003ac	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR ty$[rsp], xmm0

; 815  :         cx = 1./cosh(z.real);

  003b2	48 8b 84 24 c8
	00 00 00	 mov	 rax, QWORD PTR z$[rsp]
  003ba	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  003be	e8 00 00 00 00	 call	 cosh
  003c3	f2 0f 10 0d 00
	00 00 00	 movsdx	 xmm1, QWORD PTR __real@3ff0000000000000
  003cb	f2 0f 5e c8	 divsd	 xmm1, xmm0
  003cf	66 0f 28 c1	 movapd	 xmm0, xmm1
  003d3	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR cx$[rsp], xmm0

; 816  :         txty = tx*ty;

  003d9	f2 0f 10 44 24
	50		 movsdx	 xmm0, QWORD PTR tx$[rsp]
  003df	f2 0f 59 44 24
	30		 mulsd	 xmm0, QWORD PTR ty$[rsp]
  003e5	f2 0f 11 44 24
	38		 movsdx	 QWORD PTR txty$[rsp], xmm0

; 817  :         denom = 1. + txty*txty;

  003eb	f2 0f 10 44 24
	38		 movsdx	 xmm0, QWORD PTR txty$[rsp]
  003f1	f2 0f 59 44 24
	38		 mulsd	 xmm0, QWORD PTR txty$[rsp]
  003f7	f2 0f 10 0d 00
	00 00 00	 movsdx	 xmm1, QWORD PTR __real@3ff0000000000000
  003ff	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00403	66 0f 28 c1	 movapd	 xmm0, xmm1
  00407	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR denom$[rsp], xmm0

; 818  :         r.real = tx*(1.+ty*ty)/denom;

  0040d	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR ty$[rsp]
  00413	f2 0f 59 44 24
	30		 mulsd	 xmm0, QWORD PTR ty$[rsp]
  00419	f2 0f 10 0d 00
	00 00 00	 movsdx	 xmm1, QWORD PTR __real@3ff0000000000000
  00421	f2 0f 58 c8	 addsd	 xmm1, xmm0
  00425	66 0f 28 c1	 movapd	 xmm0, xmm1
  00429	f2 0f 10 4c 24
	50		 movsdx	 xmm1, QWORD PTR tx$[rsp]
  0042f	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  00433	66 0f 28 c1	 movapd	 xmm0, xmm1
  00437	f2 0f 5e 44 24
	20		 divsd	 xmm0, QWORD PTR denom$[rsp]
  0043d	f2 0f 11 44 24
	40		 movsdx	 QWORD PTR r$[rsp], xmm0

; 819  :         r.imag = ((ty/denom)*cx)*cx;

  00443	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR ty$[rsp]
  00449	f2 0f 5e 44 24
	20		 divsd	 xmm0, QWORD PTR denom$[rsp]
  0044f	f2 0f 59 44 24
	28		 mulsd	 xmm0, QWORD PTR cx$[rsp]
  00455	f2 0f 59 44 24
	28		 mulsd	 xmm0, QWORD PTR cx$[rsp]
  0045b	f2 0f 11 44 24
	48		 movsdx	 QWORD PTR r$[rsp+8], xmm0
$LN1@c_tanh:

; 820  :     }
; 821  :     errno = 0;

  00461	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  00467	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 822  :     return r;

  0046d	48 8d 44 24 40	 lea	 rax, QWORD PTR r$[rsp]
  00472	48 8b bc 24 c0
	00 00 00	 mov	 rdi, QWORD PTR $T21449[rsp]
  0047a	48 8b f0	 mov	 rsi, rax
  0047d	b9 10 00 00 00	 mov	 ecx, 16
  00482	f3 a4		 rep movsb
  00484	48 8b 84 24 c0
	00 00 00	 mov	 rax, QWORD PTR $T21449[rsp]
$LN11@c_tanh:

; 823  : }

  0048c	48 81 c4 a8 00
	00 00		 add	 rsp, 168		; 000000a8H
  00493	5f		 pop	 rdi
  00494	5e		 pop	 rsi
  00495	c3		 ret	 0
c_tanh	ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$cmath_tanh DD imagerel cmath_tanh
	DD	imagerel cmath_tanh+36
	DD	imagerel $unwind$cmath_tanh
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$cmath_tanh DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT cmath_tanh
_TEXT	SEGMENT
self$ = 48
args$ = 56
cmath_tanh PROC						; COMDAT

; 914  : FUNC1(cmath_tanh, c_tanh)

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  0000e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:c_tanh
  00015	48 8b 4c 24 38	 mov	 rcx, QWORD PTR args$[rsp]
  0001a	e8 00 00 00 00	 call	 math_1
  0001f	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00023	c3		 ret	 0
cmath_tanh ENDP
_TEXT	ENDS
PUBLIC	$T21466
PUBLIC	??_C@_07FENOPOFN@D?3phase?$AA@			; `string'
EXTRN	PyFloat_FromDouble:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$cmath_phase DD imagerel cmath_phase
	DD	imagerel cmath_phase+135
	DD	imagerel $unwind$cmath_phase
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$cmath_phase DD 031001H
	DD	0700ca210H
	DD	0600bH
xdata	ENDS
;	COMDAT ??_C@_07FENOPOFN@D?3phase?$AA@
CONST	SEGMENT
??_C@_07FENOPOFN@D?3phase?$AA@ DB 'D:phase', 00H	; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT cmath_phase
_TEXT	SEGMENT
z$ = 32
phi$ = 48
$T21466 = 64
self$ = 112
args$ = 120
cmath_phase PROC					; COMDAT

; 918  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 83 ec 58	 sub	 rsp, 88			; 00000058H

; 919  :     Py_complex z;
; 920  :     double phi;
; 921  :     if (!PyArg_ParseTuple(args, "D:phase", &z))

  00010	4c 8d 44 24 20	 lea	 r8, QWORD PTR z$[rsp]
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_07FENOPOFN@D?3phase?$AA@
  0001c	48 8b 4c 24 78	 mov	 rcx, QWORD PTR args$[rsp]
  00021	e8 00 00 00 00	 call	 PyArg_ParseTuple
  00026	85 c0		 test	 eax, eax
  00028	75 04		 jne	 SHORT $LN3@cmath_phas

; 922  :         return NULL;

  0002a	33 c0		 xor	 eax, eax
  0002c	eb 52		 jmp	 SHORT $LN4@cmath_phas
$LN3@cmath_phas:

; 923  :     errno = 0;

  0002e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  00034	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 924  :     PyFPE_START_PROTECT("arg function", return 0)
; 925  :     phi = c_atan2(z);

  0003a	48 8d 44 24 40	 lea	 rax, QWORD PTR $T21466[rsp]
  0003f	48 8d 4c 24 20	 lea	 rcx, QWORD PTR z$[rsp]
  00044	48 8b f8	 mov	 rdi, rax
  00047	48 8b f1	 mov	 rsi, rcx
  0004a	b9 10 00 00 00	 mov	 ecx, 16
  0004f	f3 a4		 rep movsb
  00051	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T21466[rsp]
  00056	e8 00 00 00 00	 call	 c_atan2
  0005b	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR phi$[rsp], xmm0

; 926  :     PyFPE_END_PROTECT(phi)
; 927  :     if (errno != 0)

  00061	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  00067	83 38 00	 cmp	 DWORD PTR [rax], 0
  0006a	74 09		 je	 SHORT $LN2@cmath_phas

; 928  :         return math_error();

  0006c	e8 00 00 00 00	 call	 math_error
  00071	eb 0d		 jmp	 SHORT $LN4@cmath_phas

; 929  :     else

  00073	eb 0b		 jmp	 SHORT $LN1@cmath_phas
$LN2@cmath_phas:

; 930  :         return PyFloat_FromDouble(phi);

  00075	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR phi$[rsp]
  0007b	e8 00 00 00 00	 call	 PyFloat_FromDouble
$LN1@cmath_phas:
$LN4@cmath_phas:

; 931  : }

  00080	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00084	5f		 pop	 rdi
  00085	5e		 pop	 rsi
  00086	c3		 ret	 0
cmath_phase ENDP
_TEXT	ENDS
PUBLIC	__real@400921fb54442d18
PUBLIC	__real@4002d97c7f3321d2
PUBLIC	__real@3fe921fb54442d18
;	COMDAT pdata
pdata	SEGMENT
$pdata$c_atan2 DD imagerel c_atan2
	DD	imagerel c_atan2+456
	DD	imagerel $unwind$c_atan2
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$c_atan2 DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT __real@400921fb54442d18
CONST	SEGMENT
__real@400921fb54442d18 DQ 0400921fb54442d18r	; 3.14159
CONST	ENDS
;	COMDAT __real@4002d97c7f3321d2
CONST	SEGMENT
__real@4002d97c7f3321d2 DQ 04002d97c7f3321d2r	; 2.35619
CONST	ENDS
;	COMDAT __real@3fe921fb54442d18
CONST	SEGMENT
__real@3fe921fb54442d18 DQ 03fe921fb54442d18r	; 0.785398
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT c_atan2
_TEXT	SEGMENT
z$ = 48
c_atan2	PROC						; COMDAT

; 272  : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 273  :     if (Py_IS_NAN(z.real) || Py_IS_NAN(z.imag))

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR z$[rsp]
  0000e	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00012	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__isnan
  00018	85 c0		 test	 eax, eax
  0001a	75 14		 jne	 SHORT $LN10@c_atan2
  0001c	48 8b 44 24 30	 mov	 rax, QWORD PTR z$[rsp]
  00021	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00026	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__isnan
  0002c	85 c0		 test	 eax, eax
  0002e	74 18		 je	 SHORT $LN11@c_atan2
$LN10@c_atan2:

; 274  :         return Py_NAN;

  00030	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  00037	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0003b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  00043	e9 7b 01 00 00	 jmp	 $LN12@c_atan2
$LN11@c_atan2:

; 275  :     if (Py_IS_INFINITY(z.imag)) {

  00048	48 8b 44 24 30	 mov	 rax, QWORD PTR z$[rsp]
  0004d	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  00052	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00058	85 c0		 test	 eax, eax
  0005a	0f 85 ba 00 00
	00		 jne	 $LN9@c_atan2
  00060	48 8b 44 24 30	 mov	 rax, QWORD PTR z$[rsp]
  00065	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0006a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__isnan
  00070	85 c0		 test	 eax, eax
  00072	0f 85 a2 00 00
	00		 jne	 $LN9@c_atan2

; 276  :         if (Py_IS_INFINITY(z.real)) {

  00078	48 8b 44 24 30	 mov	 rax, QWORD PTR z$[rsp]
  0007d	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00081	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00087	85 c0		 test	 eax, eax
  00089	75 72		 jne	 SHORT $LN8@c_atan2
  0008b	48 8b 44 24 30	 mov	 rax, QWORD PTR z$[rsp]
  00090	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00094	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__isnan
  0009a	85 c0		 test	 eax, eax
  0009c	75 5f		 jne	 SHORT $LN8@c_atan2

; 277  :             if (copysign(1., z.real) == 1.)

  0009e	48 8b 44 24 30	 mov	 rax, QWORD PTR z$[rsp]
  000a3	f2 0f 10 08	 movsdx	 xmm1, QWORD PTR [rax]
  000a7	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff0000000000000
  000af	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  000b5	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@3ff0000000000000
  000bd	7a 21		 jp	 SHORT $LN7@c_atan2
  000bf	75 1f		 jne	 SHORT $LN7@c_atan2

; 278  :                 /* atan2(+-inf, +inf) == +-pi/4 */
; 279  :                 return copysign(0.25*Py_MATH_PI, z.imag);

  000c1	48 8b 44 24 30	 mov	 rax, QWORD PTR z$[rsp]
  000c6	f2 0f 10 48 08	 movsdx	 xmm1, QWORD PTR [rax+8]
  000cb	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3fe921fb54442d18
  000d3	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  000d9	e9 e5 00 00 00	 jmp	 $LN12@c_atan2

; 280  :             else

  000de	eb 1d		 jmp	 SHORT $LN6@c_atan2
$LN7@c_atan2:

; 281  :                 /* atan2(+-inf, -inf) == +-pi*3/4 */
; 282  :                 return copysign(0.75*Py_MATH_PI, z.imag);

  000e0	48 8b 44 24 30	 mov	 rax, QWORD PTR z$[rsp]
  000e5	f2 0f 10 48 08	 movsdx	 xmm1, QWORD PTR [rax+8]
  000ea	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@4002d97c7f3321d2
  000f2	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  000f8	e9 c6 00 00 00	 jmp	 $LN12@c_atan2
$LN6@c_atan2:
$LN8@c_atan2:

; 283  :         }
; 284  :         /* atan2(+-inf, x) == +-pi/2 for finite x */
; 285  :         return copysign(0.5*Py_MATH_PI, z.imag);

  000fd	48 8b 44 24 30	 mov	 rax, QWORD PTR z$[rsp]
  00102	f2 0f 10 48 08	 movsdx	 xmm1, QWORD PTR [rax+8]
  00107	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  0010f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  00115	e9 a9 00 00 00	 jmp	 $LN12@c_atan2
$LN9@c_atan2:

; 286  :     }
; 287  :     if (Py_IS_INFINITY(z.real) || z.imag == 0.) {

  0011a	48 8b 44 24 30	 mov	 rax, QWORD PTR z$[rsp]
  0011f	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00123	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00129	85 c0		 test	 eax, eax
  0012b	75 13		 jne	 SHORT $LN3@c_atan2
  0012d	48 8b 44 24 30	 mov	 rax, QWORD PTR z$[rsp]
  00132	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00136	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__isnan
  0013c	85 c0		 test	 eax, eax
  0013e	74 16		 je	 SHORT $LN4@c_atan2
$LN3@c_atan2:
  00140	48 8b 44 24 30	 mov	 rax, QWORD PTR z$[rsp]
  00145	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  0014a	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00152	7a 57		 jp	 SHORT $LN5@c_atan2
  00154	75 55		 jne	 SHORT $LN5@c_atan2
$LN4@c_atan2:

; 288  :         if (copysign(1., z.real) == 1.)

  00156	48 8b 44 24 30	 mov	 rax, QWORD PTR z$[rsp]
  0015b	f2 0f 10 08	 movsdx	 xmm1, QWORD PTR [rax]
  0015f	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff0000000000000
  00167	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  0016d	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@3ff0000000000000
  00175	7a 1a		 jp	 SHORT $LN2@c_atan2
  00177	75 18		 jne	 SHORT $LN2@c_atan2

; 289  :             /* atan2(+-y, +inf) = atan2(+-0, +x) = +-0. */
; 290  :             return copysign(0., z.imag);

  00179	48 8b 44 24 30	 mov	 rax, QWORD PTR z$[rsp]
  0017e	f2 0f 10 48 08	 movsdx	 xmm1, QWORD PTR [rax+8]
  00183	66 0f 57 c0	 xorpd	 xmm0, xmm0
  00187	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  0018d	eb 34		 jmp	 SHORT $LN12@c_atan2

; 291  :         else

  0018f	eb 1a		 jmp	 SHORT $LN1@c_atan2
$LN2@c_atan2:

; 292  :             /* atan2(+-y, -inf) = atan2(+-0., -x) = +-pi. */
; 293  :             return copysign(Py_MATH_PI, z.imag);

  00191	48 8b 44 24 30	 mov	 rax, QWORD PTR z$[rsp]
  00196	f2 0f 10 48 08	 movsdx	 xmm1, QWORD PTR [rax+8]
  0019b	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@400921fb54442d18
  001a3	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  001a9	eb 18		 jmp	 SHORT $LN12@c_atan2
$LN1@c_atan2:
$LN5@c_atan2:

; 294  :     }
; 295  :     return atan2(z.imag, z.real);

  001ab	48 8b 44 24 30	 mov	 rax, QWORD PTR z$[rsp]
  001b0	f2 0f 10 08	 movsdx	 xmm1, QWORD PTR [rax]
  001b4	48 8b 44 24 30	 mov	 rax, QWORD PTR z$[rsp]
  001b9	f2 0f 10 40 08	 movsdx	 xmm0, QWORD PTR [rax+8]
  001be	e8 00 00 00 00	 call	 atan2
$LN12@c_atan2:

; 296  : }

  001c3	48 83 c4 28	 add	 rsp, 40			; 00000028H
  001c7	c3		 ret	 0
c_atan2	ENDP
_TEXT	ENDS
PUBLIC	??_C@_02EOPBOLLC@dd?$AA@			; `string'
PUBLIC	$T21486
PUBLIC	$T21485
PUBLIC	??_C@_07OLFAJBI@D?3polar?$AA@			; `string'
EXTRN	Py_BuildValue:PROC
EXTRN	_Py_c_abs:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$cmath_polar DD imagerel cmath_polar
	DD	imagerel cmath_polar+191
	DD	imagerel $unwind$cmath_polar
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$cmath_polar DD 031001H
	DD	0700cc210H
	DD	0600bH
xdata	ENDS
;	COMDAT ??_C@_02EOPBOLLC@dd?$AA@
CONST	SEGMENT
??_C@_02EOPBOLLC@dd?$AA@ DB 'dd', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_07OLFAJBI@D?3polar?$AA@
CONST	SEGMENT
??_C@_07OLFAJBI@D?3polar?$AA@ DB 'D:polar', 00H		; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT cmath_polar
_TEXT	SEGMENT
z$ = 32
r$ = 48
phi$ = 56
$T21485 = 64
$T21486 = 80
self$ = 128
args$ = 136
cmath_polar PROC					; COMDAT

; 939  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 83 ec 68	 sub	 rsp, 104		; 00000068H

; 940  :     Py_complex z;
; 941  :     double r, phi;
; 942  :     if (!PyArg_ParseTuple(args, "D:polar", &z))

  00010	4c 8d 44 24 20	 lea	 r8, QWORD PTR z$[rsp]
  00015	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_07OLFAJBI@D?3polar?$AA@
  0001c	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR args$[rsp]
  00024	e8 00 00 00 00	 call	 PyArg_ParseTuple
  00029	85 c0		 test	 eax, eax
  0002b	75 07		 jne	 SHORT $LN3@cmath_pola

; 943  :         return NULL;

  0002d	33 c0		 xor	 eax, eax
  0002f	e9 84 00 00 00	 jmp	 $LN4@cmath_pola
$LN3@cmath_pola:

; 944  :     PyFPE_START_PROTECT("polar function", return 0)
; 945  :     phi = c_atan2(z); /* should not cause any exception */

  00034	48 8d 44 24 40	 lea	 rax, QWORD PTR $T21485[rsp]
  00039	48 8d 4c 24 20	 lea	 rcx, QWORD PTR z$[rsp]
  0003e	48 8b f8	 mov	 rdi, rax
  00041	48 8b f1	 mov	 rsi, rcx
  00044	b9 10 00 00 00	 mov	 ecx, 16
  00049	f3 a4		 rep movsb
  0004b	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T21485[rsp]
  00050	e8 00 00 00 00	 call	 c_atan2
  00055	f2 0f 11 44 24
	38		 movsdx	 QWORD PTR phi$[rsp], xmm0

; 946  :     r = c_abs(z); /* sets errno to ERANGE on overflow;  otherwise 0 */

  0005b	48 8d 44 24 50	 lea	 rax, QWORD PTR $T21486[rsp]
  00060	48 8d 4c 24 20	 lea	 rcx, QWORD PTR z$[rsp]
  00065	48 8b f8	 mov	 rdi, rax
  00068	48 8b f1	 mov	 rsi, rcx
  0006b	b9 10 00 00 00	 mov	 ecx, 16
  00070	f3 a4		 rep movsb
  00072	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T21486[rsp]
  00077	e8 00 00 00 00	 call	 _Py_c_abs
  0007c	f2 0f 11 44 24
	30		 movsdx	 QWORD PTR r$[rsp], xmm0

; 947  :     PyFPE_END_PROTECT(r)
; 948  :     if (errno != 0)

  00082	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  00088	83 38 00	 cmp	 DWORD PTR [rax], 0
  0008b	74 09		 je	 SHORT $LN2@cmath_pola

; 949  :         return math_error();

  0008d	e8 00 00 00 00	 call	 math_error
  00092	eb 24		 jmp	 SHORT $LN4@cmath_pola

; 950  :     else

  00094	eb 22		 jmp	 SHORT $LN1@cmath_pola
$LN2@cmath_pola:

; 951  :         return Py_BuildValue("dd", r, phi);

  00096	f2 0f 10 54 24
	38		 movsdx	 xmm2, QWORD PTR phi$[rsp]
  0009c	66 49 0f 7e d0	 movd	 r8, xmm2
  000a1	f2 0f 10 4c 24
	30		 movsdx	 xmm1, QWORD PTR r$[rsp]
  000a7	66 48 0f 7e ca	 movd	 rdx, xmm1
  000ac	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_02EOPBOLLC@dd?$AA@
  000b3	e8 00 00 00 00	 call	 Py_BuildValue
$LN1@cmath_pola:
$LN4@cmath_pola:

; 952  : }

  000b8	48 83 c4 68	 add	 rsp, 104		; 00000068H
  000bc	5f		 pop	 rdi
  000bd	5e		 pop	 rsi
  000be	c3		 ret	 0
cmath_polar ENDP
_TEXT	ENDS
PUBLIC	$T21493
PUBLIC	$T21495
PUBLIC	??_C@_07JKEMLPPP@dd?3rect?$AA@			; `string'
_BSS	SEGMENT
rect_special_values DB 0310H DUP (?)
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$cmath_rect DD imagerel cmath_rect
	DD	imagerel cmath_rect+767
	DD	imagerel $unwind$cmath_rect
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$cmath_rect DD 031001H
	DD	0700ce210H
	DD	0600bH
xdata	ENDS
;	COMDAT ??_C@_07JKEMLPPP@dd?3rect?$AA@
CONST	SEGMENT
??_C@_07JKEMLPPP@dd?3rect?$AA@ DB 'dd:rect', 00H	; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT cmath_rect
_TEXT	SEGMENT
z$ = 32
r$ = 48
phi$ = 56
$T21493 = 64
$T21495 = 80
tv146 = 96
self$ = 144
args$ = 152
cmath_rect PROC						; COMDAT

; 974  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	56		 push	 rsi
  0000b	57		 push	 rdi
  0000c	48 83 ec 78	 sub	 rsp, 120		; 00000078H

; 975  :     Py_complex z;
; 976  :     double r, phi;
; 977  :     if (!PyArg_ParseTuple(args, "dd:rect", &r, &phi))

  00010	4c 8d 4c 24 38	 lea	 r9, QWORD PTR phi$[rsp]
  00015	4c 8d 44 24 30	 lea	 r8, QWORD PTR r$[rsp]
  0001a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_07JKEMLPPP@dd?3rect?$AA@
  00021	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR args$[rsp]
  00029	e8 00 00 00 00	 call	 PyArg_ParseTuple
  0002e	85 c0		 test	 eax, eax
  00030	75 07		 jne	 SHORT $LN14@cmath_rect

; 978  :         return NULL;

  00032	33 c0		 xor	 eax, eax
  00034	e9 bf 02 00 00	 jmp	 $LN15@cmath_rect
$LN14@cmath_rect:

; 979  :     errno = 0;

  00039	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  0003f	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 980  :     PyFPE_START_PROTECT("rect function", return 0)
; 981  : 
; 982  :     /* deal with special values */
; 983  :     if (!Py_IS_FINITE(r) || !Py_IS_FINITE(phi)) {

  00045	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR r$[rsp]
  0004b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00051	85 c0		 test	 eax, eax
  00053	74 14		 je	 SHORT $LN12@cmath_rect
  00055	f2 0f 10 44 24
	38		 movsdx	 xmm0, QWORD PTR phi$[rsp]
  0005b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00061	85 c0		 test	 eax, eax
  00063	0f 85 d2 01 00
	00		 jne	 $LN13@cmath_rect
$LN12@cmath_rect:

; 984  :         /* if r is +/-infinity and phi is finite but nonzero then
; 985  :            result is (+-INF +-INF i), but we need to compute cos(phi)
; 986  :            and sin(phi) to figure out the signs. */
; 987  :         if (Py_IS_INFINITY(r) && (Py_IS_FINITE(phi)
; 988  :                                   && (phi != 0.))) {

  00069	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR r$[rsp]
  0006f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00075	85 c0		 test	 eax, eax
  00077	0f 85 fa 00 00
	00		 jne	 $LN11@cmath_rect
  0007d	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR r$[rsp]
  00083	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__isnan
  00089	85 c0		 test	 eax, eax
  0008b	0f 85 e6 00 00
	00		 jne	 $LN11@cmath_rect
  00091	f2 0f 10 44 24
	38		 movsdx	 xmm0, QWORD PTR phi$[rsp]
  00097	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  0009d	85 c0		 test	 eax, eax
  0009f	0f 84 d2 00 00
	00		 je	 $LN11@cmath_rect
  000a5	f2 0f 10 44 24
	38		 movsdx	 xmm0, QWORD PTR phi$[rsp]
  000ab	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  000b3	7a 06		 jp	 SHORT $LN18@cmath_rect
  000b5	0f 84 bc 00 00
	00		 je	 $LN11@cmath_rect
$LN18@cmath_rect:

; 989  :             if (r > 0) {

  000bb	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR r$[rsp]
  000c1	66 0f 2f 05 00
	00 00 00	 comisd	 xmm0, QWORD PTR __real@0000000000000000
  000c9	76 4e		 jbe	 SHORT $LN10@cmath_rect

; 990  :                 z.real = copysign(INF, cos(phi));

  000cb	f2 0f 10 44 24
	38		 movsdx	 xmm0, QWORD PTR phi$[rsp]
  000d1	e8 00 00 00 00	 call	 cos
  000d6	66 0f 28 c8	 movapd	 xmm1, xmm0
  000da	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  000e1	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  000e5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  000eb	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR z$[rsp], xmm0

; 991  :                 z.imag = copysign(INF, sin(phi));

  000f1	f2 0f 10 44 24
	38		 movsdx	 xmm0, QWORD PTR phi$[rsp]
  000f7	e8 00 00 00 00	 call	 sin
  000fc	66 0f 28 c8	 movapd	 xmm1, xmm0
  00100	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  00107	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0010b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  00111	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR z$[rsp+8], xmm0

; 992  :             }
; 993  :             else {

  00117	eb 5c		 jmp	 SHORT $LN9@cmath_rect
$LN10@cmath_rect:

; 994  :                 z.real = -copysign(INF, cos(phi));

  00119	f2 0f 10 44 24
	38		 movsdx	 xmm0, QWORD PTR phi$[rsp]
  0011f	e8 00 00 00 00	 call	 cos
  00124	66 0f 28 c8	 movapd	 xmm1, xmm0
  00128	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0012f	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00133	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  00139	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  00141	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR z$[rsp], xmm0

; 995  :                 z.imag = -copysign(INF, sin(phi));

  00147	f2 0f 10 44 24
	38		 movsdx	 xmm0, QWORD PTR phi$[rsp]
  0014d	e8 00 00 00 00	 call	 sin
  00152	66 0f 28 c8	 movapd	 xmm1, xmm0
  00156	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0015d	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00161	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__copysign
  00167	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  0016f	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR z$[rsp+8], xmm0
$LN9@cmath_rect:

; 996  :             }
; 997  :         }
; 998  :         else {

  00175	eb 63		 jmp	 SHORT $LN8@cmath_rect
$LN11@cmath_rect:

; 999  :             z = rect_special_values[special_type(r)]
; 1000 :                                    [special_type(phi)];

  00177	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR r$[rsp]
  0017d	e8 00 00 00 00	 call	 special_type
  00182	48 98		 cdqe
  00184	48 6b c0 70	 imul	 rax, 112		; 00000070H
  00188	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:rect_special_values
  0018f	48 03 c8	 add	 rcx, rax
  00192	48 8b c1	 mov	 rax, rcx
  00195	48 89 44 24 60	 mov	 QWORD PTR tv146[rsp], rax
  0019a	f2 0f 10 44 24
	38		 movsdx	 xmm0, QWORD PTR phi$[rsp]
  001a0	e8 00 00 00 00	 call	 special_type
  001a5	48 98		 cdqe
  001a7	48 6b c0 10	 imul	 rax, 16
  001ab	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T21495[rsp]
  001b0	48 8b f9	 mov	 rdi, rcx
  001b3	48 8b 4c 24 60	 mov	 rcx, QWORD PTR tv146[rsp]
  001b8	48 8d 34 01	 lea	 rsi, QWORD PTR [rcx+rax]
  001bc	b9 10 00 00 00	 mov	 ecx, 16
  001c1	f3 a4		 rep movsb
  001c3	48 8d 44 24 20	 lea	 rax, QWORD PTR z$[rsp]
  001c8	48 8d 4c 24 50	 lea	 rcx, QWORD PTR $T21495[rsp]
  001cd	48 8b f8	 mov	 rdi, rax
  001d0	48 8b f1	 mov	 rsi, rcx
  001d3	b9 10 00 00 00	 mov	 ecx, 16
  001d8	f3 a4		 rep movsb
$LN8@cmath_rect:

; 1001 :         }
; 1002 :         /* need to set errno = EDOM if r is a nonzero number and phi
; 1003 :            is infinite */
; 1004 :         if (r != 0. && !Py_IS_NAN(r) && Py_IS_INFINITY(phi))

  001da	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR r$[rsp]
  001e0	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  001e8	7a 02		 jp	 SHORT $LN17@cmath_rect
  001ea	74 3e		 je	 SHORT $LN7@cmath_rect
$LN17@cmath_rect:
  001ec	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR r$[rsp]
  001f2	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__isnan
  001f8	85 c0		 test	 eax, eax
  001fa	75 2e		 jne	 SHORT $LN7@cmath_rect
  001fc	f2 0f 10 44 24
	38		 movsdx	 xmm0, QWORD PTR phi$[rsp]
  00202	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00208	85 c0		 test	 eax, eax
  0020a	75 1e		 jne	 SHORT $LN7@cmath_rect
  0020c	f2 0f 10 44 24
	38		 movsdx	 xmm0, QWORD PTR phi$[rsp]
  00212	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__isnan
  00218	85 c0		 test	 eax, eax
  0021a	75 0e		 jne	 SHORT $LN7@cmath_rect

; 1005 :             errno = EDOM;

  0021c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  00222	c7 00 21 00 00
	00		 mov	 DWORD PTR [rax], 33	; 00000021H

; 1006 :         else

  00228	eb 0c		 jmp	 SHORT $LN6@cmath_rect
$LN7@cmath_rect:

; 1007 :             errno = 0;

  0022a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  00230	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
$LN6@cmath_rect:

; 1008 :     }
; 1009 :     else if (phi == 0.0) {

  00236	e9 88 00 00 00	 jmp	 $LN5@cmath_rect
$LN13@cmath_rect:
  0023b	f2 0f 10 44 24
	38		 movsdx	 xmm0, QWORD PTR phi$[rsp]
  00241	66 0f 2e 05 00
	00 00 00	 ucomisd xmm0, QWORD PTR __real@0000000000000000
  00249	7a 2e		 jp	 SHORT $LN4@cmath_rect
  0024b	75 2c		 jne	 SHORT $LN4@cmath_rect

; 1010 :         /* Workaround for buggy results with phi=-0.0 on OS X 10.8.  See
; 1011 :            bugs.python.org/issue18513. */
; 1012 :         z.real = r;

  0024d	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR r$[rsp]
  00253	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR z$[rsp], xmm0

; 1013 :         z.imag = r * phi;

  00259	f2 0f 10 44 24
	30		 movsdx	 xmm0, QWORD PTR r$[rsp]
  0025f	f2 0f 59 44 24
	38		 mulsd	 xmm0, QWORD PTR phi$[rsp]
  00265	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR z$[rsp+8], xmm0

; 1014 :         errno = 0;

  0026b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  00271	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0

; 1015 :     }
; 1016 :     else {

  00277	eb 4a		 jmp	 SHORT $LN3@cmath_rect
$LN4@cmath_rect:

; 1017 :         z.real = r * cos(phi);

  00279	f2 0f 10 44 24
	38		 movsdx	 xmm0, QWORD PTR phi$[rsp]
  0027f	e8 00 00 00 00	 call	 cos
  00284	f2 0f 10 4c 24
	30		 movsdx	 xmm1, QWORD PTR r$[rsp]
  0028a	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  0028e	66 0f 28 c1	 movapd	 xmm0, xmm1
  00292	f2 0f 11 44 24
	20		 movsdx	 QWORD PTR z$[rsp], xmm0

; 1018 :         z.imag = r * sin(phi);

  00298	f2 0f 10 44 24
	38		 movsdx	 xmm0, QWORD PTR phi$[rsp]
  0029e	e8 00 00 00 00	 call	 sin
  002a3	f2 0f 10 4c 24
	30		 movsdx	 xmm1, QWORD PTR r$[rsp]
  002a9	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  002ad	66 0f 28 c1	 movapd	 xmm0, xmm1
  002b1	f2 0f 11 44 24
	28		 movsdx	 QWORD PTR z$[rsp+8], xmm0

; 1019 :         errno = 0;

  002b7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  002bd	c7 00 00 00 00
	00		 mov	 DWORD PTR [rax], 0
$LN3@cmath_rect:
$LN5@cmath_rect:

; 1020 :     }
; 1021 : 
; 1022 :     PyFPE_END_PROTECT(z)
; 1023 :     if (errno != 0)

  002c3	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__errno
  002c9	83 38 00	 cmp	 DWORD PTR [rax], 0
  002cc	74 09		 je	 SHORT $LN2@cmath_rect

; 1024 :         return math_error();

  002ce	e8 00 00 00 00	 call	 math_error
  002d3	eb 23		 jmp	 SHORT $LN15@cmath_rect

; 1025 :     else

  002d5	eb 21		 jmp	 SHORT $LN1@cmath_rect
$LN2@cmath_rect:

; 1026 :         return PyComplex_FromCComplex(z);

  002d7	48 8d 44 24 40	 lea	 rax, QWORD PTR $T21493[rsp]
  002dc	48 8d 4c 24 20	 lea	 rcx, QWORD PTR z$[rsp]
  002e1	48 8b f8	 mov	 rdi, rax
  002e4	48 8b f1	 mov	 rsi, rcx
  002e7	b9 10 00 00 00	 mov	 ecx, 16
  002ec	f3 a4		 rep movsb
  002ee	48 8d 4c 24 40	 lea	 rcx, QWORD PTR $T21493[rsp]
  002f3	e8 00 00 00 00	 call	 PyComplex_FromCComplex
$LN1@cmath_rect:
$LN15@cmath_rect:

; 1027 : }

  002f8	48 83 c4 78	 add	 rsp, 120		; 00000078H
  002fc	5f		 pop	 rdi
  002fd	5e		 pop	 rsi
  002fe	c3		 ret	 0
cmath_rect ENDP
_TEXT	ENDS
PUBLIC	??_C@_0L@LDOEJOIF@D?3isfinite?$AA@		; `string'
EXTRN	PyBool_FromLong:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$cmath_isfinite DD imagerel cmath_isfinite
	DD	imagerel cmath_isfinite+108
	DD	imagerel $unwind$cmath_isfinite
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$cmath_isfinite DD 010e01H
	DD	0820eH
xdata	ENDS
;	COMDAT ??_C@_0L@LDOEJOIF@D?3isfinite?$AA@
CONST	SEGMENT
??_C@_0L@LDOEJOIF@D?3isfinite?$AA@ DB 'D:isfinite', 00H	; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT cmath_isfinite
_TEXT	SEGMENT
z$ = 32
tv76 = 48
self$ = 80
args$ = 88
cmath_isfinite PROC					; COMDAT

; 1035 : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 1036 :     Py_complex z;
; 1037 :     if (!PyArg_ParseTuple(args, "D:isfinite", &z))

  0000e	4c 8d 44 24 20	 lea	 r8, QWORD PTR z$[rsp]
  00013	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0L@LDOEJOIF@D?3isfinite?$AA@
  0001a	48 8b 4c 24 58	 mov	 rcx, QWORD PTR args$[rsp]
  0001f	e8 00 00 00 00	 call	 PyArg_ParseTuple
  00024	85 c0		 test	 eax, eax
  00026	75 04		 jne	 SHORT $LN1@cmath_isfi

; 1038 :         return NULL;

  00028	33 c0		 xor	 eax, eax
  0002a	eb 3b		 jmp	 SHORT $LN2@cmath_isfi
$LN1@cmath_isfi:

; 1039 :     return PyBool_FromLong(Py_IS_FINITE(z.real) && Py_IS_FINITE(z.imag));

  0002c	f2 0f 10 44 24
	20		 movsdx	 xmm0, QWORD PTR z$[rsp]
  00032	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00038	85 c0		 test	 eax, eax
  0003a	74 1a		 je	 SHORT $LN4@cmath_isfi
  0003c	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR z$[rsp+8]
  00042	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00048	85 c0		 test	 eax, eax
  0004a	74 0a		 je	 SHORT $LN4@cmath_isfi
  0004c	c7 44 24 30 01
	00 00 00	 mov	 DWORD PTR tv76[rsp], 1
  00054	eb 08		 jmp	 SHORT $LN5@cmath_isfi
$LN4@cmath_isfi:
  00056	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR tv76[rsp], 0
$LN5@cmath_isfi:
  0005e	8b 4c 24 30	 mov	 ecx, DWORD PTR tv76[rsp]
  00062	e8 00 00 00 00	 call	 PyBool_FromLong
$LN2@cmath_isfi:

; 1040 : }

  00067	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0006b	c3		 ret	 0
cmath_isfinite ENDP
_TEXT	ENDS
PUBLIC	??_C@_07MDACLFBO@D?3isnan?$AA@			; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$cmath_isnan DD imagerel cmath_isnan
	DD	imagerel cmath_isnan+108
	DD	imagerel $unwind$cmath_isnan
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$cmath_isnan DD 010e01H
	DD	0820eH
xdata	ENDS
;	COMDAT ??_C@_07MDACLFBO@D?3isnan?$AA@
CONST	SEGMENT
??_C@_07MDACLFBO@D?3isnan?$AA@ DB 'D:isnan', 00H	; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT cmath_isnan
_TEXT	SEGMENT
z$ = 32
tv76 = 48
self$ = 80
args$ = 88
cmath_isnan PROC					; COMDAT

; 1048 : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 1049 :     Py_complex z;
; 1050 :     if (!PyArg_ParseTuple(args, "D:isnan", &z))

  0000e	4c 8d 44 24 20	 lea	 r8, QWORD PTR z$[rsp]
  00013	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_07MDACLFBO@D?3isnan?$AA@
  0001a	48 8b 4c 24 58	 mov	 rcx, QWORD PTR args$[rsp]
  0001f	e8 00 00 00 00	 call	 PyArg_ParseTuple
  00024	85 c0		 test	 eax, eax
  00026	75 04		 jne	 SHORT $LN1@cmath_isna

; 1051 :         return NULL;

  00028	33 c0		 xor	 eax, eax
  0002a	eb 3b		 jmp	 SHORT $LN2@cmath_isna
$LN1@cmath_isna:

; 1052 :     return PyBool_FromLong(Py_IS_NAN(z.real) || Py_IS_NAN(z.imag));

  0002c	f2 0f 10 44 24
	20		 movsdx	 xmm0, QWORD PTR z$[rsp]
  00032	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__isnan
  00038	85 c0		 test	 eax, eax
  0003a	75 1a		 jne	 SHORT $LN4@cmath_isna
  0003c	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR z$[rsp+8]
  00042	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__isnan
  00048	85 c0		 test	 eax, eax
  0004a	75 0a		 jne	 SHORT $LN4@cmath_isna
  0004c	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR tv76[rsp], 0
  00054	eb 08		 jmp	 SHORT $LN5@cmath_isna
$LN4@cmath_isna:
  00056	c7 44 24 30 01
	00 00 00	 mov	 DWORD PTR tv76[rsp], 1
$LN5@cmath_isna:
  0005e	8b 4c 24 30	 mov	 ecx, DWORD PTR tv76[rsp]
  00062	e8 00 00 00 00	 call	 PyBool_FromLong
$LN2@cmath_isna:

; 1053 : }

  00067	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0006b	c3		 ret	 0
cmath_isnan ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$cmath_isinf DD imagerel cmath_isinf
	DD	imagerel cmath_isinf+140
	DD	imagerel $unwind$cmath_isinf
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$cmath_isinf DD 010e01H
	DD	0820eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT cmath_isinf
_TEXT	SEGMENT
z$ = 32
tv82 = 48
self$ = 80
args$ = 88
cmath_isinf PROC					; COMDAT

; 1061 : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 1062 :     Py_complex z;
; 1063 :     if (!PyArg_ParseTuple(args, "D:isnan", &z))

  0000e	4c 8d 44 24 20	 lea	 r8, QWORD PTR z$[rsp]
  00013	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_07MDACLFBO@D?3isnan?$AA@
  0001a	48 8b 4c 24 58	 mov	 rcx, QWORD PTR args$[rsp]
  0001f	e8 00 00 00 00	 call	 PyArg_ParseTuple
  00024	85 c0		 test	 eax, eax
  00026	75 04		 jne	 SHORT $LN1@cmath_isin

; 1064 :         return NULL;

  00028	33 c0		 xor	 eax, eax
  0002a	eb 5b		 jmp	 SHORT $LN2@cmath_isin
$LN1@cmath_isin:

; 1065 :     return PyBool_FromLong(Py_IS_INFINITY(z.real) ||
; 1066 :                            Py_IS_INFINITY(z.imag));

  0002c	f2 0f 10 44 24
	20		 movsdx	 xmm0, QWORD PTR z$[rsp]
  00032	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00038	85 c0		 test	 eax, eax
  0003a	75 10		 jne	 SHORT $LN4@cmath_isin
  0003c	f2 0f 10 44 24
	20		 movsdx	 xmm0, QWORD PTR z$[rsp]
  00042	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__isnan
  00048	85 c0		 test	 eax, eax
  0004a	74 2a		 je	 SHORT $LN6@cmath_isin
$LN4@cmath_isin:
  0004c	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR z$[rsp+8]
  00052	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__finite
  00058	85 c0		 test	 eax, eax
  0005a	75 10		 jne	 SHORT $LN5@cmath_isin
  0005c	f2 0f 10 44 24
	28		 movsdx	 xmm0, QWORD PTR z$[rsp+8]
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__isnan
  00068	85 c0		 test	 eax, eax
  0006a	74 0a		 je	 SHORT $LN6@cmath_isin
$LN5@cmath_isin:
  0006c	c7 44 24 30 00
	00 00 00	 mov	 DWORD PTR tv82[rsp], 0
  00074	eb 08		 jmp	 SHORT $LN7@cmath_isin
$LN6@cmath_isin:
  00076	c7 44 24 30 01
	00 00 00	 mov	 DWORD PTR tv82[rsp], 1
$LN7@cmath_isin:
  0007e	8b 4c 24 30	 mov	 ecx, DWORD PTR tv82[rsp]
  00082	e8 00 00 00 00	 call	 PyBool_FromLong
$LN2@cmath_isin:

; 1067 : }

  00087	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0008b	c3		 ret	 0
cmath_isinf ENDP
_TEXT	ENDS
PUBLIC	__real@bfe921fb54442d18
PUBLIC	__real@bff921fb54442d18
PUBLIC	__real@c00921fb54442d18
PUBLIC	__real@c002d97c7f3321d2
PUBLIC	__real@8000000000000000
PUBLIC	__real@c6fd67cf2c62297c
PUBLIC	??_C@_01KGKMHCOC@e?$AA@				; `string'
PUBLIC	??_C@_02OAHAJOFD@pi?$AA@			; `string'
PUBLIC	PyInit_cmath
EXTRN	PyModule_AddObject:PROC
EXTRN	PyModule_Create2TraceRefs:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyInit_cmath DD imagerel $LN4
	DD	imagerel $LN4+30286
	DD	imagerel $unwind$PyInit_cmath
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyInit_cmath DD 020701H
	DD	0110107H
xdata	ENDS
;	COMDAT __real@bfe921fb54442d18
CONST	SEGMENT
__real@bfe921fb54442d18 DQ 0bfe921fb54442d18r	; -0.785398
CONST	ENDS
;	COMDAT __real@bff921fb54442d18
CONST	SEGMENT
__real@bff921fb54442d18 DQ 0bff921fb54442d18r	; -1.5708
CONST	ENDS
;	COMDAT __real@c00921fb54442d18
CONST	SEGMENT
__real@c00921fb54442d18 DQ 0c00921fb54442d18r	; -3.14159
CONST	ENDS
;	COMDAT __real@c002d97c7f3321d2
CONST	SEGMENT
__real@c002d97c7f3321d2 DQ 0c002d97c7f3321d2r	; -2.35619
CONST	ENDS
;	COMDAT __real@8000000000000000
CONST	SEGMENT
__real@8000000000000000 DQ 08000000000000000r	; -0
CONST	ENDS
;	COMDAT __real@c6fd67cf2c62297c
CONST	SEGMENT
__real@c6fd67cf2c62297c DQ 0c6fd67cf2c62297cr	; -9.54263e+033
CONST	ENDS
;	COMDAT ??_C@_01KGKMHCOC@e?$AA@
CONST	SEGMENT
??_C@_01KGKMHCOC@e?$AA@ DB 'e', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_02OAHAJOFD@pi?$AA@
CONST	SEGMENT
??_C@_02OAHAJOFD@pi?$AA@ DB 'pi', 00H			; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT PyInit_cmath
_TEXT	SEGMENT
m$ = 32
p$20886 = 40
p$20888 = 48
p$20890 = 56
p$20892 = 64
p$20894 = 72
p$20896 = 80
p$20898 = 88
p$20900 = 96
p$20902 = 104
p$20904 = 112
p$20906 = 120
PyInit_cmath PROC					; COMDAT

; 1119 : {

$LN4:
  00000	48 81 ec 88 00
	00 00		 sub	 rsp, 136		; 00000088H

; 1120 :     PyObject *m;
; 1121 : 
; 1122 :     m = PyModule_Create(&cmathmodule);

  00007	ba f5 03 00 00	 mov	 edx, 1013		; 000003f5H
  0000c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:cmathmodule
  00013	e8 00 00 00 00	 call	 PyModule_Create2TraceRefs
  00018	48 89 44 24 20	 mov	 QWORD PTR m$[rsp], rax

; 1123 :     if (m == NULL)

  0001d	48 83 7c 24 20
	00		 cmp	 QWORD PTR m$[rsp], 0
  00023	75 07		 jne	 SHORT $LN1@PyInit_cma

; 1124 :         return NULL;

  00025	33 c0		 xor	 eax, eax
  00027	e9 1a 76 00 00	 jmp	 $LN2@PyInit_cma
$LN1@PyInit_cma:

; 1125 : 
; 1126 :     PyModule_AddObject(m, "pi",
; 1127 :                        PyFloat_FromDouble(Py_MATH_PI));

  0002c	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@400921fb54442d18
  00034	e8 00 00 00 00	 call	 PyFloat_FromDouble
  00039	4c 8b c0	 mov	 r8, rax
  0003c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_02OAHAJOFD@pi?$AA@
  00043	48 8b 4c 24 20	 mov	 rcx, QWORD PTR m$[rsp]
  00048	e8 00 00 00 00	 call	 PyModule_AddObject

; 1128 :     PyModule_AddObject(m, "e", PyFloat_FromDouble(Py_MATH_E));

  0004d	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@4005bf0a8b145769
  00055	e8 00 00 00 00	 call	 PyFloat_FromDouble
  0005a	4c 8b c0	 mov	 r8, rax
  0005d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_01KGKMHCOC@e?$AA@
  00064	48 8b 4c 24 20	 mov	 rcx, QWORD PTR m$[rsp]
  00069	e8 00 00 00 00	 call	 PyModule_AddObject

; 1129 : 
; 1130 :     /* initialize special value tables */
; 1131 : 
; 1132 : #define INIT_SPECIAL_VALUES(NAME, BODY) { Py_complex* p = (Py_complex*)NAME; BODY }
; 1133 : #define C(REAL, IMAG) p->real = REAL; p->imag = IMAG; ++p;
; 1134 : 
; 1135 :     INIT_SPECIAL_VALUES(acos_special_values, {
; 1136 :       C(P34,INF) C(P,INF)  C(P,INF)  C(P,-INF)  C(P,-INF)  C(P34,-INF) C(N,INF)
; 1137 :       C(P12,INF) C(U,U)    C(U,U)    C(U,U)     C(U,U)     C(P12,-INF) C(N,N)
; 1138 :       C(P12,INF) C(U,U)    C(P12,0.) C(P12,-0.) C(U,U)     C(P12,-INF) C(P12,N)
; 1139 :       C(P12,INF) C(U,U)    C(P12,0.) C(P12,-0.) C(U,U)     C(P12,-INF) C(P12,N)
; 1140 :       C(P12,INF) C(U,U)    C(U,U)    C(U,U)     C(U,U)     C(P12,-INF) C(N,N)
; 1141 :       C(P14,INF) C(0.,INF) C(0.,INF) C(0.,-INF) C(0.,-INF) C(P14,-INF) C(N,INF)
; 1142 :       C(N,INF)   C(N,N)    C(N,N)    C(N,N)     C(N,N)     C(N,-INF)   C(N,N)
; 1143 :     })

  0006e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:acos_special_values
  00075	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  0007a	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0007f	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@4002d97c7f3321d2
  00087	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0008b	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00090	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  00097	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  0009b	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  000a0	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  000a5	48 83 c0 10	 add	 rax, 16
  000a9	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  000ae	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  000b3	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@400921fb54442d18
  000bb	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  000bf	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  000c4	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  000cb	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  000cf	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  000d4	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  000d9	48 83 c0 10	 add	 rax, 16
  000dd	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  000e2	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  000e7	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@400921fb54442d18
  000ef	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  000f3	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  000f8	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  000ff	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  00103	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00108	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0010d	48 83 c0 10	 add	 rax, 16
  00111	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  00116	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0011b	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@400921fb54442d18
  00123	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00127	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0012e	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00132	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  0013a	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0013f	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00144	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00149	48 83 c0 10	 add	 rax, 16
  0014d	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  00152	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00157	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@400921fb54442d18
  0015f	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00163	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0016a	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0016e	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  00176	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0017b	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00180	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00185	48 83 c0 10	 add	 rax, 16
  00189	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  0018e	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00193	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@4002d97c7f3321d2
  0019b	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0019f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  001a6	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  001aa	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  001b2	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  001b7	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  001bc	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  001c1	48 83 c0 10	 add	 rax, 16
  001c5	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  001ca	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  001d1	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  001d5	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  001dd	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  001e2	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  001e6	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  001eb	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  001f2	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  001f6	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  001fb	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00200	48 83 c0 10	 add	 rax, 16
  00204	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  00209	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0020e	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  00216	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0021a	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0021f	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  00226	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  0022a	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0022f	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00234	48 83 c0 10	 add	 rax, 16
  00238	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  0023d	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00242	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0024a	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0024e	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00253	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0025b	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00260	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00265	48 83 c0 10	 add	 rax, 16
  00269	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  0026e	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00273	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0027b	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0027f	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00284	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0028c	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00291	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00296	48 83 c0 10	 add	 rax, 16
  0029a	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  0029f	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  002a4	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  002ac	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  002b0	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  002b5	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  002bd	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  002c2	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  002c7	48 83 c0 10	 add	 rax, 16
  002cb	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  002d0	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  002d5	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  002dd	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  002e1	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  002e6	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  002ee	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  002f3	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  002f8	48 83 c0 10	 add	 rax, 16
  002fc	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  00301	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00306	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  0030e	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00312	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  00319	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0031d	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  00325	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0032a	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0032f	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00334	48 83 c0 10	 add	 rax, 16
  00338	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  0033d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  00344	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00348	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  00350	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00355	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00359	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  00360	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00364	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0036c	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00371	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00376	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0037b	48 83 c0 10	 add	 rax, 16
  0037f	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  00384	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00389	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  00391	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00395	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0039a	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  003a1	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  003a5	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  003aa	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  003af	48 83 c0 10	 add	 rax, 16
  003b3	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  003b8	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  003bd	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  003c5	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  003c9	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  003ce	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  003d6	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  003db	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  003e0	48 83 c0 10	 add	 rax, 16
  003e4	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  003e9	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  003ee	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  003f6	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  003fa	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  003ff	66 0f 57 c0	 xorpd	 xmm0, xmm0
  00403	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00408	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0040d	48 83 c0 10	 add	 rax, 16
  00411	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  00416	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0041b	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  00423	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00427	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0042c	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  00434	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00439	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0043e	48 83 c0 10	 add	 rax, 16
  00442	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  00447	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0044c	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  00454	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00458	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0045d	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  00465	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0046a	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0046f	48 83 c0 10	 add	 rax, 16
  00473	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  00478	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0047d	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  00485	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00489	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  00490	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00494	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  0049c	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  004a1	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  004a6	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  004ab	48 83 c0 10	 add	 rax, 16
  004af	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  004b4	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  004b9	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  004c1	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  004c5	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  004cc	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  004d0	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  004d8	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  004dd	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  004e2	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  004e7	48 83 c0 10	 add	 rax, 16
  004eb	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  004f0	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  004f5	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  004fd	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00501	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00506	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  0050d	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  00511	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00516	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0051b	48 83 c0 10	 add	 rax, 16
  0051f	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  00524	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00529	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  00531	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00535	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0053a	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  00542	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00547	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0054c	48 83 c0 10	 add	 rax, 16
  00550	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  00555	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0055a	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  00562	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00566	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0056b	66 0f 57 c0	 xorpd	 xmm0, xmm0
  0056f	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00574	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00579	48 83 c0 10	 add	 rax, 16
  0057d	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  00582	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00587	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  0058f	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00593	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00598	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  005a0	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  005a5	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  005aa	48 83 c0 10	 add	 rax, 16
  005ae	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  005b3	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  005b8	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  005c0	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  005c4	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  005c9	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  005d1	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  005d6	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  005db	48 83 c0 10	 add	 rax, 16
  005df	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  005e4	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  005e9	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  005f1	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  005f5	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  005fc	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00600	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  00608	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0060d	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00612	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00617	48 83 c0 10	 add	 rax, 16
  0061b	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  00620	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00625	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  0062d	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00631	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  00638	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0063c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  00644	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00649	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0064e	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00653	48 83 c0 10	 add	 rax, 16
  00657	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  0065c	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00661	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  00669	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0066d	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00672	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  00679	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  0067d	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00682	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00687	48 83 c0 10	 add	 rax, 16
  0068b	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  00690	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00695	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0069d	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  006a1	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  006a6	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  006ae	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  006b3	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  006b8	48 83 c0 10	 add	 rax, 16
  006bc	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  006c1	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  006c6	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  006ce	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  006d2	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  006d7	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  006df	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  006e4	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  006e9	48 83 c0 10	 add	 rax, 16
  006ed	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  006f2	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  006f7	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  006ff	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00703	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00708	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  00710	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00715	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0071a	48 83 c0 10	 add	 rax, 16
  0071e	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  00723	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00728	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  00730	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00734	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00739	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  00741	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00746	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0074b	48 83 c0 10	 add	 rax, 16
  0074f	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  00754	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00759	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  00761	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00765	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0076c	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00770	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  00778	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0077d	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00782	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00787	48 83 c0 10	 add	 rax, 16
  0078b	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  00790	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  00797	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0079b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  007a3	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  007a8	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  007ac	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  007b3	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  007b7	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  007bf	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  007c4	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  007c9	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  007ce	48 83 c0 10	 add	 rax, 16
  007d2	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  007d7	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  007dc	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3fe921fb54442d18
  007e4	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  007e8	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  007ed	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  007f4	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  007f8	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  007fd	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00802	48 83 c0 10	 add	 rax, 16
  00806	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  0080b	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00810	66 0f 57 c0	 xorpd	 xmm0, xmm0
  00814	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00818	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0081d	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  00824	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  00828	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0082d	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00832	48 83 c0 10	 add	 rax, 16
  00836	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  0083b	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00840	66 0f 57 c0	 xorpd	 xmm0, xmm0
  00844	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00848	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0084d	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  00854	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  00858	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0085d	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00862	48 83 c0 10	 add	 rax, 16
  00866	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  0086b	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00870	66 0f 57 c0	 xorpd	 xmm0, xmm0
  00874	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00878	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0087f	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00883	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  0088b	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00890	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00895	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0089a	48 83 c0 10	 add	 rax, 16
  0089e	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  008a3	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  008a8	66 0f 57 c0	 xorpd	 xmm0, xmm0
  008ac	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  008b0	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  008b7	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  008bb	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  008c3	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  008c8	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  008cd	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  008d2	48 83 c0 10	 add	 rax, 16
  008d6	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  008db	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  008e0	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3fe921fb54442d18
  008e8	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  008ec	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  008f3	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  008f7	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  008ff	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00904	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00909	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0090e	48 83 c0 10	 add	 rax, 16
  00912	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  00917	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0091e	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00922	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0092a	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0092f	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00933	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00938	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  0093f	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  00943	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00948	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0094d	48 83 c0 10	 add	 rax, 16
  00951	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  00956	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0095d	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00961	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  00969	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0096e	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00972	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00977	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  0097e	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  00982	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00987	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  0098c	48 83 c0 10	 add	 rax, 16
  00990	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  00995	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0099c	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  009a0	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  009a8	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  009ad	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  009b1	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  009b8	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  009bc	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  009c4	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  009c9	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  009ce	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  009d3	48 83 c0 10	 add	 rax, 16
  009d7	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  009dc	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  009e3	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  009e7	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  009ef	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  009f4	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  009f8	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  009ff	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00a03	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  00a0b	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00a10	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00a15	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00a1a	48 83 c0 10	 add	 rax, 16
  00a1e	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  00a23	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  00a2a	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00a2e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  00a36	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00a3b	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00a3f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  00a46	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00a4a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  00a52	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00a57	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00a5c	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00a61	48 83 c0 10	 add	 rax, 16
  00a65	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  00a6a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  00a71	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00a75	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  00a7d	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00a82	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00a86	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  00a8d	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00a91	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  00a99	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00a9e	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00aa3	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00aa8	48 83 c0 10	 add	 rax, 16
  00aac	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  00ab1	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  00ab8	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00abc	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  00ac4	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00ac9	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00acd	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  00ad4	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00ad8	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  00ae0	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00ae5	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00aea	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00aef	48 83 c0 10	 add	 rax, 16
  00af3	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax
  00af8	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  00aff	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00b03	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  00b0b	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00b10	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00b14	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  00b1b	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00b1f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  00b27	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00b2c	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00b31	48 8b 44 24 28	 mov	 rax, QWORD PTR p$20886[rsp]
  00b36	48 83 c0 10	 add	 rax, 16
  00b3a	48 89 44 24 28	 mov	 QWORD PTR p$20886[rsp], rax

; 1144 : 
; 1145 :     INIT_SPECIAL_VALUES(acosh_special_values, {
; 1146 :       C(INF,-P34) C(INF,-P)  C(INF,-P)  C(INF,P)  C(INF,P)  C(INF,P34) C(INF,N)
; 1147 :       C(INF,-P12) C(U,U)     C(U,U)     C(U,U)    C(U,U)    C(INF,P12) C(N,N)
; 1148 :       C(INF,-P12) C(U,U)     C(0.,-P12) C(0.,P12) C(U,U)    C(INF,P12) C(N,N)
; 1149 :       C(INF,-P12) C(U,U)     C(0.,-P12) C(0.,P12) C(U,U)    C(INF,P12) C(N,N)
; 1150 :       C(INF,-P12) C(U,U)     C(U,U)     C(U,U)    C(U,U)    C(INF,P12) C(N,N)
; 1151 :       C(INF,-P14) C(INF,-0.) C(INF,-0.) C(INF,0.) C(INF,0.) C(INF,P14) C(INF,N)
; 1152 :       C(INF,N)    C(N,N)     C(N,N)     C(N,N)    C(N,N)    C(INF,N)   C(N,N)
; 1153 :     })

  00b3f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:acosh_special_values
  00b46	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  00b4b	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00b50	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  00b57	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  00b5b	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00b5f	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00b64	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c002d97c7f3321d2
  00b6c	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00b71	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00b76	48 83 c0 10	 add	 rax, 16
  00b7a	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  00b7f	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00b84	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  00b8b	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  00b8f	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00b93	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00b98	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c00921fb54442d18
  00ba0	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00ba5	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00baa	48 83 c0 10	 add	 rax, 16
  00bae	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  00bb3	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00bb8	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  00bbf	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  00bc3	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00bc7	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00bcc	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c00921fb54442d18
  00bd4	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00bd9	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00bde	48 83 c0 10	 add	 rax, 16
  00be2	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  00be7	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00bec	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  00bf3	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  00bf7	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00bfb	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00c00	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@400921fb54442d18
  00c08	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00c0d	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00c12	48 83 c0 10	 add	 rax, 16
  00c16	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  00c1b	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00c20	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  00c27	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  00c2b	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00c2f	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00c34	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@400921fb54442d18
  00c3c	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00c41	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00c46	48 83 c0 10	 add	 rax, 16
  00c4a	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  00c4f	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00c54	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  00c5b	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  00c5f	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00c63	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00c68	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@4002d97c7f3321d2
  00c70	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00c75	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00c7a	48 83 c0 10	 add	 rax, 16
  00c7e	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  00c83	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00c88	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  00c8f	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  00c93	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00c97	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  00c9e	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00ca2	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  00caa	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00caf	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00cb4	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00cb9	48 83 c0 10	 add	 rax, 16
  00cbd	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  00cc2	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00cc7	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  00cce	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  00cd2	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00cd6	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00cdb	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bff921fb54442d18
  00ce3	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00ce8	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00ced	48 83 c0 10	 add	 rax, 16
  00cf1	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  00cf6	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00cfb	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  00d03	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00d07	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00d0c	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  00d14	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00d19	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00d1e	48 83 c0 10	 add	 rax, 16
  00d22	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  00d27	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00d2c	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  00d34	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00d38	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00d3d	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  00d45	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00d4a	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00d4f	48 83 c0 10	 add	 rax, 16
  00d53	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  00d58	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00d5d	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  00d65	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00d69	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00d6e	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  00d76	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00d7b	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00d80	48 83 c0 10	 add	 rax, 16
  00d84	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  00d89	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00d8e	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  00d96	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00d9a	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00d9f	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  00da7	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00dac	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00db1	48 83 c0 10	 add	 rax, 16
  00db5	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  00dba	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00dbf	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  00dc6	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  00dca	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00dce	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00dd3	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  00ddb	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00de0	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00de5	48 83 c0 10	 add	 rax, 16
  00de9	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  00dee	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  00df5	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00df9	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  00e01	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00e06	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00e0a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  00e11	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00e15	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  00e1d	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00e22	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00e27	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00e2c	48 83 c0 10	 add	 rax, 16
  00e30	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  00e35	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00e3a	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  00e41	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  00e45	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00e49	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00e4e	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bff921fb54442d18
  00e56	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00e5b	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00e60	48 83 c0 10	 add	 rax, 16
  00e64	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  00e69	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00e6e	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  00e76	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00e7a	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00e7f	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  00e87	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00e8c	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00e91	48 83 c0 10	 add	 rax, 16
  00e95	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  00e9a	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00e9f	66 0f 57 c0	 xorpd	 xmm0, xmm0
  00ea3	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00ea7	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00eac	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bff921fb54442d18
  00eb4	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00eb9	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00ebe	48 83 c0 10	 add	 rax, 16
  00ec2	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  00ec7	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00ecc	66 0f 57 c0	 xorpd	 xmm0, xmm0
  00ed0	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00ed4	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00ed9	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  00ee1	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00ee6	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00eeb	48 83 c0 10	 add	 rax, 16
  00eef	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  00ef4	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00ef9	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  00f01	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00f05	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00f0a	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  00f12	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00f17	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00f1c	48 83 c0 10	 add	 rax, 16
  00f20	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  00f25	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00f2a	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  00f31	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  00f35	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00f39	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00f3e	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  00f46	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00f4b	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00f50	48 83 c0 10	 add	 rax, 16
  00f54	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  00f59	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  00f60	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00f64	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  00f6c	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00f71	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00f75	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  00f7c	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  00f80	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  00f88	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00f8d	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00f92	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00f97	48 83 c0 10	 add	 rax, 16
  00f9b	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  00fa0	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00fa5	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  00fac	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  00fb0	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00fb4	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00fb9	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bff921fb54442d18
  00fc1	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00fc6	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00fcb	48 83 c0 10	 add	 rax, 16
  00fcf	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  00fd4	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00fd9	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  00fe1	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  00fe5	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00fea	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  00ff2	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  00ff7	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  00ffc	48 83 c0 10	 add	 rax, 16
  01000	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  01005	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  0100a	66 0f 57 c0	 xorpd	 xmm0, xmm0
  0100e	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01012	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01017	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bff921fb54442d18
  0101f	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01024	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01029	48 83 c0 10	 add	 rax, 16
  0102d	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  01032	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01037	66 0f 57 c0	 xorpd	 xmm0, xmm0
  0103b	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0103f	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01044	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  0104c	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01051	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01056	48 83 c0 10	 add	 rax, 16
  0105a	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  0105f	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01064	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0106c	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01070	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01075	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0107d	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01082	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01087	48 83 c0 10	 add	 rax, 16
  0108b	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  01090	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01095	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  0109c	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  010a0	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  010a4	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  010a9	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  010b1	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  010b6	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  010bb	48 83 c0 10	 add	 rax, 16
  010bf	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  010c4	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  010cb	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  010cf	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  010d7	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  010dc	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  010e0	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  010e7	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  010eb	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  010f3	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  010f8	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  010fd	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01102	48 83 c0 10	 add	 rax, 16
  01106	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  0110b	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01110	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  01117	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  0111b	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0111f	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01124	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bff921fb54442d18
  0112c	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01131	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01136	48 83 c0 10	 add	 rax, 16
  0113a	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  0113f	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01144	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0114c	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01150	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01155	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0115d	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01162	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01167	48 83 c0 10	 add	 rax, 16
  0116b	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  01170	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01175	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0117d	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01181	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01186	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0118e	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01193	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01198	48 83 c0 10	 add	 rax, 16
  0119c	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  011a1	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  011a6	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  011ae	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  011b2	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  011b7	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  011bf	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  011c4	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  011c9	48 83 c0 10	 add	 rax, 16
  011cd	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  011d2	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  011d7	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  011df	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  011e3	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  011e8	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  011f0	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  011f5	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  011fa	48 83 c0 10	 add	 rax, 16
  011fe	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  01203	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01208	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  0120f	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  01213	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01217	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  0121c	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  01224	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01229	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  0122e	48 83 c0 10	 add	 rax, 16
  01232	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  01237	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0123e	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  01242	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0124a	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  0124f	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01253	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0125a	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0125e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  01266	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  0126b	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01270	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01275	48 83 c0 10	 add	 rax, 16
  01279	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  0127e	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01283	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  0128a	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  0128e	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01292	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01297	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bfe921fb54442d18
  0129f	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  012a4	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  012a9	48 83 c0 10	 add	 rax, 16
  012ad	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  012b2	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  012b7	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  012be	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  012c2	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  012c6	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  012cb	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  012d3	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  012d8	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  012dd	48 83 c0 10	 add	 rax, 16
  012e1	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  012e6	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  012eb	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  012f2	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  012f6	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  012fa	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  012ff	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  01307	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0130c	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01311	48 83 c0 10	 add	 rax, 16
  01315	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  0131a	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  0131f	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  01326	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  0132a	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0132e	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01333	66 0f 57 c0	 xorpd	 xmm0, xmm0
  01337	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0133c	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01341	48 83 c0 10	 add	 rax, 16
  01345	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  0134a	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  0134f	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  01356	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  0135a	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0135e	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01363	66 0f 57 c0	 xorpd	 xmm0, xmm0
  01367	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0136c	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01371	48 83 c0 10	 add	 rax, 16
  01375	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  0137a	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  0137f	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  01386	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  0138a	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0138e	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01393	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3fe921fb54442d18
  0139b	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  013a0	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  013a5	48 83 c0 10	 add	 rax, 16
  013a9	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  013ae	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  013b3	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  013ba	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  013be	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  013c2	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  013c9	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  013cd	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  013d5	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  013da	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  013df	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  013e4	48 83 c0 10	 add	 rax, 16
  013e8	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  013ed	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  013f2	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  013f9	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  013fd	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01401	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  01408	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0140c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  01414	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01419	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0141e	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01423	48 83 c0 10	 add	 rax, 16
  01427	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  0142c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  01433	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  01437	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0143f	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01444	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01448	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0144f	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  01453	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0145b	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01460	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01465	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  0146a	48 83 c0 10	 add	 rax, 16
  0146e	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  01473	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0147a	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0147e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  01486	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  0148b	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0148f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  01496	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0149a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  014a2	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  014a7	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  014ac	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  014b1	48 83 c0 10	 add	 rax, 16
  014b5	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  014ba	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  014c1	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  014c5	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  014cd	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  014d2	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  014d6	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  014dd	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  014e1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  014e9	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  014ee	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  014f3	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  014f8	48 83 c0 10	 add	 rax, 16
  014fc	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  01501	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  01508	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0150c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  01514	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01519	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0151d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  01524	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  01528	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  01530	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01535	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0153a	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  0153f	48 83 c0 10	 add	 rax, 16
  01543	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  01548	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  0154d	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  01554	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  01558	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0155c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  01563	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  01567	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0156f	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  01574	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01579	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  0157e	48 83 c0 10	 add	 rax, 16
  01582	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax
  01587	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0158e	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  01592	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0159a	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  0159f	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  015a3	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  015aa	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  015ae	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  015b6	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  015bb	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  015c0	48 8b 44 24 30	 mov	 rax, QWORD PTR p$20888[rsp]
  015c5	48 83 c0 10	 add	 rax, 16
  015c9	48 89 44 24 30	 mov	 QWORD PTR p$20888[rsp], rax

; 1154 : 
; 1155 :     INIT_SPECIAL_VALUES(asinh_special_values, {
; 1156 :       C(-INF,-P14) C(-INF,-0.) C(-INF,-0.) C(-INF,0.) C(-INF,0.) C(-INF,P14) C(-INF,N)
; 1157 :       C(-INF,-P12) C(U,U)      C(U,U)      C(U,U)     C(U,U)     C(-INF,P12) C(N,N)
; 1158 :       C(-INF,-P12) C(U,U)      C(-0.,-0.)  C(-0.,0.)  C(U,U)     C(-INF,P12) C(N,N)
; 1159 :       C(INF,-P12)  C(U,U)      C(0.,-0.)   C(0.,0.)   C(U,U)     C(INF,P12)  C(N,N)
; 1160 :       C(INF,-P12)  C(U,U)      C(U,U)      C(U,U)     C(U,U)     C(INF,P12)  C(N,N)
; 1161 :       C(INF,-P14)  C(INF,-0.)  C(INF,-0.)  C(INF,0.)  C(INF,0.)  C(INF,P14)  C(INF,N)
; 1162 :       C(INF,N)     C(N,N)      C(N,-0.)    C(N,0.)    C(N,N)     C(INF,N)    C(N,N)
; 1163 :     })

  015ce	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:asinh_special_values
  015d5	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  015da	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  015e1	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  015e5	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  015ed	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  015f2	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  015f6	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  015fb	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bfe921fb54442d18
  01603	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01608	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  0160d	48 83 c0 10	 add	 rax, 16
  01611	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01616	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0161d	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  01621	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  01629	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  0162e	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01632	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01637	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  0163f	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01644	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01649	48 83 c0 10	 add	 rax, 16
  0164d	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01652	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  01659	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0165d	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  01665	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  0166a	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0166e	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01673	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  0167b	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01680	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01685	48 83 c0 10	 add	 rax, 16
  01689	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  0168e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  01695	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  01699	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  016a1	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  016a6	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  016aa	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  016af	66 0f 57 c0	 xorpd	 xmm0, xmm0
  016b3	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  016b8	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  016bd	48 83 c0 10	 add	 rax, 16
  016c1	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  016c6	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  016cd	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  016d1	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  016d9	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  016de	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  016e2	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  016e7	66 0f 57 c0	 xorpd	 xmm0, xmm0
  016eb	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  016f0	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  016f5	48 83 c0 10	 add	 rax, 16
  016f9	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  016fe	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  01705	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  01709	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  01711	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01716	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0171a	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  0171f	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3fe921fb54442d18
  01727	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0172c	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01731	48 83 c0 10	 add	 rax, 16
  01735	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  0173a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  01741	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  01745	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  0174d	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01752	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01756	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0175d	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  01761	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  01769	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  0176e	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01773	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01778	48 83 c0 10	 add	 rax, 16
  0177c	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01781	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  01788	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0178c	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  01794	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01799	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0179d	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  017a2	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bff921fb54442d18
  017aa	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  017af	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  017b4	48 83 c0 10	 add	 rax, 16
  017b8	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  017bd	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  017c2	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  017ca	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  017ce	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  017d3	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  017db	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  017e0	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  017e5	48 83 c0 10	 add	 rax, 16
  017e9	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  017ee	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  017f3	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  017fb	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  017ff	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01804	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0180c	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01811	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01816	48 83 c0 10	 add	 rax, 16
  0181a	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  0181f	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01824	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0182c	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01830	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01835	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0183d	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01842	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01847	48 83 c0 10	 add	 rax, 16
  0184b	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01850	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01855	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0185d	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01861	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01866	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0186e	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01873	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01878	48 83 c0 10	 add	 rax, 16
  0187c	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01881	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  01888	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0188c	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  01894	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01899	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0189d	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  018a2	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  018aa	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  018af	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  018b4	48 83 c0 10	 add	 rax, 16
  018b8	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  018bd	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  018c4	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  018c8	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  018d0	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  018d5	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  018d9	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  018e0	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  018e4	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  018ec	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  018f1	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  018f6	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  018fb	48 83 c0 10	 add	 rax, 16
  018ff	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01904	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0190b	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0190f	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  01917	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  0191c	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01920	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01925	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bff921fb54442d18
  0192d	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01932	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01937	48 83 c0 10	 add	 rax, 16
  0193b	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01940	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01945	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0194d	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01951	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01956	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0195e	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01963	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01968	48 83 c0 10	 add	 rax, 16
  0196c	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01971	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01976	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  0197e	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01982	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01987	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  0198f	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01994	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01999	48 83 c0 10	 add	 rax, 16
  0199d	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  019a2	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  019a7	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  019af	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  019b3	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  019b8	66 0f 57 c0	 xorpd	 xmm0, xmm0
  019bc	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  019c1	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  019c6	48 83 c0 10	 add	 rax, 16
  019ca	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  019cf	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  019d4	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  019dc	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  019e0	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  019e5	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  019ed	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  019f2	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  019f7	48 83 c0 10	 add	 rax, 16
  019fb	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01a00	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  01a07	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  01a0b	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  01a13	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01a18	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01a1c	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01a21	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  01a29	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01a2e	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01a33	48 83 c0 10	 add	 rax, 16
  01a37	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01a3c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  01a43	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  01a47	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  01a4f	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01a54	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01a58	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  01a5f	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  01a63	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  01a6b	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01a70	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01a75	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01a7a	48 83 c0 10	 add	 rax, 16
  01a7e	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01a83	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01a88	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  01a8f	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  01a93	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01a97	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01a9c	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bff921fb54442d18
  01aa4	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01aa9	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01aae	48 83 c0 10	 add	 rax, 16
  01ab2	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01ab7	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01abc	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  01ac4	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01ac8	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01acd	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  01ad5	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01ada	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01adf	48 83 c0 10	 add	 rax, 16
  01ae3	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01ae8	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01aed	66 0f 57 c0	 xorpd	 xmm0, xmm0
  01af1	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01af5	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01afa	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  01b02	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01b07	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01b0c	48 83 c0 10	 add	 rax, 16
  01b10	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01b15	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01b1a	66 0f 57 c0	 xorpd	 xmm0, xmm0
  01b1e	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01b22	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01b27	66 0f 57 c0	 xorpd	 xmm0, xmm0
  01b2b	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01b30	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01b35	48 83 c0 10	 add	 rax, 16
  01b39	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01b3e	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01b43	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  01b4b	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01b4f	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01b54	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  01b5c	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01b61	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01b66	48 83 c0 10	 add	 rax, 16
  01b6a	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01b6f	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01b74	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  01b7b	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  01b7f	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01b83	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01b88	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  01b90	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01b95	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01b9a	48 83 c0 10	 add	 rax, 16
  01b9e	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01ba3	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  01baa	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  01bae	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  01bb6	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01bbb	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01bbf	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  01bc6	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  01bca	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  01bd2	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01bd7	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01bdc	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01be1	48 83 c0 10	 add	 rax, 16
  01be5	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01bea	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01bef	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  01bf6	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  01bfa	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01bfe	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01c03	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bff921fb54442d18
  01c0b	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01c10	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01c15	48 83 c0 10	 add	 rax, 16
  01c19	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01c1e	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01c23	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  01c2b	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01c2f	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01c34	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  01c3c	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01c41	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01c46	48 83 c0 10	 add	 rax, 16
  01c4a	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01c4f	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01c54	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  01c5c	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01c60	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01c65	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  01c6d	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01c72	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01c77	48 83 c0 10	 add	 rax, 16
  01c7b	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01c80	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01c85	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  01c8d	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01c91	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01c96	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  01c9e	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01ca3	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01ca8	48 83 c0 10	 add	 rax, 16
  01cac	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01cb1	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01cb6	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  01cbe	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01cc2	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01cc7	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  01ccf	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01cd4	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01cd9	48 83 c0 10	 add	 rax, 16
  01cdd	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01ce2	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01ce7	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  01cee	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  01cf2	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01cf6	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01cfb	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  01d03	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01d08	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01d0d	48 83 c0 10	 add	 rax, 16
  01d11	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01d16	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  01d1d	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  01d21	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  01d29	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01d2e	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01d32	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  01d39	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  01d3d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  01d45	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01d4a	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01d4f	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01d54	48 83 c0 10	 add	 rax, 16
  01d58	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01d5d	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01d62	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  01d69	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  01d6d	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01d71	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01d76	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bfe921fb54442d18
  01d7e	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01d83	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01d88	48 83 c0 10	 add	 rax, 16
  01d8c	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01d91	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01d96	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  01d9d	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  01da1	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01da5	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01daa	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  01db2	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01db7	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01dbc	48 83 c0 10	 add	 rax, 16
  01dc0	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01dc5	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01dca	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  01dd1	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  01dd5	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01dd9	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01dde	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  01de6	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01deb	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01df0	48 83 c0 10	 add	 rax, 16
  01df4	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01df9	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01dfe	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  01e05	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  01e09	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01e0d	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01e12	66 0f 57 c0	 xorpd	 xmm0, xmm0
  01e16	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01e1b	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01e20	48 83 c0 10	 add	 rax, 16
  01e24	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01e29	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01e2e	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  01e35	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  01e39	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01e3d	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01e42	66 0f 57 c0	 xorpd	 xmm0, xmm0
  01e46	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01e4b	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01e50	48 83 c0 10	 add	 rax, 16
  01e54	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01e59	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01e5e	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  01e65	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  01e69	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01e6d	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01e72	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3fe921fb54442d18
  01e7a	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01e7f	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01e84	48 83 c0 10	 add	 rax, 16
  01e88	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01e8d	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01e92	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  01e99	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  01e9d	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01ea1	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  01ea8	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  01eac	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  01eb4	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01eb9	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01ebe	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01ec3	48 83 c0 10	 add	 rax, 16
  01ec7	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01ecc	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01ed1	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  01ed8	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  01edc	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01ee0	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  01ee7	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  01eeb	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  01ef3	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01ef8	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01efd	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01f02	48 83 c0 10	 add	 rax, 16
  01f06	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01f0b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  01f12	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  01f16	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  01f1e	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01f23	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01f27	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  01f2e	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  01f32	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  01f3a	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01f3f	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01f44	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01f49	48 83 c0 10	 add	 rax, 16
  01f4d	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01f52	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  01f59	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  01f5d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  01f65	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01f6a	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01f6e	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01f73	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  01f7b	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01f80	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01f85	48 83 c0 10	 add	 rax, 16
  01f89	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01f8e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  01f95	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  01f99	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  01fa1	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01fa6	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01faa	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01faf	66 0f 57 c0	 xorpd	 xmm0, xmm0
  01fb3	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01fb8	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01fbd	48 83 c0 10	 add	 rax, 16
  01fc1	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  01fc6	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  01fcd	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  01fd1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  01fd9	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01fde	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  01fe2	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  01fe9	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  01fed	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  01ff5	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  01ffa	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  01fff	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  02004	48 83 c0 10	 add	 rax, 16
  02008	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  0200d	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  02012	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  02019	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  0201d	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02021	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  02028	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0202c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  02034	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  02039	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0203e	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  02043	48 83 c0 10	 add	 rax, 16
  02047	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax
  0204c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  02053	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  02057	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0205f	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  02064	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02068	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0206f	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  02073	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0207b	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  02080	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02085	48 8b 44 24 38	 mov	 rax, QWORD PTR p$20890[rsp]
  0208a	48 83 c0 10	 add	 rax, 16
  0208e	48 89 44 24 38	 mov	 QWORD PTR p$20890[rsp], rax

; 1164 : 
; 1165 :     INIT_SPECIAL_VALUES(atanh_special_values, {
; 1166 :       C(-0.,-P12) C(-0.,-P12) C(-0.,-P12) C(-0.,P12) C(-0.,P12) C(-0.,P12) C(-0.,N)
; 1167 :       C(-0.,-P12) C(U,U)      C(U,U)      C(U,U)     C(U,U)     C(-0.,P12) C(N,N)
; 1168 :       C(-0.,-P12) C(U,U)      C(-0.,-0.)  C(-0.,0.)  C(U,U)     C(-0.,P12) C(-0.,N)
; 1169 :       C(0.,-P12)  C(U,U)      C(0.,-0.)   C(0.,0.)   C(U,U)     C(0.,P12)  C(0.,N)
; 1170 :       C(0.,-P12)  C(U,U)      C(U,U)      C(U,U)     C(U,U)     C(0.,P12)  C(N,N)
; 1171 :       C(0.,-P12)  C(0.,-P12)  C(0.,-P12)  C(0.,P12)  C(0.,P12)  C(0.,P12)  C(0.,N)
; 1172 :       C(0.,-P12)  C(N,N)      C(N,N)      C(N,N)     C(N,N)     C(0.,P12)  C(N,N)
; 1173 :     })

  02093	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:atanh_special_values
  0209a	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  0209f	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  020a4	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  020ac	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  020b0	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  020b5	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bff921fb54442d18
  020bd	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  020c2	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  020c7	48 83 c0 10	 add	 rax, 16
  020cb	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  020d0	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  020d5	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  020dd	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  020e1	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  020e6	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bff921fb54442d18
  020ee	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  020f3	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  020f8	48 83 c0 10	 add	 rax, 16
  020fc	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  02101	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02106	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  0210e	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02112	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02117	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bff921fb54442d18
  0211f	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02124	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02129	48 83 c0 10	 add	 rax, 16
  0212d	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  02132	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02137	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  0213f	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02143	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02148	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  02150	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02155	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  0215a	48 83 c0 10	 add	 rax, 16
  0215e	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  02163	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02168	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  02170	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02174	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02179	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  02181	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02186	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  0218b	48 83 c0 10	 add	 rax, 16
  0218f	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  02194	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02199	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  021a1	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  021a5	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  021aa	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  021b2	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  021b7	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  021bc	48 83 c0 10	 add	 rax, 16
  021c0	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  021c5	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  021ca	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  021d2	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  021d6	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  021dd	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  021e1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  021e9	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  021ee	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  021f3	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  021f8	48 83 c0 10	 add	 rax, 16
  021fc	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  02201	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02206	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  0220e	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02212	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02217	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bff921fb54442d18
  0221f	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02224	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02229	48 83 c0 10	 add	 rax, 16
  0222d	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  02232	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02237	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0223f	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02243	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02248	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  02250	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02255	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  0225a	48 83 c0 10	 add	 rax, 16
  0225e	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  02263	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02268	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  02270	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02274	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02279	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  02281	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02286	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  0228b	48 83 c0 10	 add	 rax, 16
  0228f	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  02294	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02299	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  022a1	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  022a5	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  022aa	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  022b2	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  022b7	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  022bc	48 83 c0 10	 add	 rax, 16
  022c0	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  022c5	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  022ca	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  022d2	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  022d6	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  022db	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  022e3	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  022e8	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  022ed	48 83 c0 10	 add	 rax, 16
  022f1	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  022f6	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  022fb	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  02303	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02307	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  0230c	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  02314	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02319	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  0231e	48 83 c0 10	 add	 rax, 16
  02322	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  02327	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0232e	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  02332	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0233a	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  0233f	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02343	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0234a	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0234e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  02356	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  0235b	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02360	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02365	48 83 c0 10	 add	 rax, 16
  02369	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  0236e	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02373	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  0237b	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0237f	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02384	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bff921fb54442d18
  0238c	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02391	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02396	48 83 c0 10	 add	 rax, 16
  0239a	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  0239f	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  023a4	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  023ac	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  023b0	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  023b5	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  023bd	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  023c2	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  023c7	48 83 c0 10	 add	 rax, 16
  023cb	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  023d0	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  023d5	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  023dd	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  023e1	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  023e6	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  023ee	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  023f3	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  023f8	48 83 c0 10	 add	 rax, 16
  023fc	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  02401	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02406	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  0240e	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02412	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02417	66 0f 57 c0	 xorpd	 xmm0, xmm0
  0241b	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02420	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02425	48 83 c0 10	 add	 rax, 16
  02429	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  0242e	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02433	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0243b	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0243f	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02444	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0244c	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02451	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02456	48 83 c0 10	 add	 rax, 16
  0245a	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  0245f	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02464	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  0246c	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02470	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02475	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  0247d	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02482	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02487	48 83 c0 10	 add	 rax, 16
  0248b	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  02490	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02495	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  0249d	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  024a1	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  024a8	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  024ac	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  024b4	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  024b9	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  024be	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  024c3	48 83 c0 10	 add	 rax, 16
  024c7	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  024cc	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  024d1	66 0f 57 c0	 xorpd	 xmm0, xmm0
  024d5	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  024d9	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  024de	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bff921fb54442d18
  024e6	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  024eb	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  024f0	48 83 c0 10	 add	 rax, 16
  024f4	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  024f9	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  024fe	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  02506	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0250a	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  0250f	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  02517	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0251c	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02521	48 83 c0 10	 add	 rax, 16
  02525	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  0252a	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  0252f	66 0f 57 c0	 xorpd	 xmm0, xmm0
  02533	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02537	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  0253c	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  02544	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02549	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  0254e	48 83 c0 10	 add	 rax, 16
  02552	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  02557	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  0255c	66 0f 57 c0	 xorpd	 xmm0, xmm0
  02560	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02564	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02569	66 0f 57 c0	 xorpd	 xmm0, xmm0
  0256d	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02572	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02577	48 83 c0 10	 add	 rax, 16
  0257b	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  02580	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02585	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0258d	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02591	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02596	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0259e	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  025a3	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  025a8	48 83 c0 10	 add	 rax, 16
  025ac	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  025b1	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  025b6	66 0f 57 c0	 xorpd	 xmm0, xmm0
  025ba	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  025be	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  025c3	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  025cb	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  025d0	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  025d5	48 83 c0 10	 add	 rax, 16
  025d9	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  025de	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  025e3	66 0f 57 c0	 xorpd	 xmm0, xmm0
  025e7	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  025eb	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  025f2	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  025f6	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  025fe	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02603	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02608	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  0260d	48 83 c0 10	 add	 rax, 16
  02611	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  02616	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  0261b	66 0f 57 c0	 xorpd	 xmm0, xmm0
  0261f	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02623	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02628	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bff921fb54442d18
  02630	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02635	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  0263a	48 83 c0 10	 add	 rax, 16
  0263e	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  02643	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02648	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  02650	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02654	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02659	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  02661	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02666	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  0266b	48 83 c0 10	 add	 rax, 16
  0266f	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  02674	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02679	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  02681	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02685	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  0268a	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  02692	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02697	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  0269c	48 83 c0 10	 add	 rax, 16
  026a0	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  026a5	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  026aa	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  026b2	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  026b6	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  026bb	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  026c3	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  026c8	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  026cd	48 83 c0 10	 add	 rax, 16
  026d1	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  026d6	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  026db	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  026e3	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  026e7	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  026ec	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  026f4	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  026f9	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  026fe	48 83 c0 10	 add	 rax, 16
  02702	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  02707	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  0270c	66 0f 57 c0	 xorpd	 xmm0, xmm0
  02710	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02714	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02719	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  02721	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02726	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  0272b	48 83 c0 10	 add	 rax, 16
  0272f	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  02734	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0273b	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0273f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  02747	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  0274c	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02750	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  02757	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0275b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  02763	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02768	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0276d	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02772	48 83 c0 10	 add	 rax, 16
  02776	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  0277b	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02780	66 0f 57 c0	 xorpd	 xmm0, xmm0
  02784	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02788	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  0278d	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bff921fb54442d18
  02795	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0279a	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  0279f	48 83 c0 10	 add	 rax, 16
  027a3	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  027a8	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  027ad	66 0f 57 c0	 xorpd	 xmm0, xmm0
  027b1	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  027b5	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  027ba	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bff921fb54442d18
  027c2	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  027c7	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  027cc	48 83 c0 10	 add	 rax, 16
  027d0	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  027d5	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  027da	66 0f 57 c0	 xorpd	 xmm0, xmm0
  027de	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  027e2	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  027e7	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bff921fb54442d18
  027ef	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  027f4	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  027f9	48 83 c0 10	 add	 rax, 16
  027fd	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  02802	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02807	66 0f 57 c0	 xorpd	 xmm0, xmm0
  0280b	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0280f	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02814	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  0281c	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02821	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02826	48 83 c0 10	 add	 rax, 16
  0282a	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  0282f	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02834	66 0f 57 c0	 xorpd	 xmm0, xmm0
  02838	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0283c	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02841	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  02849	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0284e	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02853	48 83 c0 10	 add	 rax, 16
  02857	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  0285c	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02861	66 0f 57 c0	 xorpd	 xmm0, xmm0
  02865	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02869	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  0286e	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  02876	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0287b	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02880	48 83 c0 10	 add	 rax, 16
  02884	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  02889	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  0288e	66 0f 57 c0	 xorpd	 xmm0, xmm0
  02892	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02896	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0289d	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  028a1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  028a9	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  028ae	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  028b3	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  028b8	48 83 c0 10	 add	 rax, 16
  028bc	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  028c1	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  028c6	66 0f 57 c0	 xorpd	 xmm0, xmm0
  028ca	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  028ce	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  028d3	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bff921fb54442d18
  028db	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  028e0	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  028e5	48 83 c0 10	 add	 rax, 16
  028e9	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  028ee	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  028f5	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  028f9	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  02901	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02906	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0290a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  02911	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  02915	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0291d	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02922	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02927	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  0292c	48 83 c0 10	 add	 rax, 16
  02930	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  02935	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0293c	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  02940	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  02948	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  0294d	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02951	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  02958	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0295c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  02964	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02969	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0296e	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02973	48 83 c0 10	 add	 rax, 16
  02977	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  0297c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  02983	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  02987	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0298f	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02994	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02998	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0299f	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  029a3	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  029ab	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  029b0	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  029b5	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  029ba	48 83 c0 10	 add	 rax, 16
  029be	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  029c3	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  029ca	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  029ce	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  029d6	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  029db	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  029df	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  029e6	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  029ea	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  029f2	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  029f7	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  029fc	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02a01	48 83 c0 10	 add	 rax, 16
  02a05	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  02a0a	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02a0f	66 0f 57 c0	 xorpd	 xmm0, xmm0
  02a13	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02a17	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02a1c	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  02a24	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02a29	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02a2e	48 83 c0 10	 add	 rax, 16
  02a32	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax
  02a37	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  02a3e	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  02a42	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  02a4a	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02a4f	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02a53	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  02a5a	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  02a5e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  02a66	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02a6b	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02a70	48 8b 44 24 40	 mov	 rax, QWORD PTR p$20892[rsp]
  02a75	48 83 c0 10	 add	 rax, 16
  02a79	48 89 44 24 40	 mov	 QWORD PTR p$20892[rsp], rax

; 1174 : 
; 1175 :     INIT_SPECIAL_VALUES(cosh_special_values, {
; 1176 :       C(INF,N) C(U,U) C(INF,0.)  C(INF,-0.) C(U,U) C(INF,N) C(INF,N)
; 1177 :       C(N,N)   C(U,U) C(U,U)     C(U,U)     C(U,U) C(N,N)   C(N,N)
; 1178 :       C(N,0.)  C(U,U) C(1.,0.)   C(1.,-0.)  C(U,U) C(N,0.)  C(N,0.)
; 1179 :       C(N,0.)  C(U,U) C(1.,-0.)  C(1.,0.)   C(U,U) C(N,0.)  C(N,0.)
; 1180 :       C(N,N)   C(U,U) C(U,U)     C(U,U)     C(U,U) C(N,N)   C(N,N)
; 1181 :       C(INF,N) C(U,U) C(INF,-0.) C(INF,0.)  C(U,U) C(INF,N) C(INF,N)
; 1182 :       C(N,N)   C(N,N) C(N,0.)    C(N,0.)    C(N,N) C(N,N)   C(N,N)
; 1183 :     })

  02a7e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:cosh_special_values
  02a85	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  02a8a	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02a8f	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  02a96	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  02a9a	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02a9e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  02aa5	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  02aa9	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  02ab1	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02ab6	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02abb	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02ac0	48 83 c0 10	 add	 rax, 16
  02ac4	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  02ac9	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02ace	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  02ad6	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02ada	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02adf	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  02ae7	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02aec	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02af1	48 83 c0 10	 add	 rax, 16
  02af5	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  02afa	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02aff	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  02b06	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  02b0a	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02b0e	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02b13	66 0f 57 c0	 xorpd	 xmm0, xmm0
  02b17	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02b1c	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02b21	48 83 c0 10	 add	 rax, 16
  02b25	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  02b2a	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02b2f	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  02b36	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  02b3a	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02b3e	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02b43	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  02b4b	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02b50	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02b55	48 83 c0 10	 add	 rax, 16
  02b59	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  02b5e	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02b63	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  02b6b	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02b6f	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02b74	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  02b7c	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02b81	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02b86	48 83 c0 10	 add	 rax, 16
  02b8a	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  02b8f	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02b94	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  02b9b	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  02b9f	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02ba3	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  02baa	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  02bae	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  02bb6	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02bbb	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02bc0	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02bc5	48 83 c0 10	 add	 rax, 16
  02bc9	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  02bce	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02bd3	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  02bda	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  02bde	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02be2	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  02be9	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  02bed	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  02bf5	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02bfa	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02bff	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02c04	48 83 c0 10	 add	 rax, 16
  02c08	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  02c0d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  02c14	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  02c18	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  02c20	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02c25	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02c29	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  02c30	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  02c34	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  02c3c	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02c41	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02c46	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02c4b	48 83 c0 10	 add	 rax, 16
  02c4f	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  02c54	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02c59	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  02c61	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02c65	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02c6a	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  02c72	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02c77	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02c7c	48 83 c0 10	 add	 rax, 16
  02c80	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  02c85	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02c8a	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  02c92	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02c96	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02c9b	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  02ca3	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02ca8	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02cad	48 83 c0 10	 add	 rax, 16
  02cb1	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  02cb6	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02cbb	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  02cc3	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02cc7	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02ccc	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  02cd4	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02cd9	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02cde	48 83 c0 10	 add	 rax, 16
  02ce2	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  02ce7	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02cec	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  02cf4	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02cf8	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02cfd	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  02d05	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02d0a	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02d0f	48 83 c0 10	 add	 rax, 16
  02d13	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  02d18	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  02d1f	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  02d23	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  02d2b	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02d30	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02d34	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  02d3b	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  02d3f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  02d47	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02d4c	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02d51	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02d56	48 83 c0 10	 add	 rax, 16
  02d5a	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  02d5f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  02d66	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  02d6a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  02d72	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02d77	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02d7b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  02d82	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  02d86	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  02d8e	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02d93	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02d98	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02d9d	48 83 c0 10	 add	 rax, 16
  02da1	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  02da6	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  02dad	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  02db1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  02db9	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02dbe	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02dc2	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02dc7	66 0f 57 c0	 xorpd	 xmm0, xmm0
  02dcb	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02dd0	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02dd5	48 83 c0 10	 add	 rax, 16
  02dd9	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  02dde	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02de3	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  02deb	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02def	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02df4	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  02dfc	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02e01	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02e06	48 83 c0 10	 add	 rax, 16
  02e0a	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  02e0f	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02e14	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff0000000000000
  02e1c	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02e20	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02e25	66 0f 57 c0	 xorpd	 xmm0, xmm0
  02e29	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02e2e	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02e33	48 83 c0 10	 add	 rax, 16
  02e37	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  02e3c	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02e41	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff0000000000000
  02e49	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02e4d	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02e52	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  02e5a	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02e5f	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02e64	48 83 c0 10	 add	 rax, 16
  02e68	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  02e6d	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02e72	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  02e7a	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02e7e	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02e83	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  02e8b	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02e90	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02e95	48 83 c0 10	 add	 rax, 16
  02e99	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  02e9e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  02ea5	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  02ea9	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  02eb1	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02eb6	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02eba	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02ebf	66 0f 57 c0	 xorpd	 xmm0, xmm0
  02ec3	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02ec8	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02ecd	48 83 c0 10	 add	 rax, 16
  02ed1	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  02ed6	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  02edd	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  02ee1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  02ee9	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02eee	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02ef2	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02ef7	66 0f 57 c0	 xorpd	 xmm0, xmm0
  02efb	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02f00	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02f05	48 83 c0 10	 add	 rax, 16
  02f09	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  02f0e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  02f15	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  02f19	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  02f21	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02f26	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02f2a	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02f2f	66 0f 57 c0	 xorpd	 xmm0, xmm0
  02f33	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02f38	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02f3d	48 83 c0 10	 add	 rax, 16
  02f41	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  02f46	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02f4b	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  02f53	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02f57	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02f5c	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  02f64	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02f69	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02f6e	48 83 c0 10	 add	 rax, 16
  02f72	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  02f77	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02f7c	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff0000000000000
  02f84	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02f88	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02f8d	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  02f95	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02f9a	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02f9f	48 83 c0 10	 add	 rax, 16
  02fa3	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  02fa8	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02fad	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff0000000000000
  02fb5	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02fb9	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02fbe	66 0f 57 c0	 xorpd	 xmm0, xmm0
  02fc2	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02fc7	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02fcc	48 83 c0 10	 add	 rax, 16
  02fd0	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  02fd5	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02fda	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  02fe2	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  02fe6	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02feb	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  02ff3	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  02ff8	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  02ffd	48 83 c0 10	 add	 rax, 16
  03001	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  03006	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0300d	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03011	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03019	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  0301e	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03022	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  03027	66 0f 57 c0	 xorpd	 xmm0, xmm0
  0302b	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03030	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  03035	48 83 c0 10	 add	 rax, 16
  03039	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  0303e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03045	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03049	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03051	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  03056	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0305a	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  0305f	66 0f 57 c0	 xorpd	 xmm0, xmm0
  03063	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03068	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  0306d	48 83 c0 10	 add	 rax, 16
  03071	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  03076	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0307d	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03081	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03089	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  0308e	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03092	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03099	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0309d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  030a5	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  030aa	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  030af	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  030b4	48 83 c0 10	 add	 rax, 16
  030b8	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  030bd	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  030c2	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  030ca	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  030ce	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  030d3	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  030db	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  030e0	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  030e5	48 83 c0 10	 add	 rax, 16
  030e9	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  030ee	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  030f3	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  030fb	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  030ff	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  03104	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0310c	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03111	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  03116	48 83 c0 10	 add	 rax, 16
  0311a	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  0311f	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  03124	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0312c	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03130	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  03135	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0313d	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03142	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  03147	48 83 c0 10	 add	 rax, 16
  0314b	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  03150	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  03155	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0315d	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03161	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  03166	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0316e	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03173	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  03178	48 83 c0 10	 add	 rax, 16
  0317c	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  03181	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03188	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0318c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03194	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  03199	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0319d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  031a4	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  031a8	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  031b0	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  031b5	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  031ba	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  031bf	48 83 c0 10	 add	 rax, 16
  031c3	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  031c8	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  031cf	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  031d3	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  031db	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  031e0	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  031e4	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  031eb	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  031ef	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  031f7	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  031fc	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03201	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  03206	48 83 c0 10	 add	 rax, 16
  0320a	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  0320f	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  03214	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  0321b	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  0321f	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03223	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0322a	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0322e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03236	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  0323b	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03240	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  03245	48 83 c0 10	 add	 rax, 16
  03249	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  0324e	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  03253	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0325b	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0325f	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  03264	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0326c	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03271	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  03276	48 83 c0 10	 add	 rax, 16
  0327a	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  0327f	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  03284	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  0328b	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  0328f	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03293	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  03298	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  032a0	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  032a5	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  032aa	48 83 c0 10	 add	 rax, 16
  032ae	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  032b3	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  032b8	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  032bf	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  032c3	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  032c7	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  032cc	66 0f 57 c0	 xorpd	 xmm0, xmm0
  032d0	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  032d5	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  032da	48 83 c0 10	 add	 rax, 16
  032de	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  032e3	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  032e8	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  032f0	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  032f4	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  032f9	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  03301	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03306	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  0330b	48 83 c0 10	 add	 rax, 16
  0330f	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  03314	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  03319	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  03320	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  03324	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03328	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0332f	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03333	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0333b	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  03340	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03345	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  0334a	48 83 c0 10	 add	 rax, 16
  0334e	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  03353	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  03358	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  0335f	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  03363	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03367	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0336e	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03372	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0337a	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  0337f	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03384	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  03389	48 83 c0 10	 add	 rax, 16
  0338d	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  03392	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03399	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0339d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  033a5	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  033aa	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  033ae	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  033b5	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  033b9	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  033c1	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  033c6	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  033cb	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  033d0	48 83 c0 10	 add	 rax, 16
  033d4	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  033d9	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  033e0	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  033e4	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  033ec	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  033f1	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  033f5	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  033fc	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03400	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03408	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  0340d	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03412	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  03417	48 83 c0 10	 add	 rax, 16
  0341b	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  03420	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03427	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0342b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03433	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  03438	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0343c	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  03441	66 0f 57 c0	 xorpd	 xmm0, xmm0
  03445	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0344a	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  0344f	48 83 c0 10	 add	 rax, 16
  03453	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  03458	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0345f	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03463	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0346b	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  03470	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03474	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  03479	66 0f 57 c0	 xorpd	 xmm0, xmm0
  0347d	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03482	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  03487	48 83 c0 10	 add	 rax, 16
  0348b	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  03490	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03497	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0349b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  034a3	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  034a8	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  034ac	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  034b3	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  034b7	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  034bf	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  034c4	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  034c9	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  034ce	48 83 c0 10	 add	 rax, 16
  034d2	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  034d7	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  034de	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  034e2	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  034ea	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  034ef	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  034f3	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  034fa	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  034fe	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03506	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  0350b	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03510	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  03515	48 83 c0 10	 add	 rax, 16
  03519	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax
  0351e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03525	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03529	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03531	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  03536	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0353a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03541	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03545	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0354d	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  03552	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03557	48 8b 44 24 48	 mov	 rax, QWORD PTR p$20894[rsp]
  0355c	48 83 c0 10	 add	 rax, 16
  03560	48 89 44 24 48	 mov	 QWORD PTR p$20894[rsp], rax

; 1184 : 
; 1185 :     INIT_SPECIAL_VALUES(exp_special_values, {
; 1186 :       C(0.,0.) C(U,U) C(0.,-0.)  C(0.,0.)  C(U,U) C(0.,0.) C(0.,0.)
; 1187 :       C(N,N)   C(U,U) C(U,U)     C(U,U)    C(U,U) C(N,N)   C(N,N)
; 1188 :       C(N,N)   C(U,U) C(1.,-0.)  C(1.,0.)  C(U,U) C(N,N)   C(N,N)
; 1189 :       C(N,N)   C(U,U) C(1.,-0.)  C(1.,0.)  C(U,U) C(N,N)   C(N,N)
; 1190 :       C(N,N)   C(U,U) C(U,U)     C(U,U)    C(U,U) C(N,N)   C(N,N)
; 1191 :       C(INF,N) C(U,U) C(INF,-0.) C(INF,0.) C(U,U) C(INF,N) C(INF,N)
; 1192 :       C(N,N)   C(N,N) C(N,-0.)   C(N,0.)   C(N,N) C(N,N)   C(N,N)
; 1193 :     })

  03565	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:exp_special_values
  0356c	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  03571	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03576	66 0f 57 c0	 xorpd	 xmm0, xmm0
  0357a	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0357e	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03583	66 0f 57 c0	 xorpd	 xmm0, xmm0
  03587	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0358c	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03591	48 83 c0 10	 add	 rax, 16
  03595	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  0359a	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  0359f	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  035a7	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  035ab	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  035b0	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  035b8	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  035bd	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  035c2	48 83 c0 10	 add	 rax, 16
  035c6	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  035cb	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  035d0	66 0f 57 c0	 xorpd	 xmm0, xmm0
  035d4	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  035d8	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  035dd	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  035e5	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  035ea	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  035ef	48 83 c0 10	 add	 rax, 16
  035f3	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  035f8	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  035fd	66 0f 57 c0	 xorpd	 xmm0, xmm0
  03601	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03605	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  0360a	66 0f 57 c0	 xorpd	 xmm0, xmm0
  0360e	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03613	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03618	48 83 c0 10	 add	 rax, 16
  0361c	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  03621	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03626	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0362e	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03632	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03637	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0363f	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03644	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03649	48 83 c0 10	 add	 rax, 16
  0364d	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  03652	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03657	66 0f 57 c0	 xorpd	 xmm0, xmm0
  0365b	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0365f	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03664	66 0f 57 c0	 xorpd	 xmm0, xmm0
  03668	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0366d	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03672	48 83 c0 10	 add	 rax, 16
  03676	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  0367b	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03680	66 0f 57 c0	 xorpd	 xmm0, xmm0
  03684	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03688	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  0368d	66 0f 57 c0	 xorpd	 xmm0, xmm0
  03691	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03696	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  0369b	48 83 c0 10	 add	 rax, 16
  0369f	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  036a4	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  036ab	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  036af	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  036b7	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  036bc	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  036c0	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  036c7	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  036cb	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  036d3	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  036d8	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  036dd	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  036e2	48 83 c0 10	 add	 rax, 16
  036e6	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  036eb	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  036f0	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  036f8	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  036fc	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03701	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  03709	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0370e	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03713	48 83 c0 10	 add	 rax, 16
  03717	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  0371c	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03721	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  03729	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0372d	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03732	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0373a	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0373f	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03744	48 83 c0 10	 add	 rax, 16
  03748	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  0374d	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03752	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0375a	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0375e	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03763	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0376b	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03770	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03775	48 83 c0 10	 add	 rax, 16
  03779	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  0377e	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03783	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0378b	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0378f	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03794	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0379c	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  037a1	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  037a6	48 83 c0 10	 add	 rax, 16
  037aa	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  037af	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  037b6	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  037ba	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  037c2	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  037c7	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  037cb	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  037d2	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  037d6	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  037de	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  037e3	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  037e8	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  037ed	48 83 c0 10	 add	 rax, 16
  037f1	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  037f6	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  037fd	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03801	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03809	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  0380e	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03812	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03819	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0381d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03825	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  0382a	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0382f	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03834	48 83 c0 10	 add	 rax, 16
  03838	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  0383d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03844	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03848	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03850	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03855	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03859	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03860	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03864	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0386c	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03871	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03876	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  0387b	48 83 c0 10	 add	 rax, 16
  0387f	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  03884	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03889	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  03891	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03895	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  0389a	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  038a2	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  038a7	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  038ac	48 83 c0 10	 add	 rax, 16
  038b0	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  038b5	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  038ba	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff0000000000000
  038c2	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  038c6	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  038cb	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  038d3	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  038d8	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  038dd	48 83 c0 10	 add	 rax, 16
  038e1	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  038e6	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  038eb	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff0000000000000
  038f3	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  038f7	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  038fc	66 0f 57 c0	 xorpd	 xmm0, xmm0
  03900	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03905	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  0390a	48 83 c0 10	 add	 rax, 16
  0390e	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  03913	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03918	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  03920	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03924	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03929	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  03931	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03936	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  0393b	48 83 c0 10	 add	 rax, 16
  0393f	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  03944	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0394b	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0394f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03957	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  0395c	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03960	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03967	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0396b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03973	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03978	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0397d	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03982	48 83 c0 10	 add	 rax, 16
  03986	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  0398b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03992	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03996	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0399e	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  039a3	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  039a7	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  039ae	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  039b2	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  039ba	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  039bf	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  039c4	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  039c9	48 83 c0 10	 add	 rax, 16
  039cd	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  039d2	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  039d9	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  039dd	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  039e5	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  039ea	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  039ee	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  039f5	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  039f9	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03a01	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03a06	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03a0b	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03a10	48 83 c0 10	 add	 rax, 16
  03a14	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  03a19	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03a1e	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  03a26	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03a2a	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03a2f	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  03a37	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03a3c	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03a41	48 83 c0 10	 add	 rax, 16
  03a45	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  03a4a	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03a4f	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff0000000000000
  03a57	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03a5b	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03a60	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  03a68	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03a6d	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03a72	48 83 c0 10	 add	 rax, 16
  03a76	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  03a7b	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03a80	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff0000000000000
  03a88	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03a8c	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03a91	66 0f 57 c0	 xorpd	 xmm0, xmm0
  03a95	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03a9a	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03a9f	48 83 c0 10	 add	 rax, 16
  03aa3	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  03aa8	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03aad	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  03ab5	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03ab9	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03abe	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  03ac6	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03acb	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03ad0	48 83 c0 10	 add	 rax, 16
  03ad4	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  03ad9	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03ae0	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03ae4	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03aec	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03af1	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03af5	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03afc	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03b00	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03b08	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03b0d	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03b12	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03b17	48 83 c0 10	 add	 rax, 16
  03b1b	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  03b20	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03b27	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03b2b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03b33	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03b38	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03b3c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03b43	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03b47	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03b4f	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03b54	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03b59	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03b5e	48 83 c0 10	 add	 rax, 16
  03b62	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  03b67	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03b6e	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03b72	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03b7a	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03b7f	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03b83	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03b8a	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03b8e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03b96	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03b9b	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03ba0	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03ba5	48 83 c0 10	 add	 rax, 16
  03ba9	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  03bae	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03bb3	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  03bbb	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03bbf	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03bc4	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  03bcc	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03bd1	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03bd6	48 83 c0 10	 add	 rax, 16
  03bda	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  03bdf	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03be4	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  03bec	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03bf0	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03bf5	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  03bfd	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03c02	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03c07	48 83 c0 10	 add	 rax, 16
  03c0b	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  03c10	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03c15	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  03c1d	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03c21	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03c26	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  03c2e	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03c33	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03c38	48 83 c0 10	 add	 rax, 16
  03c3c	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  03c41	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03c46	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  03c4e	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03c52	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03c57	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  03c5f	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03c64	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03c69	48 83 c0 10	 add	 rax, 16
  03c6d	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  03c72	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03c79	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03c7d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03c85	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03c8a	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03c8e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03c95	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03c99	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03ca1	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03ca6	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03cab	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03cb0	48 83 c0 10	 add	 rax, 16
  03cb4	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  03cb9	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03cc0	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03cc4	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03ccc	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03cd1	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03cd5	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03cdc	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03ce0	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03ce8	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03ced	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03cf2	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03cf7	48 83 c0 10	 add	 rax, 16
  03cfb	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  03d00	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03d05	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  03d0c	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  03d10	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03d14	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03d1b	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03d1f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03d27	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03d2c	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03d31	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03d36	48 83 c0 10	 add	 rax, 16
  03d3a	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  03d3f	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03d44	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  03d4c	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03d50	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03d55	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  03d5d	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03d62	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03d67	48 83 c0 10	 add	 rax, 16
  03d6b	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  03d70	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03d75	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  03d7c	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  03d80	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03d84	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03d89	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  03d91	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03d96	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03d9b	48 83 c0 10	 add	 rax, 16
  03d9f	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  03da4	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03da9	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  03db0	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  03db4	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03db8	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03dbd	66 0f 57 c0	 xorpd	 xmm0, xmm0
  03dc1	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03dc6	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03dcb	48 83 c0 10	 add	 rax, 16
  03dcf	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  03dd4	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03dd9	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  03de1	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03de5	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03dea	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  03df2	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03df7	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03dfc	48 83 c0 10	 add	 rax, 16
  03e00	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  03e05	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03e0a	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  03e11	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  03e15	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03e19	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03e20	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03e24	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03e2c	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03e31	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03e36	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03e3b	48 83 c0 10	 add	 rax, 16
  03e3f	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  03e44	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03e49	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  03e50	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  03e54	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03e58	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03e5f	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03e63	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03e6b	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03e70	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03e75	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03e7a	48 83 c0 10	 add	 rax, 16
  03e7e	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  03e83	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03e8a	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03e8e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03e96	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03e9b	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03e9f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03ea6	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03eaa	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03eb2	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03eb7	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03ebc	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03ec1	48 83 c0 10	 add	 rax, 16
  03ec5	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  03eca	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03ed1	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03ed5	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03edd	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03ee2	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03ee6	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03eed	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03ef1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03ef9	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03efe	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03f03	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03f08	48 83 c0 10	 add	 rax, 16
  03f0c	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  03f11	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03f18	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03f1c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03f24	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03f29	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03f2d	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03f32	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  03f3a	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03f3f	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03f44	48 83 c0 10	 add	 rax, 16
  03f48	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  03f4d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03f54	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03f58	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03f60	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03f65	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03f69	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03f6e	66 0f 57 c0	 xorpd	 xmm0, xmm0
  03f72	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03f77	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03f7c	48 83 c0 10	 add	 rax, 16
  03f80	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  03f85	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03f8c	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03f90	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03f98	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03f9d	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03fa1	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03fa8	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03fac	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03fb4	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03fb9	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  03fbe	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03fc3	48 83 c0 10	 add	 rax, 16
  03fc7	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  03fcc	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03fd3	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03fd7	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03fdf	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  03fe4	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  03fe8	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  03fef	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  03ff3	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  03ffb	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  04000	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04005	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  0400a	48 83 c0 10	 add	 rax, 16
  0400e	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax
  04013	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0401a	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0401e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  04026	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  0402b	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0402f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  04036	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0403a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  04042	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  04047	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0404c	48 8b 44 24 50	 mov	 rax, QWORD PTR p$20896[rsp]
  04051	48 83 c0 10	 add	 rax, 16
  04055	48 89 44 24 50	 mov	 QWORD PTR p$20896[rsp], rax

; 1194 : 
; 1195 :     INIT_SPECIAL_VALUES(log_special_values, {
; 1196 :       C(INF,-P34) C(INF,-P)  C(INF,-P)   C(INF,P)   C(INF,P)  C(INF,P34)  C(INF,N)
; 1197 :       C(INF,-P12) C(U,U)     C(U,U)      C(U,U)     C(U,U)    C(INF,P12)  C(N,N)
; 1198 :       C(INF,-P12) C(U,U)     C(-INF,-P)  C(-INF,P)  C(U,U)    C(INF,P12)  C(N,N)
; 1199 :       C(INF,-P12) C(U,U)     C(-INF,-0.) C(-INF,0.) C(U,U)    C(INF,P12)  C(N,N)
; 1200 :       C(INF,-P12) C(U,U)     C(U,U)      C(U,U)     C(U,U)    C(INF,P12)  C(N,N)
; 1201 :       C(INF,-P14) C(INF,-0.) C(INF,-0.)  C(INF,0.)  C(INF,0.) C(INF,P14)  C(INF,N)
; 1202 :       C(INF,N)    C(N,N)     C(N,N)      C(N,N)     C(N,N)    C(INF,N)    C(N,N)
; 1203 :     })

  0405a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:log_special_values
  04061	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  04066	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  0406b	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  04072	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  04076	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0407a	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  0407f	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c002d97c7f3321d2
  04087	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0408c	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04091	48 83 c0 10	 add	 rax, 16
  04095	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  0409a	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  0409f	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  040a6	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  040aa	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  040ae	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  040b3	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c00921fb54442d18
  040bb	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  040c0	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  040c5	48 83 c0 10	 add	 rax, 16
  040c9	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  040ce	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  040d3	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  040da	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  040de	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  040e2	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  040e7	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c00921fb54442d18
  040ef	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  040f4	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  040f9	48 83 c0 10	 add	 rax, 16
  040fd	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  04102	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04107	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  0410e	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  04112	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04116	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  0411b	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@400921fb54442d18
  04123	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04128	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  0412d	48 83 c0 10	 add	 rax, 16
  04131	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  04136	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  0413b	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  04142	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  04146	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0414a	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  0414f	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@400921fb54442d18
  04157	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0415c	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04161	48 83 c0 10	 add	 rax, 16
  04165	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  0416a	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  0416f	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  04176	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  0417a	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0417e	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04183	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@4002d97c7f3321d2
  0418b	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04190	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04195	48 83 c0 10	 add	 rax, 16
  04199	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  0419e	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  041a3	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  041aa	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  041ae	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  041b2	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  041b9	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  041bd	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  041c5	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  041ca	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  041cf	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  041d4	48 83 c0 10	 add	 rax, 16
  041d8	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  041dd	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  041e2	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  041e9	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  041ed	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  041f1	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  041f6	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bff921fb54442d18
  041fe	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04203	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04208	48 83 c0 10	 add	 rax, 16
  0420c	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  04211	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04216	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0421e	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04222	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04227	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0422f	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04234	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04239	48 83 c0 10	 add	 rax, 16
  0423d	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  04242	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04247	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0424f	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04253	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04258	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  04260	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04265	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  0426a	48 83 c0 10	 add	 rax, 16
  0426e	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  04273	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04278	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  04280	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04284	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04289	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  04291	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04296	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  0429b	48 83 c0 10	 add	 rax, 16
  0429f	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  042a4	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  042a9	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  042b1	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  042b5	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  042ba	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  042c2	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  042c7	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  042cc	48 83 c0 10	 add	 rax, 16
  042d0	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  042d5	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  042da	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  042e1	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  042e5	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  042e9	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  042ee	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  042f6	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  042fb	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04300	48 83 c0 10	 add	 rax, 16
  04304	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  04309	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  04310	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  04314	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0431c	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04321	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04325	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0432c	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  04330	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  04338	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  0433d	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04342	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04347	48 83 c0 10	 add	 rax, 16
  0434b	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  04350	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04355	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  0435c	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  04360	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04364	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04369	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bff921fb54442d18
  04371	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04376	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  0437b	48 83 c0 10	 add	 rax, 16
  0437f	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  04384	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04389	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  04391	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04395	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  0439a	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  043a2	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  043a7	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  043ac	48 83 c0 10	 add	 rax, 16
  043b0	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  043b5	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  043bc	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  043c0	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  043c8	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  043cd	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  043d1	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  043d6	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c00921fb54442d18
  043de	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  043e3	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  043e8	48 83 c0 10	 add	 rax, 16
  043ec	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  043f1	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  043f8	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  043fc	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  04404	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04409	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0440d	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04412	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@400921fb54442d18
  0441a	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0441f	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04424	48 83 c0 10	 add	 rax, 16
  04428	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  0442d	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04432	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0443a	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0443e	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04443	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0444b	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04450	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04455	48 83 c0 10	 add	 rax, 16
  04459	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  0445e	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04463	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  0446a	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  0446e	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04472	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04477	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  0447f	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04484	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04489	48 83 c0 10	 add	 rax, 16
  0448d	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  04492	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  04499	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0449d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  044a5	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  044aa	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  044ae	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  044b5	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  044b9	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  044c1	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  044c6	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  044cb	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  044d0	48 83 c0 10	 add	 rax, 16
  044d4	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  044d9	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  044de	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  044e5	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  044e9	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  044ed	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  044f2	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bff921fb54442d18
  044fa	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  044ff	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04504	48 83 c0 10	 add	 rax, 16
  04508	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  0450d	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04512	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0451a	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0451e	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04523	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0452b	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04530	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04535	48 83 c0 10	 add	 rax, 16
  04539	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  0453e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  04545	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  04549	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  04551	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04556	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0455a	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  0455f	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  04567	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0456c	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04571	48 83 c0 10	 add	 rax, 16
  04575	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  0457a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  04581	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  04585	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  0458d	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04592	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04596	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  0459b	66 0f 57 c0	 xorpd	 xmm0, xmm0
  0459f	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  045a4	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  045a9	48 83 c0 10	 add	 rax, 16
  045ad	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  045b2	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  045b7	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  045bf	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  045c3	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  045c8	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  045d0	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  045d5	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  045da	48 83 c0 10	 add	 rax, 16
  045de	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  045e3	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  045e8	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  045ef	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  045f3	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  045f7	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  045fc	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  04604	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04609	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  0460e	48 83 c0 10	 add	 rax, 16
  04612	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  04617	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0461e	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  04622	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0462a	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  0462f	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04633	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0463a	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0463e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  04646	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  0464b	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04650	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04655	48 83 c0 10	 add	 rax, 16
  04659	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  0465e	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04663	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  0466a	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  0466e	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04672	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04677	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bff921fb54442d18
  0467f	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04684	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04689	48 83 c0 10	 add	 rax, 16
  0468d	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  04692	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04697	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0469f	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  046a3	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  046a8	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  046b0	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  046b5	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  046ba	48 83 c0 10	 add	 rax, 16
  046be	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  046c3	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  046c8	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  046d0	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  046d4	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  046d9	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  046e1	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  046e6	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  046eb	48 83 c0 10	 add	 rax, 16
  046ef	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  046f4	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  046f9	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  04701	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04705	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  0470a	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  04712	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04717	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  0471c	48 83 c0 10	 add	 rax, 16
  04720	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  04725	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  0472a	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  04732	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04736	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  0473b	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  04743	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04748	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  0474d	48 83 c0 10	 add	 rax, 16
  04751	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  04756	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  0475b	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  04762	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  04766	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0476a	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  0476f	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff921fb54442d18
  04777	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0477c	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04781	48 83 c0 10	 add	 rax, 16
  04785	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  0478a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  04791	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  04795	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0479d	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  047a2	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  047a6	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  047ad	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  047b1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  047b9	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  047be	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  047c3	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  047c8	48 83 c0 10	 add	 rax, 16
  047cc	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  047d1	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  047d6	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  047dd	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  047e1	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  047e5	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  047ea	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bfe921fb54442d18
  047f2	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  047f7	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  047fc	48 83 c0 10	 add	 rax, 16
  04800	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  04805	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  0480a	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  04811	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  04815	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04819	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  0481e	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  04826	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0482b	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04830	48 83 c0 10	 add	 rax, 16
  04834	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  04839	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  0483e	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  04845	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  04849	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0484d	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04852	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  0485a	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0485f	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04864	48 83 c0 10	 add	 rax, 16
  04868	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  0486d	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04872	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  04879	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  0487d	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04881	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04886	66 0f 57 c0	 xorpd	 xmm0, xmm0
  0488a	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0488f	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04894	48 83 c0 10	 add	 rax, 16
  04898	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  0489d	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  048a2	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  048a9	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  048ad	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  048b1	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  048b6	66 0f 57 c0	 xorpd	 xmm0, xmm0
  048ba	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  048bf	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  048c4	48 83 c0 10	 add	 rax, 16
  048c8	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  048cd	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  048d2	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  048d9	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  048dd	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  048e1	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  048e6	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3fe921fb54442d18
  048ee	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  048f3	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  048f8	48 83 c0 10	 add	 rax, 16
  048fc	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  04901	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04906	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  0490d	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  04911	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04915	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0491c	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  04920	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  04928	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  0492d	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04932	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04937	48 83 c0 10	 add	 rax, 16
  0493b	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  04940	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04945	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  0494c	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  04950	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04954	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0495b	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0495f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  04967	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  0496c	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04971	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04976	48 83 c0 10	 add	 rax, 16
  0497a	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  0497f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  04986	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0498a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  04992	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04997	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0499b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  049a2	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  049a6	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  049ae	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  049b3	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  049b8	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  049bd	48 83 c0 10	 add	 rax, 16
  049c1	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  049c6	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  049cd	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  049d1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  049d9	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  049de	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  049e2	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  049e9	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  049ed	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  049f5	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  049fa	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  049ff	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04a04	48 83 c0 10	 add	 rax, 16
  04a08	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  04a0d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  04a14	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  04a18	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  04a20	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04a25	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04a29	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  04a30	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  04a34	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  04a3c	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04a41	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04a46	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04a4b	48 83 c0 10	 add	 rax, 16
  04a4f	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  04a54	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  04a5b	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  04a5f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  04a67	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04a6c	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04a70	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  04a77	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  04a7b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  04a83	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04a88	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04a8d	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04a92	48 83 c0 10	 add	 rax, 16
  04a96	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  04a9b	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04aa0	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  04aa7	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  04aab	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04aaf	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  04ab6	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  04aba	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  04ac2	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04ac7	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04acc	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04ad1	48 83 c0 10	 add	 rax, 16
  04ad5	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax
  04ada	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  04ae1	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  04ae5	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  04aed	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04af2	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04af6	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  04afd	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  04b01	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  04b09	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04b0e	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04b13	48 8b 44 24 58	 mov	 rax, QWORD PTR p$20898[rsp]
  04b18	48 83 c0 10	 add	 rax, 16
  04b1c	48 89 44 24 58	 mov	 QWORD PTR p$20898[rsp], rax

; 1204 : 
; 1205 :     INIT_SPECIAL_VALUES(sinh_special_values, {
; 1206 :       C(INF,N) C(U,U) C(-INF,-0.) C(-INF,0.) C(U,U) C(INF,N) C(INF,N)
; 1207 :       C(N,N)   C(U,U) C(U,U)      C(U,U)     C(U,U) C(N,N)   C(N,N)
; 1208 :       C(0.,N)  C(U,U) C(-0.,-0.)  C(-0.,0.)  C(U,U) C(0.,N)  C(0.,N)
; 1209 :       C(0.,N)  C(U,U) C(0.,-0.)   C(0.,0.)   C(U,U) C(0.,N)  C(0.,N)
; 1210 :       C(N,N)   C(U,U) C(U,U)      C(U,U)     C(U,U) C(N,N)   C(N,N)
; 1211 :       C(INF,N) C(U,U) C(INF,-0.)  C(INF,0.)  C(U,U) C(INF,N) C(INF,N)
; 1212 :       C(N,N)   C(N,N) C(N,-0.)    C(N,0.)    C(N,N) C(N,N)   C(N,N)
; 1213 :     })

  04b21	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:sinh_special_values
  04b28	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  04b2d	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04b32	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  04b39	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  04b3d	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04b41	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  04b48	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  04b4c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  04b54	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04b59	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04b5e	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04b63	48 83 c0 10	 add	 rax, 16
  04b67	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  04b6c	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04b71	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  04b79	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04b7d	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04b82	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  04b8a	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04b8f	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04b94	48 83 c0 10	 add	 rax, 16
  04b98	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  04b9d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  04ba4	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  04ba8	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  04bb0	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04bb5	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04bb9	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04bbe	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  04bc6	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04bcb	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04bd0	48 83 c0 10	 add	 rax, 16
  04bd4	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  04bd9	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  04be0	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  04be4	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  04bec	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04bf1	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04bf5	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04bfa	66 0f 57 c0	 xorpd	 xmm0, xmm0
  04bfe	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04c03	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04c08	48 83 c0 10	 add	 rax, 16
  04c0c	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  04c11	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04c16	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  04c1e	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04c22	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04c27	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  04c2f	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04c34	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04c39	48 83 c0 10	 add	 rax, 16
  04c3d	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  04c42	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04c47	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  04c4e	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  04c52	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04c56	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  04c5d	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  04c61	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  04c69	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04c6e	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04c73	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04c78	48 83 c0 10	 add	 rax, 16
  04c7c	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  04c81	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04c86	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  04c8d	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  04c91	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04c95	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  04c9c	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  04ca0	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  04ca8	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04cad	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04cb2	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04cb7	48 83 c0 10	 add	 rax, 16
  04cbb	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  04cc0	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  04cc7	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  04ccb	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  04cd3	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04cd8	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04cdc	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  04ce3	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  04ce7	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  04cef	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04cf4	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04cf9	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04cfe	48 83 c0 10	 add	 rax, 16
  04d02	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  04d07	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04d0c	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  04d14	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04d18	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04d1d	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  04d25	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04d2a	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04d2f	48 83 c0 10	 add	 rax, 16
  04d33	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  04d38	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04d3d	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  04d45	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04d49	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04d4e	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  04d56	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04d5b	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04d60	48 83 c0 10	 add	 rax, 16
  04d64	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  04d69	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04d6e	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  04d76	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04d7a	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04d7f	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  04d87	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04d8c	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04d91	48 83 c0 10	 add	 rax, 16
  04d95	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  04d9a	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04d9f	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  04da7	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04dab	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04db0	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  04db8	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04dbd	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04dc2	48 83 c0 10	 add	 rax, 16
  04dc6	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  04dcb	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  04dd2	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  04dd6	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  04dde	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04de3	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04de7	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  04dee	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  04df2	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  04dfa	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04dff	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04e04	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04e09	48 83 c0 10	 add	 rax, 16
  04e0d	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  04e12	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  04e19	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  04e1d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  04e25	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04e2a	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04e2e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  04e35	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  04e39	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  04e41	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04e46	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04e4b	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04e50	48 83 c0 10	 add	 rax, 16
  04e54	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  04e59	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04e5e	66 0f 57 c0	 xorpd	 xmm0, xmm0
  04e62	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04e66	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  04e6d	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  04e71	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  04e79	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04e7e	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04e83	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04e88	48 83 c0 10	 add	 rax, 16
  04e8c	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  04e91	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04e96	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  04e9e	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04ea2	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04ea7	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  04eaf	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04eb4	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04eb9	48 83 c0 10	 add	 rax, 16
  04ebd	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  04ec2	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04ec7	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  04ecf	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04ed3	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04ed8	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  04ee0	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04ee5	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04eea	48 83 c0 10	 add	 rax, 16
  04eee	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  04ef3	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04ef8	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  04f00	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04f04	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04f09	66 0f 57 c0	 xorpd	 xmm0, xmm0
  04f0d	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04f12	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04f17	48 83 c0 10	 add	 rax, 16
  04f1b	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  04f20	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04f25	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  04f2d	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04f31	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04f36	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  04f3e	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04f43	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04f48	48 83 c0 10	 add	 rax, 16
  04f4c	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  04f51	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04f56	66 0f 57 c0	 xorpd	 xmm0, xmm0
  04f5a	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04f5e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  04f65	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  04f69	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  04f71	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04f76	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04f7b	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04f80	48 83 c0 10	 add	 rax, 16
  04f84	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  04f89	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04f8e	66 0f 57 c0	 xorpd	 xmm0, xmm0
  04f92	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04f96	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  04f9d	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  04fa1	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  04fa9	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04fae	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04fb3	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04fb8	48 83 c0 10	 add	 rax, 16
  04fbc	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  04fc1	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04fc6	66 0f 57 c0	 xorpd	 xmm0, xmm0
  04fca	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  04fce	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  04fd5	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  04fd9	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  04fe1	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04fe6	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  04feb	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04ff0	48 83 c0 10	 add	 rax, 16
  04ff4	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  04ff9	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  04ffe	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  05006	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0500a	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  0500f	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  05017	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0501c	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  05021	48 83 c0 10	 add	 rax, 16
  05025	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  0502a	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  0502f	66 0f 57 c0	 xorpd	 xmm0, xmm0
  05033	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05037	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  0503c	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  05044	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05049	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  0504e	48 83 c0 10	 add	 rax, 16
  05052	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  05057	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  0505c	66 0f 57 c0	 xorpd	 xmm0, xmm0
  05060	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05064	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  05069	66 0f 57 c0	 xorpd	 xmm0, xmm0
  0506d	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05072	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  05077	48 83 c0 10	 add	 rax, 16
  0507b	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  05080	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  05085	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0508d	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05091	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  05096	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0509e	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  050a3	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  050a8	48 83 c0 10	 add	 rax, 16
  050ac	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  050b1	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  050b6	66 0f 57 c0	 xorpd	 xmm0, xmm0
  050ba	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  050be	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  050c5	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  050c9	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  050d1	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  050d6	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  050db	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  050e0	48 83 c0 10	 add	 rax, 16
  050e4	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  050e9	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  050ee	66 0f 57 c0	 xorpd	 xmm0, xmm0
  050f2	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  050f6	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  050fd	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  05101	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  05109	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  0510e	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05113	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  05118	48 83 c0 10	 add	 rax, 16
  0511c	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  05121	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  05128	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0512c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  05134	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  05139	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0513d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  05144	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  05148	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  05150	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  05155	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0515a	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  0515f	48 83 c0 10	 add	 rax, 16
  05163	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  05168	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  0516d	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  05175	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05179	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  0517e	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  05186	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0518b	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  05190	48 83 c0 10	 add	 rax, 16
  05194	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  05199	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  0519e	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  051a6	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  051aa	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  051af	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  051b7	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  051bc	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  051c1	48 83 c0 10	 add	 rax, 16
  051c5	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  051ca	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  051cf	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  051d7	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  051db	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  051e0	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  051e8	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  051ed	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  051f2	48 83 c0 10	 add	 rax, 16
  051f6	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  051fb	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  05200	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  05208	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0520c	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  05211	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  05219	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0521e	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  05223	48 83 c0 10	 add	 rax, 16
  05227	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  0522c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  05233	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  05237	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0523f	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  05244	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05248	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0524f	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  05253	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0525b	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  05260	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05265	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  0526a	48 83 c0 10	 add	 rax, 16
  0526e	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  05273	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0527a	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0527e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  05286	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  0528b	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0528f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  05296	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0529a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  052a2	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  052a7	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  052ac	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  052b1	48 83 c0 10	 add	 rax, 16
  052b5	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  052ba	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  052bf	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  052c6	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  052ca	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  052ce	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  052d5	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  052d9	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  052e1	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  052e6	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  052eb	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  052f0	48 83 c0 10	 add	 rax, 16
  052f4	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  052f9	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  052fe	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  05306	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0530a	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  0530f	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  05317	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0531c	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  05321	48 83 c0 10	 add	 rax, 16
  05325	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  0532a	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  0532f	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  05336	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  0533a	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0533e	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  05343	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  0534b	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05350	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  05355	48 83 c0 10	 add	 rax, 16
  05359	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  0535e	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  05363	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  0536a	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  0536e	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05372	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  05377	66 0f 57 c0	 xorpd	 xmm0, xmm0
  0537b	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05380	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  05385	48 83 c0 10	 add	 rax, 16
  05389	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  0538e	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  05393	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0539b	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0539f	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  053a4	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  053ac	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  053b1	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  053b6	48 83 c0 10	 add	 rax, 16
  053ba	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  053bf	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  053c4	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  053cb	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  053cf	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  053d3	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  053da	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  053de	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  053e6	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  053eb	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  053f0	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  053f5	48 83 c0 10	 add	 rax, 16
  053f9	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  053fe	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  05403	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  0540a	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  0540e	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05412	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  05419	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0541d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  05425	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  0542a	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0542f	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  05434	48 83 c0 10	 add	 rax, 16
  05438	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  0543d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  05444	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  05448	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  05450	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  05455	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05459	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  05460	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  05464	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0546c	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  05471	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05476	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  0547b	48 83 c0 10	 add	 rax, 16
  0547f	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  05484	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0548b	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0548f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  05497	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  0549c	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  054a0	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  054a7	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  054ab	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  054b3	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  054b8	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  054bd	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  054c2	48 83 c0 10	 add	 rax, 16
  054c6	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  054cb	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  054d2	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  054d6	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  054de	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  054e3	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  054e7	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  054ec	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  054f4	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  054f9	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  054fe	48 83 c0 10	 add	 rax, 16
  05502	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  05507	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0550e	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  05512	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0551a	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  0551f	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05523	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  05528	66 0f 57 c0	 xorpd	 xmm0, xmm0
  0552c	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05531	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  05536	48 83 c0 10	 add	 rax, 16
  0553a	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  0553f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  05546	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0554a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  05552	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  05557	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0555b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  05562	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  05566	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0556e	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  05573	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05578	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  0557d	48 83 c0 10	 add	 rax, 16
  05581	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  05586	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0558d	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  05591	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  05599	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  0559e	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  055a2	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  055a9	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  055ad	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  055b5	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  055ba	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  055bf	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  055c4	48 83 c0 10	 add	 rax, 16
  055c8	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax
  055cd	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  055d4	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  055d8	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  055e0	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  055e5	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  055e9	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  055f0	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  055f4	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  055fc	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  05601	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05606	48 8b 44 24 60	 mov	 rax, QWORD PTR p$20900[rsp]
  0560b	48 83 c0 10	 add	 rax, 16
  0560f	48 89 44 24 60	 mov	 QWORD PTR p$20900[rsp], rax

; 1214 : 
; 1215 :     INIT_SPECIAL_VALUES(sqrt_special_values, {
; 1216 :       C(INF,-INF) C(0.,-INF) C(0.,-INF) C(0.,INF) C(0.,INF) C(INF,INF) C(N,INF)
; 1217 :       C(INF,-INF) C(U,U)     C(U,U)     C(U,U)    C(U,U)    C(INF,INF) C(N,N)
; 1218 :       C(INF,-INF) C(U,U)     C(0.,-0.)  C(0.,0.)  C(U,U)    C(INF,INF) C(N,N)
; 1219 :       C(INF,-INF) C(U,U)     C(0.,-0.)  C(0.,0.)  C(U,U)    C(INF,INF) C(N,N)
; 1220 :       C(INF,-INF) C(U,U)     C(U,U)     C(U,U)    C(U,U)    C(INF,INF) C(N,N)
; 1221 :       C(INF,-INF) C(INF,-0.) C(INF,-0.) C(INF,0.) C(INF,0.) C(INF,INF) C(INF,N)
; 1222 :       C(INF,-INF) C(N,N)     C(N,N)     C(N,N)    C(N,N)    C(INF,INF) C(N,N)
; 1223 :     })

  05614	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:sqrt_special_values
  0561b	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05620	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05625	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  0562c	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  05630	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05634	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0563b	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0563f	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  05647	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  0564c	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05651	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05656	48 83 c0 10	 add	 rax, 16
  0565a	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  0565f	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05664	66 0f 57 c0	 xorpd	 xmm0, xmm0
  05668	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0566c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  05673	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  05677	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  0567f	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05684	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05689	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  0568e	48 83 c0 10	 add	 rax, 16
  05692	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05697	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  0569c	66 0f 57 c0	 xorpd	 xmm0, xmm0
  056a0	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  056a4	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  056ab	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  056af	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  056b7	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  056bc	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  056c1	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  056c6	48 83 c0 10	 add	 rax, 16
  056ca	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  056cf	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  056d4	66 0f 57 c0	 xorpd	 xmm0, xmm0
  056d8	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  056dc	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  056e1	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  056e8	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  056ec	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  056f1	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  056f6	48 83 c0 10	 add	 rax, 16
  056fa	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  056ff	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05704	66 0f 57 c0	 xorpd	 xmm0, xmm0
  05708	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0570c	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05711	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  05718	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  0571c	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05721	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05726	48 83 c0 10	 add	 rax, 16
  0572a	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  0572f	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05734	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  0573b	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  0573f	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05743	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05748	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  0574f	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  05753	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05758	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  0575d	48 83 c0 10	 add	 rax, 16
  05761	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05766	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0576d	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  05771	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  05779	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  0577e	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05782	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05787	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  0578e	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  05792	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05797	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  0579c	48 83 c0 10	 add	 rax, 16
  057a0	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  057a5	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  057aa	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  057b1	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  057b5	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  057b9	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  057c0	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  057c4	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  057cc	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  057d1	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  057d6	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  057db	48 83 c0 10	 add	 rax, 16
  057df	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  057e4	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  057e9	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  057f1	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  057f5	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  057fa	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  05802	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05807	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  0580c	48 83 c0 10	 add	 rax, 16
  05810	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05815	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  0581a	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  05822	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05826	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  0582b	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  05833	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05838	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  0583d	48 83 c0 10	 add	 rax, 16
  05841	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05846	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  0584b	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  05853	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05857	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  0585c	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  05864	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05869	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  0586e	48 83 c0 10	 add	 rax, 16
  05872	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05877	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  0587c	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  05884	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05888	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  0588d	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  05895	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0589a	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  0589f	48 83 c0 10	 add	 rax, 16
  058a3	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  058a8	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  058ad	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  058b4	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  058b8	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  058bc	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  058c1	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  058c8	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  058cc	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  058d1	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  058d6	48 83 c0 10	 add	 rax, 16
  058da	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  058df	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  058e6	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  058ea	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  058f2	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  058f7	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  058fb	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  05902	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  05906	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0590e	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05913	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05918	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  0591d	48 83 c0 10	 add	 rax, 16
  05921	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05926	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  0592b	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  05932	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  05936	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0593a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  05941	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  05945	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  0594d	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05952	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05957	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  0595c	48 83 c0 10	 add	 rax, 16
  05960	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05965	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  0596a	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  05972	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05976	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  0597b	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  05983	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05988	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  0598d	48 83 c0 10	 add	 rax, 16
  05991	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05996	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  0599b	66 0f 57 c0	 xorpd	 xmm0, xmm0
  0599f	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  059a3	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  059a8	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  059b0	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  059b5	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  059ba	48 83 c0 10	 add	 rax, 16
  059be	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  059c3	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  059c8	66 0f 57 c0	 xorpd	 xmm0, xmm0
  059cc	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  059d0	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  059d5	66 0f 57 c0	 xorpd	 xmm0, xmm0
  059d9	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  059de	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  059e3	48 83 c0 10	 add	 rax, 16
  059e7	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  059ec	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  059f1	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  059f9	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  059fd	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05a02	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  05a0a	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05a0f	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05a14	48 83 c0 10	 add	 rax, 16
  05a18	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05a1d	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05a22	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  05a29	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  05a2d	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05a31	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05a36	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  05a3d	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  05a41	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05a46	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05a4b	48 83 c0 10	 add	 rax, 16
  05a4f	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05a54	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  05a5b	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  05a5f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  05a67	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05a6c	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05a70	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  05a77	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  05a7b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  05a83	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05a88	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05a8d	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05a92	48 83 c0 10	 add	 rax, 16
  05a96	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05a9b	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05aa0	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  05aa7	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  05aab	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05aaf	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  05ab6	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  05aba	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  05ac2	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05ac7	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05acc	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05ad1	48 83 c0 10	 add	 rax, 16
  05ad5	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05ada	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05adf	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  05ae7	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05aeb	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05af0	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  05af8	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05afd	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05b02	48 83 c0 10	 add	 rax, 16
  05b06	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05b0b	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05b10	66 0f 57 c0	 xorpd	 xmm0, xmm0
  05b14	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05b18	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05b1d	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  05b25	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05b2a	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05b2f	48 83 c0 10	 add	 rax, 16
  05b33	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05b38	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05b3d	66 0f 57 c0	 xorpd	 xmm0, xmm0
  05b41	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05b45	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05b4a	66 0f 57 c0	 xorpd	 xmm0, xmm0
  05b4e	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05b53	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05b58	48 83 c0 10	 add	 rax, 16
  05b5c	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05b61	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05b66	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  05b6e	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05b72	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05b77	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  05b7f	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05b84	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05b89	48 83 c0 10	 add	 rax, 16
  05b8d	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05b92	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05b97	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  05b9e	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  05ba2	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05ba6	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05bab	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  05bb2	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  05bb6	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05bbb	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05bc0	48 83 c0 10	 add	 rax, 16
  05bc4	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05bc9	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  05bd0	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  05bd4	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  05bdc	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05be1	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05be5	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  05bec	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  05bf0	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  05bf8	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05bfd	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05c02	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05c07	48 83 c0 10	 add	 rax, 16
  05c0b	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05c10	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05c15	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  05c1c	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  05c20	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05c24	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  05c2b	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  05c2f	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  05c37	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05c3c	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05c41	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05c46	48 83 c0 10	 add	 rax, 16
  05c4a	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05c4f	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05c54	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  05c5c	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05c60	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05c65	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  05c6d	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05c72	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05c77	48 83 c0 10	 add	 rax, 16
  05c7b	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05c80	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05c85	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  05c8d	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05c91	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05c96	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  05c9e	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05ca3	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05ca8	48 83 c0 10	 add	 rax, 16
  05cac	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05cb1	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05cb6	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  05cbe	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05cc2	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05cc7	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  05ccf	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05cd4	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05cd9	48 83 c0 10	 add	 rax, 16
  05cdd	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05ce2	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05ce7	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  05cef	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05cf3	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05cf8	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  05d00	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05d05	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05d0a	48 83 c0 10	 add	 rax, 16
  05d0e	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05d13	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05d18	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  05d1f	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  05d23	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05d27	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05d2c	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  05d33	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  05d37	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05d3c	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05d41	48 83 c0 10	 add	 rax, 16
  05d45	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05d4a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  05d51	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  05d55	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  05d5d	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05d62	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05d66	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  05d6d	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  05d71	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  05d79	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05d7e	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05d83	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05d88	48 83 c0 10	 add	 rax, 16
  05d8c	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05d91	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05d96	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  05d9d	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  05da1	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05da5	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  05dac	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  05db0	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  05db8	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05dbd	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05dc2	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05dc7	48 83 c0 10	 add	 rax, 16
  05dcb	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05dd0	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05dd5	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  05ddc	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  05de0	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05de4	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05de9	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  05df1	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05df6	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05dfb	48 83 c0 10	 add	 rax, 16
  05dff	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05e04	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05e09	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  05e10	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  05e14	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05e18	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05e1d	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  05e25	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05e2a	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05e2f	48 83 c0 10	 add	 rax, 16
  05e33	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05e38	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05e3d	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  05e44	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  05e48	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05e4c	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05e51	66 0f 57 c0	 xorpd	 xmm0, xmm0
  05e55	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05e5a	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05e5f	48 83 c0 10	 add	 rax, 16
  05e63	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05e68	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05e6d	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  05e74	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  05e78	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05e7c	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05e81	66 0f 57 c0	 xorpd	 xmm0, xmm0
  05e85	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05e8a	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05e8f	48 83 c0 10	 add	 rax, 16
  05e93	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05e98	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05e9d	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  05ea4	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  05ea8	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05eac	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05eb1	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  05eb8	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  05ebc	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05ec1	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05ec6	48 83 c0 10	 add	 rax, 16
  05eca	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05ecf	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05ed4	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  05edb	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  05edf	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05ee3	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  05eea	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  05eee	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  05ef6	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05efb	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05f00	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05f05	48 83 c0 10	 add	 rax, 16
  05f09	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05f0e	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05f13	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  05f1a	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  05f1e	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05f22	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  05f29	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  05f2d	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  05f35	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05f3a	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05f3f	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05f44	48 83 c0 10	 add	 rax, 16
  05f48	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05f4d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  05f54	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  05f58	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  05f60	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05f65	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05f69	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  05f70	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  05f74	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  05f7c	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05f81	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05f86	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05f8b	48 83 c0 10	 add	 rax, 16
  05f8f	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05f94	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  05f9b	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  05f9f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  05fa7	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05fac	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05fb0	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  05fb7	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  05fbb	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  05fc3	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05fc8	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  05fcd	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05fd2	48 83 c0 10	 add	 rax, 16
  05fd6	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  05fdb	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  05fe2	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  05fe6	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  05fee	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  05ff3	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  05ff7	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  05ffe	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06002	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0600a	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  0600f	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06014	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  06019	48 83 c0 10	 add	 rax, 16
  0601d	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  06022	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  06029	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0602d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06035	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  0603a	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0603e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  06045	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06049	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06051	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  06056	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0605b	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  06060	48 83 c0 10	 add	 rax, 16
  06064	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  06069	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  0606e	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  06075	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  06079	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0607d	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  06082	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  06089	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  0608d	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06092	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  06097	48 83 c0 10	 add	 rax, 16
  0609b	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax
  060a0	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  060a7	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  060ab	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  060b3	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  060b8	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  060bc	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  060c3	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  060c7	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  060cf	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  060d4	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  060d9	48 8b 44 24 68	 mov	 rax, QWORD PTR p$20902[rsp]
  060de	48 83 c0 10	 add	 rax, 16
  060e2	48 89 44 24 68	 mov	 QWORD PTR p$20902[rsp], rax

; 1224 : 
; 1225 :     INIT_SPECIAL_VALUES(tanh_special_values, {
; 1226 :       C(-1.,0.) C(U,U) C(-1.,-0.) C(-1.,0.) C(U,U) C(-1.,0.) C(-1.,0.)
; 1227 :       C(N,N)    C(U,U) C(U,U)     C(U,U)    C(U,U) C(N,N)    C(N,N)
; 1228 :       C(N,N)    C(U,U) C(-0.,-0.) C(-0.,0.) C(U,U) C(N,N)    C(N,N)
; 1229 :       C(N,N)    C(U,U) C(0.,-0.)  C(0.,0.)  C(U,U) C(N,N)    C(N,N)
; 1230 :       C(N,N)    C(U,U) C(U,U)     C(U,U)    C(U,U) C(N,N)    C(N,N)
; 1231 :       C(1.,0.)  C(U,U) C(1.,-0.)  C(1.,0.)  C(U,U) C(1.,0.)  C(1.,0.)
; 1232 :       C(N,N)    C(N,N) C(N,-0.)   C(N,0.)   C(N,N) C(N,N)    C(N,N)
; 1233 :     })

  060e7	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:tanh_special_values
  060ee	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  060f3	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  060f8	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bff0000000000000
  06100	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06104	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06109	66 0f 57 c0	 xorpd	 xmm0, xmm0
  0610d	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06112	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06117	48 83 c0 10	 add	 rax, 16
  0611b	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  06120	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06125	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0612d	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06131	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06136	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0613e	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06143	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06148	48 83 c0 10	 add	 rax, 16
  0614c	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  06151	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06156	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bff0000000000000
  0615e	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06162	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06167	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  0616f	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06174	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06179	48 83 c0 10	 add	 rax, 16
  0617d	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  06182	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06187	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bff0000000000000
  0618f	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06193	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06198	66 0f 57 c0	 xorpd	 xmm0, xmm0
  0619c	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  061a1	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  061a6	48 83 c0 10	 add	 rax, 16
  061aa	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  061af	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  061b4	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  061bc	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  061c0	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  061c5	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  061cd	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  061d2	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  061d7	48 83 c0 10	 add	 rax, 16
  061db	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  061e0	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  061e5	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bff0000000000000
  061ed	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  061f1	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  061f6	66 0f 57 c0	 xorpd	 xmm0, xmm0
  061fa	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  061ff	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06204	48 83 c0 10	 add	 rax, 16
  06208	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  0620d	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06212	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@bff0000000000000
  0621a	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0621e	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06223	66 0f 57 c0	 xorpd	 xmm0, xmm0
  06227	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0622c	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06231	48 83 c0 10	 add	 rax, 16
  06235	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  0623a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  06241	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06245	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0624d	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06252	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06256	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0625d	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06261	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06269	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  0626e	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06273	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06278	48 83 c0 10	 add	 rax, 16
  0627c	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  06281	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06286	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0628e	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06292	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06297	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0629f	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  062a4	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  062a9	48 83 c0 10	 add	 rax, 16
  062ad	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  062b2	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  062b7	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  062bf	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  062c3	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  062c8	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  062d0	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  062d5	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  062da	48 83 c0 10	 add	 rax, 16
  062de	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  062e3	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  062e8	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  062f0	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  062f4	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  062f9	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  06301	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06306	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  0630b	48 83 c0 10	 add	 rax, 16
  0630f	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  06314	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06319	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  06321	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06325	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  0632a	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  06332	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06337	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  0633c	48 83 c0 10	 add	 rax, 16
  06340	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  06345	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0634c	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06350	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06358	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  0635d	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06361	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  06368	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0636c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06374	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06379	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0637e	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06383	48 83 c0 10	 add	 rax, 16
  06387	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  0638c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  06393	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06397	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0639f	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  063a4	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  063a8	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  063af	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  063b3	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  063bb	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  063c0	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  063c5	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  063ca	48 83 c0 10	 add	 rax, 16
  063ce	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  063d3	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  063da	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  063de	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  063e6	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  063eb	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  063ef	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  063f6	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  063fa	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06402	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06407	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0640c	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06411	48 83 c0 10	 add	 rax, 16
  06415	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  0641a	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  0641f	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  06427	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0642b	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06430	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  06438	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0643d	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06442	48 83 c0 10	 add	 rax, 16
  06446	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  0644b	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06450	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  06458	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0645c	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06461	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  06469	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0646e	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06473	48 83 c0 10	 add	 rax, 16
  06477	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  0647c	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06481	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  06489	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0648d	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06492	66 0f 57 c0	 xorpd	 xmm0, xmm0
  06496	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0649b	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  064a0	48 83 c0 10	 add	 rax, 16
  064a4	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  064a9	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  064ae	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  064b6	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  064ba	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  064bf	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  064c7	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  064cc	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  064d1	48 83 c0 10	 add	 rax, 16
  064d5	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  064da	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  064e1	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  064e5	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  064ed	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  064f2	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  064f6	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  064fd	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06501	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06509	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  0650e	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06513	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06518	48 83 c0 10	 add	 rax, 16
  0651c	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  06521	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  06528	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0652c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06534	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06539	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0653d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  06544	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06548	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06550	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06555	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0655a	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  0655f	48 83 c0 10	 add	 rax, 16
  06563	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  06568	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0656f	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06573	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0657b	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06580	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06584	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0658b	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0658f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06597	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  0659c	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  065a1	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  065a6	48 83 c0 10	 add	 rax, 16
  065aa	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  065af	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  065b4	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  065bc	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  065c0	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  065c5	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  065cd	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  065d2	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  065d7	48 83 c0 10	 add	 rax, 16
  065db	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  065e0	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  065e5	66 0f 57 c0	 xorpd	 xmm0, xmm0
  065e9	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  065ed	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  065f2	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  065fa	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  065ff	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06604	48 83 c0 10	 add	 rax, 16
  06608	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  0660d	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06612	66 0f 57 c0	 xorpd	 xmm0, xmm0
  06616	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0661a	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  0661f	66 0f 57 c0	 xorpd	 xmm0, xmm0
  06623	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06628	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  0662d	48 83 c0 10	 add	 rax, 16
  06631	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  06636	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  0663b	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  06643	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06647	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  0664c	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  06654	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06659	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  0665e	48 83 c0 10	 add	 rax, 16
  06662	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  06667	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0666e	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06672	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0667a	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  0667f	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06683	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0668a	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0668e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06696	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  0669b	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  066a0	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  066a5	48 83 c0 10	 add	 rax, 16
  066a9	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  066ae	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  066b5	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  066b9	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  066c1	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  066c6	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  066ca	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  066d1	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  066d5	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  066dd	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  066e2	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  066e7	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  066ec	48 83 c0 10	 add	 rax, 16
  066f0	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  066f5	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  066fc	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06700	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06708	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  0670d	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06711	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  06718	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0671c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06724	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06729	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0672e	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06733	48 83 c0 10	 add	 rax, 16
  06737	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  0673c	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06741	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  06749	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0674d	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06752	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0675a	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0675f	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06764	48 83 c0 10	 add	 rax, 16
  06768	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  0676d	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06772	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0677a	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0677e	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06783	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0678b	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06790	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06795	48 83 c0 10	 add	 rax, 16
  06799	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  0679e	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  067a3	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  067ab	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  067af	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  067b4	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  067bc	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  067c1	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  067c6	48 83 c0 10	 add	 rax, 16
  067ca	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  067cf	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  067d4	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  067dc	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  067e0	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  067e5	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  067ed	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  067f2	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  067f7	48 83 c0 10	 add	 rax, 16
  067fb	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  06800	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  06807	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0680b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06813	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06818	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0681c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  06823	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06827	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0682f	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06834	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06839	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  0683e	48 83 c0 10	 add	 rax, 16
  06842	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  06847	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0684e	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06852	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0685a	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  0685f	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06863	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0686a	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0686e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06876	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  0687b	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06880	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06885	48 83 c0 10	 add	 rax, 16
  06889	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  0688e	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06893	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff0000000000000
  0689b	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0689f	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  068a4	66 0f 57 c0	 xorpd	 xmm0, xmm0
  068a8	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  068ad	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  068b2	48 83 c0 10	 add	 rax, 16
  068b6	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  068bb	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  068c0	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  068c8	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  068cc	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  068d1	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  068d9	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  068de	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  068e3	48 83 c0 10	 add	 rax, 16
  068e7	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  068ec	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  068f1	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff0000000000000
  068f9	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  068fd	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06902	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  0690a	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0690f	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06914	48 83 c0 10	 add	 rax, 16
  06918	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  0691d	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06922	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff0000000000000
  0692a	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0692e	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06933	66 0f 57 c0	 xorpd	 xmm0, xmm0
  06937	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0693c	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06941	48 83 c0 10	 add	 rax, 16
  06945	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  0694a	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  0694f	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  06957	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0695b	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06960	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  06968	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0696d	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06972	48 83 c0 10	 add	 rax, 16
  06976	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  0697b	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06980	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff0000000000000
  06988	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0698c	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06991	66 0f 57 c0	 xorpd	 xmm0, xmm0
  06995	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0699a	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  0699f	48 83 c0 10	 add	 rax, 16
  069a3	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  069a8	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  069ad	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@3ff0000000000000
  069b5	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  069b9	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  069be	66 0f 57 c0	 xorpd	 xmm0, xmm0
  069c2	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  069c7	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  069cc	48 83 c0 10	 add	 rax, 16
  069d0	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  069d5	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  069dc	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  069e0	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  069e8	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  069ed	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  069f1	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  069f8	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  069fc	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06a04	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06a09	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06a0e	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06a13	48 83 c0 10	 add	 rax, 16
  06a17	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  06a1c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  06a23	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06a27	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06a2f	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06a34	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06a38	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  06a3f	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06a43	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06a4b	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06a50	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06a55	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06a5a	48 83 c0 10	 add	 rax, 16
  06a5e	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  06a63	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  06a6a	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06a6e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06a76	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06a7b	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06a7f	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06a84	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  06a8c	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06a91	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06a96	48 83 c0 10	 add	 rax, 16
  06a9a	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  06a9f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  06aa6	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06aaa	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06ab2	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06ab7	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06abb	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06ac0	66 0f 57 c0	 xorpd	 xmm0, xmm0
  06ac4	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06ac9	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06ace	48 83 c0 10	 add	 rax, 16
  06ad2	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  06ad7	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  06ade	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06ae2	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06aea	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06aef	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06af3	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  06afa	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06afe	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06b06	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06b0b	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06b10	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06b15	48 83 c0 10	 add	 rax, 16
  06b19	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  06b1e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  06b25	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06b29	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06b31	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06b36	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06b3a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  06b41	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06b45	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06b4d	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06b52	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06b57	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06b5c	48 83 c0 10	 add	 rax, 16
  06b60	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax
  06b65	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  06b6c	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06b70	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06b78	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06b7d	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06b81	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  06b88	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06b8c	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06b94	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06b99	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06b9e	48 8b 44 24 70	 mov	 rax, QWORD PTR p$20904[rsp]
  06ba3	48 83 c0 10	 add	 rax, 16
  06ba7	48 89 44 24 70	 mov	 QWORD PTR p$20904[rsp], rax

; 1234 : 
; 1235 :     INIT_SPECIAL_VALUES(rect_special_values, {
; 1236 :       C(INF,N) C(U,U) C(-INF,0.) C(-INF,-0.) C(U,U) C(INF,N) C(INF,N)
; 1237 :       C(N,N)   C(U,U) C(U,U)     C(U,U)      C(U,U) C(N,N)   C(N,N)
; 1238 :       C(0.,0.) C(U,U) C(-0.,0.)  C(-0.,-0.)  C(U,U) C(0.,0.) C(0.,0.)
; 1239 :       C(0.,0.) C(U,U) C(0.,-0.)  C(0.,0.)    C(U,U) C(0.,0.) C(0.,0.)
; 1240 :       C(N,N)   C(U,U) C(U,U)     C(U,U)      C(U,U) C(N,N)   C(N,N)
; 1241 :       C(INF,N) C(U,U) C(INF,-0.) C(INF,0.)   C(U,U) C(INF,N) C(INF,N)
; 1242 :       C(N,N)   C(N,N) C(N,0.)    C(N,0.)     C(N,N) C(N,N)   C(N,N)
; 1243 :     })

  06bac	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:rect_special_values
  06bb3	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  06bb8	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06bbd	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  06bc4	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  06bc8	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06bcc	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  06bd3	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06bd7	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06bdf	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06be4	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06be9	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06bee	48 83 c0 10	 add	 rax, 16
  06bf2	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  06bf7	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06bfc	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  06c04	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06c08	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06c0d	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  06c15	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06c1a	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06c1f	48 83 c0 10	 add	 rax, 16
  06c23	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  06c28	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  06c2f	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06c33	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  06c3b	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06c40	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06c44	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06c49	66 0f 57 c0	 xorpd	 xmm0, xmm0
  06c4d	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06c52	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06c57	48 83 c0 10	 add	 rax, 16
  06c5b	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  06c60	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  06c67	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06c6b	66 0f 57 05 00
	00 00 00	 xorpd	 xmm0, QWORD PTR __mask@@NegDouble@
  06c73	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06c78	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06c7c	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06c81	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  06c89	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06c8e	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06c93	48 83 c0 10	 add	 rax, 16
  06c97	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  06c9c	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06ca1	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  06ca9	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06cad	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06cb2	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  06cba	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06cbf	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06cc4	48 83 c0 10	 add	 rax, 16
  06cc8	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  06ccd	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06cd2	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  06cd9	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  06cdd	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06ce1	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  06ce8	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06cec	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06cf4	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06cf9	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06cfe	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06d03	48 83 c0 10	 add	 rax, 16
  06d07	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  06d0c	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06d11	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  06d18	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  06d1c	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06d20	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  06d27	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06d2b	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06d33	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06d38	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06d3d	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06d42	48 83 c0 10	 add	 rax, 16
  06d46	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  06d4b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  06d52	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06d56	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06d5e	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06d63	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06d67	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  06d6e	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06d72	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06d7a	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06d7f	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06d84	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06d89	48 83 c0 10	 add	 rax, 16
  06d8d	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  06d92	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06d97	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  06d9f	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06da3	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06da8	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  06db0	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06db5	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06dba	48 83 c0 10	 add	 rax, 16
  06dbe	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  06dc3	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06dc8	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  06dd0	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06dd4	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06dd9	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  06de1	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06de6	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06deb	48 83 c0 10	 add	 rax, 16
  06def	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  06df4	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06df9	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  06e01	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06e05	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06e0a	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  06e12	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06e17	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06e1c	48 83 c0 10	 add	 rax, 16
  06e20	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  06e25	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06e2a	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  06e32	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06e36	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06e3b	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  06e43	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06e48	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06e4d	48 83 c0 10	 add	 rax, 16
  06e51	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  06e56	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  06e5d	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06e61	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06e69	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06e6e	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06e72	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  06e79	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06e7d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06e85	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06e8a	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06e8f	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06e94	48 83 c0 10	 add	 rax, 16
  06e98	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  06e9d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  06ea4	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06ea8	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06eb0	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06eb5	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06eb9	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  06ec0	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  06ec4	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  06ecc	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06ed1	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06ed6	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06edb	48 83 c0 10	 add	 rax, 16
  06edf	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  06ee4	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06ee9	66 0f 57 c0	 xorpd	 xmm0, xmm0
  06eed	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06ef1	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06ef6	66 0f 57 c0	 xorpd	 xmm0, xmm0
  06efa	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06eff	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06f04	48 83 c0 10	 add	 rax, 16
  06f08	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  06f0d	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06f12	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  06f1a	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06f1e	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06f23	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  06f2b	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06f30	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06f35	48 83 c0 10	 add	 rax, 16
  06f39	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  06f3e	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06f43	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  06f4b	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06f4f	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06f54	66 0f 57 c0	 xorpd	 xmm0, xmm0
  06f58	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06f5d	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06f62	48 83 c0 10	 add	 rax, 16
  06f66	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  06f6b	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06f70	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  06f78	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06f7c	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06f81	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  06f89	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06f8e	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06f93	48 83 c0 10	 add	 rax, 16
  06f97	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  06f9c	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06fa1	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  06fa9	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06fad	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06fb2	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  06fba	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06fbf	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06fc4	48 83 c0 10	 add	 rax, 16
  06fc8	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  06fcd	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06fd2	66 0f 57 c0	 xorpd	 xmm0, xmm0
  06fd6	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  06fda	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06fdf	66 0f 57 c0	 xorpd	 xmm0, xmm0
  06fe3	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  06fe8	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06fed	48 83 c0 10	 add	 rax, 16
  06ff1	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  06ff6	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  06ffb	66 0f 57 c0	 xorpd	 xmm0, xmm0
  06fff	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  07003	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07008	66 0f 57 c0	 xorpd	 xmm0, xmm0
  0700c	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  07011	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07016	48 83 c0 10	 add	 rax, 16
  0701a	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  0701f	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07024	66 0f 57 c0	 xorpd	 xmm0, xmm0
  07028	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0702c	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07031	66 0f 57 c0	 xorpd	 xmm0, xmm0
  07035	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0703a	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  0703f	48 83 c0 10	 add	 rax, 16
  07043	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  07048	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  0704d	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  07055	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  07059	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  0705e	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  07066	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0706b	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07070	48 83 c0 10	 add	 rax, 16
  07074	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  07079	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  0707e	66 0f 57 c0	 xorpd	 xmm0, xmm0
  07082	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  07086	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  0708b	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  07093	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  07098	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  0709d	48 83 c0 10	 add	 rax, 16
  070a1	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  070a6	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  070ab	66 0f 57 c0	 xorpd	 xmm0, xmm0
  070af	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  070b3	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  070b8	66 0f 57 c0	 xorpd	 xmm0, xmm0
  070bc	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  070c1	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  070c6	48 83 c0 10	 add	 rax, 16
  070ca	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  070cf	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  070d4	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  070dc	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  070e0	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  070e5	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  070ed	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  070f2	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  070f7	48 83 c0 10	 add	 rax, 16
  070fb	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  07100	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07105	66 0f 57 c0	 xorpd	 xmm0, xmm0
  07109	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0710d	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07112	66 0f 57 c0	 xorpd	 xmm0, xmm0
  07116	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0711b	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07120	48 83 c0 10	 add	 rax, 16
  07124	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  07129	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  0712e	66 0f 57 c0	 xorpd	 xmm0, xmm0
  07132	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  07136	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  0713b	66 0f 57 c0	 xorpd	 xmm0, xmm0
  0713f	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  07144	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07149	48 83 c0 10	 add	 rax, 16
  0714d	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  07152	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  07159	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0715d	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  07165	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  0716a	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0716e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  07175	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  07179	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  07181	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07186	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0718b	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07190	48 83 c0 10	 add	 rax, 16
  07194	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  07199	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  0719e	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  071a6	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  071aa	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  071af	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  071b7	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  071bc	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  071c1	48 83 c0 10	 add	 rax, 16
  071c5	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  071ca	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  071cf	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  071d7	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  071db	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  071e0	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  071e8	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  071ed	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  071f2	48 83 c0 10	 add	 rax, 16
  071f6	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  071fb	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07200	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  07208	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0720c	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07211	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  07219	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0721e	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07223	48 83 c0 10	 add	 rax, 16
  07227	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  0722c	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07231	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  07239	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0723d	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07242	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  0724a	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0724f	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07254	48 83 c0 10	 add	 rax, 16
  07258	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  0725d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  07264	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  07268	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  07270	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07275	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  07279	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  07280	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  07284	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0728c	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07291	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  07296	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  0729b	48 83 c0 10	 add	 rax, 16
  0729f	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  072a4	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  072ab	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  072af	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  072b7	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  072bc	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  072c0	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  072c7	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  072cb	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  072d3	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  072d8	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  072dd	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  072e2	48 83 c0 10	 add	 rax, 16
  072e6	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  072eb	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  072f0	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  072f7	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  072fb	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  072ff	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  07306	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0730a	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  07312	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07317	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0731c	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07321	48 83 c0 10	 add	 rax, 16
  07325	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  0732a	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  0732f	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  07337	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0733b	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07340	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  07348	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0734d	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07352	48 83 c0 10	 add	 rax, 16
  07356	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  0735b	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07360	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  07367	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  0736b	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0736f	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07374	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@8000000000000000
  0737c	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  07381	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07386	48 83 c0 10	 add	 rax, 16
  0738a	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  0738f	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07394	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  0739b	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  0739f	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  073a3	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  073a8	66 0f 57 c0	 xorpd	 xmm0, xmm0
  073ac	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  073b1	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  073b6	48 83 c0 10	 add	 rax, 16
  073ba	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  073bf	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  073c4	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  073cc	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  073d0	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  073d5	f2 0f 10 05 00
	00 00 00	 movsdx	 xmm0, QWORD PTR __real@c6fd67cf2c62297c
  073dd	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  073e2	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  073e7	48 83 c0 10	 add	 rax, 16
  073eb	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  073f0	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  073f5	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  073fc	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  07400	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  07404	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0740b	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0740f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  07417	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  0741c	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  07421	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07426	48 83 c0 10	 add	 rax, 16
  0742a	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  0742f	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07434	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp__HUGE
  0743b	f2 0f 10 01	 movsdx	 xmm0, QWORD PTR [rcx]
  0743f	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  07443	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0744a	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0744e	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  07456	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  0745b	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  07460	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07465	48 83 c0 10	 add	 rax, 16
  07469	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  0746e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  07475	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  07479	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  07481	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07486	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  0748a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  07491	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  07495	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0749d	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  074a2	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  074a7	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  074ac	48 83 c0 10	 add	 rax, 16
  074b0	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  074b5	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  074bc	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  074c0	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  074c8	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  074cd	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  074d1	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  074d8	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  074dc	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  074e4	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  074e9	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  074ee	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  074f3	48 83 c0 10	 add	 rax, 16
  074f7	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  074fc	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  07503	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  07507	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0750f	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07514	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  07518	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  0751d	66 0f 57 c0	 xorpd	 xmm0, xmm0
  07521	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  07526	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  0752b	48 83 c0 10	 add	 rax, 16
  0752f	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  07534	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0753b	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  0753f	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  07547	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  0754c	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  07550	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07555	66 0f 57 c0	 xorpd	 xmm0, xmm0
  07559	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  0755e	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07563	48 83 c0 10	 add	 rax, 16
  07567	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  0756c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  07573	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  07577	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0757f	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07584	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  07588	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0758f	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  07593	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0759b	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  075a0	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  075a5	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  075aa	48 83 c0 10	 add	 rax, 16
  075ae	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  075b3	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  075ba	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  075be	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  075c6	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  075cb	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  075cf	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  075d6	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  075da	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  075e2	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  075e7	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  075ec	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  075f1	48 83 c0 10	 add	 rax, 16
  075f5	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax
  075fa	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  07601	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  07605	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0760d	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07612	f2 0f 11 00	 movsdx	 QWORD PTR [rax], xmm0
  07616	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __imp__HUGE
  0761d	f2 0f 10 00	 movsdx	 xmm0, QWORD PTR [rax]
  07621	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  07629	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  0762e	f2 0f 11 40 08	 movsdx	 QWORD PTR [rax+8], xmm0
  07633	48 8b 44 24 78	 mov	 rax, QWORD PTR p$20906[rsp]
  07638	48 83 c0 10	 add	 rax, 16
  0763c	48 89 44 24 78	 mov	 QWORD PTR p$20906[rsp], rax

; 1244 :     return m;

  07641	48 8b 44 24 20	 mov	 rax, QWORD PTR m$[rsp]
$LN2@PyInit_cma:

; 1245 : }

  07646	48 81 c4 88 00
	00 00		 add	 rsp, 136		; 00000088H
  0764d	c3		 ret	 0
PyInit_cmath ENDP
_TEXT	ENDS
END
