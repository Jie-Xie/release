; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_11LOCGONAA@?$AA?$AA@			; `string'
PUBLIC	_PyOS_opterr
PUBLIC	_PyOS_optind
PUBLIC	_PyOS_optarg
_BSS	SEGMENT
_PyOS_optarg DQ	01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_11LOCGONAA@?$AA?$AA@
CONST	SEGMENT
??_C@_11LOCGONAA@?$AA?$AA@ DB 00H, 00H			; `string'
CONST	ENDS
_DATA	SEGMENT
_PyOS_opterr DD	01H
_PyOS_optind DD	01H
opt_ptr	DQ	FLAT:??_C@_11LOCGONAA@?$AA?$AA@
_DATA	ENDS
PUBLIC	_PyOS_ResetGetOpt
; Function compile flags: /Odtp
; File c:\src\pyparallel\python\getopt.c
;	COMDAT _PyOS_ResetGetOpt
_TEXT	SEGMENT
_PyOS_ResetGetOpt PROC					; COMDAT

; 48   :     _PyOS_opterr = 1;

  00000	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _PyOS_opterr, 1

; 49   :     _PyOS_optind = 1;

  0000a	c7 05 00 00 00
	00 01 00 00 00	 mov	 DWORD PTR _PyOS_optind, 1

; 50   :     _PyOS_optarg = NULL;

  00014	48 c7 05 00 00
	00 00 00 00 00
	00		 mov	 QWORD PTR _PyOS_optarg, 0

; 51   :     opt_ptr = L"";

  0001f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_11LOCGONAA@?$AA?$AA@
  00026	48 89 05 00 00
	00 00		 mov	 QWORD PTR opt_ptr, rax

; 52   : }

  0002d	c3		 ret	 0
_PyOS_ResetGetOpt ENDP
_TEXT	ENDS
PUBLIC	??_C@_0CG@DHDGHLFO@Argument?5expected?5for?5the?5?9?$CFc?5op@ ; `string'
PUBLIC	??_C@_0BF@ENGKCCMO@Unknown?5option?3?5?9?$CFc?6?$AA@ ; `string'
PUBLIC	??_C@_0BL@PPOHDLBP@?9J?5is?5reserved?5for?5Jython?6?$AA@ ; `string'
PUBLIC	??_C@_1BE@EOBDNJGJ@?$AA?9?$AA?9?$AAv?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?$AA@ ; `string'
PUBLIC	??_C@_1O@JMHGNBEL@?$AA?9?$AA?9?$AAh?$AAe?$AAl?$AAp?$AA?$AA@ ; `string'
PUBLIC	??_C@_15KHFHDPFH@?$AA?9?$AA?9?$AA?$AA@		; `string'
PUBLIC	??_C@_15BAIPABEI@?$AA?1?$AA?$DP?$AA?$AA@	; `string'
PUBLIC	_PyOS_GetOpt
EXTRN	__imp_wcschr:PROC
EXTRN	__imp_fprintf:PROC
EXTRN	__imp___iob_func:PROC
EXTRN	__imp_wcscmp:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$_PyOS_GetOpt DD imagerel $LN26
	DD	imagerel $LN26+780
	DD	imagerel $unwind$_PyOS_GetOpt
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_PyOS_GetOpt DD 011201H
	DD	08212H
xdata	ENDS
;	COMDAT ??_C@_0CG@DHDGHLFO@Argument?5expected?5for?5the?5?9?$CFc?5op@
CONST	SEGMENT
??_C@_0CG@DHDGHLFO@Argument?5expected?5for?5the?5?9?$CFc?5op@ DB 'Argumen'
	DB	't expected for the -%c option', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@ENGKCCMO@Unknown?5option?3?5?9?$CFc?6?$AA@
CONST	SEGMENT
??_C@_0BF@ENGKCCMO@Unknown?5option?3?5?9?$CFc?6?$AA@ DB 'Unknown option: '
	DB	'-%c', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@PPOHDLBP@?9J?5is?5reserved?5for?5Jython?6?$AA@
CONST	SEGMENT
??_C@_0BL@PPOHDLBP@?9J?5is?5reserved?5for?5Jython?6?$AA@ DB '-J is reserv'
	DB	'ed for Jython', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1BE@EOBDNJGJ@?$AA?9?$AA?9?$AAv?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?$AA@
CONST	SEGMENT
??_C@_1BE@EOBDNJGJ@?$AA?9?$AA?9?$AAv?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?$AA@ DB '-'
	DB	00H, '-', 00H, 'v', 00H, 'e', 00H, 'r', 00H, 's', 00H, 'i', 00H
	DB	'o', 00H, 'n', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1O@JMHGNBEL@?$AA?9?$AA?9?$AAh?$AAe?$AAl?$AAp?$AA?$AA@
CONST	SEGMENT
??_C@_1O@JMHGNBEL@?$AA?9?$AA?9?$AAh?$AAe?$AAl?$AAp?$AA?$AA@ DB '-', 00H, '-'
	DB	00H, 'h', 00H, 'e', 00H, 'l', 00H, 'p', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15KHFHDPFH@?$AA?9?$AA?9?$AA?$AA@
CONST	SEGMENT
??_C@_15KHFHDPFH@?$AA?9?$AA?9?$AA?$AA@ DB '-', 00H, '-', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_15BAIPABEI@?$AA?1?$AA?$DP?$AA?$AA@
CONST	SEGMENT
??_C@_15BAIPABEI@?$AA?1?$AA?$DP?$AA?$AA@ DB '/', 00H, '?', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT _PyOS_GetOpt
_TEXT	SEGMENT
ptr$ = 32
option$ = 40
tv164 = 44
tv177 = 48
argc$ = 80
argv$ = 88
optstring$ = 96
_PyOS_GetOpt PROC					; COMDAT

; 55   : {

$LN26:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  0000e	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 56   :     wchar_t *ptr;
; 57   :     wchar_t option;
; 58   : 
; 59   :     if (*opt_ptr == '\0') {

  00012	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR opt_ptr
  00019	0f b7 00	 movzx	 eax, WORD PTR [rax]
  0001c	85 c0		 test	 eax, eax
  0001e	0f 85 70 01 00
	00		 jne	 $LN23@PyOS_GetOp

; 60   : 
; 61   :         if (_PyOS_optind >= argc)

  00024	8b 44 24 50	 mov	 eax, DWORD PTR argc$[rsp]
  00028	39 05 00 00 00
	00		 cmp	 DWORD PTR _PyOS_optind, eax
  0002e	7c 0f		 jl	 SHORT $LN22@PyOS_GetOp

; 62   :             return -1;

  00030	b8 ff ff ff ff	 mov	 eax, -1
  00035	e9 cd 02 00 00	 jmp	 $LN24@PyOS_GetOp
  0003a	e9 2c 01 00 00	 jmp	 $LN21@PyOS_GetOp
$LN22@PyOS_GetOp:

; 63   : #ifdef MS_WINDOWS
; 64   :         else if (wcscmp(argv[_PyOS_optind], L"/?") == 0) {

  0003f	48 63 05 00 00
	00 00		 movsxd	 rax, DWORD PTR _PyOS_optind
  00046	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_15BAIPABEI@?$AA?1?$AA?$DP?$AA?$AA@
  0004d	48 8b 4c 24 58	 mov	 rcx, QWORD PTR argv$[rsp]
  00052	48 8b 0c c1	 mov	 rcx, QWORD PTR [rcx+rax*8]
  00056	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_wcscmp
  0005c	85 c0		 test	 eax, eax
  0005e	75 1d		 jne	 SHORT $LN20@PyOS_GetOp

; 65   :             ++_PyOS_optind;

  00060	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR _PyOS_optind
  00066	ff c0		 inc	 eax
  00068	89 05 00 00 00
	00		 mov	 DWORD PTR _PyOS_optind, eax

; 66   :             return 'h';

  0006e	b8 68 00 00 00	 mov	 eax, 104		; 00000068H
  00073	e9 8f 02 00 00	 jmp	 $LN24@PyOS_GetOp

; 67   :         }
; 68   : #endif
; 69   : 
; 70   :         else if (argv[_PyOS_optind][0] != L'-' ||

  00078	e9 ee 00 00 00	 jmp	 $LN19@PyOS_GetOp
$LN20@PyOS_GetOp:

; 71   :                  argv[_PyOS_optind][1] == L'\0' /* lone dash */ )

  0007d	48 63 05 00 00
	00 00		 movsxd	 rax, DWORD PTR _PyOS_optind
  00084	48 8b 4c 24 58	 mov	 rcx, QWORD PTR argv$[rsp]
  00089	48 8b 04 c1	 mov	 rax, QWORD PTR [rcx+rax*8]
  0008d	0f b7 00	 movzx	 eax, WORD PTR [rax]
  00090	83 f8 2d	 cmp	 eax, 45			; 0000002dH
  00093	75 18		 jne	 SHORT $LN17@PyOS_GetOp
  00095	48 63 05 00 00
	00 00		 movsxd	 rax, DWORD PTR _PyOS_optind
  0009c	48 8b 4c 24 58	 mov	 rcx, QWORD PTR argv$[rsp]
  000a1	48 8b 04 c1	 mov	 rax, QWORD PTR [rcx+rax*8]
  000a5	0f b7 40 02	 movzx	 eax, WORD PTR [rax+2]
  000a9	85 c0		 test	 eax, eax
  000ab	75 0f		 jne	 SHORT $LN18@PyOS_GetOp
$LN17@PyOS_GetOp:

; 72   :             return -1;

  000ad	b8 ff ff ff ff	 mov	 eax, -1
  000b2	e9 50 02 00 00	 jmp	 $LN24@PyOS_GetOp
  000b7	e9 af 00 00 00	 jmp	 $LN16@PyOS_GetOp
$LN18@PyOS_GetOp:

; 73   : 
; 74   :         else if (wcscmp(argv[_PyOS_optind], L"--") == 0) {

  000bc	48 63 05 00 00
	00 00		 movsxd	 rax, DWORD PTR _PyOS_optind
  000c3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_15KHFHDPFH@?$AA?9?$AA?9?$AA?$AA@
  000ca	48 8b 4c 24 58	 mov	 rcx, QWORD PTR argv$[rsp]
  000cf	48 8b 0c c1	 mov	 rcx, QWORD PTR [rcx+rax*8]
  000d3	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_wcscmp
  000d9	85 c0		 test	 eax, eax
  000db	75 1a		 jne	 SHORT $LN15@PyOS_GetOp

; 75   :             ++_PyOS_optind;

  000dd	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR _PyOS_optind
  000e3	ff c0		 inc	 eax
  000e5	89 05 00 00 00
	00		 mov	 DWORD PTR _PyOS_optind, eax

; 76   :             return -1;

  000eb	b8 ff ff ff ff	 mov	 eax, -1
  000f0	e9 12 02 00 00	 jmp	 $LN24@PyOS_GetOp
  000f5	eb 74		 jmp	 SHORT $LN14@PyOS_GetOp
$LN15@PyOS_GetOp:

; 77   :         }
; 78   : 
; 79   :         else if (wcscmp(argv[_PyOS_optind], L"--help") == 0) {

  000f7	48 63 05 00 00
	00 00		 movsxd	 rax, DWORD PTR _PyOS_optind
  000fe	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1O@JMHGNBEL@?$AA?9?$AA?9?$AAh?$AAe?$AAl?$AAp?$AA?$AA@
  00105	48 8b 4c 24 58	 mov	 rcx, QWORD PTR argv$[rsp]
  0010a	48 8b 0c c1	 mov	 rcx, QWORD PTR [rcx+rax*8]
  0010e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_wcscmp
  00114	85 c0		 test	 eax, eax
  00116	75 1a		 jne	 SHORT $LN13@PyOS_GetOp

; 80   :             ++_PyOS_optind;

  00118	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR _PyOS_optind
  0011e	ff c0		 inc	 eax
  00120	89 05 00 00 00
	00		 mov	 DWORD PTR _PyOS_optind, eax

; 81   :             return 'h';

  00126	b8 68 00 00 00	 mov	 eax, 104		; 00000068H
  0012b	e9 d7 01 00 00	 jmp	 $LN24@PyOS_GetOp
  00130	eb 39		 jmp	 SHORT $LN12@PyOS_GetOp
$LN13@PyOS_GetOp:

; 82   :         }
; 83   : 
; 84   :         else if (wcscmp(argv[_PyOS_optind], L"--version") == 0) {

  00132	48 63 05 00 00
	00 00		 movsxd	 rax, DWORD PTR _PyOS_optind
  00139	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1BE@EOBDNJGJ@?$AA?9?$AA?9?$AAv?$AAe?$AAr?$AAs?$AAi?$AAo?$AAn?$AA?$AA@
  00140	48 8b 4c 24 58	 mov	 rcx, QWORD PTR argv$[rsp]
  00145	48 8b 0c c1	 mov	 rcx, QWORD PTR [rcx+rax*8]
  00149	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_wcscmp
  0014f	85 c0		 test	 eax, eax
  00151	75 18		 jne	 SHORT $LN11@PyOS_GetOp

; 85   :             ++_PyOS_optind;

  00153	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR _PyOS_optind
  00159	ff c0		 inc	 eax
  0015b	89 05 00 00 00
	00		 mov	 DWORD PTR _PyOS_optind, eax

; 86   :             return 'V';

  00161	b8 56 00 00 00	 mov	 eax, 86			; 00000056H
  00166	e9 9c 01 00 00	 jmp	 $LN24@PyOS_GetOp
$LN11@PyOS_GetOp:
$LN12@PyOS_GetOp:
$LN14@PyOS_GetOp:
$LN16@PyOS_GetOp:
$LN19@PyOS_GetOp:
$LN21@PyOS_GetOp:

; 87   :         }
; 88   : 
; 89   : 
; 90   :         opt_ptr = &argv[_PyOS_optind++][1];

  0016b	48 63 05 00 00
	00 00		 movsxd	 rax, DWORD PTR _PyOS_optind
  00172	48 8b 4c 24 58	 mov	 rcx, QWORD PTR argv$[rsp]
  00177	48 8b 04 c1	 mov	 rax, QWORD PTR [rcx+rax*8]
  0017b	48 83 c0 02	 add	 rax, 2
  0017f	48 89 05 00 00
	00 00		 mov	 QWORD PTR opt_ptr, rax
  00186	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR _PyOS_optind
  0018c	ff c0		 inc	 eax
  0018e	89 05 00 00 00
	00		 mov	 DWORD PTR _PyOS_optind, eax
$LN23@PyOS_GetOp:

; 91   :     }
; 92   : 
; 93   :     if ((option = *opt_ptr++) == L'\0')

  00194	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR opt_ptr
  0019b	0f b7 00	 movzx	 eax, WORD PTR [rax]
  0019e	66 89 44 24 28	 mov	 WORD PTR option$[rsp], ax
  001a3	0f b7 44 24 28	 movzx	 eax, WORD PTR option$[rsp]
  001a8	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR opt_ptr
  001af	48 83 c1 02	 add	 rcx, 2
  001b3	48 89 0d 00 00
	00 00		 mov	 QWORD PTR opt_ptr, rcx
  001ba	85 c0		 test	 eax, eax
  001bc	75 0a		 jne	 SHORT $LN10@PyOS_GetOp

; 94   :         return -1;

  001be	b8 ff ff ff ff	 mov	 eax, -1
  001c3	e9 3f 01 00 00	 jmp	 $LN24@PyOS_GetOp
$LN10@PyOS_GetOp:

; 95   : 
; 96   :     if (option == 'J') {

  001c8	0f b7 44 24 28	 movzx	 eax, WORD PTR option$[rsp]
  001cd	83 f8 4a	 cmp	 eax, 74			; 0000004aH
  001d0	75 2d		 jne	 SHORT $LN9@PyOS_GetOp

; 97   :         if (_PyOS_opterr)

  001d2	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _PyOS_opterr, 0
  001d9	74 1a		 je	 SHORT $LN8@PyOS_GetOp

; 98   :             fprintf(stderr, "-J is reserved for Jython\n");

  001db	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___iob_func
  001e1	48 83 c0 60	 add	 rax, 96			; 00000060H
  001e5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BL@PPOHDLBP@?9J?5is?5reserved?5for?5Jython?6?$AA@
  001ec	48 8b c8	 mov	 rcx, rax
  001ef	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fprintf
$LN8@PyOS_GetOp:

; 99   :         return '_';

  001f5	b8 5f 00 00 00	 mov	 eax, 95			; 0000005fH
  001fa	e9 08 01 00 00	 jmp	 $LN24@PyOS_GetOp
$LN9@PyOS_GetOp:

; 100  :     }
; 101  : 
; 102  :     if ((ptr = wcschr(optstring, option)) == NULL) {

  001ff	0f b7 54 24 28	 movzx	 edx, WORD PTR option$[rsp]
  00204	48 8b 4c 24 60	 mov	 rcx, QWORD PTR optstring$[rsp]
  00209	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_wcschr
  0020f	48 89 44 24 20	 mov	 QWORD PTR ptr$[rsp], rax
  00214	48 83 7c 24 20
	00		 cmp	 QWORD PTR ptr$[rsp], 0
  0021a	75 3d		 jne	 SHORT $LN7@PyOS_GetOp

; 103  :         if (_PyOS_opterr)

  0021c	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _PyOS_opterr, 0
  00223	74 2a		 je	 SHORT $LN6@PyOS_GetOp

; 104  :             fprintf(stderr, "Unknown option: -%c\n", (char)option);

  00225	0f be 44 24 28	 movsx	 eax, BYTE PTR option$[rsp]
  0022a	89 44 24 2c	 mov	 DWORD PTR tv164[rsp], eax
  0022e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___iob_func
  00234	48 83 c0 60	 add	 rax, 96			; 00000060H
  00238	8b 4c 24 2c	 mov	 ecx, DWORD PTR tv164[rsp]
  0023c	44 8b c1	 mov	 r8d, ecx
  0023f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@ENGKCCMO@Unknown?5option?3?5?9?$CFc?6?$AA@
  00246	48 8b c8	 mov	 rcx, rax
  00249	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fprintf
$LN6@PyOS_GetOp:

; 105  :         return '_';

  0024f	b8 5f 00 00 00	 mov	 eax, 95			; 0000005fH
  00254	e9 ae 00 00 00	 jmp	 $LN24@PyOS_GetOp
$LN7@PyOS_GetOp:

; 106  :     }
; 107  : 
; 108  :     if (*(ptr + 1) == L':') {

  00259	48 8b 44 24 20	 mov	 rax, QWORD PTR ptr$[rsp]
  0025e	0f b7 40 02	 movzx	 eax, WORD PTR [rax+2]
  00262	83 f8 3a	 cmp	 eax, 58			; 0000003aH
  00265	0f 85 97 00 00
	00		 jne	 $LN5@PyOS_GetOp

; 109  :         if (*opt_ptr != L'\0') {

  0026b	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR opt_ptr
  00272	0f b7 00	 movzx	 eax, WORD PTR [rax]
  00275	85 c0		 test	 eax, eax
  00277	74 1e		 je	 SHORT $LN4@PyOS_GetOp

; 110  :             _PyOS_optarg  = opt_ptr;

  00279	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR opt_ptr
  00280	48 89 05 00 00
	00 00		 mov	 QWORD PTR _PyOS_optarg, rax

; 111  :             opt_ptr = L"";

  00287	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_11LOCGONAA@?$AA?$AA@
  0028e	48 89 05 00 00
	00 00		 mov	 QWORD PTR opt_ptr, rax

; 112  :         }
; 113  : 
; 114  :         else {

  00295	eb 6b		 jmp	 SHORT $LN3@PyOS_GetOp
$LN4@PyOS_GetOp:

; 115  :             if (_PyOS_optind >= argc) {

  00297	8b 44 24 50	 mov	 eax, DWORD PTR argc$[rsp]
  0029b	39 05 00 00 00
	00		 cmp	 DWORD PTR _PyOS_optind, eax
  002a1	7c 3a		 jl	 SHORT $LN2@PyOS_GetOp

; 116  :                 if (_PyOS_opterr)

  002a3	83 3d 00 00 00
	00 00		 cmp	 DWORD PTR _PyOS_opterr, 0
  002aa	74 2a		 je	 SHORT $LN1@PyOS_GetOp

; 117  :                     fprintf(stderr,
; 118  :                         "Argument expected for the -%c option\n", (char)option);

  002ac	0f be 44 24 28	 movsx	 eax, BYTE PTR option$[rsp]
  002b1	89 44 24 30	 mov	 DWORD PTR tv177[rsp], eax
  002b5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp___iob_func
  002bb	48 83 c0 60	 add	 rax, 96			; 00000060H
  002bf	8b 4c 24 30	 mov	 ecx, DWORD PTR tv177[rsp]
  002c3	44 8b c1	 mov	 r8d, ecx
  002c6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CG@DHDGHLFO@Argument?5expected?5for?5the?5?9?$CFc?5op@
  002cd	48 8b c8	 mov	 rcx, rax
  002d0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_fprintf
$LN1@PyOS_GetOp:

; 119  :                 return '_';

  002d6	b8 5f 00 00 00	 mov	 eax, 95			; 0000005fH
  002db	eb 2a		 jmp	 SHORT $LN24@PyOS_GetOp
$LN2@PyOS_GetOp:

; 120  :             }
; 121  : 
; 122  :             _PyOS_optarg = argv[_PyOS_optind++];

  002dd	48 63 05 00 00
	00 00		 movsxd	 rax, DWORD PTR _PyOS_optind
  002e4	48 8b 4c 24 58	 mov	 rcx, QWORD PTR argv$[rsp]
  002e9	48 8b 04 c1	 mov	 rax, QWORD PTR [rcx+rax*8]
  002ed	48 89 05 00 00
	00 00		 mov	 QWORD PTR _PyOS_optarg, rax
  002f4	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR _PyOS_optind
  002fa	ff c0		 inc	 eax
  002fc	89 05 00 00 00
	00		 mov	 DWORD PTR _PyOS_optind, eax
$LN3@PyOS_GetOp:
$LN5@PyOS_GetOp:

; 123  :         }
; 124  :     }
; 125  : 
; 126  :     return option;

  00302	0f b7 44 24 28	 movzx	 eax, WORD PTR option$[rsp]
$LN24@PyOS_GetOp:

; 127  : }

  00307	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0030b	c3		 ret	 0
_PyOS_GetOpt ENDP
_TEXT	ENDS
END
