; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.40219.01 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_0CO@HPEHEBLP@Base?5class?5for?5warnings?5about?5re@ ; `string'
PUBLIC	??_C@_0BA@JIBLCGNF@ResourceWarning?$AA@		; `string'
PUBLIC	??_C@_0HM@KBKMDMHM@Base?5class?5for?5warnings?5about?5by@ ; `string'
PUBLIC	??_C@_0N@BILDEMAG@BytesWarning?$AA@		; `string'
PUBLIC	??_C@_0FP@BEMCLFNP@Base?5class?5for?5warnings?5about?5Un@ ; `string'
PUBLIC	??_C@_0P@DFBLGLPC@UnicodeWarning?$AA@		; `string'
PUBLIC	??_C@_0EC@CFAJPLKK@Base?5class?5for?5warnings?5about?5pr@ ; `string'
PUBLIC	??_C@_0O@MPAGLHE@ImportWarning?$AA@		; `string'
PUBLIC	??_C@_0FG@MEHAINOE@Base?5class?5for?5warnings?5about?5co@ ; `string'
PUBLIC	??_C@_0O@EAIEFLDH@FutureWarning?$AA@		; `string'
PUBLIC	??_C@_0DI@FBPEMJEN@Base?5class?5for?5warnings?5about?5du@ ; `string'
PUBLIC	??_C@_0P@JGMDIAML@RuntimeWarning?$AA@		; `string'
PUBLIC	??_C@_0CO@JDKAKEOK@Base?5class?5for?5warnings?5about?5du@ ; `string'
PUBLIC	??_C@_0O@IOJIPFFN@SyntaxWarning?$AA@		; `string'
PUBLIC	??_C@_0EP@NOKGBDGL@Base?5class?5for?5warnings?5about?5fe@ ; `string'
PUBLIC	??_C@_0BK@JDBEDOM@PendingDeprecationWarning?$AA@ ; `string'
PUBLIC	??_C@_0DD@DDNMECFD@Base?5class?5for?5warnings?5about?5de@ ; `string'
PUBLIC	??_C@_0BD@GIDNBIPD@DeprecationWarning?$AA@	; `string'
PUBLIC	??_C@_0DA@NAMNFIGL@Base?5class?5for?5warnings?5generate@ ; `string'
PUBLIC	??_C@_0M@JCLIHPLC@UserWarning?$AA@		; `string'
PUBLIC	??_C@_0CD@IHAAEPNP@Base?5class?5for?5warning?5categorie@ ; `string'
PUBLIC	??_C@_07KGMMFLDN@Warning?$AA@			; `string'
PUBLIC	??_C@_0O@GFOKIHDB@Buffer?5error?4?$AA@		; `string'
PUBLIC	??_C@_0M@IEEINKIE@BufferError?$AA@		; `string'
PUBLIC	??_C@_0P@ILLCNIIE@Out?5of?5memory?4?$AA@	; `string'
PUBLIC	??_C@_0M@HIBAKAFK@MemoryError?$AA@		; `string'
PUBLIC	??_C@_0DG@LICMCCGN@Async?5run?$CI?$CJ?5detected?5that?5there?5@ ; `string'
PUBLIC	??_C@_0BM@GCGOLDFN@AsyncRunNoActiveEventsError?$AA@ ; `string'
PUBLIC	??_C@_0CH@LDJJHMMC@Async?5run?$CI?$CJ?5called?5without?5any?5e@ ; `string'
PUBLIC	??_C@_0CB@DHCJJACB@AsyncRunCalledWithoutEventsError@ ; `string'
PUBLIC	??_C@_0BN@KHNEADKG@Base?5class?5for?5async?5errors?4?$AA@ ; `string'
PUBLIC	??_C@_0L@POMMPANG@AsyncError?$AA@		; `string'
PUBLIC	??_C@_0EN@KNPFPBJJ@Implicit?5access?5to?5nonlocal?5vari@ ; `string'
PUBLIC	??_C@_0CE@ONNHACJB@ParallelNonlocalVariableAccessEr@ ; `string'
PUBLIC	??_C@_0EL@PLHLDPCD@Implicit?5access?5to?5global?5variab@ ; `string'
PUBLIC	??_C@_0CC@HPLHCPKN@ParallelGlobalVariableAccessErro@ ; `string'
PUBLIC	??_C@_0DD@JGEGKCHH@Import?5not?5permitted?5from?5within@ ; `string'
PUBLIC	??_C@_0BE@FCGCAOGC@ParallelImportError?$AA@	; `string'
PUBLIC	??_C@_0DG@NPBGBDKP@Operation?5not?5permitted?5from?5wit@ ; `string'
PUBLIC	??_C@_0BF@HFKFAIAA@ParallelContextError?$AA@	; `string'
PUBLIC	??_C@_0DE@INBJNFAJ@Failed?5to?5initialize?5parallel?5co@ ; `string'
PUBLIC	??_C@_0CD@MNHCHPAI@ParallelContextInitializationErr@ ; `string'
PUBLIC	??_C@_0CK@IKBKELBP@Failed?5to?5initialize?5new?5paralle@ ; `string'
PUBLIC	??_C@_0CC@IAEHFMP@ParallelThreadInitializationErro@ ; `string'
PUBLIC	??_C@_0CA@NKCFMBPJ@Base?5class?5for?5parallel?5errors?4?$AA@ ; `string'
PUBLIC	??_C@_0O@GFKDNBOD@ParallelError?$AA@		; `string'
PUBLIC	??_C@_0CO@BODDBCMG@Weak?5ref?5proxy?5used?5after?5refere@ ; `string'
PUBLIC	??_C@_0P@NJFCDLEA@ReferenceError?$AA@		; `string'
PUBLIC	??_C@_0LA@PADCOJHH@Internal?5error?5in?5the?5Python?5int@ ; `string'
PUBLIC	??_C@_0M@MLMICFKM@SystemError?$AA@		; `string'
PUBLIC	??_C@_0DM@HNAOGMFP@Second?5argument?5to?5a?5division?5or@ ; `string'
PUBLIC	??_C@_0BC@JKCGANPD@ZeroDivisionError?$AA@	; `string'
PUBLIC	??_C@_0CE@DNDJACFH@Result?5too?5large?5to?5be?5represent@ ; `string'
PUBLIC	??_C@_0O@DAFOBLHH@OverflowError?$AA@		; `string'
PUBLIC	??_C@_0CB@CNKBBAIB@Floating?5point?5operation?5failed?4@ ; `string'
PUBLIC	??_C@_0BD@BMMMKAGK@FloatingPointError?$AA@	; `string'
PUBLIC	??_C@_0CC@PPOJNHHK@Base?5class?5for?5arithmetic?5errors@ ; `string'
PUBLIC	??_C@_0BA@HMBIHIEF@ArithmeticError?$AA@		; `string'
PUBLIC	??_C@_0BC@DHBLDLOI@Assertion?5failed?4?$AA@	; `string'
PUBLIC	??_C@_0P@ECLAGKMP@AssertionError?$AA@		; `string'
PUBLIC	??_C@_0BL@BOAAJAHA@Unicode?5translation?5error?4?$AA@ ; `string'
PUBLIC	??_C@_0BG@MKGFNNGN@UnicodeTranslateError?$AA@	; `string'
PUBLIC	??_C@_0BI@GHLGAONJ@Unicode?5decoding?5error?4?$AA@ ; `string'
PUBLIC	??_C@_0BD@EMOAOOII@UnicodeDecodeError?$AA@	; `string'
PUBLIC	??_C@_0BI@BHCKDJLG@Unicode?5encoding?5error?4?$AA@ ; `string'
PUBLIC	??_C@_0BD@PEGECFKD@UnicodeEncodeError?$AA@	; `string'
PUBLIC	??_C@_0BB@PLOKJKDH@exception?5reason?$AA@	; `string'
PUBLIC	??_C@_06CEHAOENB@reason?$AA@			; `string'
PUBLIC	??_C@_0O@ONMBNCFM@exception?5end?$AA@		; `string'
PUBLIC	??_C@_03JBJLGPFL@end?$AA@			; `string'
PUBLIC	??_C@_0BA@KKPENCDK@exception?5start?$AA@	; `string'
PUBLIC	??_C@_05FAGFPHJG@start?$AA@			; `string'
PUBLIC	??_C@_0BB@FLHDGNGM@exception?5object?$AA@	; `string'
PUBLIC	??_C@_06IEOJBDIK@object?$AA@			; `string'
PUBLIC	??_C@_0BD@HEGPNDEB@exception?5encoding?$AA@	; `string'
PUBLIC	??_C@_08MLPGAEIK@encoding?$AA@			; `string'
PUBLIC	??_C@_0BH@LFJEPFCJ@Unicode?5related?5error?4?$AA@ ; `string'
PUBLIC	??_C@_0N@HJMCMBLP@UnicodeError?$AA@		; `string'
PUBLIC	??_C@_0DA@PDIMAGJA@Inappropriate?5argument?5value?5?$CIof@ ; `string'
PUBLIC	??_C@_0L@POAMGPDC@ValueError?$AA@		; `string'
PUBLIC	??_C@_0BH@NGNBEPFN@Mapping?5key?5not?5found?4?$AA@ ; `string'
PUBLIC	??_C@_08OHPJJKKC@KeyError?$AA@			; `string'
PUBLIC	??_C@_0BN@MPIMOMNM@Sequence?5index?5out?5of?5range?4?$AA@ ; `string'
PUBLIC	??_C@_0L@PDGDGKIP@IndexError?$AA@		; `string'
PUBLIC	??_C@_0BO@OONBGEOC@Base?5class?5for?5lookup?5errors?4?$AA@ ; `string'
PUBLIC	??_C@_0M@MHFOHJEK@LookupError?$AA@		; `string'
PUBLIC	??_C@_0CF@GKBIKMOP@Improper?5mixture?5of?5spaces?5and?5t@ ; `string'
PUBLIC	??_C@_08HFBDNBMM@TabError?$AA@			; `string'
PUBLIC	??_C@_0BG@EODDEBDJ@Improper?5indentation?4?$AA@	; `string'
PUBLIC	??_C@_0BB@PAPDAKC@IndentationError?$AA@		; `string'
PUBLIC	??_C@_0BA@GFAEMOKB@Invalid?5syntax?4?$AA@	; `string'
PUBLIC	??_C@_0M@KIDEJCGH@SyntaxError?$AA@		; `string'
PUBLIC	??_C@_0BO@GMLCEMFL@exception?5print_file_and_line?$AA@ ; `string'
PUBLIC	??_C@_0BE@DKBHEDDB@print_file_and_line?$AA@	; `string'
PUBLIC	??_C@_0P@LGNOADNI@exception?5text?$AA@		; `string'
PUBLIC	??_C@_04CIMGMMMG@text?$AA@			; `string'
PUBLIC	??_C@_0BB@HEONLGIK@exception?5offset?$AA@	; `string'
PUBLIC	??_C@_06KLHHMIGM@offset?$AA@			; `string'
PUBLIC	??_C@_0BB@FEDCHJDL@exception?5lineno?$AA@	; `string'
PUBLIC	??_C@_06ILKIAHNN@lineno?$AA@			; `string'
PUBLIC	??_C@_0O@BHKGJJFD@exception?5msg?$AA@		; `string'
PUBLIC	??_C@_0BF@KBBDNFNN@Attribute?5not?5found?4?$AA@	; `string'
PUBLIC	??_C@_0P@OMMLLIOG@AttributeError?$AA@		; `string'
PUBLIC	??_C@_0DA@JDNAGEED@Local?5name?5referenced?5but?5not?5bo@ ; `string'
PUBLIC	??_C@_0BC@EJBPJIJA@UnboundLocalError?$AA@	; `string'
PUBLIC	??_C@_0BJ@CKADCLHL@Name?5not?5found?5globally?4?$AA@ ; `string'
PUBLIC	??_C@_09GENDEFL@NameError?$AA@			; `string'
PUBLIC	??_C@_0DA@PMFCDFAJ@Method?5or?5function?5hasn?8t?5been?5i@ ; `string'
PUBLIC	??_C@_0BE@NIHEKDAM@NotImplementedError?$AA@	; `string'
PUBLIC	??_C@_0BM@GMHHIONK@Unspecified?5run?9time?5error?4?$AA@ ; `string'
PUBLIC	??_C@_0N@PJCHGDKG@RuntimeError?$AA@		; `string'
PUBLIC	??_C@_0BJ@DBOMGJHD@Read?5beyond?5end?5of?5file?4?$AA@ ; `string'
PUBLIC	??_C@_08BJKGOKBF@EOFError?$AA@			; `string'
PUBLIC	??_C@_0BB@KIFGEFOB@Timeout?5expired?4?$AA@	; `string'
PUBLIC	??_C@_0N@BMLDFELP@TimeoutError?$AA@		; `string'
PUBLIC	??_C@_0BD@CDPGLGNA@Process?5not?5found?4?$AA@	; `string'
PUBLIC	??_C@_0BD@LBBCHOLB@ProcessLookupError?$AA@	; `string'
PUBLIC	??_C@_0BI@ICBFMNFH@Not?5enough?5permissions?4?$AA@ ; `string'
PUBLIC	??_C@_0BA@EGIOHDMA@PermissionError?$AA@		; `string'
PUBLIC	??_C@_0BH@DPFOMFFN@Interrupted?5by?5signal?4?$AA@ ; `string'
PUBLIC	??_C@_0BB@PFBGOELP@InterruptedError?$AA@	; `string'
PUBLIC	??_C@_0CF@MHLAOJGN@Operation?5only?5works?5on?5director@ ; `string'
PUBLIC	??_C@_0BD@BDDBNNNE@NotADirectoryError?$AA@	; `string'
PUBLIC	??_C@_0CH@PKAKIMKI@Operation?5doesn?8t?5work?5on?5direct@ ; `string'
PUBLIC	??_C@_0BC@EPPFJLG@IsADirectoryError?$AA@	; `string'
PUBLIC	??_C@_0BA@DOIDIGMK@File?5not?5found?4?$AA@	; `string'
PUBLIC	??_C@_0BC@IPPJKII@FileNotFoundError?$AA@	; `string'
PUBLIC	??_C@_0BF@PBMIGFNE@File?5already?5exists?4?$AA@	; `string'
PUBLIC	??_C@_0BA@FBEHCPFP@FileExistsError?$AA@		; `string'
PUBLIC	??_C@_0BC@PIBEPGML@Connection?5reset?4?$AA@	; `string'
PUBLIC	??_C@_0BF@KPCMAHCN@ConnectionResetError?$AA@	; `string'
PUBLIC	??_C@_0BE@PAAMHJLG@Connection?5refused?4?$AA@	; `string'
PUBLIC	??_C@_0BH@NFNMCF@ConnectionRefusedError?$AA@	; `string'
PUBLIC	??_C@_0BE@FFDJKHGA@Connection?5aborted?4?$AA@	; `string'
PUBLIC	??_C@_0BH@IAHALHIL@ConnectionAbortedError?$AA@	; `string'
PUBLIC	??_C@_0N@KCAMOIPH@Broken?5pipe?4?$AA@		; `string'
PUBLIC	??_C@_0BA@OKFJGAGB@BrokenPipeError?$AA@		; `string'
PUBLIC	??_C@_0BF@IOACMFNO@Child?5process?5error?4?$AA@	; `string'
PUBLIC	??_C@_0BC@LJAFFAPL@ChildProcessError?$AA@	; `string'
PUBLIC	??_C@_0BC@BCOONDMO@Connection?5error?4?$AA@	; `string'
PUBLIC	??_C@_0BA@FGMDNHAG@ConnectionError?$AA@		; `string'
PUBLIC	??_C@_0BL@LJLKLDJH@I?1O?5operation?5would?5block?4?$AA@ ; `string'
PUBLIC	??_C@_0BA@JGPGLFDG@BlockingIOError?$AA@		; `string'
PUBLIC	??_C@_0CD@BBOAKDDD@Base?5class?5for?5I?1O?5related?5error@ ; `string'
PUBLIC	??_C@_07DLGONEPD@OSError?$AA@			; `string'
PUBLIC	??_C@_0BD@MJNIBNKM@characters_written?$AA@	; `string'
PUBLIC	??_C@_0BF@EGKICGDH@Win32?5exception?5code?$AA@	; `string'
PUBLIC	??_C@_08NNIGBLFN@winerror?$AA@			; `string'
PUBLIC	??_C@_0BD@KPIAFJIH@exception?5filename?$AA@	; `string'
PUBLIC	??_C@_08BABJIOEM@filename?$AA@			; `string'
PUBLIC	??_C@_0BD@HIDDEPNK@exception?5strerror?$AA@	; `string'
PUBLIC	??_C@_08MHKKJIBB@strerror?$AA@			; `string'
PUBLIC	??_C@_0BF@CJFJGJAA@POSIX?5exception?5code?$AA@	; `string'
PUBLIC	??_C@_05PEAMIKEP@errno?$AA@			; `string'
PUBLIC	??_C@_0DI@HEBCIICE@Import?5can?8t?5find?5module?0?5or?5can@ ; `string'
PUBLIC	??_C@_0M@HCFCBBPI@ImportError?$AA@		; `string'
PUBLIC	??_C@_0M@EODBJGBC@module?5path?$AA@		; `string'
PUBLIC	??_C@_04LNEJFJGI@path?$AA@			; `string'
PUBLIC	??_C@_0M@DHLIFJED@module?5name?$AA@		; `string'
PUBLIC	??_C@_04MEMAJGDJ@name?$AA@			; `string'
PUBLIC	??_C@_0BC@KEEHBMNM@exception?5message?$AA@	; `string'
PUBLIC	??_C@_03GLPMCEFE@msg?$AA@			; `string'
PUBLIC	??_C@_0BN@MANALLKN@Program?5interrupted?5by?5user?4?$AA@ ; `string'
PUBLIC	??_C@_0BC@BACBBCED@KeyboardInterrupt?$AA@	; `string'
PUBLIC	??_C@_0CG@KDLBFKIC@Request?5to?5exit?5from?5the?5interpr@ ; `string'
PUBLIC	??_C@_0L@MBGFFHMP@SystemExit?$AA@		; `string'
PUBLIC	??_C@_0P@ENEGNBCK@exception?5code?$AA@		; `string'
PUBLIC	??_C@_04NDFOBODE@code?$AA@			; `string'
PUBLIC	??_C@_0BP@OCIPBJOC@Request?5that?5a?5generator?5exit?4?$AA@ ; `string'
PUBLIC	??_C@_0O@GBGLOLNB@GeneratorExit?$AA@		; `string'
PUBLIC	??_C@_0CJ@IGGDMNCD@Signal?5the?5end?5from?5iterator?4__n@ ; `string'
PUBLIC	??_C@_0O@LGLKOGMF@StopIteration?$AA@		; `string'
PUBLIC	??_C@_0BH@CEJBINIP@generator?5return?5value?$AA@ ; `string'
PUBLIC	??_C@_05MFEJDJP@value?$AA@			; `string'
PUBLIC	??_C@_0BN@GFNFLJFF@Inappropriate?5argument?5type?4?$AA@ ; `string'
PUBLIC	??_C@_09MGGHOBOJ@TypeError?$AA@			; `string'
PUBLIC	??_C@_0CP@EGCLOIMN@Common?5base?5class?5for?5all?5non?9ex@ ; `string'
PUBLIC	??_C@_09FBNMMHMJ@Exception?$AA@			; `string'
PUBLIC	??_C@_0CF@KACNFHAK@Common?5base?5class?5for?5all?5except@ ; `string'
PUBLIC	??_C@_0O@GCAIIPIB@BaseException?$AA@		; `string'
PUBLIC	??_C@_0BF@PLNDEDFH@__suppress_context__?$AA@	; `string'
PUBLIC	??_C@_0BA@IMECEBLM@exception?5cause?$AA@	; `string'
PUBLIC	??_C@_09DJICANKI@__cause__?$AA@			; `string'
PUBLIC	??_C@_0BC@NDBEMMPP@exception?5context?$AA@	; `string'
PUBLIC	??_C@_0M@GKMKEIIC@__context__?$AA@		; `string'
PUBLIC	??_C@_0O@IEBEOCOE@__traceback__?$AA@		; `string'
PUBLIC	??_C@_04BFDDMJJI@args?$AA@			; `string'
PUBLIC	??_C@_08IBFKALI@__dict__?$AA@			; `string'
PUBLIC	??_C@_0P@FLIOKJJK@with_traceback?$AA@		; `string'
PUBLIC	??_C@_0N@MOOGCAMH@__setstate__?$AA@		; `string'
PUBLIC	??_C@_0L@NNMACJIG@__reduce__?$AA@		; `string'
PUBLIC	PyExc_EnvironmentError
PUBLIC	PyExc_IOError
PUBLIC	PyExc_WindowsError
PUBLIC	PyExc_BaseException
PUBLIC	PyExc_Exception
PUBLIC	PyExc_TypeError
PUBLIC	PyExc_StopIteration
PUBLIC	PyExc_GeneratorExit
PUBLIC	PyExc_SystemExit
PUBLIC	PyExc_KeyboardInterrupt
PUBLIC	PyExc_ImportError
PUBLIC	PyExc_OSError
PUBLIC	PyExc_BlockingIOError
PUBLIC	PyExc_ConnectionError
PUBLIC	PyExc_ChildProcessError
PUBLIC	PyExc_BrokenPipeError
PUBLIC	PyExc_ConnectionAbortedError
PUBLIC	PyExc_ConnectionRefusedError
PUBLIC	PyExc_ConnectionResetError
PUBLIC	PyExc_FileExistsError
PUBLIC	PyExc_FileNotFoundError
PUBLIC	PyExc_IsADirectoryError
PUBLIC	PyExc_NotADirectoryError
PUBLIC	PyExc_InterruptedError
PUBLIC	PyExc_PermissionError
PUBLIC	PyExc_ProcessLookupError
PUBLIC	PyExc_TimeoutError
PUBLIC	PyExc_EOFError
PUBLIC	PyExc_RuntimeError
PUBLIC	PyExc_NotImplementedError
PUBLIC	PyExc_NameError
PUBLIC	PyExc_UnboundLocalError
PUBLIC	PyExc_AttributeError
PUBLIC	PyExc_SyntaxError
PUBLIC	PyExc_IndentationError
PUBLIC	PyExc_TabError
PUBLIC	PyExc_LookupError
PUBLIC	PyExc_IndexError
PUBLIC	PyExc_KeyError
PUBLIC	PyExc_ValueError
PUBLIC	PyExc_UnicodeError
PUBLIC	PyExc_UnicodeEncodeError
PUBLIC	PyExc_UnicodeDecodeError
PUBLIC	PyExc_UnicodeTranslateError
PUBLIC	PyExc_AssertionError
PUBLIC	PyExc_ArithmeticError
PUBLIC	PyExc_FloatingPointError
PUBLIC	PyExc_OverflowError
PUBLIC	PyExc_ZeroDivisionError
PUBLIC	PyExc_SystemError
PUBLIC	PyExc_ReferenceError
PUBLIC	PyExc_ParallelError
PUBLIC	PyExc_ParallelThreadInitializationError
PUBLIC	PyExc_ParallelContextInitializationError
PUBLIC	PyExc_ParallelContextError
PUBLIC	PyExc_ParallelImportError
PUBLIC	PyExc_ParallelGlobalVariableAccessError
PUBLIC	PyExc_ParallelNonlocalVariableAccessError
PUBLIC	PyExc_AsyncError
PUBLIC	PyExc_AsyncRunCalledWithoutEventsError
PUBLIC	PyExc_AsyncRunNoActiveEventsError
PUBLIC	PyExc_MemoryError
PUBLIC	PyExc_BufferError
PUBLIC	PyExc_Warning
PUBLIC	PyExc_UserWarning
PUBLIC	PyExc_DeprecationWarning
PUBLIC	PyExc_PendingDeprecationWarning
PUBLIC	PyExc_SyntaxWarning
PUBLIC	PyExc_RuntimeWarning
PUBLIC	PyExc_FutureWarning
PUBLIC	PyExc_ImportWarning
PUBLIC	PyExc_UnicodeWarning
PUBLIC	PyExc_BytesWarning
PUBLIC	PyExc_ResourceWarning
PUBLIC	PyExc_RecursionErrorInst
EXTRN	PyObject_GenericSetAttr:PROC
EXTRN	PyObject_GenericGetAttr:PROC
EXTRN	PyObject_GenericSetDict:PROC
EXTRN	PyObject_GenericGetDict:PROC
_BSS	SEGMENT
PyExc_EnvironmentError DQ 01H DUP (?)
PyExc_IOError DQ 01H DUP (?)
PyExc_WindowsError DQ 01H DUP (?)
errnomap DQ	01H DUP (?)
ImportError_methods DB 020H DUP (?)
memerrors_freelist DQ 01H DUP (?)
memerrors_numfree DD 01H DUP (?)
	ALIGN	8

PyExc_RecursionErrorInst DQ 01H DUP (?)
_BSS	ENDS
;	COMDAT ??_C@_0CO@HPEHEBLP@Base?5class?5for?5warnings?5about?5re@
CONST	SEGMENT
??_C@_0CO@HPEHEBLP@Base?5class?5for?5warnings?5about?5re@ DB 'Base class '
	DB	'for warnings about resource usage.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JIBLCGNF@ResourceWarning?$AA@
CONST	SEGMENT
??_C@_0BA@JIBLCGNF@ResourceWarning?$AA@ DB 'ResourceWarning', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0HM@KBKMDMHM@Base?5class?5for?5warnings?5about?5by@
CONST	SEGMENT
??_C@_0HM@KBKMDMHM@Base?5class?5for?5warnings?5about?5by@ DB 'Base class '
	DB	'for warnings about bytes and buffer related problems, mostly', 0aH
	DB	'related to conversion from str or comparing to str.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BILDEMAG@BytesWarning?$AA@
CONST	SEGMENT
??_C@_0N@BILDEMAG@BytesWarning?$AA@ DB 'BytesWarning', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FP@BEMCLFNP@Base?5class?5for?5warnings?5about?5Un@
CONST	SEGMENT
??_C@_0FP@BEMCLFNP@Base?5class?5for?5warnings?5about?5Un@ DB 'Base class '
	DB	'for warnings about Unicode related problems, mostly', 0aH, 'r'
	DB	'elated to conversion problems.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@DFBLGLPC@UnicodeWarning?$AA@
CONST	SEGMENT
??_C@_0P@DFBLGLPC@UnicodeWarning?$AA@ DB 'UnicodeWarning', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EC@CFAJPLKK@Base?5class?5for?5warnings?5about?5pr@
CONST	SEGMENT
??_C@_0EC@CFAJPLKK@Base?5class?5for?5warnings?5about?5pr@ DB 'Base class '
	DB	'for warnings about probable mistakes in module imports', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@MPAGLHE@ImportWarning?$AA@
CONST	SEGMENT
??_C@_0O@MPAGLHE@ImportWarning?$AA@ DB 'ImportWarning', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0FG@MEHAINOE@Base?5class?5for?5warnings?5about?5co@
CONST	SEGMENT
??_C@_0FG@MEHAINOE@Base?5class?5for?5warnings?5about?5co@ DB 'Base class '
	DB	'for warnings about constructs that will change semantically', 0aH
	DB	'in the future.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@EAIEFLDH@FutureWarning?$AA@
CONST	SEGMENT
??_C@_0O@EAIEFLDH@FutureWarning?$AA@ DB 'FutureWarning', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@FBPEMJEN@Base?5class?5for?5warnings?5about?5du@
CONST	SEGMENT
??_C@_0DI@FBPEMJEN@Base?5class?5for?5warnings?5about?5du@ DB 'Base class '
	DB	'for warnings about dubious runtime behavior.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@JGMDIAML@RuntimeWarning?$AA@
CONST	SEGMENT
??_C@_0P@JGMDIAML@RuntimeWarning?$AA@ DB 'RuntimeWarning', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@JDKAKEOK@Base?5class?5for?5warnings?5about?5du@
CONST	SEGMENT
??_C@_0CO@JDKAKEOK@Base?5class?5for?5warnings?5about?5du@ DB 'Base class '
	DB	'for warnings about dubious syntax.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IOJIPFFN@SyntaxWarning?$AA@
CONST	SEGMENT
??_C@_0O@IOJIPFFN@SyntaxWarning?$AA@ DB 'SyntaxWarning', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EP@NOKGBDGL@Base?5class?5for?5warnings?5about?5fe@
CONST	SEGMENT
??_C@_0EP@NOKGBDGL@Base?5class?5for?5warnings?5about?5fe@ DB 'Base class '
	DB	'for warnings about features which will be deprecated', 0aH, 'i'
	DB	'n the future.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@JDBEDOM@PendingDeprecationWarning?$AA@
CONST	SEGMENT
??_C@_0BK@JDBEDOM@PendingDeprecationWarning?$AA@ DB 'PendingDeprecationWa'
	DB	'rning', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@DDNMECFD@Base?5class?5for?5warnings?5about?5de@
CONST	SEGMENT
??_C@_0DD@DDNMECFD@Base?5class?5for?5warnings?5about?5de@ DB 'Base class '
	DB	'for warnings about deprecated features.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@GIDNBIPD@DeprecationWarning?$AA@
CONST	SEGMENT
??_C@_0BD@GIDNBIPD@DeprecationWarning?$AA@ DB 'DeprecationWarning', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@NAMNFIGL@Base?5class?5for?5warnings?5generate@
CONST	SEGMENT
??_C@_0DA@NAMNFIGL@Base?5class?5for?5warnings?5generate@ DB 'Base class f'
	DB	'or warnings generated by user code.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@JCLIHPLC@UserWarning?$AA@
CONST	SEGMENT
??_C@_0M@JCLIHPLC@UserWarning?$AA@ DB 'UserWarning', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@IHAAEPNP@Base?5class?5for?5warning?5categorie@
CONST	SEGMENT
??_C@_0CD@IHAAEPNP@Base?5class?5for?5warning?5categorie@ DB 'Base class f'
	DB	'or warning categories.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07KGMMFLDN@Warning?$AA@
CONST	SEGMENT
??_C@_07KGMMFLDN@Warning?$AA@ DB 'Warning', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GFOKIHDB@Buffer?5error?4?$AA@
CONST	SEGMENT
??_C@_0O@GFOKIHDB@Buffer?5error?4?$AA@ DB 'Buffer error.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@IEEINKIE@BufferError?$AA@
CONST	SEGMENT
??_C@_0M@IEEINKIE@BufferError?$AA@ DB 'BufferError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@ILLCNIIE@Out?5of?5memory?4?$AA@
CONST	SEGMENT
??_C@_0P@ILLCNIIE@Out?5of?5memory?4?$AA@ DB 'Out of memory.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HIBAKAFK@MemoryError?$AA@
CONST	SEGMENT
??_C@_0M@HIBAKAFK@MemoryError?$AA@ DB 'MemoryError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@LICMCCGN@Async?5run?$CI?$CJ?5detected?5that?5there?5@
CONST	SEGMENT
??_C@_0DG@LICMCCGN@Async?5run?$CI?$CJ?5detected?5that?5there?5@ DB 'Async'
	DB	' run() detected that there are no active events.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GCGOLDFN@AsyncRunNoActiveEventsError?$AA@
CONST	SEGMENT
??_C@_0BM@GCGOLDFN@AsyncRunNoActiveEventsError?$AA@ DB 'AsyncRunNoActiveE'
	DB	'ventsError', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@LDJJHMMC@Async?5run?$CI?$CJ?5called?5without?5any?5e@
CONST	SEGMENT
??_C@_0CH@LDJJHMMC@Async?5run?$CI?$CJ?5called?5without?5any?5e@ DB 'Async'
	DB	' run() called without any events.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@DHCJJACB@AsyncRunCalledWithoutEventsError@
CONST	SEGMENT
??_C@_0CB@DHCJJACB@AsyncRunCalledWithoutEventsError@ DB 'AsyncRunCalledWi'
	DB	'thoutEventsError', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@KHNEADKG@Base?5class?5for?5async?5errors?4?$AA@
CONST	SEGMENT
??_C@_0BN@KHNEADKG@Base?5class?5for?5async?5errors?4?$AA@ DB 'Base class '
	DB	'for async errors.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@POMMPANG@AsyncError?$AA@
CONST	SEGMENT
??_C@_0L@POMMPANG@AsyncError?$AA@ DB 'AsyncError', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0EN@KNPFPBJJ@Implicit?5access?5to?5nonlocal?5vari@
CONST	SEGMENT
??_C@_0EN@KNPFPBJJ@Implicit?5access?5to?5nonlocal?5vari@ DB 'Implicit acc'
	DB	'ess to nonlocal variables not permitted within parallel conte'
	DB	'xt.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@ONNHACJB@ParallelNonlocalVariableAccessEr@
CONST	SEGMENT
??_C@_0CE@ONNHACJB@ParallelNonlocalVariableAccessEr@ DB 'ParallelNonlocal'
	DB	'VariableAccessError', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0EL@PLHLDPCD@Implicit?5access?5to?5global?5variab@
CONST	SEGMENT
??_C@_0EL@PLHLDPCD@Implicit?5access?5to?5global?5variab@ DB 'Implicit acc'
	DB	'ess to global variables not permitted within parallel context'
	DB	'.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@HPLHCPKN@ParallelGlobalVariableAccessErro@
CONST	SEGMENT
??_C@_0CC@HPLHCPKN@ParallelGlobalVariableAccessErro@ DB 'ParallelGlobalVa'
	DB	'riableAccessError', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@JGEGKCHH@Import?5not?5permitted?5from?5within@
CONST	SEGMENT
??_C@_0DD@JGEGKCHH@Import?5not?5permitted?5from?5within@ DB 'Import not p'
	DB	'ermitted from within parallel context.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FCGCAOGC@ParallelImportError?$AA@
CONST	SEGMENT
??_C@_0BE@FCGCAOGC@ParallelImportError?$AA@ DB 'ParallelImportError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@NPBGBDKP@Operation?5not?5permitted?5from?5wit@
CONST	SEGMENT
??_C@_0DG@NPBGBDKP@Operation?5not?5permitted?5from?5wit@ DB 'Operation no'
	DB	't permitted from within parallel context.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@HFKFAIAA@ParallelContextError?$AA@
CONST	SEGMENT
??_C@_0BF@HFKFAIAA@ParallelContextError?$AA@ DB 'ParallelContextError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@INBJNFAJ@Failed?5to?5initialize?5parallel?5co@
CONST	SEGMENT
??_C@_0DE@INBJNFAJ@Failed?5to?5initialize?5parallel?5co@ DB 'Failed to in'
	DB	'itialize parallel context for callback.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@MNHCHPAI@ParallelContextInitializationErr@
CONST	SEGMENT
??_C@_0CD@MNHCHPAI@ParallelContextInitializationErr@ DB 'ParallelContextI'
	DB	'nitializationError', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CK@IKBKELBP@Failed?5to?5initialize?5new?5paralle@
CONST	SEGMENT
??_C@_0CK@IKBKELBP@Failed?5to?5initialize?5new?5paralle@ DB 'Failed to in'
	DB	'itialize new parallel thread.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@IAEHFMP@ParallelThreadInitializationErro@
CONST	SEGMENT
??_C@_0CC@IAEHFMP@ParallelThreadInitializationErro@ DB 'ParallelThreadIni'
	DB	'tializationError', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@NKCFMBPJ@Base?5class?5for?5parallel?5errors?4?$AA@
CONST	SEGMENT
??_C@_0CA@NKCFMBPJ@Base?5class?5for?5parallel?5errors?4?$AA@ DB 'Base cla'
	DB	'ss for parallel errors.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GFKDNBOD@ParallelError?$AA@
CONST	SEGMENT
??_C@_0O@GFKDNBOD@ParallelError?$AA@ DB 'ParallelError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@BODDBCMG@Weak?5ref?5proxy?5used?5after?5refere@
CONST	SEGMENT
??_C@_0CO@BODDBCMG@Weak?5ref?5proxy?5used?5after?5refere@ DB 'Weak ref pr'
	DB	'oxy used after referent went away.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NJFCDLEA@ReferenceError?$AA@
CONST	SEGMENT
??_C@_0P@NJFCDLEA@ReferenceError?$AA@ DB 'ReferenceError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0LA@PADCOJHH@Internal?5error?5in?5the?5Python?5int@
CONST	SEGMENT
??_C@_0LA@PADCOJHH@Internal?5error?5in?5the?5Python?5int@ DB 'Internal er'
	DB	'ror in the Python interpreter.', 0aH, 0aH, 'Please report thi'
	DB	's to the Python maintainer, along with the traceback,', 0aH, 't'
	DB	'he Python version, and the hardware/OS platform and version.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MLMICFKM@SystemError?$AA@
CONST	SEGMENT
??_C@_0M@MLMICFKM@SystemError?$AA@ DB 'SystemError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DM@HNAOGMFP@Second?5argument?5to?5a?5division?5or@
CONST	SEGMENT
??_C@_0DM@HNAOGMFP@Second?5argument?5to?5a?5division?5or@ DB 'Second argu'
	DB	'ment to a division or modulo operation was zero.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@JKCGANPD@ZeroDivisionError?$AA@
CONST	SEGMENT
??_C@_0BC@JKCGANPD@ZeroDivisionError?$AA@ DB 'ZeroDivisionError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@DNDJACFH@Result?5too?5large?5to?5be?5represent@
CONST	SEGMENT
??_C@_0CE@DNDJACFH@Result?5too?5large?5to?5be?5represent@ DB 'Result too '
	DB	'large to be represented.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@DAFOBLHH@OverflowError?$AA@
CONST	SEGMENT
??_C@_0O@DAFOBLHH@OverflowError?$AA@ DB 'OverflowError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@CNKBBAIB@Floating?5point?5operation?5failed?4@
CONST	SEGMENT
??_C@_0CB@CNKBBAIB@Floating?5point?5operation?5failed?4@ DB 'Floating poi'
	DB	'nt operation failed.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BMMMKAGK@FloatingPointError?$AA@
CONST	SEGMENT
??_C@_0BD@BMMMKAGK@FloatingPointError?$AA@ DB 'FloatingPointError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@PPOJNHHK@Base?5class?5for?5arithmetic?5errors@
CONST	SEGMENT
??_C@_0CC@PPOJNHHK@Base?5class?5for?5arithmetic?5errors@ DB 'Base class f'
	DB	'or arithmetic errors.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@HMBIHIEF@ArithmeticError?$AA@
CONST	SEGMENT
??_C@_0BA@HMBIHIEF@ArithmeticError?$AA@ DB 'ArithmeticError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@DHBLDLOI@Assertion?5failed?4?$AA@
CONST	SEGMENT
??_C@_0BC@DHBLDLOI@Assertion?5failed?4?$AA@ DB 'Assertion failed.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@ECLAGKMP@AssertionError?$AA@
CONST	SEGMENT
??_C@_0P@ECLAGKMP@AssertionError?$AA@ DB 'AssertionError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@BOAAJAHA@Unicode?5translation?5error?4?$AA@
CONST	SEGMENT
??_C@_0BL@BOAAJAHA@Unicode?5translation?5error?4?$AA@ DB 'Unicode transla'
	DB	'tion error.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@MKGFNNGN@UnicodeTranslateError?$AA@
CONST	SEGMENT
??_C@_0BG@MKGFNNGN@UnicodeTranslateError?$AA@ DB 'UnicodeTranslateError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GHLGAONJ@Unicode?5decoding?5error?4?$AA@
CONST	SEGMENT
??_C@_0BI@GHLGAONJ@Unicode?5decoding?5error?4?$AA@ DB 'Unicode decoding e'
	DB	'rror.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@EMOAOOII@UnicodeDecodeError?$AA@
CONST	SEGMENT
??_C@_0BD@EMOAOOII@UnicodeDecodeError?$AA@ DB 'UnicodeDecodeError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@BHCKDJLG@Unicode?5encoding?5error?4?$AA@
CONST	SEGMENT
??_C@_0BI@BHCKDJLG@Unicode?5encoding?5error?4?$AA@ DB 'Unicode encoding e'
	DB	'rror.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@PEGECFKD@UnicodeEncodeError?$AA@
CONST	SEGMENT
??_C@_0BD@PEGECFKD@UnicodeEncodeError?$AA@ DB 'UnicodeEncodeError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PLOKJKDH@exception?5reason?$AA@
CONST	SEGMENT
??_C@_0BB@PLOKJKDH@exception?5reason?$AA@ DB 'exception reason', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06CEHAOENB@reason?$AA@
CONST	SEGMENT
??_C@_06CEHAOENB@reason?$AA@ DB 'reason', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@ONMBNCFM@exception?5end?$AA@
CONST	SEGMENT
??_C@_0O@ONMBNCFM@exception?5end?$AA@ DB 'exception end', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03JBJLGPFL@end?$AA@
CONST	SEGMENT
??_C@_03JBJLGPFL@end?$AA@ DB 'end', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@KKPENCDK@exception?5start?$AA@
CONST	SEGMENT
??_C@_0BA@KKPENCDK@exception?5start?$AA@ DB 'exception start', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05FAGFPHJG@start?$AA@
CONST	SEGMENT
??_C@_05FAGFPHJG@start?$AA@ DB 'start', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FLHDGNGM@exception?5object?$AA@
CONST	SEGMENT
??_C@_0BB@FLHDGNGM@exception?5object?$AA@ DB 'exception object', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06IEOJBDIK@object?$AA@
CONST	SEGMENT
??_C@_06IEOJBDIK@object?$AA@ DB 'object', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HEGPNDEB@exception?5encoding?$AA@
CONST	SEGMENT
??_C@_0BD@HEGPNDEB@exception?5encoding?$AA@ DB 'exception encoding', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08MLPGAEIK@encoding?$AA@
CONST	SEGMENT
??_C@_08MLPGAEIK@encoding?$AA@ DB 'encoding', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@LFJEPFCJ@Unicode?5related?5error?4?$AA@
CONST	SEGMENT
??_C@_0BH@LFJEPFCJ@Unicode?5related?5error?4?$AA@ DB 'Unicode related err'
	DB	'or.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@HJMCMBLP@UnicodeError?$AA@
CONST	SEGMENT
??_C@_0N@HJMCMBLP@UnicodeError?$AA@ DB 'UnicodeError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@PDIMAGJA@Inappropriate?5argument?5value?5?$CIof@
CONST	SEGMENT
??_C@_0DA@PDIMAGJA@Inappropriate?5argument?5value?5?$CIof@ DB 'Inappropri'
	DB	'ate argument value (of correct type).', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@POAMGPDC@ValueError?$AA@
CONST	SEGMENT
??_C@_0L@POAMGPDC@ValueError?$AA@ DB 'ValueError', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NGNBEPFN@Mapping?5key?5not?5found?4?$AA@
CONST	SEGMENT
??_C@_0BH@NGNBEPFN@Mapping?5key?5not?5found?4?$AA@ DB 'Mapping key not fo'
	DB	'und.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_08OHPJJKKC@KeyError?$AA@
CONST	SEGMENT
??_C@_08OHPJJKKC@KeyError?$AA@ DB 'KeyError', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@MPIMOMNM@Sequence?5index?5out?5of?5range?4?$AA@
CONST	SEGMENT
??_C@_0BN@MPIMOMNM@Sequence?5index?5out?5of?5range?4?$AA@ DB 'Sequence in'
	DB	'dex out of range.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PDGDGKIP@IndexError?$AA@
CONST	SEGMENT
??_C@_0L@PDGDGKIP@IndexError?$AA@ DB 'IndexError', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@OONBGEOC@Base?5class?5for?5lookup?5errors?4?$AA@
CONST	SEGMENT
??_C@_0BO@OONBGEOC@Base?5class?5for?5lookup?5errors?4?$AA@ DB 'Base class'
	DB	' for lookup errors.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@MHFOHJEK@LookupError?$AA@
CONST	SEGMENT
??_C@_0M@MHFOHJEK@LookupError?$AA@ DB 'LookupError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@GKBIKMOP@Improper?5mixture?5of?5spaces?5and?5t@
CONST	SEGMENT
??_C@_0CF@GKBIKMOP@Improper?5mixture?5of?5spaces?5and?5t@ DB 'Improper mi'
	DB	'xture of spaces and tabs.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08HFBDNBMM@TabError?$AA@
CONST	SEGMENT
??_C@_08HFBDNBMM@TabError?$AA@ DB 'TabError', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@EODDEBDJ@Improper?5indentation?4?$AA@
CONST	SEGMENT
??_C@_0BG@EODDEBDJ@Improper?5indentation?4?$AA@ DB 'Improper indentation.'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PAPDAKC@IndentationError?$AA@
CONST	SEGMENT
??_C@_0BB@PAPDAKC@IndentationError?$AA@ DB 'IndentationError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@GFAEMOKB@Invalid?5syntax?4?$AA@
CONST	SEGMENT
??_C@_0BA@GFAEMOKB@Invalid?5syntax?4?$AA@ DB 'Invalid syntax.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@KIDEJCGH@SyntaxError?$AA@
CONST	SEGMENT
??_C@_0M@KIDEJCGH@SyntaxError?$AA@ DB 'SyntaxError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@GMLCEMFL@exception?5print_file_and_line?$AA@
CONST	SEGMENT
??_C@_0BO@GMLCEMFL@exception?5print_file_and_line?$AA@ DB 'exception prin'
	DB	't_file_and_line', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@DKBHEDDB@print_file_and_line?$AA@
CONST	SEGMENT
??_C@_0BE@DKBHEDDB@print_file_and_line?$AA@ DB 'print_file_and_line', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@LGNOADNI@exception?5text?$AA@
CONST	SEGMENT
??_C@_0P@LGNOADNI@exception?5text?$AA@ DB 'exception text', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04CIMGMMMG@text?$AA@
CONST	SEGMENT
??_C@_04CIMGMMMG@text?$AA@ DB 'text', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@HEONLGIK@exception?5offset?$AA@
CONST	SEGMENT
??_C@_0BB@HEONLGIK@exception?5offset?$AA@ DB 'exception offset', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06KLHHMIGM@offset?$AA@
CONST	SEGMENT
??_C@_06KLHHMIGM@offset?$AA@ DB 'offset', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FEDCHJDL@exception?5lineno?$AA@
CONST	SEGMENT
??_C@_0BB@FEDCHJDL@exception?5lineno?$AA@ DB 'exception lineno', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06ILKIAHNN@lineno?$AA@
CONST	SEGMENT
??_C@_06ILKIAHNN@lineno?$AA@ DB 'lineno', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@BHKGJJFD@exception?5msg?$AA@
CONST	SEGMENT
??_C@_0O@BHKGJJFD@exception?5msg?$AA@ DB 'exception msg', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KBBDNFNN@Attribute?5not?5found?4?$AA@
CONST	SEGMENT
??_C@_0BF@KBBDNFNN@Attribute?5not?5found?4?$AA@ DB 'Attribute not found.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@OMMLLIOG@AttributeError?$AA@
CONST	SEGMENT
??_C@_0P@OMMLLIOG@AttributeError?$AA@ DB 'AttributeError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@JDNAGEED@Local?5name?5referenced?5but?5not?5bo@
CONST	SEGMENT
??_C@_0DA@JDNAGEED@Local?5name?5referenced?5but?5not?5bo@ DB 'Local name '
	DB	'referenced but not bound to a value.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EJBPJIJA@UnboundLocalError?$AA@
CONST	SEGMENT
??_C@_0BC@EJBPJIJA@UnboundLocalError?$AA@ DB 'UnboundLocalError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@CKADCLHL@Name?5not?5found?5globally?4?$AA@
CONST	SEGMENT
??_C@_0BJ@CKADCLHL@Name?5not?5found?5globally?4?$AA@ DB 'Name not found g'
	DB	'lobally.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_09GENDEFL@NameError?$AA@
CONST	SEGMENT
??_C@_09GENDEFL@NameError?$AA@ DB 'NameError', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DA@PMFCDFAJ@Method?5or?5function?5hasn?8t?5been?5i@
CONST	SEGMENT
??_C@_0DA@PMFCDFAJ@Method?5or?5function?5hasn?8t?5been?5i@ DB 'Method or '
	DB	'function hasn''t been implemented yet.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@NIHEKDAM@NotImplementedError?$AA@
CONST	SEGMENT
??_C@_0BE@NIHEKDAM@NotImplementedError?$AA@ DB 'NotImplementedError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@GMHHIONK@Unspecified?5run?9time?5error?4?$AA@
CONST	SEGMENT
??_C@_0BM@GMHHIONK@Unspecified?5run?9time?5error?4?$AA@ DB 'Unspecified r'
	DB	'un-time error.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@PJCHGDKG@RuntimeError?$AA@
CONST	SEGMENT
??_C@_0N@PJCHGDKG@RuntimeError?$AA@ DB 'RuntimeError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@DBOMGJHD@Read?5beyond?5end?5of?5file?4?$AA@
CONST	SEGMENT
??_C@_0BJ@DBOMGJHD@Read?5beyond?5end?5of?5file?4?$AA@ DB 'Read beyond end'
	DB	' of file.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_08BJKGOKBF@EOFError?$AA@
CONST	SEGMENT
??_C@_08BJKGOKBF@EOFError?$AA@ DB 'EOFError', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KIFGEFOB@Timeout?5expired?4?$AA@
CONST	SEGMENT
??_C@_0BB@KIFGEFOB@Timeout?5expired?4?$AA@ DB 'Timeout expired.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@BMLDFELP@TimeoutError?$AA@
CONST	SEGMENT
??_C@_0N@BMLDFELP@TimeoutError?$AA@ DB 'TimeoutError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@CDPGLGNA@Process?5not?5found?4?$AA@
CONST	SEGMENT
??_C@_0BD@CDPGLGNA@Process?5not?5found?4?$AA@ DB 'Process not found.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@LBBCHOLB@ProcessLookupError?$AA@
CONST	SEGMENT
??_C@_0BD@LBBCHOLB@ProcessLookupError?$AA@ DB 'ProcessLookupError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@ICBFMNFH@Not?5enough?5permissions?4?$AA@
CONST	SEGMENT
??_C@_0BI@ICBFMNFH@Not?5enough?5permissions?4?$AA@ DB 'Not enough permiss'
	DB	'ions.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@EGIOHDMA@PermissionError?$AA@
CONST	SEGMENT
??_C@_0BA@EGIOHDMA@PermissionError?$AA@ DB 'PermissionError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@DPFOMFFN@Interrupted?5by?5signal?4?$AA@
CONST	SEGMENT
??_C@_0BH@DPFOMFFN@Interrupted?5by?5signal?4?$AA@ DB 'Interrupted by sign'
	DB	'al.', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@PFBGOELP@InterruptedError?$AA@
CONST	SEGMENT
??_C@_0BB@PFBGOELP@InterruptedError?$AA@ DB 'InterruptedError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@MHLAOJGN@Operation?5only?5works?5on?5director@
CONST	SEGMENT
??_C@_0CF@MHLAOJGN@Operation?5only?5works?5on?5director@ DB 'Operation on'
	DB	'ly works on directories.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BDDBNNNE@NotADirectoryError?$AA@
CONST	SEGMENT
??_C@_0BD@BDDBNNNE@NotADirectoryError?$AA@ DB 'NotADirectoryError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CH@PKAKIMKI@Operation?5doesn?8t?5work?5on?5direct@
CONST	SEGMENT
??_C@_0CH@PKAKIMKI@Operation?5doesn?8t?5work?5on?5direct@ DB 'Operation d'
	DB	'oesn''t work on directories.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@EPPFJLG@IsADirectoryError?$AA@
CONST	SEGMENT
??_C@_0BC@EPPFJLG@IsADirectoryError?$AA@ DB 'IsADirectoryError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@DOIDIGMK@File?5not?5found?4?$AA@
CONST	SEGMENT
??_C@_0BA@DOIDIGMK@File?5not?5found?4?$AA@ DB 'File not found.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@IPPJKII@FileNotFoundError?$AA@
CONST	SEGMENT
??_C@_0BC@IPPJKII@FileNotFoundError?$AA@ DB 'FileNotFoundError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PBMIGFNE@File?5already?5exists?4?$AA@
CONST	SEGMENT
??_C@_0BF@PBMIGFNE@File?5already?5exists?4?$AA@ DB 'File already exists.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FBEHCPFP@FileExistsError?$AA@
CONST	SEGMENT
??_C@_0BA@FBEHCPFP@FileExistsError?$AA@ DB 'FileExistsError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PIBEPGML@Connection?5reset?4?$AA@
CONST	SEGMENT
??_C@_0BC@PIBEPGML@Connection?5reset?4?$AA@ DB 'Connection reset.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@KPCMAHCN@ConnectionResetError?$AA@
CONST	SEGMENT
??_C@_0BF@KPCMAHCN@ConnectionResetError?$AA@ DB 'ConnectionResetError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@PAAMHJLG@Connection?5refused?4?$AA@
CONST	SEGMENT
??_C@_0BE@PAAMHJLG@Connection?5refused?4?$AA@ DB 'Connection refused.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@NFNMCF@ConnectionRefusedError?$AA@
CONST	SEGMENT
??_C@_0BH@NFNMCF@ConnectionRefusedError?$AA@ DB 'ConnectionRefusedError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@FFDJKHGA@Connection?5aborted?4?$AA@
CONST	SEGMENT
??_C@_0BE@FFDJKHGA@Connection?5aborted?4?$AA@ DB 'Connection aborted.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@IAHALHIL@ConnectionAbortedError?$AA@
CONST	SEGMENT
??_C@_0BH@IAHALHIL@ConnectionAbortedError?$AA@ DB 'ConnectionAbortedError'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@KCAMOIPH@Broken?5pipe?4?$AA@
CONST	SEGMENT
??_C@_0N@KCAMOIPH@Broken?5pipe?4?$AA@ DB 'Broken pipe.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@OKFJGAGB@BrokenPipeError?$AA@
CONST	SEGMENT
??_C@_0BA@OKFJGAGB@BrokenPipeError?$AA@ DB 'BrokenPipeError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@IOACMFNO@Child?5process?5error?4?$AA@
CONST	SEGMENT
??_C@_0BF@IOACMFNO@Child?5process?5error?4?$AA@ DB 'Child process error.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@LJAFFAPL@ChildProcessError?$AA@
CONST	SEGMENT
??_C@_0BC@LJAFFAPL@ChildProcessError?$AA@ DB 'ChildProcessError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BCOONDMO@Connection?5error?4?$AA@
CONST	SEGMENT
??_C@_0BC@BCOONDMO@Connection?5error?4?$AA@ DB 'Connection error.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@FGMDNHAG@ConnectionError?$AA@
CONST	SEGMENT
??_C@_0BA@FGMDNHAG@ConnectionError?$AA@ DB 'ConnectionError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@LJLKLDJH@I?1O?5operation?5would?5block?4?$AA@
CONST	SEGMENT
??_C@_0BL@LJLKLDJH@I?1O?5operation?5would?5block?4?$AA@ DB 'I/O operation'
	DB	' would block.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JGPGLFDG@BlockingIOError?$AA@
CONST	SEGMENT
??_C@_0BA@JGPGLFDG@BlockingIOError?$AA@ DB 'BlockingIOError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@BBOAKDDD@Base?5class?5for?5I?1O?5related?5error@
CONST	SEGMENT
??_C@_0CD@BBOAKDDD@Base?5class?5for?5I?1O?5related?5error@ DB 'Base class'
	DB	' for I/O related errors.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07DLGONEPD@OSError?$AA@
CONST	SEGMENT
??_C@_07DLGONEPD@OSError?$AA@ DB 'OSError', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@MJNIBNKM@characters_written?$AA@
CONST	SEGMENT
??_C@_0BD@MJNIBNKM@characters_written?$AA@ DB 'characters_written', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@EGKICGDH@Win32?5exception?5code?$AA@
CONST	SEGMENT
??_C@_0BF@EGKICGDH@Win32?5exception?5code?$AA@ DB 'Win32 exception code', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08NNIGBLFN@winerror?$AA@
CONST	SEGMENT
??_C@_08NNIGBLFN@winerror?$AA@ DB 'winerror', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@KPIAFJIH@exception?5filename?$AA@
CONST	SEGMENT
??_C@_0BD@KPIAFJIH@exception?5filename?$AA@ DB 'exception filename', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08BABJIOEM@filename?$AA@
CONST	SEGMENT
??_C@_08BABJIOEM@filename?$AA@ DB 'filename', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@HIDDEPNK@exception?5strerror?$AA@
CONST	SEGMENT
??_C@_0BD@HIDDEPNK@exception?5strerror?$AA@ DB 'exception strerror', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08MHKKJIBB@strerror?$AA@
CONST	SEGMENT
??_C@_08MHKKJIBB@strerror?$AA@ DB 'strerror', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@CJFJGJAA@POSIX?5exception?5code?$AA@
CONST	SEGMENT
??_C@_0BF@CJFJGJAA@POSIX?5exception?5code?$AA@ DB 'POSIX exception code', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05PEAMIKEP@errno?$AA@
CONST	SEGMENT
??_C@_05PEAMIKEP@errno?$AA@ DB 'errno', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@HEBCIICE@Import?5can?8t?5find?5module?0?5or?5can@
CONST	SEGMENT
??_C@_0DI@HEBCIICE@Import?5can?8t?5find?5module?0?5or?5can@ DB 'Import ca'
	DB	'n''t find module, or can''t find name in module.', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@HCFCBBPI@ImportError?$AA@
CONST	SEGMENT
??_C@_0M@HCFCBBPI@ImportError?$AA@ DB 'ImportError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@EODBJGBC@module?5path?$AA@
CONST	SEGMENT
??_C@_0M@EODBJGBC@module?5path?$AA@ DB 'module path', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04LNEJFJGI@path?$AA@
CONST	SEGMENT
??_C@_04LNEJFJGI@path?$AA@ DB 'path', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@DHLIFJED@module?5name?$AA@
CONST	SEGMENT
??_C@_0M@DHLIFJED@module?5name?$AA@ DB 'module name', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04MEMAJGDJ@name?$AA@
CONST	SEGMENT
??_C@_04MEMAJGDJ@name?$AA@ DB 'name', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KEEHBMNM@exception?5message?$AA@
CONST	SEGMENT
??_C@_0BC@KEEHBMNM@exception?5message?$AA@ DB 'exception message', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03GLPMCEFE@msg?$AA@
CONST	SEGMENT
??_C@_03GLPMCEFE@msg?$AA@ DB 'msg', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@MANALLKN@Program?5interrupted?5by?5user?4?$AA@
CONST	SEGMENT
??_C@_0BN@MANALLKN@Program?5interrupted?5by?5user?4?$AA@ DB 'Program inte'
	DB	'rrupted by user.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@BACBBCED@KeyboardInterrupt?$AA@
CONST	SEGMENT
??_C@_0BC@BACBBCED@KeyboardInterrupt?$AA@ DB 'KeyboardInterrupt', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CG@KDLBFKIC@Request?5to?5exit?5from?5the?5interpr@
CONST	SEGMENT
??_C@_0CG@KDLBFKIC@Request?5to?5exit?5from?5the?5interpr@ DB 'Request to '
	DB	'exit from the interpreter.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@MBGFFHMP@SystemExit?$AA@
CONST	SEGMENT
??_C@_0L@MBGFFHMP@SystemExit?$AA@ DB 'SystemExit', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@ENEGNBCK@exception?5code?$AA@
CONST	SEGMENT
??_C@_0P@ENEGNBCK@exception?5code?$AA@ DB 'exception code', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04NDFOBODE@code?$AA@
CONST	SEGMENT
??_C@_04NDFOBODE@code?$AA@ DB 'code', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@OCIPBJOC@Request?5that?5a?5generator?5exit?4?$AA@
CONST	SEGMENT
??_C@_0BP@OCIPBJOC@Request?5that?5a?5generator?5exit?4?$AA@ DB 'Request t'
	DB	'hat a generator exit.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GBGLOLNB@GeneratorExit?$AA@
CONST	SEGMENT
??_C@_0O@GBGLOLNB@GeneratorExit?$AA@ DB 'GeneratorExit', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@IGGDMNCD@Signal?5the?5end?5from?5iterator?4__n@
CONST	SEGMENT
??_C@_0CJ@IGGDMNCD@Signal?5the?5end?5from?5iterator?4__n@ DB 'Signal the '
	DB	'end from iterator.__next__().', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@LGLKOGMF@StopIteration?$AA@
CONST	SEGMENT
??_C@_0O@LGLKOGMF@StopIteration?$AA@ DB 'StopIteration', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BH@CEJBINIP@generator?5return?5value?$AA@
CONST	SEGMENT
??_C@_0BH@CEJBINIP@generator?5return?5value?$AA@ DB 'generator return val'
	DB	'ue', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_05MFEJDJP@value?$AA@
CONST	SEGMENT
??_C@_05MFEJDJP@value?$AA@ DB 'value', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@GFNFLJFF@Inappropriate?5argument?5type?4?$AA@
CONST	SEGMENT
??_C@_0BN@GFNFLJFF@Inappropriate?5argument?5type?4?$AA@ DB 'Inappropriate'
	DB	' argument type.', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_09MGGHOBOJ@TypeError?$AA@
CONST	SEGMENT
??_C@_09MGGHOBOJ@TypeError?$AA@ DB 'TypeError', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@EGCLOIMN@Common?5base?5class?5for?5all?5non?9ex@
CONST	SEGMENT
??_C@_0CP@EGCLOIMN@Common?5base?5class?5for?5all?5non?9ex@ DB 'Common bas'
	DB	'e class for all non-exit exceptions.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_09FBNMMHMJ@Exception?$AA@
CONST	SEGMENT
??_C@_09FBNMMHMJ@Exception?$AA@ DB 'Exception', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@KACNFHAK@Common?5base?5class?5for?5all?5except@
CONST	SEGMENT
??_C@_0CF@KACNFHAK@Common?5base?5class?5for?5all?5except@ DB 'Common base'
	DB	' class for all exceptions', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@GCAIIPIB@BaseException?$AA@
CONST	SEGMENT
??_C@_0O@GCAIIPIB@BaseException?$AA@ DB 'BaseException', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@PLNDEDFH@__suppress_context__?$AA@
CONST	SEGMENT
??_C@_0BF@PLNDEDFH@__suppress_context__?$AA@ DB '__suppress_context__', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@IMECEBLM@exception?5cause?$AA@
CONST	SEGMENT
??_C@_0BA@IMECEBLM@exception?5cause?$AA@ DB 'exception cause', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_09DJICANKI@__cause__?$AA@
CONST	SEGMENT
??_C@_09DJICANKI@__cause__?$AA@ DB '__cause__', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@NDBEMMPP@exception?5context?$AA@
CONST	SEGMENT
??_C@_0BC@NDBEMMPP@exception?5context?$AA@ DB 'exception context', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@GKMKEIIC@__context__?$AA@
CONST	SEGMENT
??_C@_0M@GKMKEIIC@__context__?$AA@ DB '__context__', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0O@IEBEOCOE@__traceback__?$AA@
CONST	SEGMENT
??_C@_0O@IEBEOCOE@__traceback__?$AA@ DB '__traceback__', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_04BFDDMJJI@args?$AA@
CONST	SEGMENT
??_C@_04BFDDMJJI@args?$AA@ DB 'args', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_08IBFKALI@__dict__?$AA@
CONST	SEGMENT
??_C@_08IBFKALI@__dict__?$AA@ DB '__dict__', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FLIOKJJK@with_traceback?$AA@
CONST	SEGMENT
??_C@_0P@FLIOKJJK@with_traceback?$AA@ DB 'with_traceback', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MOOGCAMH@__setstate__?$AA@
CONST	SEGMENT
??_C@_0N@MOOGCAMH@__setstate__?$AA@ DB '__setstate__', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@NNMACJIG@__reduce__?$AA@
CONST	SEGMENT
??_C@_0L@NNMACJIG@__reduce__?$AA@ DB '__reduce__', 00H	; `string'
CONST	ENDS
_DATA	SEGMENT
with_traceback_doc DB 'Exception.with_traceback(tb) --', 0aH, '    set se'
	DB	'lf.__traceback__ to tb and return self.', 00H
	ORG $+14
BaseException_methods DQ FLAT:??_C@_0L@NNMACJIG@__reduce__?$AA@
	DQ	FLAT:BaseException_reduce
	DD	04H
	ORG $+4
	ORG $+8
	DQ	FLAT:??_C@_0N@MOOGCAMH@__setstate__?$AA@
	DQ	FLAT:BaseException_setstate
	DD	08H
	ORG $+4
	ORG $+8
	DQ	FLAT:??_C@_0P@FLIOKJJK@with_traceback?$AA@
	DQ	FLAT:BaseException_with_traceback
	DD	08H
	ORG $+4
	DQ	FLAT:with_traceback_doc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	00H
	ORG $+4
	DQ	0000000000000000H
BaseException_getset DQ FLAT:??_C@_08IBFKALI@__dict__?$AA@
	DQ	FLAT:PyObject_GenericGetDict
	DQ	FLAT:PyObject_GenericSetDict
	ORG $+16
	DQ	FLAT:??_C@_04BFDDMJJI@args?$AA@
	DQ	FLAT:BaseException_get_args
	DQ	FLAT:BaseException_set_args
	ORG $+16
	DQ	FLAT:??_C@_0O@IEBEOCOE@__traceback__?$AA@
	DQ	FLAT:BaseException_get_tb
	DQ	FLAT:BaseException_set_tb
	ORG $+16
	DQ	FLAT:??_C@_0M@GKMKEIIC@__context__?$AA@
	DQ	FLAT:BaseException_get_context
	DQ	FLAT:BaseException_set_context
	DQ	FLAT:??_C@_0BC@NDBEMMPP@exception?5context?$AA@
	ORG $+8
	DQ	FLAT:??_C@_09DJICANKI@__cause__?$AA@
	DQ	FLAT:BaseException_get_cause
	DQ	FLAT:BaseException_set_cause
	DQ	FLAT:??_C@_0BA@IMECEBLM@exception?5cause?$AA@
	ORG $+8
	DQ	0000000000000000H
	ORG $+32
BaseException_members DQ FLAT:??_C@_0BF@PLNDEDFH@__suppress_context__?$AA@
	DD	0eH
	ORG $+4
	DQ	0000000000000088H
	ORG $+16
	DQ	0000000000000000H
	ORG $+32
_PyExc_BaseException DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0O@GCAIIPIB@BaseException?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_repr
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_str
	DQ	FLAT:PyObject_GenericGetAttr
	DQ	FLAT:PyObject_GenericSetAttr
	DQ	0000000000000000H
	DD	040044400H
	ORG $+4
	DQ	FLAT:??_C@_0CF@KACNFHAK@Common?5base?5class?5for?5all?5except@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_methods
	DQ	FLAT:BaseException_members
	DQ	FLAT:BaseException_getset
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_BaseException DQ FLAT:_PyExc_BaseException
PyExc_Exception DQ FLAT:_PyExc_Exception
_PyExc_Exception DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_09FBNMMHMJ@Exception?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CP@EGCLOIMN@Common?5base?5class?5for?5all?5non?9ex@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_BaseException
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_TypeError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_09MGGHOBOJ@TypeError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BN@GFNFLJFF@Inappropriate?5argument?5type?4?$AA@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_TypeError DQ FLAT:_PyExc_TypeError
PyExc_StopIteration DQ FLAT:_PyExc_StopIteration
StopIteration_members DQ FLAT:??_C@_05MFEJDJP@value?$AA@
	DD	06H
	ORG $+4
	DQ	0000000000000090H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BH@CEJBINIP@generator?5return?5value?$AA@
	DQ	0000000000000000H
	ORG $+32
_PyExc_StopIteration DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0O@LGLKOGMF@StopIteration?$AA@
	DQ	00000000000000a0H
	DQ	0000000000000000H
	DQ	FLAT:StopIteration_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CJ@IGGDMNCD@Signal?5the?5end?5from?5iterator?4__n@
	DQ	FLAT:StopIteration_traverse
	DQ	FLAT:StopIteration_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:StopIteration_members
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:StopIteration_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
_PyExc_GeneratorExit DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0O@GBGLOLNB@GeneratorExit?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BP@OCIPBJOC@Request?5that?5a?5generator?5exit?4?$AA@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_BaseException
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_GeneratorExit DQ FLAT:_PyExc_GeneratorExit
PyExc_SystemExit DQ FLAT:_PyExc_SystemExit
SystemExit_members DQ FLAT:??_C@_04NDFOBODE@code?$AA@
	DD	06H
	ORG $+4
	DQ	0000000000000090H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0P@ENEGNBCK@exception?5code?$AA@
	DQ	0000000000000000H
	ORG $+32
_PyExc_SystemExit DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0L@MBGFFHMP@SystemExit?$AA@
	DQ	00000000000000a0H
	DQ	0000000000000000H
	DQ	FLAT:SystemExit_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CG@KDLBFKIC@Request?5to?5exit?5from?5the?5interpr@
	DQ	FLAT:SystemExit_traverse
	DQ	FLAT:SystemExit_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:SystemExit_members
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_BaseException
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:SystemExit_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
_PyExc_KeyboardInterrupt DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BC@BACBBCED@KeyboardInterrupt?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BN@MANALLKN@Program?5interrupted?5by?5user?4?$AA@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_BaseException
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_KeyboardInterrupt DQ FLAT:_PyExc_KeyboardInterrupt
PyExc_ImportError DQ FLAT:_PyExc_ImportError
ImportError_members DQ FLAT:??_C@_03GLPMCEFE@msg?$AA@
	DD	06H
	ORG $+4
	DQ	0000000000000090H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BC@KEEHBMNM@exception?5message?$AA@
	DQ	FLAT:??_C@_04MEMAJGDJ@name?$AA@
	DD	06H
	ORG $+4
	DQ	0000000000000098H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0M@DHLIFJED@module?5name?$AA@
	DQ	FLAT:??_C@_04LNEJFJGI@path?$AA@
	DD	06H
	ORG $+4
	DQ	00000000000000a0H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0M@EODBJGBC@module?5path?$AA@
	DQ	0000000000000000H
	ORG $+32
_PyExc_ImportError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0M@HCFCBBPI@ImportError?$AA@
	DQ	00000000000000b0H
	DQ	0000000000000000H
	DQ	FLAT:ImportError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:ImportError_str
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0DI@HEBCIICE@Import?5can?8t?5find?5module?0?5or?5can@
	DQ	FLAT:ImportError_traverse
	DQ	FLAT:ImportError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:ImportError_methods
	DQ	FLAT:ImportError_members
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:ImportError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
OSError_members DQ FLAT:??_C@_05PEAMIKEP@errno?$AA@
	DD	06H
	ORG $+4
	DQ	0000000000000090H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BF@CJFJGJAA@POSIX?5exception?5code?$AA@
	DQ	FLAT:??_C@_08MHKKJIBB@strerror?$AA@
	DD	06H
	ORG $+4
	DQ	0000000000000098H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BD@HIDDEPNK@exception?5strerror?$AA@
	DQ	FLAT:??_C@_08BABJIOEM@filename?$AA@
	DD	06H
	ORG $+4
	DQ	00000000000000a0H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BD@KPIAFJIH@exception?5filename?$AA@
	DQ	FLAT:??_C@_08NNIGBLFN@winerror?$AA@
	DD	06H
	ORG $+4
	DQ	00000000000000a8H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BF@EGKICGDH@Win32?5exception?5code?$AA@
	DQ	0000000000000000H
	ORG $+32
PyExc_OSError DQ FLAT:_PyExc_OSError
OSError_methods DQ FLAT:??_C@_0L@NNMACJIG@__reduce__?$AA@
	DQ	FLAT:OSError_reduce
	DD	04H
	ORG $+4
	ORG $+8
	DQ	0000000000000000H
	ORG $+24
OSError_getset DQ FLAT:??_C@_0BD@MJNIBNKM@characters_written?$AA@
	DQ	FLAT:OSError_written_get
	DQ	FLAT:OSError_written_set
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000000H
	ORG $+32
_PyExc_OSError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_07DLGONEPD@OSError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:OSError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:OSError_str
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CD@BBOAKDDD@Base?5class?5for?5I?1O?5related?5error@
	DQ	FLAT:OSError_traverse
	DQ	FLAT:OSError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:OSError_methods
	DQ	FLAT:OSError_members
	DQ	FLAT:OSError_getset
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:OSError_init
	DQ	0000000000000000H
	DQ	FLAT:OSError_new
	ORG $+72
_PyExc_BlockingIOError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BA@JGPGLFDG@BlockingIOError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:OSError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BL@LJLKLDJH@I?1O?5operation?5would?5block?4?$AA@
	DQ	FLAT:OSError_traverse
	DQ	FLAT:OSError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_OSError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:OSError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
PyExc_BlockingIOError DQ FLAT:_PyExc_BlockingIOError
PyExc_ConnectionError DQ FLAT:_PyExc_ConnectionError
_PyExc_ConnectionError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BA@FGMDNHAG@ConnectionError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:OSError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BC@BCOONDMO@Connection?5error?4?$AA@
	DQ	FLAT:OSError_traverse
	DQ	FLAT:OSError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_OSError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:OSError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
_PyExc_ChildProcessError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BC@LJAFFAPL@ChildProcessError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:OSError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BF@IOACMFNO@Child?5process?5error?4?$AA@
	DQ	FLAT:OSError_traverse
	DQ	FLAT:OSError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_OSError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:OSError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
PyExc_ChildProcessError DQ FLAT:_PyExc_ChildProcessError
PyExc_BrokenPipeError DQ FLAT:_PyExc_BrokenPipeError
_PyExc_BrokenPipeError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BA@OKFJGAGB@BrokenPipeError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:OSError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0N@KCAMOIPH@Broken?5pipe?4?$AA@
	DQ	FLAT:OSError_traverse
	DQ	FLAT:OSError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_ConnectionError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:OSError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
_PyExc_ConnectionAbortedError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BH@IAHALHIL@ConnectionAbortedError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:OSError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BE@FFDJKHGA@Connection?5aborted?4?$AA@
	DQ	FLAT:OSError_traverse
	DQ	FLAT:OSError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_ConnectionError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:OSError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
PyExc_ConnectionAbortedError DQ FLAT:_PyExc_ConnectionAbortedError
PyExc_ConnectionRefusedError DQ FLAT:_PyExc_ConnectionRefusedError
_PyExc_ConnectionRefusedError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BH@NFNMCF@ConnectionRefusedError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:OSError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BE@PAAMHJLG@Connection?5refused?4?$AA@
	DQ	FLAT:OSError_traverse
	DQ	FLAT:OSError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_ConnectionError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:OSError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
_PyExc_ConnectionResetError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BF@KPCMAHCN@ConnectionResetError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:OSError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BC@PIBEPGML@Connection?5reset?4?$AA@
	DQ	FLAT:OSError_traverse
	DQ	FLAT:OSError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_ConnectionError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:OSError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
PyExc_ConnectionResetError DQ FLAT:_PyExc_ConnectionResetError
PyExc_FileExistsError DQ FLAT:_PyExc_FileExistsError
_PyExc_FileExistsError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BA@FBEHCPFP@FileExistsError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:OSError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BF@PBMIGFNE@File?5already?5exists?4?$AA@
	DQ	FLAT:OSError_traverse
	DQ	FLAT:OSError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_OSError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:OSError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
_PyExc_FileNotFoundError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BC@IPPJKII@FileNotFoundError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:OSError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BA@DOIDIGMK@File?5not?5found?4?$AA@
	DQ	FLAT:OSError_traverse
	DQ	FLAT:OSError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_OSError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:OSError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
PyExc_FileNotFoundError DQ FLAT:_PyExc_FileNotFoundError
PyExc_IsADirectoryError DQ FLAT:_PyExc_IsADirectoryError
_PyExc_IsADirectoryError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BC@EPPFJLG@IsADirectoryError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:OSError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CH@PKAKIMKI@Operation?5doesn?8t?5work?5on?5direct@
	DQ	FLAT:OSError_traverse
	DQ	FLAT:OSError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_OSError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:OSError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
_PyExc_NotADirectoryError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BD@BDDBNNNE@NotADirectoryError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:OSError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CF@MHLAOJGN@Operation?5only?5works?5on?5director@
	DQ	FLAT:OSError_traverse
	DQ	FLAT:OSError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_OSError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:OSError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
PyExc_NotADirectoryError DQ FLAT:_PyExc_NotADirectoryError
PyExc_InterruptedError DQ FLAT:_PyExc_InterruptedError
_PyExc_InterruptedError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BB@PFBGOELP@InterruptedError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:OSError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BH@DPFOMFFN@Interrupted?5by?5signal?4?$AA@
	DQ	FLAT:OSError_traverse
	DQ	FLAT:OSError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_OSError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:OSError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
_PyExc_PermissionError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BA@EGIOHDMA@PermissionError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:OSError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BI@ICBFMNFH@Not?5enough?5permissions?4?$AA@
	DQ	FLAT:OSError_traverse
	DQ	FLAT:OSError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_OSError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:OSError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
PyExc_PermissionError DQ FLAT:_PyExc_PermissionError
PyExc_ProcessLookupError DQ FLAT:_PyExc_ProcessLookupError
_PyExc_ProcessLookupError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BD@LBBCHOLB@ProcessLookupError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:OSError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BD@CDPGLGNA@Process?5not?5found?4?$AA@
	DQ	FLAT:OSError_traverse
	DQ	FLAT:OSError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_OSError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:OSError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
_PyExc_TimeoutError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0N@BMLDFELP@TimeoutError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:OSError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BB@KIFGEFOB@Timeout?5expired?4?$AA@
	DQ	FLAT:OSError_traverse
	DQ	FLAT:OSError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_OSError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:OSError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
PyExc_TimeoutError DQ FLAT:_PyExc_TimeoutError
PyExc_EOFError DQ FLAT:_PyExc_EOFError
_PyExc_EOFError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_08BJKGOKBF@EOFError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BJ@DBOMGJHD@Read?5beyond?5end?5of?5file?4?$AA@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_RuntimeError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0N@PJCHGDKG@RuntimeError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BM@GMHHIONK@Unspecified?5run?9time?5error?4?$AA@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_RuntimeError DQ FLAT:_PyExc_RuntimeError
PyExc_NotImplementedError DQ FLAT:_PyExc_NotImplementedError
_PyExc_NotImplementedError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BE@NIHEKDAM@NotImplementedError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0DA@PMFCDFAJ@Method?5or?5function?5hasn?8t?5been?5i@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_RuntimeError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_NameError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_09GENDEFL@NameError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BJ@CKADCLHL@Name?5not?5found?5globally?4?$AA@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_NameError DQ FLAT:_PyExc_NameError
PyExc_UnboundLocalError DQ FLAT:_PyExc_UnboundLocalError
_PyExc_UnboundLocalError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BC@EJBPJIJA@UnboundLocalError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0DA@JDNAGEED@Local?5name?5referenced?5but?5not?5bo@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_NameError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_AttributeError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0P@OMMLLIOG@AttributeError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BF@KBBDNFNN@Attribute?5not?5found?4?$AA@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_AttributeError DQ FLAT:_PyExc_AttributeError
PyExc_SyntaxError DQ FLAT:_PyExc_SyntaxError
SyntaxError_members DQ FLAT:??_C@_03GLPMCEFE@msg?$AA@
	DD	06H
	ORG $+4
	DQ	0000000000000090H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0O@BHKGJJFD@exception?5msg?$AA@
	DQ	FLAT:??_C@_08BABJIOEM@filename?$AA@
	DD	06H
	ORG $+4
	DQ	0000000000000098H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BD@KPIAFJIH@exception?5filename?$AA@
	DQ	FLAT:??_C@_06ILKIAHNN@lineno?$AA@
	DD	06H
	ORG $+4
	DQ	00000000000000a0H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BB@FEDCHJDL@exception?5lineno?$AA@
	DQ	FLAT:??_C@_06KLHHMIGM@offset?$AA@
	DD	06H
	ORG $+4
	DQ	00000000000000a8H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BB@HEONLGIK@exception?5offset?$AA@
	DQ	FLAT:??_C@_04CIMGMMMG@text?$AA@
	DD	06H
	ORG $+4
	DQ	00000000000000b0H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0P@LGNOADNI@exception?5text?$AA@
	DQ	FLAT:??_C@_0BE@DKBHEDDB@print_file_and_line?$AA@
	DD	06H
	ORG $+4
	DQ	00000000000000b8H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BO@GMLCEMFL@exception?5print_file_and_line?$AA@
	DQ	0000000000000000H
	ORG $+32
PyExc_IndentationError DQ FLAT:_PyExc_IndentationError
_PyExc_SyntaxError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0M@KIDEJCGH@SyntaxError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:SyntaxError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:SyntaxError_str
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BA@GFAEMOKB@Invalid?5syntax?4?$AA@
	DQ	FLAT:SyntaxError_traverse
	DQ	FLAT:SyntaxError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:SyntaxError_members
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:SyntaxError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
_PyExc_IndentationError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BB@PAPDAKC@IndentationError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:SyntaxError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BG@EODDEBDJ@Improper?5indentation?4?$AA@
	DQ	FLAT:SyntaxError_traverse
	DQ	FLAT:SyntaxError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_SyntaxError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:SyntaxError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
_PyExc_TabError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_08HFBDNBMM@TabError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:SyntaxError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CF@GKBIKMOP@Improper?5mixture?5of?5spaces?5and?5t@
	DQ	FLAT:SyntaxError_traverse
	DQ	FLAT:SyntaxError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_IndentationError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:SyntaxError_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
PyExc_TabError DQ FLAT:_PyExc_TabError
PyExc_LookupError DQ FLAT:_PyExc_LookupError
_PyExc_LookupError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0M@MHFOHJEK@LookupError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BO@OONBGEOC@Base?5class?5for?5lookup?5errors?4?$AA@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_IndexError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0L@PDGDGKIP@IndexError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BN@MPIMOMNM@Sequence?5index?5out?5of?5range?4?$AA@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_LookupError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_IndexError DQ FLAT:_PyExc_IndexError
PyExc_KeyError DQ FLAT:_PyExc_KeyError
_PyExc_KeyError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_08OHPJJKKC@KeyError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:KeyError_str
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BH@NGNBEPFN@Mapping?5key?5not?5found?4?$AA@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_LookupError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+72
_PyExc_ValueError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0L@POAMGPDC@ValueError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0DA@PDIMAGJA@Inappropriate?5argument?5value?5?$CIof@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_ValueError DQ FLAT:_PyExc_ValueError
PyExc_UnicodeError DQ FLAT:_PyExc_UnicodeError
_PyExc_UnicodeError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0N@HJMCMBLP@UnicodeError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BH@LFJEPFCJ@Unicode?5related?5error?4?$AA@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_ValueError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
UnicodeError_members DQ FLAT:??_C@_08MLPGAEIK@encoding?$AA@
	DD	06H
	ORG $+4
	DQ	0000000000000090H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BD@HEGPNDEB@exception?5encoding?$AA@
	DQ	FLAT:??_C@_06IEOJBDIK@object?$AA@
	DD	06H
	ORG $+4
	DQ	0000000000000098H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BB@FLHDGNGM@exception?5object?$AA@
	DQ	FLAT:??_C@_05FAGFPHJG@start?$AA@
	DD	013H
	ORG $+4
	DQ	00000000000000a0H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BA@KKPENCDK@exception?5start?$AA@
	DQ	FLAT:??_C@_03JBJLGPFL@end?$AA@
	DD	013H
	ORG $+4
	DQ	00000000000000a8H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0O@ONMBNCFM@exception?5end?$AA@
	DQ	FLAT:??_C@_06CEHAOENB@reason?$AA@
	DD	06H
	ORG $+4
	DQ	00000000000000b0H
	DD	00H
	ORG $+4
	DQ	FLAT:??_C@_0BB@PLOKJKDH@exception?5reason?$AA@
	DQ	0000000000000000H
	ORG $+32
_PyExc_UnicodeEncodeError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BD@PEGECFKD@UnicodeEncodeError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:UnicodeError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:UnicodeEncodeError_str
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BI@BHCKDJLG@Unicode?5encoding?5error?4?$AA@
	DQ	FLAT:UnicodeError_traverse
	DQ	FLAT:UnicodeError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:UnicodeError_members
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_UnicodeError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:UnicodeEncodeError_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_UnicodeEncodeError DQ FLAT:_PyExc_UnicodeEncodeError
PyExc_UnicodeDecodeError DQ FLAT:_PyExc_UnicodeDecodeError
_PyExc_UnicodeDecodeError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BD@EMOAOOII@UnicodeDecodeError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:UnicodeError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:UnicodeDecodeError_str
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BI@GHLGAONJ@Unicode?5decoding?5error?4?$AA@
	DQ	FLAT:UnicodeError_traverse
	DQ	FLAT:UnicodeError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:UnicodeError_members
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_UnicodeError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:UnicodeDecodeError_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_UnicodeTranslateError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BG@MKGFNNGN@UnicodeTranslateError?$AA@
	DQ	00000000000000c0H
	DQ	0000000000000000H
	DQ	FLAT:UnicodeError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:UnicodeTranslateError_str
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BL@BOAAJAHA@Unicode?5translation?5error?4?$AA@
	DQ	FLAT:UnicodeError_traverse
	DQ	FLAT:UnicodeError_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:UnicodeError_members
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_UnicodeError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:UnicodeTranslateError_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_UnicodeTranslateError DQ FLAT:_PyExc_UnicodeTranslateError
PyExc_AssertionError DQ FLAT:_PyExc_AssertionError
_PyExc_AssertionError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0P@ECLAGKMP@AssertionError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BC@DHBLDLOI@Assertion?5failed?4?$AA@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_ArithmeticError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BA@HMBIHIEF@ArithmeticError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CC@PPOJNHHK@Base?5class?5for?5arithmetic?5errors@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_ArithmeticError DQ FLAT:_PyExc_ArithmeticError
PyExc_FloatingPointError DQ FLAT:_PyExc_FloatingPointError
_PyExc_FloatingPointError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BD@BMMMKAGK@FloatingPointError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CB@CNKBBAIB@Floating?5point?5operation?5failed?4@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_ArithmeticError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_OverflowError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0O@DAFOBLHH@OverflowError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CE@DNDJACFH@Result?5too?5large?5to?5be?5represent@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_ArithmeticError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_OverflowError DQ FLAT:_PyExc_OverflowError
PyExc_ZeroDivisionError DQ FLAT:_PyExc_ZeroDivisionError
_PyExc_ZeroDivisionError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BC@JKCGANPD@ZeroDivisionError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0DM@HNAOGMFP@Second?5argument?5to?5a?5division?5or@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_ArithmeticError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_SystemError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0M@MLMICFKM@SystemError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0LA@PADCOJHH@Internal?5error?5in?5the?5Python?5int@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_SystemError DQ FLAT:_PyExc_SystemError
PyExc_ReferenceError DQ FLAT:_PyExc_ReferenceError
_PyExc_ReferenceError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0P@NJFCDLEA@ReferenceError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CO@BODDBCMG@Weak?5ref?5proxy?5used?5after?5refere@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_ParallelError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0O@GFKDNBOD@ParallelError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CA@NKCFMBPJ@Base?5class?5for?5parallel?5errors?4?$AA@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_ParallelError DQ FLAT:_PyExc_ParallelError
PyExc_ParallelThreadInitializationError DQ FLAT:_PyExc_ParallelThreadInitializationError
_PyExc_ParallelThreadInitializationError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0CC@IAEHFMP@ParallelThreadInitializationErro@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CK@IKBKELBP@Failed?5to?5initialize?5new?5paralle@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_ParallelError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_ParallelContextInitializationError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0CD@MNHCHPAI@ParallelContextInitializationErr@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0DE@INBJNFAJ@Failed?5to?5initialize?5parallel?5co@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_ParallelError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_ParallelContextInitializationError DQ FLAT:_PyExc_ParallelContextInitializationError
PyExc_ParallelContextError DQ FLAT:_PyExc_ParallelContextError
_PyExc_ParallelContextError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BF@HFKFAIAA@ParallelContextError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0DG@NPBGBDKP@Operation?5not?5permitted?5from?5wit@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_ParallelError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_ParallelImportError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BE@FCGCAOGC@ParallelImportError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0DD@JGEGKCHH@Import?5not?5permitted?5from?5within@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_ParallelContextError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_ParallelImportError DQ FLAT:_PyExc_ParallelImportError
PyExc_ParallelGlobalVariableAccessError DQ FLAT:_PyExc_ParallelGlobalVariableAccessError
_PyExc_ParallelGlobalVariableAccessError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0CC@HPLHCPKN@ParallelGlobalVariableAccessErro@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0EL@PLHLDPCD@Implicit?5access?5to?5global?5variab@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_ParallelContextError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_ParallelNonlocalVariableAccessError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0CE@ONNHACJB@ParallelNonlocalVariableAccessEr@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0EN@KNPFPBJJ@Implicit?5access?5to?5nonlocal?5vari@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_ParallelContextError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_ParallelNonlocalVariableAccessError DQ FLAT:_PyExc_ParallelNonlocalVariableAccessError
PyExc_AsyncError DQ FLAT:_PyExc_AsyncError
_PyExc_AsyncError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0L@POMMPANG@AsyncError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0BN@KHNEADKG@Base?5class?5for?5async?5errors?4?$AA@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_AsyncRunCalledWithoutEventsError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0CB@DHCJJACB@AsyncRunCalledWithoutEventsError@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CH@LDJJHMMC@Async?5run?$CI?$CJ?5called?5without?5any?5e@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_AsyncError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_AsyncRunCalledWithoutEventsError DQ FLAT:_PyExc_AsyncRunCalledWithoutEventsError
PyExc_AsyncRunNoActiveEventsError DQ FLAT:_PyExc_AsyncRunNoActiveEventsError
_PyExc_AsyncRunNoActiveEventsError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BM@GCGOLDFN@AsyncRunNoActiveEventsError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0DG@LICMCCGN@Async?5run?$CI?$CJ?5detected?5that?5there?5@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_AsyncError
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_MemoryError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0M@HIBAKAFK@MemoryError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:MemoryError_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0P@ILLCNIIE@Out?5of?5memory?4?$AA@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:MemoryError_new
	ORG $+72
PyExc_MemoryError DQ FLAT:_PyExc_MemoryError
PyExc_BufferError DQ FLAT:_PyExc_BufferError
_PyExc_BufferError DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0M@IEEINKIE@BufferError?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0O@GFOKIHDB@Buffer?5error?4?$AA@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_Warning DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_07KGMMFLDN@Warning?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CD@IHAAEPNP@Base?5class?5for?5warning?5categorie@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Exception
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_Warning DQ FLAT:_PyExc_Warning
PyExc_UserWarning DQ FLAT:_PyExc_UserWarning
_PyExc_UserWarning DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0M@JCLIHPLC@UserWarning?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0DA@NAMNFIGL@Base?5class?5for?5warnings?5generate@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Warning
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_DeprecationWarning DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BD@GIDNBIPD@DeprecationWarning?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0DD@DDNMECFD@Base?5class?5for?5warnings?5about?5de@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Warning
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_DeprecationWarning DQ FLAT:_PyExc_DeprecationWarning
PyExc_PendingDeprecationWarning DQ FLAT:_PyExc_PendingDeprecationWarning
_PyExc_PendingDeprecationWarning DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BK@JDBEDOM@PendingDeprecationWarning?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0EP@NOKGBDGL@Base?5class?5for?5warnings?5about?5fe@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Warning
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_SyntaxWarning DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0O@IOJIPFFN@SyntaxWarning?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CO@JDKAKEOK@Base?5class?5for?5warnings?5about?5du@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Warning
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_SyntaxWarning DQ FLAT:_PyExc_SyntaxWarning
PyExc_RuntimeWarning DQ FLAT:_PyExc_RuntimeWarning
_PyExc_RuntimeWarning DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0P@JGMDIAML@RuntimeWarning?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0DI@FBPEMJEN@Base?5class?5for?5warnings?5about?5du@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Warning
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_FutureWarning DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0O@EAIEFLDH@FutureWarning?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0FG@MEHAINOE@Base?5class?5for?5warnings?5about?5co@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Warning
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_FutureWarning DQ FLAT:_PyExc_FutureWarning
PyExc_ImportWarning DQ FLAT:_PyExc_ImportWarning
_PyExc_ImportWarning DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0O@MPAGLHE@ImportWarning?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0EC@CFAJPLKK@Base?5class?5for?5warnings?5about?5pr@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Warning
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_UnicodeWarning DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0P@DFBLGLPC@UnicodeWarning?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0FP@BEMCLFNP@Base?5class?5for?5warnings?5about?5Un@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Warning
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_UnicodeWarning DQ FLAT:_PyExc_UnicodeWarning
PyExc_BytesWarning DQ FLAT:_PyExc_BytesWarning
_PyExc_BytesWarning DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0N@BILDEMAG@BytesWarning?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0HM@KBKMDMHM@Base?5class?5for?5warnings?5about?5by@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Warning
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
_PyExc_ResourceWarning DQ dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000000H
	ORG $+8
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	dead1234beef5678H
	DQ	dead1234beef5678H
	DQ	0000000000000001H
	DQ	0000000000000000H
	DQ	0000000000000000H
	ORG $+8
	DQ	FLAT:??_C@_0BA@JIBLCGNF@ResourceWarning?$AA@
	DQ	0000000000000090H
	DQ	0000000000000000H
	DQ	FLAT:BaseException_dealloc
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DD	044400H
	ORG $+4
	DQ	FLAT:??_C@_0CO@HPEHEBLP@Base?5class?5for?5warnings?5about?5re@
	DQ	FLAT:BaseException_traverse
	DQ	FLAT:BaseException_clear
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	FLAT:_PyExc_Warning
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000000H
	DQ	0000000000000060H
	DQ	FLAT:BaseException_init
	DQ	0000000000000000H
	DQ	FLAT:BaseException_new
	ORG $+72
PyExc_ResourceWarning DQ FLAT:_PyExc_ResourceWarning
_DATA	ENDS
PUBLIC	_Py_DecRef
PUBLIC	_Py_IncRef
EXTRN	PyTuple_New:PROC
;	COMDAT pdata
; File c:\src\pyparallel\objects\exceptions.c
pdata	SEGMENT
$pdata$BaseException_new DD imagerel BaseException_new
	DD	imagerel BaseException_new+215
	DD	imagerel $unwind$BaseException_new
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_new DD 011301H
	DD	06213H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT BaseException_new
_TEXT	SEGMENT
self$ = 32
type$ = 64
args$ = 72
kwds$ = 80
BaseException_new PROC					; COMDAT

; 36   : {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 37   :     PyBaseExceptionObject *self;
; 38   : 
; 39   :     self = (PyBaseExceptionObject *)type->tp_alloc(type, 0);

  00013	33 d2		 xor	 edx, edx
  00015	48 8b 4c 24 40	 mov	 rcx, QWORD PTR type$[rsp]
  0001a	48 8b 44 24 40	 mov	 rax, QWORD PTR type$[rsp]
  0001f	ff 90 88 01 00
	00		 call	 QWORD PTR [rax+392]
  00025	48 89 44 24 20	 mov	 QWORD PTR self$[rsp], rax

; 40   :     if (!self)

  0002a	48 83 7c 24 20
	00		 cmp	 QWORD PTR self$[rsp], 0
  00030	75 07		 jne	 SHORT $LN3@BaseExcept

; 41   :         return NULL;

  00032	33 c0		 xor	 eax, eax
  00034	e9 99 00 00 00	 jmp	 $LN4@BaseExcept
$LN3@BaseExcept:

; 42   :     /* the dict is created on the fly in PyObject_GenericSetAttr */
; 43   :     self->dict = NULL;

  00039	48 8b 44 24 20	 mov	 rax, QWORD PTR self$[rsp]
  0003e	48 c7 40 60 00
	00 00 00	 mov	 QWORD PTR [rax+96], 0

; 44   :     self->traceback = self->cause = self->context = NULL;

  00046	48 8b 44 24 20	 mov	 rax, QWORD PTR self$[rsp]
  0004b	48 c7 40 78 00
	00 00 00	 mov	 QWORD PTR [rax+120], 0
  00053	48 8b 44 24 20	 mov	 rax, QWORD PTR self$[rsp]
  00058	48 c7 80 80 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+128], 0
  00063	48 8b 44 24 20	 mov	 rax, QWORD PTR self$[rsp]
  00068	48 c7 40 70 00
	00 00 00	 mov	 QWORD PTR [rax+112], 0

; 45   :     self->suppress_context = 0;

  00070	48 8b 44 24 20	 mov	 rax, QWORD PTR self$[rsp]
  00075	c6 80 88 00 00
	00 00		 mov	 BYTE PTR [rax+136], 0

; 46   : 
; 47   :     if (args) {

  0007c	48 83 7c 24 48
	00		 cmp	 QWORD PTR args$[rsp], 0
  00082	74 1f		 je	 SHORT $LN2@BaseExcept

; 48   :         self->args = args;

  00084	48 8b 44 24 20	 mov	 rax, QWORD PTR self$[rsp]
  00089	48 8b 4c 24 48	 mov	 rcx, QWORD PTR args$[rsp]
  0008e	48 89 48 68	 mov	 QWORD PTR [rax+104], rcx

; 49   :         Py_INCREF(args);

  00092	48 8b 4c 24 48	 mov	 rcx, QWORD PTR args$[rsp]
  00097	e8 00 00 00 00	 call	 _Py_IncRef

; 50   :         return (PyObject *)self;

  0009c	48 8b 44 24 20	 mov	 rax, QWORD PTR self$[rsp]
  000a1	eb 2f		 jmp	 SHORT $LN4@BaseExcept
$LN2@BaseExcept:

; 51   :     }
; 52   : 
; 53   :     self->args = PyTuple_New(0);

  000a3	33 c9		 xor	 ecx, ecx
  000a5	e8 00 00 00 00	 call	 PyTuple_New
  000aa	48 8b 4c 24 20	 mov	 rcx, QWORD PTR self$[rsp]
  000af	48 89 41 68	 mov	 QWORD PTR [rcx+104], rax

; 54   :     if (!self->args) {

  000b3	48 8b 44 24 20	 mov	 rax, QWORD PTR self$[rsp]
  000b8	48 83 78 68 00	 cmp	 QWORD PTR [rax+104], 0
  000bd	75 0e		 jne	 SHORT $LN1@BaseExcept

; 55   :         Py_DECREF(self);

  000bf	48 8b 4c 24 20	 mov	 rcx, QWORD PTR self$[rsp]
  000c4	e8 00 00 00 00	 call	 _Py_DecRef

; 56   :         return NULL;

  000c9	33 c0		 xor	 eax, eax
  000cb	eb 05		 jmp	 SHORT $LN4@BaseExcept
$LN1@BaseExcept:

; 57   :     }
; 58   : 
; 59   :     return (PyObject *)self;

  000cd	48 8b 44 24 20	 mov	 rax, QWORD PTR self$[rsp]
$LN4@BaseExcept:

; 60   : }

  000d2	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000d6	c3		 ret	 0
BaseException_new ENDP
_TEXT	ENDS
PUBLIC	??_C@_0L@DHGMCEID@_Py_IncRef?$AA@		; `string'
PUBLIC	??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@ ; `string'
EXTRN	_Py_RefTotal:QWORD
EXTRN	_PyParallel_Guard:PROC
EXTRN	_Py_PXCTX:PROC
;	COMDAT pdata
; File c:\src\pyparallel\include\object.h
pdata	SEGMENT
$pdata$_Py_IncRef DD imagerel $LN7
	DD	imagerel $LN7+132
	DD	imagerel $unwind$_Py_IncRef
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_Py_IncRef DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT ??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
CONST	SEGMENT
??_C@_0L@DHGMCEID@_Py_IncRef?$AA@ DB '_Py_IncRef', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
CONST	SEGMENT
??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@ DB 'c:\src\pypa'
	DB	'rallel\include\object.h', 00H		; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT _Py_IncRef
_TEXT	SEGMENT
op$ = 64
_Py_IncRef PROC						; COMDAT

; 904  : {

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 905  :     if ((!Py_PXCTX && (Py_ISPY(op) || Px_PERSISTED(op)))) {

  00009	e8 00 00 00 00	 call	 _Py_PXCTX
  0000e	85 c0		 test	 eax, eax
  00010	75 6d		 jne	 SHORT $LN2@Py_IncRef
  00012	c7 44 24 20 02
	00 00 00	 mov	 DWORD PTR [rsp+32], 2
  0001a	4c 8b 4c 24 40	 mov	 r9, QWORD PTR op$[rsp]
  0001f	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00025	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  0002c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DHGMCEID@_Py_IncRef?$AA@
  00033	e8 00 00 00 00	 call	 _PyParallel_Guard
  00038	85 c0		 test	 eax, eax
  0003a	75 12		 jne	 SHORT $LN1@Py_IncRef
  0003c	48 8b 44 24 40	 mov	 rax, QWORD PTR op$[rsp]
  00041	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00045	48 83 e0 20	 and	 rax, 32			; 00000020H
  00049	48 85 c0	 test	 rax, rax
  0004c	74 31		 je	 SHORT $LN2@Py_IncRef
$LN1@Py_IncRef:

; 906  :         _Py_INC_REFTOTAL;

  0004e	e8 00 00 00 00	 call	 _Py_PXCTX
  00053	85 c0		 test	 eax, eax
  00055	74 02		 je	 SHORT $LN5@Py_IncRef
  00057	eb 11		 jmp	 SHORT $LN6@Py_IncRef
$LN5@Py_IncRef:
  00059	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR _Py_RefTotal
  00060	48 ff c0	 inc	 rax
  00063	48 89 05 00 00
	00 00		 mov	 QWORD PTR _Py_RefTotal, rax
$LN6@Py_IncRef:

; 907  :         (((PyObject*)(op))->ob_refcnt++);

  0006a	48 8b 44 24 40	 mov	 rax, QWORD PTR op$[rsp]
  0006f	48 8b 40 50	 mov	 rax, QWORD PTR [rax+80]
  00073	48 ff c0	 inc	 rax
  00076	48 8b 4c 24 40	 mov	 rcx, QWORD PTR op$[rsp]
  0007b	48 89 41 50	 mov	 QWORD PTR [rcx+80], rax
$LN2@Py_IncRef:

; 908  :     }
; 909  : }

  0007f	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00083	c3		 ret	 0
_Py_IncRef ENDP
_TEXT	ENDS
PUBLIC	??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@		; `string'
EXTRN	_Py_Dealloc:PROC
EXTRN	_Py_NegativeRefcount:PROC
EXTRN	Px_DecRef:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$_Py_DecRef DD imagerel $LN13
	DD	imagerel $LN13+257
	DD	imagerel $unwind$_Py_DecRef
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_Py_DecRef DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT ??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
CONST	SEGMENT
??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@ DB '_Py_DecRef', 00H	; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT _Py_DecRef
_TEXT	SEGMENT
tv81 = 48
op$ = 80
_Py_DecRef PROC						; COMDAT

; 923  : {

$LN13:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 924  :     if (!Py_PXCTX) {

  00009	e8 00 00 00 00	 call	 _Py_PXCTX
  0000e	85 c0		 test	 eax, eax
  00010	0f 85 e6 00 00
	00		 jne	 $LN8@Py_DecRef

; 925  :         if (Px_PERSISTED(op) || Px_CLONED(op))

  00016	48 8b 44 24 50	 mov	 rax, QWORD PTR op$[rsp]
  0001b	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0001f	48 83 e0 20	 and	 rax, 32			; 00000020H
  00023	48 85 c0	 test	 rax, rax
  00026	75 14		 jne	 SHORT $LN6@Py_DecRef
  00028	48 8b 44 24 50	 mov	 rax, QWORD PTR op$[rsp]
  0002d	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00031	48 25 80 00 00
	00		 and	 rax, 128		; 00000080H
  00037	48 85 c0	 test	 rax, rax
  0003a	74 0f		 je	 SHORT $LN7@Py_DecRef
$LN6@Py_DecRef:

; 926  :             Px_DECREF(op);

  0003c	48 8b 4c 24 50	 mov	 rcx, QWORD PTR op$[rsp]
  00041	e8 00 00 00 00	 call	 Px_DecRef
  00046	e9 b1 00 00 00	 jmp	 $LN5@Py_DecRef
$LN7@Py_DecRef:

; 927  :         else if (!Px_ISPX(op)) {

  0004b	48 8b 44 24 50	 mov	 rax, QWORD PTR op$[rsp]
  00050	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  00054	48 83 e0 02	 and	 rax, 2
  00058	48 85 c0	 test	 rax, rax
  0005b	0f 85 9b 00 00
	00		 jne	 $LN4@Py_DecRef

; 928  :             _Py_DEC_REFTOTAL;

  00061	e8 00 00 00 00	 call	 _Py_PXCTX
  00066	85 c0		 test	 eax, eax
  00068	74 02		 je	 SHORT $LN11@Py_DecRef
  0006a	eb 11		 jmp	 SHORT $LN12@Py_DecRef
$LN11@Py_DecRef:
  0006c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR _Py_RefTotal
  00073	48 ff c8	 dec	 rax
  00076	48 89 05 00 00
	00 00		 mov	 QWORD PTR _Py_RefTotal, rax
$LN12@Py_DecRef:

; 929  :             if ((--((PyObject *)(op))->ob_refcnt) != 0) {

  0007d	48 8b 44 24 50	 mov	 rax, QWORD PTR op$[rsp]
  00082	48 8b 40 50	 mov	 rax, QWORD PTR [rax+80]
  00086	48 ff c8	 dec	 rax
  00089	48 89 44 24 30	 mov	 QWORD PTR tv81[rsp], rax
  0008e	48 8b 44 24 50	 mov	 rax, QWORD PTR op$[rsp]
  00093	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tv81[rsp]
  00098	48 89 48 50	 mov	 QWORD PTR [rax+80], rcx
  0009c	48 83 7c 24 30
	00		 cmp	 QWORD PTR tv81[rsp], 0
  000a2	74 4e		 je	 SHORT $LN3@Py_DecRef

; 930  :                 _Py_CHECK_REFCNT(op);

  000a4	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  000ac	4c 8b 4c 24 50	 mov	 r9, QWORD PTR op$[rsp]
  000b1	41 b8 a2 03 00
	00		 mov	 r8d, 930		; 000003a2H
  000b7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  000be	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0L@DMHMLFIA@_Py_DecRef?$AA@
  000c5	e8 00 00 00 00	 call	 _PyParallel_Guard
  000ca	85 c0		 test	 eax, eax
  000cc	75 22		 jne	 SHORT $LN2@Py_DecRef
  000ce	48 8b 44 24 50	 mov	 rax, QWORD PTR op$[rsp]
  000d3	48 83 78 50 00	 cmp	 QWORD PTR [rax+80], 0
  000d8	7d 16		 jge	 SHORT $LN2@Py_DecRef
  000da	4c 8b 44 24 50	 mov	 r8, QWORD PTR op$[rsp]
  000df	ba a2 03 00 00	 mov	 edx, 930		; 000003a2H
  000e4	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CD@HDJFDCDP@c?3?2src?2pyparallel?2include?2object@
  000eb	e8 00 00 00 00	 call	 _Py_NegativeRefcount
$LN2@Py_DecRef:

; 931  :             } else

  000f0	eb 0a		 jmp	 SHORT $LN1@Py_DecRef
$LN3@Py_DecRef:

; 932  :                 _Py_Dealloc((PyObject *)(op));

  000f2	48 8b 4c 24 50	 mov	 rcx, QWORD PTR op$[rsp]
  000f7	e8 00 00 00 00	 call	 _Py_Dealloc
$LN1@Py_DecRef:
$LN4@Py_DecRef:
$LN5@Py_DecRef:
$LN8@Py_DecRef:

; 933  :         }
; 934  :     }
; 935  : }

  000fc	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00100	c3		 ret	 0
_Py_DecRef ENDP
_TEXT	ENDS
EXTRN	_PyArg_NoKeywords:PROC
;	COMDAT pdata
; File c:\src\pyparallel\objects\exceptions.c
pdata	SEGMENT
$pdata$BaseException_init DD imagerel BaseException_init
	DD	imagerel BaseException_init+126
	DD	imagerel $unwind$BaseException_init
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_init DD 011301H
	DD	06213H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT BaseException_init
_TEXT	SEGMENT
tmp$ = 32
self$ = 64
args$ = 72
kwds$ = 80
BaseException_init PROC					; COMDAT

; 64   : {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 65   :     PyObject *tmp;
; 66   : 
; 67   :     if (!_PyArg_NoKeywords(Py_TYPE(self)->tp_name, kwds))

  00013	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  00018	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  0001c	48 8b 54 24 50	 mov	 rdx, QWORD PTR kwds$[rsp]
  00021	48 8b 48 70	 mov	 rcx, QWORD PTR [rax+112]
  00025	e8 00 00 00 00	 call	 _PyArg_NoKeywords
  0002a	85 c0		 test	 eax, eax
  0002c	75 07		 jne	 SHORT $LN5@BaseExcept@2

; 68   :         return -1;

  0002e	b8 ff ff ff ff	 mov	 eax, -1
  00033	eb 44		 jmp	 SHORT $LN6@BaseExcept@2
$LN5@BaseExcept@2:

; 69   : 
; 70   :     tmp = self->args;

  00035	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  0003a	48 8b 40 68	 mov	 rax, QWORD PTR [rax+104]
  0003e	48 89 44 24 20	 mov	 QWORD PTR tmp$[rsp], rax

; 71   :     self->args = args;

  00043	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  00048	48 8b 4c 24 48	 mov	 rcx, QWORD PTR args$[rsp]
  0004d	48 89 48 68	 mov	 QWORD PTR [rax+104], rcx

; 72   :     Py_INCREF(self->args);

  00051	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  00056	48 8b 48 68	 mov	 rcx, QWORD PTR [rax+104]
  0005a	e8 00 00 00 00	 call	 _Py_IncRef
$LN4@BaseExcept@2:

; 73   :     Py_XDECREF(tmp);

  0005f	48 83 7c 24 20
	00		 cmp	 QWORD PTR tmp$[rsp], 0
  00065	74 0a		 je	 SHORT $LN1@BaseExcept@2
  00067	48 8b 4c 24 20	 mov	 rcx, QWORD PTR tmp$[rsp]
  0006c	e8 00 00 00 00	 call	 _Py_DecRef
$LN1@BaseExcept@2:
  00071	33 c0		 xor	 eax, eax
  00073	85 c0		 test	 eax, eax
  00075	75 e8		 jne	 SHORT $LN4@BaseExcept@2

; 74   : 
; 75   :     return 0;

  00077	33 c0		 xor	 eax, eax
$LN6@BaseExcept@2:

; 76   : }

  00079	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0007d	c3		 ret	 0
BaseException_init ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BE@DHGGBECL@BaseException_clear?$AA@	; `string'
PUBLIC	??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@ ; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$BaseException_clear DD imagerel BaseException_clear
	DD	imagerel BaseException_clear+533
	DD	imagerel $unwind$BaseException_clear
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_clear DD 010901H
	DD	0c209H
xdata	ENDS
;	COMDAT ??_C@_0BE@DHGGBECL@BaseException_clear?$AA@
CONST	SEGMENT
??_C@_0BE@DHGGBECL@BaseException_clear?$AA@ DB 'BaseException_clear', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
CONST	SEGMENT
??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@ DB '..\Objects\except'
	DB	'ions.c', 00H				; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT BaseException_clear
_TEXT	SEGMENT
_py_tmp$20389 = 48
_py_tmp$20397 = 56
_py_tmp$20405 = 64
_py_tmp$20413 = 72
_py_tmp$20421 = 80
self$ = 112
BaseException_clear PROC				; COMDAT

; 80   : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 68	 sub	 rsp, 104		; 00000068H
$LN20@BaseExcept@3:

; 81   :     Py_CLEAR(self->dict);

  00009	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  0000e	48 83 78 60 00	 cmp	 QWORD PTR [rax+96], 0
  00013	74 53		 je	 SHORT $LN17@BaseExcept@3
  00015	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0001d	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00022	4c 8b 48 60	 mov	 r9, QWORD PTR [rax+96]
  00026	41 b8 51 00 00
	00		 mov	 r8d, 81			; 00000051H
  0002c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BE@DHGGBECL@BaseException_clear?$AA@
  0003a	e8 00 00 00 00	 call	 _PyParallel_Guard
  0003f	85 c0		 test	 eax, eax
  00041	75 25		 jne	 SHORT $LN17@BaseExcept@3
  00043	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00048	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  0004c	48 89 44 24 30	 mov	 QWORD PTR _py_tmp$20389[rsp], rax
  00051	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00056	48 c7 40 60 00
	00 00 00	 mov	 QWORD PTR [rax+96], 0
  0005e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _py_tmp$20389[rsp]
  00063	e8 00 00 00 00	 call	 _Py_DecRef
$LN17@BaseExcept@3:
  00068	33 c0		 xor	 eax, eax
  0006a	85 c0		 test	 eax, eax
  0006c	75 9b		 jne	 SHORT $LN20@BaseExcept@3
$LN16@BaseExcept@3:

; 82   :     Py_CLEAR(self->args);

  0006e	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00073	48 83 78 68 00	 cmp	 QWORD PTR [rax+104], 0
  00078	74 53		 je	 SHORT $LN13@BaseExcept@3
  0007a	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00082	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00087	4c 8b 48 68	 mov	 r9, QWORD PTR [rax+104]
  0008b	41 b8 52 00 00
	00		 mov	 r8d, 82			; 00000052H
  00091	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00098	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BE@DHGGBECL@BaseException_clear?$AA@
  0009f	e8 00 00 00 00	 call	 _PyParallel_Guard
  000a4	85 c0		 test	 eax, eax
  000a6	75 25		 jne	 SHORT $LN13@BaseExcept@3
  000a8	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  000ad	48 8b 40 68	 mov	 rax, QWORD PTR [rax+104]
  000b1	48 89 44 24 38	 mov	 QWORD PTR _py_tmp$20397[rsp], rax
  000b6	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  000bb	48 c7 40 68 00
	00 00 00	 mov	 QWORD PTR [rax+104], 0
  000c3	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _py_tmp$20397[rsp]
  000c8	e8 00 00 00 00	 call	 _Py_DecRef
$LN13@BaseExcept@3:
  000cd	33 c0		 xor	 eax, eax
  000cf	85 c0		 test	 eax, eax
  000d1	75 9b		 jne	 SHORT $LN16@BaseExcept@3
$LN12@BaseExcept@3:

; 83   :     Py_CLEAR(self->traceback);

  000d3	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  000d8	48 83 78 70 00	 cmp	 QWORD PTR [rax+112], 0
  000dd	74 53		 je	 SHORT $LN9@BaseExcept@3
  000df	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  000e7	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  000ec	4c 8b 48 70	 mov	 r9, QWORD PTR [rax+112]
  000f0	41 b8 53 00 00
	00		 mov	 r8d, 83			; 00000053H
  000f6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  000fd	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BE@DHGGBECL@BaseException_clear?$AA@
  00104	e8 00 00 00 00	 call	 _PyParallel_Guard
  00109	85 c0		 test	 eax, eax
  0010b	75 25		 jne	 SHORT $LN9@BaseExcept@3
  0010d	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00112	48 8b 40 70	 mov	 rax, QWORD PTR [rax+112]
  00116	48 89 44 24 40	 mov	 QWORD PTR _py_tmp$20405[rsp], rax
  0011b	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00120	48 c7 40 70 00
	00 00 00	 mov	 QWORD PTR [rax+112], 0
  00128	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _py_tmp$20405[rsp]
  0012d	e8 00 00 00 00	 call	 _Py_DecRef
$LN9@BaseExcept@3:
  00132	33 c0		 xor	 eax, eax
  00134	85 c0		 test	 eax, eax
  00136	75 9b		 jne	 SHORT $LN12@BaseExcept@3
$LN8@BaseExcept@3:

; 84   :     Py_CLEAR(self->cause);

  00138	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  0013d	48 83 b8 80 00
	00 00 00	 cmp	 QWORD PTR [rax+128], 0
  00145	74 5c		 je	 SHORT $LN5@BaseExcept@3
  00147	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0014f	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00154	4c 8b 88 80 00
	00 00		 mov	 r9, QWORD PTR [rax+128]
  0015b	41 b8 54 00 00
	00		 mov	 r8d, 84			; 00000054H
  00161	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00168	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BE@DHGGBECL@BaseException_clear?$AA@
  0016f	e8 00 00 00 00	 call	 _PyParallel_Guard
  00174	85 c0		 test	 eax, eax
  00176	75 2b		 jne	 SHORT $LN5@BaseExcept@3
  00178	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  0017d	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  00184	48 89 44 24 48	 mov	 QWORD PTR _py_tmp$20413[rsp], rax
  00189	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  0018e	48 c7 80 80 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+128], 0
  00199	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _py_tmp$20413[rsp]
  0019e	e8 00 00 00 00	 call	 _Py_DecRef
$LN5@BaseExcept@3:
  001a3	33 c0		 xor	 eax, eax
  001a5	85 c0		 test	 eax, eax
  001a7	75 8f		 jne	 SHORT $LN8@BaseExcept@3
$LN4@BaseExcept@3:

; 85   :     Py_CLEAR(self->context);

  001a9	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  001ae	48 83 78 78 00	 cmp	 QWORD PTR [rax+120], 0
  001b3	74 53		 je	 SHORT $LN1@BaseExcept@3
  001b5	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  001bd	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  001c2	4c 8b 48 78	 mov	 r9, QWORD PTR [rax+120]
  001c6	41 b8 55 00 00
	00		 mov	 r8d, 85			; 00000055H
  001cc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  001d3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BE@DHGGBECL@BaseException_clear?$AA@
  001da	e8 00 00 00 00	 call	 _PyParallel_Guard
  001df	85 c0		 test	 eax, eax
  001e1	75 25		 jne	 SHORT $LN1@BaseExcept@3
  001e3	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  001e8	48 8b 40 78	 mov	 rax, QWORD PTR [rax+120]
  001ec	48 89 44 24 50	 mov	 QWORD PTR _py_tmp$20421[rsp], rax
  001f1	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  001f6	48 c7 40 78 00
	00 00 00	 mov	 QWORD PTR [rax+120], 0
  001fe	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _py_tmp$20421[rsp]
  00203	e8 00 00 00 00	 call	 _Py_DecRef
$LN1@BaseExcept@3:
  00208	33 c0		 xor	 eax, eax
  0020a	85 c0		 test	 eax, eax
  0020c	75 9b		 jne	 SHORT $LN4@BaseExcept@3

; 86   :     return 0;

  0020e	33 c0		 xor	 eax, eax

; 87   : }

  00210	48 83 c4 68	 add	 rsp, 104		; 00000068H
  00214	c3		 ret	 0
BaseException_clear ENDP
_TEXT	ENDS
PUBLIC	??_C@_1EM@HFMJMDDM@?$AAg?$AA?9?$AA?$DO?$AAg?$AAc?$AA?4?$AAg?$AAc?$AA_?$AAr?$AAe?$AAf?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA_?$AAP?$AAy?$AAG?$AAC?$AA_?$AAR?$AAE?$AAF?$AAS?$AA_?$AAU?$AAN?$AAT?$AAR@ ; `string'
PUBLIC	??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@ ; `string'
PUBLIC	??_C@_0BG@CNGLEAMK@BaseException_dealloc?$AA@	; `string'
EXTRN	__imp__wassert:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$BaseException_dealloc DD imagerel BaseException_dealloc
	DD	imagerel BaseException_dealloc+283
	DD	imagerel $unwind$BaseException_dealloc
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_dealloc DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT ??_C@_1EM@HFMJMDDM@?$AAg?$AA?9?$AA?$DO?$AAg?$AAc?$AA?4?$AAg?$AAc?$AA_?$AAr?$AAe?$AAf?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA_?$AAP?$AAy?$AAG?$AAC?$AA_?$AAR?$AAE?$AAF?$AAS?$AA_?$AAU?$AAN?$AAT?$AAR@
CONST	SEGMENT
??_C@_1EM@HFMJMDDM@?$AAg?$AA?9?$AA?$DO?$AAg?$AAc?$AA?4?$AAg?$AAc?$AA_?$AAr?$AAe?$AAf?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA_?$AAP?$AAy?$AAG?$AAC?$AA_?$AAR?$AAE?$AAF?$AAS?$AA_?$AAU?$AAN?$AAT?$AAR@ DB 'g'
	DB	00H, '-', 00H, '>', 00H, 'g', 00H, 'c', 00H, '.', 00H, 'g', 00H
	DB	'c', 00H, '_', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 's', 00H, ' '
	DB	00H, '!', 00H, '=', 00H, ' ', 00H, '_', 00H, 'P', 00H, 'y', 00H
	DB	'G', 00H, 'C', 00H, '_', 00H, 'R', 00H, 'E', 00H, 'F', 00H, 'S'
	DB	00H, '_', 00H, 'U', 00H, 'N', 00H, 'T', 00H, 'R', 00H, 'A', 00H
	DB	'C', 00H, 'K', 00H, 'E', 00H, 'D', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
CONST	SEGMENT
??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@ DB '.'
	DB	00H, '.', 00H, '\', 00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 's', 00H, '\', 00H, 'e', 00H, 'x', 00H, 'c'
	DB	00H, 'e', 00H, 'p', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H
	DB	's', 00H, '.', 00H, 'c', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@CNGLEAMK@BaseException_dealloc?$AA@
CONST	SEGMENT
??_C@_0BG@CNGLEAMK@BaseException_dealloc?$AA@ DB 'BaseException_dealloc', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT BaseException_dealloc
_TEXT	SEGMENT
g$20434 = 48
tv79 = 56
self$ = 80
BaseException_dealloc PROC				; COMDAT

; 91   : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 92   :     _PyObject_GC_UNTRACK(self);

  00009	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00011	4c 8b 4c 24 50	 mov	 r9, QWORD PTR self$[rsp]
  00016	41 b8 5c 00 00
	00		 mov	 r8d, 92			; 0000005cH
  0001c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BG@CNGLEAMK@BaseException_dealloc?$AA@
  0002a	e8 00 00 00 00	 call	 _PyParallel_Guard
  0002f	85 c0		 test	 eax, eax
  00031	0f 85 c1 00 00
	00		 jne	 $LN4@BaseExcept@4
$LN3@BaseExcept@4:
  00037	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0003f	4c 8b 4c 24 50	 mov	 r9, QWORD PTR self$[rsp]
  00044	41 b8 5c 00 00
	00		 mov	 r8d, 92			; 0000005cH
  0004a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00051	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BG@CNGLEAMK@BaseException_dealloc?$AA@
  00058	e8 00 00 00 00	 call	 _PyParallel_Guard
  0005d	85 c0		 test	 eax, eax
  0005f	74 0b		 je	 SHORT $LN7@BaseExcept@4
  00061	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR tv79[rsp], 0
  0006a	eb 0e		 jmp	 SHORT $LN8@BaseExcept@4
$LN7@BaseExcept@4:
  0006c	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00071	48 83 e8 18	 sub	 rax, 24
  00075	48 89 44 24 38	 mov	 QWORD PTR tv79[rsp], rax
$LN8@BaseExcept@4:
  0007a	48 8b 44 24 38	 mov	 rax, QWORD PTR tv79[rsp]
  0007f	48 89 44 24 30	 mov	 QWORD PTR g$20434[rsp], rax
  00084	48 8b 44 24 30	 mov	 rax, QWORD PTR g$20434[rsp]
  00089	48 83 78 10 fe	 cmp	 QWORD PTR [rax+16], -2
  0008e	75 1c		 jne	 SHORT $LN9@BaseExcept@4
  00090	41 b8 5c 00 00
	00		 mov	 r8d, 92			; 0000005cH
  00096	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  0009d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EM@HFMJMDDM@?$AAg?$AA?9?$AA?$DO?$AAg?$AAc?$AA?4?$AAg?$AAc?$AA_?$AAr?$AAe?$AAf?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA_?$AAP?$AAy?$AAG?$AAC?$AA_?$AAR?$AAE?$AAF?$AAS?$AA_?$AAU?$AAN?$AAT?$AAR@
  000a4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  000aa	33 c0		 xor	 eax, eax
$LN9@BaseExcept@4:
  000ac	48 8b 44 24 30	 mov	 rax, QWORD PTR g$20434[rsp]
  000b1	48 c7 40 10 fe
	ff ff ff	 mov	 QWORD PTR [rax+16], -2
  000b9	48 8b 44 24 30	 mov	 rax, QWORD PTR g$20434[rsp]
  000be	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000c2	48 8b 4c 24 30	 mov	 rcx, QWORD PTR g$20434[rsp]
  000c7	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000ca	48 89 08	 mov	 QWORD PTR [rax], rcx
  000cd	48 8b 44 24 30	 mov	 rax, QWORD PTR g$20434[rsp]
  000d2	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000d5	48 8b 4c 24 30	 mov	 rcx, QWORD PTR g$20434[rsp]
  000da	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  000de	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  000e2	48 8b 44 24 30	 mov	 rax, QWORD PTR g$20434[rsp]
  000e7	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  000ee	33 c0		 xor	 eax, eax
  000f0	85 c0		 test	 eax, eax
  000f2	0f 85 3f ff ff
	ff		 jne	 $LN3@BaseExcept@4
$LN4@BaseExcept@4:

; 93   :     BaseException_clear(self);

  000f8	48 8b 4c 24 50	 mov	 rcx, QWORD PTR self$[rsp]
  000fd	e8 00 00 00 00	 call	 BaseException_clear

; 94   :     Py_TYPE(self)->tp_free((PyObject *)self);

  00102	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00107	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  0010b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR self$[rsp]
  00110	ff 90 98 01 00
	00		 call	 QWORD PTR [rax+408]

; 95   : }

  00116	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0011a	c3		 ret	 0
BaseException_dealloc ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BH@KIKAMKPB@BaseException_traverse?$AA@	; `string'
EXTRN	_PyParallel_ContextGuardFailure:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$BaseException_traverse DD imagerel BaseException_traverse
	DD	imagerel BaseException_traverse+491
	DD	imagerel $unwind$BaseException_traverse
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_traverse DD 011301H
	DD	08213H
xdata	ENDS
;	COMDAT ??_C@_0BH@KIKAMKPB@BaseException_traverse?$AA@
CONST	SEGMENT
??_C@_0BH@KIKAMKPB@BaseException_traverse?$AA@ DB 'BaseException_traverse'
	DB	00H						; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT BaseException_traverse
_TEXT	SEGMENT
vret$20457 = 32
vret$20465 = 36
vret$20473 = 40
vret$20481 = 44
vret$20489 = 48
self$ = 80
visit$ = 88
arg$ = 96
BaseException_traverse PROC				; COMDAT

; 99   : {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 48	 sub	 rsp, 72			; 00000048H
$LN30@BaseExcept@5:

; 100  :     Py_VISIT(self->dict);

  00013	e8 00 00 00 00	 call	 _Py_PXCTX
  00018	85 c0		 test	 eax, eax
  0001a	74 1c		 je	 SHORT $LN27@BaseExcept@5
  0001c	45 33 c9	 xor	 r9d, r9d
  0001f	41 b8 64 00 00
	00		 mov	 r8d, 100		; 00000064H
  00025	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0002c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BH@KIKAMKPB@BaseException_traverse?$AA@
  00033	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN27@BaseExcept@5:
  00038	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  0003d	48 83 78 60 00	 cmp	 QWORD PTR [rax+96], 0
  00042	74 26		 je	 SHORT $LN26@BaseExcept@5
  00044	48 8b 54 24 60	 mov	 rdx, QWORD PTR arg$[rsp]
  00049	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  0004e	48 8b 48 60	 mov	 rcx, QWORD PTR [rax+96]
  00052	ff 54 24 58	 call	 QWORD PTR visit$[rsp]
  00056	89 44 24 20	 mov	 DWORD PTR vret$20457[rsp], eax
  0005a	83 7c 24 20 00	 cmp	 DWORD PTR vret$20457[rsp], 0
  0005f	74 09		 je	 SHORT $LN25@BaseExcept@5
  00061	8b 44 24 20	 mov	 eax, DWORD PTR vret$20457[rsp]
  00065	e9 7c 01 00 00	 jmp	 $LN31@BaseExcept@5
$LN25@BaseExcept@5:
$LN26@BaseExcept@5:
  0006a	33 c0		 xor	 eax, eax
  0006c	85 c0		 test	 eax, eax
  0006e	75 a3		 jne	 SHORT $LN30@BaseExcept@5
$LN24@BaseExcept@5:

; 101  :     Py_VISIT(self->args);

  00070	e8 00 00 00 00	 call	 _Py_PXCTX
  00075	85 c0		 test	 eax, eax
  00077	74 1c		 je	 SHORT $LN21@BaseExcept@5
  00079	45 33 c9	 xor	 r9d, r9d
  0007c	41 b8 65 00 00
	00		 mov	 r8d, 101		; 00000065H
  00082	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00089	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BH@KIKAMKPB@BaseException_traverse?$AA@
  00090	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN21@BaseExcept@5:
  00095	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  0009a	48 83 78 68 00	 cmp	 QWORD PTR [rax+104], 0
  0009f	74 26		 je	 SHORT $LN20@BaseExcept@5
  000a1	48 8b 54 24 60	 mov	 rdx, QWORD PTR arg$[rsp]
  000a6	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  000ab	48 8b 48 68	 mov	 rcx, QWORD PTR [rax+104]
  000af	ff 54 24 58	 call	 QWORD PTR visit$[rsp]
  000b3	89 44 24 24	 mov	 DWORD PTR vret$20465[rsp], eax
  000b7	83 7c 24 24 00	 cmp	 DWORD PTR vret$20465[rsp], 0
  000bc	74 09		 je	 SHORT $LN19@BaseExcept@5
  000be	8b 44 24 24	 mov	 eax, DWORD PTR vret$20465[rsp]
  000c2	e9 1f 01 00 00	 jmp	 $LN31@BaseExcept@5
$LN19@BaseExcept@5:
$LN20@BaseExcept@5:
  000c7	33 c0		 xor	 eax, eax
  000c9	85 c0		 test	 eax, eax
  000cb	75 a3		 jne	 SHORT $LN24@BaseExcept@5
$LN18@BaseExcept@5:

; 102  :     Py_VISIT(self->traceback);

  000cd	e8 00 00 00 00	 call	 _Py_PXCTX
  000d2	85 c0		 test	 eax, eax
  000d4	74 1c		 je	 SHORT $LN15@BaseExcept@5
  000d6	45 33 c9	 xor	 r9d, r9d
  000d9	41 b8 66 00 00
	00		 mov	 r8d, 102		; 00000066H
  000df	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  000e6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BH@KIKAMKPB@BaseException_traverse?$AA@
  000ed	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN15@BaseExcept@5:
  000f2	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  000f7	48 83 78 70 00	 cmp	 QWORD PTR [rax+112], 0
  000fc	74 26		 je	 SHORT $LN14@BaseExcept@5
  000fe	48 8b 54 24 60	 mov	 rdx, QWORD PTR arg$[rsp]
  00103	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00108	48 8b 48 70	 mov	 rcx, QWORD PTR [rax+112]
  0010c	ff 54 24 58	 call	 QWORD PTR visit$[rsp]
  00110	89 44 24 28	 mov	 DWORD PTR vret$20473[rsp], eax
  00114	83 7c 24 28 00	 cmp	 DWORD PTR vret$20473[rsp], 0
  00119	74 09		 je	 SHORT $LN13@BaseExcept@5
  0011b	8b 44 24 28	 mov	 eax, DWORD PTR vret$20473[rsp]
  0011f	e9 c2 00 00 00	 jmp	 $LN31@BaseExcept@5
$LN13@BaseExcept@5:
$LN14@BaseExcept@5:
  00124	33 c0		 xor	 eax, eax
  00126	85 c0		 test	 eax, eax
  00128	75 a3		 jne	 SHORT $LN18@BaseExcept@5
$LN12@BaseExcept@5:

; 103  :     Py_VISIT(self->cause);

  0012a	e8 00 00 00 00	 call	 _Py_PXCTX
  0012f	85 c0		 test	 eax, eax
  00131	74 1c		 je	 SHORT $LN9@BaseExcept@5
  00133	45 33 c9	 xor	 r9d, r9d
  00136	41 b8 67 00 00
	00		 mov	 r8d, 103		; 00000067H
  0013c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00143	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BH@KIKAMKPB@BaseException_traverse?$AA@
  0014a	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN9@BaseExcept@5:
  0014f	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00154	48 83 b8 80 00
	00 00 00	 cmp	 QWORD PTR [rax+128], 0
  0015c	74 26		 je	 SHORT $LN8@BaseExcept@5
  0015e	48 8b 54 24 60	 mov	 rdx, QWORD PTR arg$[rsp]
  00163	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00168	48 8b 88 80 00
	00 00		 mov	 rcx, QWORD PTR [rax+128]
  0016f	ff 54 24 58	 call	 QWORD PTR visit$[rsp]
  00173	89 44 24 2c	 mov	 DWORD PTR vret$20481[rsp], eax
  00177	83 7c 24 2c 00	 cmp	 DWORD PTR vret$20481[rsp], 0
  0017c	74 06		 je	 SHORT $LN7@BaseExcept@5
  0017e	8b 44 24 2c	 mov	 eax, DWORD PTR vret$20481[rsp]
  00182	eb 62		 jmp	 SHORT $LN31@BaseExcept@5
$LN7@BaseExcept@5:
$LN8@BaseExcept@5:
  00184	33 c0		 xor	 eax, eax
  00186	85 c0		 test	 eax, eax
  00188	75 a0		 jne	 SHORT $LN12@BaseExcept@5
$LN6@BaseExcept@5:

; 104  :     Py_VISIT(self->context);

  0018a	e8 00 00 00 00	 call	 _Py_PXCTX
  0018f	85 c0		 test	 eax, eax
  00191	74 1c		 je	 SHORT $LN3@BaseExcept@5
  00193	45 33 c9	 xor	 r9d, r9d
  00196	41 b8 68 00 00
	00		 mov	 r8d, 104		; 00000068H
  0019c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  001a3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BH@KIKAMKPB@BaseException_traverse?$AA@
  001aa	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN3@BaseExcept@5:
  001af	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  001b4	48 83 78 78 00	 cmp	 QWORD PTR [rax+120], 0
  001b9	74 23		 je	 SHORT $LN2@BaseExcept@5
  001bb	48 8b 54 24 60	 mov	 rdx, QWORD PTR arg$[rsp]
  001c0	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  001c5	48 8b 48 78	 mov	 rcx, QWORD PTR [rax+120]
  001c9	ff 54 24 58	 call	 QWORD PTR visit$[rsp]
  001cd	89 44 24 30	 mov	 DWORD PTR vret$20489[rsp], eax
  001d1	83 7c 24 30 00	 cmp	 DWORD PTR vret$20489[rsp], 0
  001d6	74 06		 je	 SHORT $LN1@BaseExcept@5
  001d8	8b 44 24 30	 mov	 eax, DWORD PTR vret$20489[rsp]
  001dc	eb 08		 jmp	 SHORT $LN31@BaseExcept@5
$LN1@BaseExcept@5:
$LN2@BaseExcept@5:
  001de	33 c0		 xor	 eax, eax
  001e0	85 c0		 test	 eax, eax
  001e2	75 a6		 jne	 SHORT $LN6@BaseExcept@5

; 105  :     return 0;

  001e4	33 c0		 xor	 eax, eax
$LN31@BaseExcept@5:

; 106  : }

  001e6	48 83 c4 48	 add	 rsp, 72			; 00000048H
  001ea	c3		 ret	 0
BaseException_traverse ENDP
_TEXT	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
EXTRN	PyObject_Str:PROC
EXTRN	PyUnicode_FromString:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$BaseException_str DD imagerel BaseException_str
	DD	imagerel BaseException_str+98
	DD	imagerel $unwind$BaseException_str
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_str DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT BaseException_str
_TEXT	SEGMENT
tv66 = 32
self$ = 64
BaseException_str PROC					; COMDAT

; 110  : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 111  :     switch (PyTuple_GET_SIZE(self->args)) {

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  0000e	48 8b 40 68	 mov	 rax, QWORD PTR [rax+104]
  00012	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  00016	48 89 44 24 20	 mov	 QWORD PTR tv66[rsp], rax
  0001b	48 83 7c 24 20
	00		 cmp	 QWORD PTR tv66[rsp], 0
  00021	74 0a		 je	 SHORT $LN3@BaseExcept@6
  00023	48 83 7c 24 20
	01		 cmp	 QWORD PTR tv66[rsp], 1
  00029	74 10		 je	 SHORT $LN2@BaseExcept@6
  0002b	eb 22		 jmp	 SHORT $LN1@BaseExcept@6
$LN3@BaseExcept@6:

; 112  :     case 0:
; 113  :         return PyUnicode_FromString("");

  0002d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_00CNPNBAHC@?$AA@
  00034	e8 00 00 00 00	 call	 PyUnicode_FromString
  00039	eb 22		 jmp	 SHORT $LN6@BaseExcept@6
$LN2@BaseExcept@6:

; 114  :     case 1:
; 115  :         return PyObject_Str(PyTuple_GET_ITEM(self->args, 0));

  0003b	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  00040	48 8b 40 68	 mov	 rax, QWORD PTR [rax+104]
  00044	48 8b 48 70	 mov	 rcx, QWORD PTR [rax+112]
  00048	e8 00 00 00 00	 call	 PyObject_Str
  0004d	eb 0e		 jmp	 SHORT $LN6@BaseExcept@6
$LN1@BaseExcept@6:

; 116  :     default:
; 117  :         return PyObject_Str(self->args);

  0004f	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  00054	48 8b 48 68	 mov	 rcx, QWORD PTR [rax+104]
  00058	e8 00 00 00 00	 call	 PyObject_Str
$LN6@BaseExcept@6:

; 118  :     }
; 119  : }

  0005d	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00061	c3		 ret	 0
BaseException_str ENDP
_TEXT	ENDS
PUBLIC	??_C@_04PPHNBMDJ@?$CFs?$CFR?$AA@		; `string'
EXTRN	PyUnicode_FromFormat:PROC
EXTRN	__imp_strrchr:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$BaseException_repr DD imagerel BaseException_repr
	DD	imagerel BaseException_repr+100
	DD	imagerel $unwind$BaseException_repr
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_repr DD 010901H
	DD	06209H
xdata	ENDS
;	COMDAT ??_C@_04PPHNBMDJ@?$CFs?$CFR?$AA@
CONST	SEGMENT
??_C@_04PPHNBMDJ@?$CFs?$CFR?$AA@ DB '%s%R', 00H		; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT BaseException_repr
_TEXT	SEGMENT
dot$ = 32
name$ = 40
self$ = 64
BaseException_repr PROC					; COMDAT

; 123  : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 124  :     char *name;
; 125  :     char *dot;
; 126  : 
; 127  :     name = (char *)Py_TYPE(self)->tp_name;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  0000e	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00012	48 8b 40 70	 mov	 rax, QWORD PTR [rax+112]
  00016	48 89 44 24 28	 mov	 QWORD PTR name$[rsp], rax

; 128  :     dot = strrchr(name, '.');

  0001b	ba 2e 00 00 00	 mov	 edx, 46			; 0000002eH
  00020	48 8b 4c 24 28	 mov	 rcx, QWORD PTR name$[rsp]
  00025	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_strrchr
  0002b	48 89 44 24 20	 mov	 QWORD PTR dot$[rsp], rax

; 129  :     if (dot != NULL) name = dot+1;

  00030	48 83 7c 24 20
	00		 cmp	 QWORD PTR dot$[rsp], 0
  00036	74 0d		 je	 SHORT $LN1@BaseExcept@7
  00038	48 8b 44 24 20	 mov	 rax, QWORD PTR dot$[rsp]
  0003d	48 ff c0	 inc	 rax
  00040	48 89 44 24 28	 mov	 QWORD PTR name$[rsp], rax
$LN1@BaseExcept@7:

; 130  : 
; 131  :     return PyUnicode_FromFormat("%s%R", name, self->args);

  00045	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  0004a	4c 8b 40 68	 mov	 r8, QWORD PTR [rax+104]
  0004e	48 8b 54 24 28	 mov	 rdx, QWORD PTR name$[rsp]
  00053	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_04PPHNBMDJ@?$CFs?$CFR?$AA@
  0005a	e8 00 00 00 00	 call	 PyUnicode_FromFormat

; 132  : }

  0005f	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00063	c3		 ret	 0
BaseException_repr ENDP
_TEXT	ENDS
EXTRN	PyTuple_Pack:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$BaseException_reduce DD imagerel BaseException_reduce
	DD	imagerel BaseException_reduce+107
	DD	imagerel $unwind$BaseException_reduce
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_reduce DD 010901H
	DD	04209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT BaseException_reduce
_TEXT	SEGMENT
self$ = 48
BaseException_reduce PROC				; COMDAT

; 137  : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 138  :     if (self->args && self->dict)

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR self$[rsp]
  0000e	48 83 78 68 00	 cmp	 QWORD PTR [rax+104], 0
  00013	74 35		 je	 SHORT $LN2@BaseExcept@8
  00015	48 8b 44 24 30	 mov	 rax, QWORD PTR self$[rsp]
  0001a	48 83 78 60 00	 cmp	 QWORD PTR [rax+96], 0
  0001f	74 29		 je	 SHORT $LN2@BaseExcept@8

; 139  :         return PyTuple_Pack(3, Py_TYPE(self), self->args, self->dict);

  00021	48 8b 44 24 30	 mov	 rax, QWORD PTR self$[rsp]
  00026	4c 8b 48 60	 mov	 r9, QWORD PTR [rax+96]
  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR self$[rsp]
  0002f	4c 8b 40 68	 mov	 r8, QWORD PTR [rax+104]
  00033	48 8b 44 24 30	 mov	 rax, QWORD PTR self$[rsp]
  00038	48 8b 50 58	 mov	 rdx, QWORD PTR [rax+88]
  0003c	b9 03 00 00 00	 mov	 ecx, 3
  00041	e8 00 00 00 00	 call	 PyTuple_Pack
  00046	eb 1e		 jmp	 SHORT $LN3@BaseExcept@8

; 140  :     else

  00048	eb 1c		 jmp	 SHORT $LN1@BaseExcept@8
$LN2@BaseExcept@8:

; 141  :         return PyTuple_Pack(2, Py_TYPE(self), self->args);

  0004a	48 8b 44 24 30	 mov	 rax, QWORD PTR self$[rsp]
  0004f	4c 8b 40 68	 mov	 r8, QWORD PTR [rax+104]
  00053	48 8b 44 24 30	 mov	 rax, QWORD PTR self$[rsp]
  00058	48 8b 50 58	 mov	 rdx, QWORD PTR [rax+88]
  0005c	b9 02 00 00 00	 mov	 ecx, 2
  00061	e8 00 00 00 00	 call	 PyTuple_Pack
$LN1@BaseExcept@8:
$LN3@BaseExcept@8:

; 142  : }

  00066	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006a	c3		 ret	 0
BaseException_reduce ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BK@BPIFALMC@state?5is?5not?5a?5dictionary?$AA@ ; `string'
EXTRN	PyObject_SetAttr:PROC
EXTRN	PyDict_Next:PROC
EXTRN	PyErr_SetString:PROC
EXTRN	_Py_NoneStruct:BYTE
;	COMDAT pdata
pdata	SEGMENT
$pdata$BaseException_setstate DD imagerel BaseException_setstate
	DD	imagerel BaseException_setstate+167
	DD	imagerel $unwind$BaseException_setstate
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_setstate DD 010e01H
	DD	0820eH
xdata	ENDS
;	COMDAT ??_C@_0BK@BPIFALMC@state?5is?5not?5a?5dictionary?$AA@
CONST	SEGMENT
??_C@_0BK@BPIFALMC@state?5is?5not?5a?5dictionary?$AA@ DB 'state is not a '
	DB	'dictionary', 00H				; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT BaseException_setstate
_TEXT	SEGMENT
i$ = 32
d_key$ = 40
d_value$ = 48
self$ = 80
state$ = 88
BaseException_setstate PROC				; COMDAT

; 151  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 152  :     PyObject *d_key, *d_value;
; 153  :     Py_ssize_t i = 0;

  0000e	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR i$[rsp], 0

; 154  : 
; 155  :     if (state != Py_None) {

  00017	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_NoneStruct
  0001e	48 39 44 24 58	 cmp	 QWORD PTR state$[rsp], rax
  00023	74 6a		 je	 SHORT $LN5@BaseExcept@9

; 156  :         if (!PyDict_Check(state)) {

  00025	48 8b 44 24 58	 mov	 rax, QWORD PTR state$[rsp]
  0002a	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  0002e	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  00034	25 00 00 00 20	 and	 eax, 536870912		; 20000000H
  00039	85 c0		 test	 eax, eax
  0003b	75 17		 jne	 SHORT $LN4@BaseExcept@9

; 157  :             PyErr_SetString(PyExc_TypeError, "state is not a dictionary");

  0003d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BK@BPIFALMC@state?5is?5not?5a?5dictionary?$AA@
  00044	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  0004b	e8 00 00 00 00	 call	 PyErr_SetString

; 158  :             return NULL;

  00050	33 c0		 xor	 eax, eax
  00052	eb 4e		 jmp	 SHORT $LN6@BaseExcept@9
$LN4@BaseExcept@9:
$LN3@BaseExcept@9:

; 159  :         }
; 160  :         while (PyDict_Next(state, &i, &d_key, &d_value)) {

  00054	4c 8d 4c 24 30	 lea	 r9, QWORD PTR d_value$[rsp]
  00059	4c 8d 44 24 28	 lea	 r8, QWORD PTR d_key$[rsp]
  0005e	48 8d 54 24 20	 lea	 rdx, QWORD PTR i$[rsp]
  00063	48 8b 4c 24 58	 mov	 rcx, QWORD PTR state$[rsp]
  00068	e8 00 00 00 00	 call	 PyDict_Next
  0006d	85 c0		 test	 eax, eax
  0006f	74 1e		 je	 SHORT $LN2@BaseExcept@9

; 161  :             if (PyObject_SetAttr(self, d_key, d_value) < 0)

  00071	4c 8b 44 24 30	 mov	 r8, QWORD PTR d_value$[rsp]
  00076	48 8b 54 24 28	 mov	 rdx, QWORD PTR d_key$[rsp]
  0007b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR self$[rsp]
  00080	e8 00 00 00 00	 call	 PyObject_SetAttr
  00085	85 c0		 test	 eax, eax
  00087	7d 04		 jge	 SHORT $LN1@BaseExcept@9

; 162  :                 return NULL;

  00089	33 c0		 xor	 eax, eax
  0008b	eb 15		 jmp	 SHORT $LN6@BaseExcept@9
$LN1@BaseExcept@9:

; 163  :         }

  0008d	eb c5		 jmp	 SHORT $LN3@BaseExcept@9
$LN2@BaseExcept@9:
$LN5@BaseExcept@9:

; 164  :     }
; 165  :     Py_RETURN_NONE;

  0008f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_Py_NoneStruct
  00096	e8 00 00 00 00	 call	 _Py_IncRef
  0009b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_NoneStruct
$LN6@BaseExcept@9:

; 166  : }

  000a2	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000a6	c3		 ret	 0
BaseException_setstate ENDP
_TEXT	ENDS
PUBLIC	PyException_SetTraceback
;	COMDAT pdata
pdata	SEGMENT
$pdata$BaseException_with_traceback DD imagerel BaseException_with_traceback
	DD	imagerel BaseException_with_traceback+57
	DD	imagerel $unwind$BaseException_with_traceback
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_with_traceback DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT BaseException_with_traceback
_TEXT	SEGMENT
self$ = 48
tb$ = 56
BaseException_with_traceback PROC			; COMDAT

; 169  : BaseException_with_traceback(PyObject *self, PyObject *tb) {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 170  :     if (PyException_SetTraceback(self, tb))

  0000e	48 8b 54 24 38	 mov	 rdx, QWORD PTR tb$[rsp]
  00013	48 8b 4c 24 30	 mov	 rcx, QWORD PTR self$[rsp]
  00018	e8 00 00 00 00	 call	 PyException_SetTraceback
  0001d	85 c0		 test	 eax, eax
  0001f	74 04		 je	 SHORT $LN1@BaseExcept@10

; 171  :         return NULL;

  00021	33 c0		 xor	 eax, eax
  00023	eb 0f		 jmp	 SHORT $LN2@BaseExcept@10
$LN1@BaseExcept@10:

; 172  : 
; 173  :     Py_INCREF(self);

  00025	48 8b 4c 24 30	 mov	 rcx, QWORD PTR self$[rsp]
  0002a	e8 00 00 00 00	 call	 _Py_IncRef

; 174  :     return self;

  0002f	48 8b 44 24 30	 mov	 rax, QWORD PTR self$[rsp]
$LN2@BaseExcept@10:

; 175  : }

  00034	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00038	c3		 ret	 0
BaseException_with_traceback ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$BaseException_get_args DD imagerel BaseException_get_args
	DD	imagerel BaseException_get_args+70
	DD	imagerel $unwind$BaseException_get_args
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_get_args DD 010901H
	DD	04209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT BaseException_get_args
_TEXT	SEGMENT
self$ = 48
BaseException_get_args PROC				; COMDAT

; 192  : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 193  :     if (self->args == NULL) {

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR self$[rsp]
  0000e	48 83 78 68 00	 cmp	 QWORD PTR [rax+104], 0
  00013	75 15		 jne	 SHORT $LN1@BaseExcept@11

; 194  :         Py_INCREF(Py_None);

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_Py_NoneStruct
  0001c	e8 00 00 00 00	 call	 _Py_IncRef

; 195  :         return Py_None;

  00021	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_NoneStruct
  00028	eb 17		 jmp	 SHORT $LN2@BaseExcept@11
$LN1@BaseExcept@11:

; 196  :     }
; 197  :     Py_INCREF(self->args);

  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR self$[rsp]
  0002f	48 8b 48 68	 mov	 rcx, QWORD PTR [rax+104]
  00033	e8 00 00 00 00	 call	 _Py_IncRef

; 198  :     return self->args;

  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR self$[rsp]
  0003d	48 8b 40 68	 mov	 rax, QWORD PTR [rax+104]
$LN2@BaseExcept@11:

; 199  : }

  00041	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00045	c3		 ret	 0
BaseException_get_args ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BH@FNMNGACG@BaseException_set_args?$AA@	; `string'
PUBLIC	??_C@_0BI@GEBKNFED@args?5may?5not?5be?5deleted?$AA@ ; `string'
EXTRN	PySequence_Tuple:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$BaseException_set_args DD imagerel BaseException_set_args
	DD	imagerel BaseException_set_args+203
	DD	imagerel $unwind$BaseException_set_args
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_set_args DD 010e01H
	DD	0820eH
xdata	ENDS
;	COMDAT ??_C@_0BH@FNMNGACG@BaseException_set_args?$AA@
CONST	SEGMENT
??_C@_0BH@FNMNGACG@BaseException_set_args?$AA@ DB 'BaseException_set_args'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@GEBKNFED@args?5may?5not?5be?5deleted?$AA@
CONST	SEGMENT
??_C@_0BI@GEBKNFED@args?5may?5not?5be?5deleted?$AA@ DB 'args may not be d'
	DB	'eleted', 00H				; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT BaseException_set_args
_TEXT	SEGMENT
seq$ = 48
_py_tmp$20589 = 56
self$ = 80
val$ = 88
BaseException_set_args PROC				; COMDAT

; 203  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 204  :     PyObject *seq;
; 205  :     if (val == NULL) {

  0000e	48 83 7c 24 58
	00		 cmp	 QWORD PTR val$[rsp], 0
  00014	75 1d		 jne	 SHORT $LN6@BaseExcept@12

; 206  :         PyErr_SetString(PyExc_TypeError, "args may not be deleted");

  00016	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@GEBKNFED@args?5may?5not?5be?5deleted?$AA@
  0001d	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  00024	e8 00 00 00 00	 call	 PyErr_SetString

; 207  :         return -1;

  00029	b8 ff ff ff ff	 mov	 eax, -1
  0002e	e9 93 00 00 00	 jmp	 $LN7@BaseExcept@12
$LN6@BaseExcept@12:

; 208  :     }
; 209  :     seq = PySequence_Tuple(val);

  00033	48 8b 4c 24 58	 mov	 rcx, QWORD PTR val$[rsp]
  00038	e8 00 00 00 00	 call	 PySequence_Tuple
  0003d	48 89 44 24 30	 mov	 QWORD PTR seq$[rsp], rax

; 210  :     if (!seq)

  00042	48 83 7c 24 30
	00		 cmp	 QWORD PTR seq$[rsp], 0
  00048	75 07		 jne	 SHORT $LN5@BaseExcept@12

; 211  :         return -1;

  0004a	b8 ff ff ff ff	 mov	 eax, -1
  0004f	eb 75		 jmp	 SHORT $LN7@BaseExcept@12
$LN5@BaseExcept@12:
$LN4@BaseExcept@12:

; 212  :     Py_CLEAR(self->args);

  00051	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00056	48 83 78 68 00	 cmp	 QWORD PTR [rax+104], 0
  0005b	74 53		 je	 SHORT $LN1@BaseExcept@12
  0005d	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00065	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  0006a	4c 8b 48 68	 mov	 r9, QWORD PTR [rax+104]
  0006e	41 b8 d4 00 00
	00		 mov	 r8d, 212		; 000000d4H
  00074	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0007b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BH@FNMNGACG@BaseException_set_args?$AA@
  00082	e8 00 00 00 00	 call	 _PyParallel_Guard
  00087	85 c0		 test	 eax, eax
  00089	75 25		 jne	 SHORT $LN1@BaseExcept@12
  0008b	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00090	48 8b 40 68	 mov	 rax, QWORD PTR [rax+104]
  00094	48 89 44 24 38	 mov	 QWORD PTR _py_tmp$20589[rsp], rax
  00099	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  0009e	48 c7 40 68 00
	00 00 00	 mov	 QWORD PTR [rax+104], 0
  000a6	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _py_tmp$20589[rsp]
  000ab	e8 00 00 00 00	 call	 _Py_DecRef
$LN1@BaseExcept@12:
  000b0	33 c0		 xor	 eax, eax
  000b2	85 c0		 test	 eax, eax
  000b4	75 9b		 jne	 SHORT $LN4@BaseExcept@12

; 213  :     self->args = seq;

  000b6	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  000bb	48 8b 4c 24 30	 mov	 rcx, QWORD PTR seq$[rsp]
  000c0	48 89 48 68	 mov	 QWORD PTR [rax+104], rcx

; 214  :     return 0;

  000c4	33 c0		 xor	 eax, eax
$LN7@BaseExcept@12:

; 215  : }

  000c6	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000ca	c3		 ret	 0
BaseException_set_args ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$BaseException_get_tb DD imagerel BaseException_get_tb
	DD	imagerel BaseException_get_tb+70
	DD	imagerel $unwind$BaseException_get_tb
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_get_tb DD 010901H
	DD	04209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT BaseException_get_tb
_TEXT	SEGMENT
self$ = 48
BaseException_get_tb PROC				; COMDAT

; 219  : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 220  :     if (self->traceback == NULL) {

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR self$[rsp]
  0000e	48 83 78 70 00	 cmp	 QWORD PTR [rax+112], 0
  00013	75 15		 jne	 SHORT $LN1@BaseExcept@13

; 221  :         Py_INCREF(Py_None);

  00015	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_Py_NoneStruct
  0001c	e8 00 00 00 00	 call	 _Py_IncRef

; 222  :         return Py_None;

  00021	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_NoneStruct
  00028	eb 17		 jmp	 SHORT $LN2@BaseExcept@13
$LN1@BaseExcept@13:

; 223  :     }
; 224  :     Py_INCREF(self->traceback);

  0002a	48 8b 44 24 30	 mov	 rax, QWORD PTR self$[rsp]
  0002f	48 8b 48 70	 mov	 rcx, QWORD PTR [rax+112]
  00033	e8 00 00 00 00	 call	 _Py_IncRef

; 225  :     return self->traceback;

  00038	48 8b 44 24 30	 mov	 rax, QWORD PTR self$[rsp]
  0003d	48 8b 40 70	 mov	 rax, QWORD PTR [rax+112]
$LN2@BaseExcept@13:

; 226  : }

  00041	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00045	c3		 ret	 0
BaseException_get_tb ENDP
_TEXT	ENDS
PUBLIC	??_C@_0CK@DDGILAGJ@__traceback__?5must?5be?5a?5tracebac@ ; `string'
PUBLIC	??_C@_0CB@EGAPKDAG@__traceback__?5may?5not?5be?5deleted@ ; `string'
EXTRN	PyTraceBack_Type:BYTE
;	COMDAT pdata
pdata	SEGMENT
$pdata$BaseException_set_tb DD imagerel BaseException_set_tb
	DD	imagerel BaseException_set_tb+188
	DD	imagerel $unwind$BaseException_set_tb
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_set_tb DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT ??_C@_0CK@DDGILAGJ@__traceback__?5must?5be?5a?5tracebac@
CONST	SEGMENT
??_C@_0CK@DDGILAGJ@__traceback__?5must?5be?5a?5tracebac@ DB '__traceback_'
	DB	'_ must be a traceback or None', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@EGAPKDAG@__traceback__?5may?5not?5be?5deleted@
CONST	SEGMENT
??_C@_0CB@EGAPKDAG@__traceback__?5may?5not?5be?5deleted@ DB '__traceback_'
	DB	'_ may not be deleted', 00H			; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT BaseException_set_tb
_TEXT	SEGMENT
self$ = 48
tb$ = 56
BaseException_set_tb PROC				; COMDAT

; 230  : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 231  :     if (tb == NULL) {

  0000e	48 83 7c 24 38
	00		 cmp	 QWORD PTR tb$[rsp], 0
  00014	75 1f		 jne	 SHORT $LN11@BaseExcept@14

; 232  :         PyErr_SetString(PyExc_TypeError, "__traceback__ may not be deleted");

  00016	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CB@EGAPKDAG@__traceback__?5may?5not?5be?5deleted@
  0001d	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  00024	e8 00 00 00 00	 call	 PyErr_SetString

; 233  :         return -1;

  00029	b8 ff ff ff ff	 mov	 eax, -1
  0002e	e9 84 00 00 00	 jmp	 $LN12@BaseExcept@14
  00033	eb 3a		 jmp	 SHORT $LN10@BaseExcept@14
$LN11@BaseExcept@14:

; 234  :     }
; 235  :     else if (!(tb == Py_None || PyTraceBack_Check(tb))) {

  00035	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_NoneStruct
  0003c	48 39 44 24 38	 cmp	 QWORD PTR tb$[rsp], rax
  00041	74 2c		 je	 SHORT $LN9@BaseExcept@14
  00043	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:PyTraceBack_Type
  0004a	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tb$[rsp]
  0004f	48 39 41 58	 cmp	 QWORD PTR [rcx+88], rax
  00053	74 1a		 je	 SHORT $LN9@BaseExcept@14

; 236  :         PyErr_SetString(PyExc_TypeError,
; 237  :                         "__traceback__ must be a traceback or None");

  00055	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CK@DDGILAGJ@__traceback__?5must?5be?5a?5tracebac@
  0005c	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  00063	e8 00 00 00 00	 call	 PyErr_SetString

; 238  :         return -1;

  00068	b8 ff ff ff ff	 mov	 eax, -1
  0006d	eb 48		 jmp	 SHORT $LN12@BaseExcept@14
$LN9@BaseExcept@14:
$LN10@BaseExcept@14:
$LN8@BaseExcept@14:

; 239  :     }
; 240  : 
; 241  :     Py_XINCREF(tb);

  0006f	48 83 7c 24 38
	00		 cmp	 QWORD PTR tb$[rsp], 0
  00075	74 0a		 je	 SHORT $LN5@BaseExcept@14
  00077	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tb$[rsp]
  0007c	e8 00 00 00 00	 call	 _Py_IncRef
$LN5@BaseExcept@14:
  00081	33 c0		 xor	 eax, eax
  00083	85 c0		 test	 eax, eax
  00085	75 e8		 jne	 SHORT $LN8@BaseExcept@14
$LN4@BaseExcept@14:

; 242  :     Py_XDECREF(self->traceback);

  00087	48 8b 44 24 30	 mov	 rax, QWORD PTR self$[rsp]
  0008c	48 83 78 70 00	 cmp	 QWORD PTR [rax+112], 0
  00091	74 0e		 je	 SHORT $LN1@BaseExcept@14
  00093	48 8b 44 24 30	 mov	 rax, QWORD PTR self$[rsp]
  00098	48 8b 48 70	 mov	 rcx, QWORD PTR [rax+112]
  0009c	e8 00 00 00 00	 call	 _Py_DecRef
$LN1@BaseExcept@14:
  000a1	33 c0		 xor	 eax, eax
  000a3	85 c0		 test	 eax, eax
  000a5	75 e0		 jne	 SHORT $LN4@BaseExcept@14

; 243  :     self->traceback = tb;

  000a7	48 8b 44 24 30	 mov	 rax, QWORD PTR self$[rsp]
  000ac	48 8b 4c 24 38	 mov	 rcx, QWORD PTR tb$[rsp]
  000b1	48 89 48 70	 mov	 QWORD PTR [rax+112], rcx

; 244  :     return 0;

  000b5	33 c0		 xor	 eax, eax
$LN12@BaseExcept@14:

; 245  : }

  000b7	48 83 c4 28	 add	 rsp, 40			; 00000028H
  000bb	c3		 ret	 0
BaseException_set_tb ENDP
_TEXT	ENDS
PUBLIC	PyException_GetContext
;	COMDAT pdata
pdata	SEGMENT
$pdata$BaseException_get_context DD imagerel BaseException_get_context
	DD	imagerel BaseException_get_context+63
	DD	imagerel $unwind$BaseException_get_context
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_get_context DD 010901H
	DD	06209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT BaseException_get_context
_TEXT	SEGMENT
res$ = 32
self$ = 64
BaseException_get_context PROC				; COMDAT

; 248  : BaseException_get_context(PyObject *self) {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 249  :     PyObject *res = PyException_GetContext(self);

  00009	48 8b 4c 24 40	 mov	 rcx, QWORD PTR self$[rsp]
  0000e	e8 00 00 00 00	 call	 PyException_GetContext
  00013	48 89 44 24 20	 mov	 QWORD PTR res$[rsp], rax

; 250  :     if (res)

  00018	48 83 7c 24 20
	00		 cmp	 QWORD PTR res$[rsp], 0
  0001e	74 07		 je	 SHORT $LN1@BaseExcept@15

; 251  :         return res;  /* new reference already returned above */

  00020	48 8b 44 24 20	 mov	 rax, QWORD PTR res$[rsp]
  00025	eb 13		 jmp	 SHORT $LN2@BaseExcept@15
$LN1@BaseExcept@15:

; 252  :     Py_RETURN_NONE;

  00027	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_Py_NoneStruct
  0002e	e8 00 00 00 00	 call	 _Py_IncRef
  00033	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_NoneStruct
$LN2@BaseExcept@15:

; 253  : }

  0003a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003e	c3		 ret	 0
BaseException_get_context ENDP
_TEXT	ENDS
PUBLIC	PyException_SetContext
PUBLIC	??_C@_0DM@EKFEABFK@exception?5context?5must?5be?5None?5o@ ; `string'
PUBLIC	??_C@_0BP@KFHGPADI@__context__?5may?5not?5be?5deleted?$AA@ ; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$BaseException_set_context DD imagerel BaseException_set_context
	DD	imagerel BaseException_set_context+159
	DD	imagerel $unwind$BaseException_set_context
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_set_context DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT ??_C@_0DM@EKFEABFK@exception?5context?5must?5be?5None?5o@
CONST	SEGMENT
??_C@_0DM@EKFEABFK@exception?5context?5must?5be?5None?5o@ DB 'exception c'
	DB	'ontext must be None or derive from BaseException', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@KFHGPADI@__context__?5may?5not?5be?5deleted?$AA@
CONST	SEGMENT
??_C@_0BP@KFHGPADI@__context__?5may?5not?5be?5deleted?$AA@ DB '__context_'
	DB	'_ may not be deleted', 00H			; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT BaseException_set_context
_TEXT	SEGMENT
self$ = 48
arg$ = 56
BaseException_set_context PROC				; COMDAT

; 256  : BaseException_set_context(PyObject *self, PyObject *arg) {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 257  :     if (arg == NULL) {

  0000e	48 83 7c 24 38
	00		 cmp	 QWORD PTR arg$[rsp], 0
  00014	75 1c		 jne	 SHORT $LN6@BaseExcept@16

; 258  :         PyErr_SetString(PyExc_TypeError, "__context__ may not be deleted");

  00016	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BP@KFHGPADI@__context__?5may?5not?5be?5deleted?$AA@
  0001d	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  00024	e8 00 00 00 00	 call	 PyErr_SetString

; 259  :         return -1;

  00029	b8 ff ff ff ff	 mov	 eax, -1
  0002e	eb 6a		 jmp	 SHORT $LN7@BaseExcept@16
  00030	eb 57		 jmp	 SHORT $LN5@BaseExcept@16
$LN6@BaseExcept@16:

; 260  :     } else if (arg == Py_None) {

  00032	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_NoneStruct
  00039	48 39 44 24 38	 cmp	 QWORD PTR arg$[rsp], rax
  0003e	75 0b		 jne	 SHORT $LN4@BaseExcept@16

; 261  :         arg = NULL;

  00040	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR arg$[rsp], 0
  00049	eb 3e		 jmp	 SHORT $LN3@BaseExcept@16
$LN4@BaseExcept@16:

; 262  :     } else if (!PyExceptionInstance_Check(arg)) {

  0004b	48 8b 44 24 38	 mov	 rax, QWORD PTR arg$[rsp]
  00050	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00054	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  0005a	25 00 00 00 40	 and	 eax, 1073741824		; 40000000H
  0005f	85 c0		 test	 eax, eax
  00061	75 1c		 jne	 SHORT $LN2@BaseExcept@16

; 263  :         PyErr_SetString(PyExc_TypeError, "exception context must be None "
; 264  :                         "or derive from BaseException");

  00063	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0DM@EKFEABFK@exception?5context?5must?5be?5None?5o@
  0006a	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  00071	e8 00 00 00 00	 call	 PyErr_SetString

; 265  :         return -1;

  00076	b8 ff ff ff ff	 mov	 eax, -1
  0007b	eb 1d		 jmp	 SHORT $LN7@BaseExcept@16

; 266  :     } else {

  0007d	eb 0a		 jmp	 SHORT $LN1@BaseExcept@16
$LN2@BaseExcept@16:

; 267  :         /* PyException_SetContext steals this reference */
; 268  :         Py_INCREF(arg);

  0007f	48 8b 4c 24 38	 mov	 rcx, QWORD PTR arg$[rsp]
  00084	e8 00 00 00 00	 call	 _Py_IncRef
$LN1@BaseExcept@16:
$LN3@BaseExcept@16:
$LN5@BaseExcept@16:

; 269  :     }
; 270  :     PyException_SetContext(self, arg);

  00089	48 8b 54 24 38	 mov	 rdx, QWORD PTR arg$[rsp]
  0008e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR self$[rsp]
  00093	e8 00 00 00 00	 call	 PyException_SetContext

; 271  :     return 0;

  00098	33 c0		 xor	 eax, eax
$LN7@BaseExcept@16:

; 272  : }

  0009a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0009e	c3		 ret	 0
BaseException_set_context ENDP
_TEXT	ENDS
PUBLIC	PyException_GetCause
;	COMDAT pdata
pdata	SEGMENT
$pdata$BaseException_get_cause DD imagerel BaseException_get_cause
	DD	imagerel BaseException_get_cause+63
	DD	imagerel $unwind$BaseException_get_cause
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_get_cause DD 010901H
	DD	06209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT BaseException_get_cause
_TEXT	SEGMENT
res$ = 32
self$ = 64
BaseException_get_cause PROC				; COMDAT

; 275  : BaseException_get_cause(PyObject *self) {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 276  :     PyObject *res = PyException_GetCause(self);

  00009	48 8b 4c 24 40	 mov	 rcx, QWORD PTR self$[rsp]
  0000e	e8 00 00 00 00	 call	 PyException_GetCause
  00013	48 89 44 24 20	 mov	 QWORD PTR res$[rsp], rax

; 277  :     if (res)

  00018	48 83 7c 24 20
	00		 cmp	 QWORD PTR res$[rsp], 0
  0001e	74 07		 je	 SHORT $LN1@BaseExcept@17

; 278  :         return res;  /* new reference already returned above */

  00020	48 8b 44 24 20	 mov	 rax, QWORD PTR res$[rsp]
  00025	eb 13		 jmp	 SHORT $LN2@BaseExcept@17
$LN1@BaseExcept@17:

; 279  :     Py_RETURN_NONE;

  00027	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_Py_NoneStruct
  0002e	e8 00 00 00 00	 call	 _Py_IncRef
  00033	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_NoneStruct
$LN2@BaseExcept@17:

; 280  : }

  0003a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003e	c3		 ret	 0
BaseException_get_cause ENDP
_TEXT	ENDS
PUBLIC	PyException_SetCause
PUBLIC	??_C@_0DK@EFOGLGHG@exception?5cause?5must?5be?5None?5or?5@ ; `string'
PUBLIC	??_C@_0BN@PKFHNKCD@__cause__?5may?5not?5be?5deleted?$AA@ ; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$BaseException_set_cause DD imagerel BaseException_set_cause
	DD	imagerel BaseException_set_cause+159
	DD	imagerel $unwind$BaseException_set_cause
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$BaseException_set_cause DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT ??_C@_0DK@EFOGLGHG@exception?5cause?5must?5be?5None?5or?5@
CONST	SEGMENT
??_C@_0DK@EFOGLGHG@exception?5cause?5must?5be?5None?5or?5@ DB 'exception '
	DB	'cause must be None or derive from BaseException', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BN@PKFHNKCD@__cause__?5may?5not?5be?5deleted?$AA@
CONST	SEGMENT
??_C@_0BN@PKFHNKCD@__cause__?5may?5not?5be?5deleted?$AA@ DB '__cause__ ma'
	DB	'y not be deleted', 00H			; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT BaseException_set_cause
_TEXT	SEGMENT
self$ = 48
arg$ = 56
BaseException_set_cause PROC				; COMDAT

; 283  : BaseException_set_cause(PyObject *self, PyObject *arg) {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 284  :     if (arg == NULL) {

  0000e	48 83 7c 24 38
	00		 cmp	 QWORD PTR arg$[rsp], 0
  00014	75 1c		 jne	 SHORT $LN6@BaseExcept@18

; 285  :         PyErr_SetString(PyExc_TypeError, "__cause__ may not be deleted");

  00016	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BN@PKFHNKCD@__cause__?5may?5not?5be?5deleted?$AA@
  0001d	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  00024	e8 00 00 00 00	 call	 PyErr_SetString

; 286  :         return -1;

  00029	b8 ff ff ff ff	 mov	 eax, -1
  0002e	eb 6a		 jmp	 SHORT $LN7@BaseExcept@18
  00030	eb 57		 jmp	 SHORT $LN5@BaseExcept@18
$LN6@BaseExcept@18:

; 287  :     } else if (arg == Py_None) {

  00032	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_NoneStruct
  00039	48 39 44 24 38	 cmp	 QWORD PTR arg$[rsp], rax
  0003e	75 0b		 jne	 SHORT $LN4@BaseExcept@18

; 288  :         arg = NULL;

  00040	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR arg$[rsp], 0
  00049	eb 3e		 jmp	 SHORT $LN3@BaseExcept@18
$LN4@BaseExcept@18:

; 289  :     } else if (!PyExceptionInstance_Check(arg)) {

  0004b	48 8b 44 24 38	 mov	 rax, QWORD PTR arg$[rsp]
  00050	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00054	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  0005a	25 00 00 00 40	 and	 eax, 1073741824		; 40000000H
  0005f	85 c0		 test	 eax, eax
  00061	75 1c		 jne	 SHORT $LN2@BaseExcept@18

; 290  :         PyErr_SetString(PyExc_TypeError, "exception cause must be None "
; 291  :                         "or derive from BaseException");

  00063	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0DK@EFOGLGHG@exception?5cause?5must?5be?5None?5or?5@
  0006a	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  00071	e8 00 00 00 00	 call	 PyErr_SetString

; 292  :         return -1;

  00076	b8 ff ff ff ff	 mov	 eax, -1
  0007b	eb 1d		 jmp	 SHORT $LN7@BaseExcept@18

; 293  :     } else {

  0007d	eb 0a		 jmp	 SHORT $LN1@BaseExcept@18
$LN2@BaseExcept@18:

; 294  :         /* PyException_SetCause steals this reference */
; 295  :         Py_INCREF(arg);

  0007f	48 8b 4c 24 38	 mov	 rcx, QWORD PTR arg$[rsp]
  00084	e8 00 00 00 00	 call	 _Py_IncRef
$LN1@BaseExcept@18:
$LN3@BaseExcept@18:
$LN5@BaseExcept@18:

; 296  :     }
; 297  :     PyException_SetCause(self, arg);

  00089	48 8b 54 24 38	 mov	 rdx, QWORD PTR arg$[rsp]
  0008e	48 8b 4c 24 30	 mov	 rcx, QWORD PTR self$[rsp]
  00093	e8 00 00 00 00	 call	 PyException_SetCause

; 298  :     return 0;

  00098	33 c0		 xor	 eax, eax
$LN7@BaseExcept@18:

; 299  : }

  0009a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0009e	c3		 ret	 0
BaseException_set_cause ENDP
_TEXT	ENDS
PUBLIC	PyException_GetTraceback
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyException_GetTraceback DD imagerel $LN7
	DD	imagerel $LN7+65
	DD	imagerel $unwind$PyException_GetTraceback
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyException_GetTraceback DD 010901H
	DD	06209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT PyException_GetTraceback
_TEXT	SEGMENT
base_self$ = 32
self$ = 64
PyException_GetTraceback PROC				; COMDAT

; 315  : PyException_GetTraceback(PyObject *self) {

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 316  :     PyBaseExceptionObject *base_self = (PyBaseExceptionObject *)self;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  0000e	48 89 44 24 20	 mov	 QWORD PTR base_self$[rsp], rax
$LN4@PyExceptio:

; 317  :     Py_XINCREF(base_self->traceback);

  00013	48 8b 44 24 20	 mov	 rax, QWORD PTR base_self$[rsp]
  00018	48 83 78 70 00	 cmp	 QWORD PTR [rax+112], 0
  0001d	74 0e		 je	 SHORT $LN1@PyExceptio
  0001f	48 8b 44 24 20	 mov	 rax, QWORD PTR base_self$[rsp]
  00024	48 8b 48 70	 mov	 rcx, QWORD PTR [rax+112]
  00028	e8 00 00 00 00	 call	 _Py_IncRef
$LN1@PyExceptio:
  0002d	33 c0		 xor	 eax, eax
  0002f	85 c0		 test	 eax, eax
  00031	75 e0		 jne	 SHORT $LN4@PyExceptio

; 318  :     return base_self->traceback;

  00033	48 8b 44 24 20	 mov	 rax, QWORD PTR base_self$[rsp]
  00038	48 8b 40 70	 mov	 rax, QWORD PTR [rax+112]

; 319  : }

  0003c	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00040	c3		 ret	 0
PyException_GetTraceback ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyException_SetTraceback DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$PyException_SetTraceback
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyException_SetTraceback DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT PyException_SetTraceback
_TEXT	SEGMENT
self$ = 48
tb$ = 56
PyException_SetTraceback PROC				; COMDAT

; 323  : PyException_SetTraceback(PyObject *self, PyObject *tb) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 324  :     return BaseException_set_tb((PyBaseExceptionObject *)self, tb);

  0000e	48 8b 54 24 38	 mov	 rdx, QWORD PTR tb$[rsp]
  00013	48 8b 4c 24 30	 mov	 rcx, QWORD PTR self$[rsp]
  00018	e8 00 00 00 00	 call	 BaseException_set_tb

; 325  : }

  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	c3		 ret	 0
PyException_SetTraceback ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyException_GetCause DD imagerel $LN7
	DD	imagerel $LN7+60
	DD	imagerel $unwind$PyException_GetCause
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyException_GetCause DD 010901H
	DD	06209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT PyException_GetCause
_TEXT	SEGMENT
cause$ = 32
self$ = 64
PyException_GetCause PROC				; COMDAT

; 328  : PyException_GetCause(PyObject *self) {

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 329  :     PyObject *cause = ((PyBaseExceptionObject *)self)->cause;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  0000e	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  00015	48 89 44 24 20	 mov	 QWORD PTR cause$[rsp], rax
$LN4@PyExceptio@2:

; 330  :     Py_XINCREF(cause);

  0001a	48 83 7c 24 20
	00		 cmp	 QWORD PTR cause$[rsp], 0
  00020	74 0a		 je	 SHORT $LN1@PyExceptio@2
  00022	48 8b 4c 24 20	 mov	 rcx, QWORD PTR cause$[rsp]
  00027	e8 00 00 00 00	 call	 _Py_IncRef
$LN1@PyExceptio@2:
  0002c	33 c0		 xor	 eax, eax
  0002e	85 c0		 test	 eax, eax
  00030	75 e8		 jne	 SHORT $LN4@PyExceptio@2

; 331  :     return cause;

  00032	48 8b 44 24 20	 mov	 rax, QWORD PTR cause$[rsp]

; 332  : }

  00037	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0003b	c3		 ret	 0
PyException_GetCause ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyException_SetCause DD imagerel $LN7
	DD	imagerel $LN7+89
	DD	imagerel $unwind$PyException_SetCause
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyException_SetCause DD 010e01H
	DD	0620eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT PyException_SetCause
_TEXT	SEGMENT
old_cause$ = 32
self$ = 64
cause$ = 72
PyException_SetCause PROC				; COMDAT

; 336  : PyException_SetCause(PyObject *self, PyObject *cause) {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 337  :     PyObject *old_cause = ((PyBaseExceptionObject *)self)->cause;

  0000e	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  00013	48 8b 80 80 00
	00 00		 mov	 rax, QWORD PTR [rax+128]
  0001a	48 89 44 24 20	 mov	 QWORD PTR old_cause$[rsp], rax

; 338  :     ((PyBaseExceptionObject *)self)->cause = cause;

  0001f	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  00024	48 8b 4c 24 48	 mov	 rcx, QWORD PTR cause$[rsp]
  00029	48 89 88 80 00
	00 00		 mov	 QWORD PTR [rax+128], rcx

; 339  :     ((PyBaseExceptionObject *)self)->suppress_context = 1;

  00030	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  00035	c6 80 88 00 00
	00 01		 mov	 BYTE PTR [rax+136], 1
$LN4@PyExceptio@3:

; 340  :     Py_XDECREF(old_cause);

  0003c	48 83 7c 24 20
	00		 cmp	 QWORD PTR old_cause$[rsp], 0
  00042	74 0a		 je	 SHORT $LN1@PyExceptio@3
  00044	48 8b 4c 24 20	 mov	 rcx, QWORD PTR old_cause$[rsp]
  00049	e8 00 00 00 00	 call	 _Py_DecRef
$LN1@PyExceptio@3:
  0004e	33 c0		 xor	 eax, eax
  00050	85 c0		 test	 eax, eax
  00052	75 e8		 jne	 SHORT $LN4@PyExceptio@3

; 341  : }

  00054	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00058	c3		 ret	 0
PyException_SetCause ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyException_GetContext DD imagerel $LN7
	DD	imagerel $LN7+57
	DD	imagerel $unwind$PyException_GetContext
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyException_GetContext DD 010901H
	DD	06209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT PyException_GetContext
_TEXT	SEGMENT
context$ = 32
self$ = 64
PyException_GetContext PROC				; COMDAT

; 344  : PyException_GetContext(PyObject *self) {

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 345  :     PyObject *context = ((PyBaseExceptionObject *)self)->context;

  00009	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  0000e	48 8b 40 78	 mov	 rax, QWORD PTR [rax+120]
  00012	48 89 44 24 20	 mov	 QWORD PTR context$[rsp], rax
$LN4@PyExceptio@4:

; 346  :     Py_XINCREF(context);

  00017	48 83 7c 24 20
	00		 cmp	 QWORD PTR context$[rsp], 0
  0001d	74 0a		 je	 SHORT $LN1@PyExceptio@4
  0001f	48 8b 4c 24 20	 mov	 rcx, QWORD PTR context$[rsp]
  00024	e8 00 00 00 00	 call	 _Py_IncRef
$LN1@PyExceptio@4:
  00029	33 c0		 xor	 eax, eax
  0002b	85 c0		 test	 eax, eax
  0002d	75 e8		 jne	 SHORT $LN4@PyExceptio@4

; 347  :     return context;

  0002f	48 8b 44 24 20	 mov	 rax, QWORD PTR context$[rsp]

; 348  : }

  00034	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00038	c3		 ret	 0
PyException_GetContext ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyException_SetContext DD imagerel $LN7
	DD	imagerel $LN7+71
	DD	imagerel $unwind$PyException_SetContext
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyException_SetContext DD 010e01H
	DD	0620eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT PyException_SetContext
_TEXT	SEGMENT
old_context$ = 32
self$ = 64
context$ = 72
PyException_SetContext PROC				; COMDAT

; 352  : PyException_SetContext(PyObject *self, PyObject *context) {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 353  :     PyObject *old_context = ((PyBaseExceptionObject *)self)->context;

  0000e	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  00013	48 8b 40 78	 mov	 rax, QWORD PTR [rax+120]
  00017	48 89 44 24 20	 mov	 QWORD PTR old_context$[rsp], rax

; 354  :     ((PyBaseExceptionObject *)self)->context = context;

  0001c	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  00021	48 8b 4c 24 48	 mov	 rcx, QWORD PTR context$[rsp]
  00026	48 89 48 78	 mov	 QWORD PTR [rax+120], rcx
$LN4@PyExceptio@5:

; 355  :     Py_XDECREF(old_context);

  0002a	48 83 7c 24 20
	00		 cmp	 QWORD PTR old_context$[rsp], 0
  00030	74 0a		 je	 SHORT $LN1@PyExceptio@5
  00032	48 8b 4c 24 20	 mov	 rcx, QWORD PTR old_context$[rsp]
  00037	e8 00 00 00 00	 call	 _Py_DecRef
$LN1@PyExceptio@5:
  0003c	33 c0		 xor	 eax, eax
  0003e	85 c0		 test	 eax, eax
  00040	75 e8		 jne	 SHORT $LN4@PyExceptio@5

; 356  : }

  00042	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00046	c3		 ret	 0
PyException_SetContext ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BD@BGOBGIME@StopIteration_init?$AA@	; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$StopIteration_init DD imagerel StopIteration_init
	DD	imagerel StopIteration_init+251
	DD	imagerel $unwind$StopIteration_init
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$StopIteration_init DD 011301H
	DD	0a213H
xdata	ENDS
;	COMDAT ??_C@_0BD@BGOBGIME@StopIteration_init?$AA@
CONST	SEGMENT
??_C@_0BD@BGOBGIME@StopIteration_init?$AA@ DB 'StopIteration_init', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT StopIteration_init
_TEXT	SEGMENT
value$ = 48
size$ = 56
_py_tmp$20863 = 64
self$ = 96
args$ = 104
kwds$ = 112
StopIteration_init PROC					; COMDAT

; 490  : {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 58	 sub	 rsp, 88			; 00000058H

; 491  :     Py_ssize_t size = PyTuple_GET_SIZE(args);

  00013	48 8b 44 24 68	 mov	 rax, QWORD PTR args$[rsp]
  00018	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  0001c	48 89 44 24 38	 mov	 QWORD PTR size$[rsp], rax

; 492  :     PyObject *value;
; 493  : 
; 494  :     if (BaseException_init((PyBaseExceptionObject *)self, args, kwds) == -1)

  00021	4c 8b 44 24 70	 mov	 r8, QWORD PTR kwds$[rsp]
  00026	48 8b 54 24 68	 mov	 rdx, QWORD PTR args$[rsp]
  0002b	48 8b 4c 24 60	 mov	 rcx, QWORD PTR self$[rsp]
  00030	e8 00 00 00 00	 call	 BaseException_init
  00035	83 f8 ff	 cmp	 eax, -1
  00038	75 0a		 jne	 SHORT $LN7@StopIterat

; 495  :         return -1;

  0003a	b8 ff ff ff ff	 mov	 eax, -1
  0003f	e9 b2 00 00 00	 jmp	 $LN8@StopIterat
$LN7@StopIterat:
$LN6@StopIterat:

; 496  :     Py_CLEAR(self->value);

  00044	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  00049	48 83 b8 90 00
	00 00 00	 cmp	 QWORD PTR [rax+144], 0
  00051	74 5c		 je	 SHORT $LN3@StopIterat
  00053	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0005b	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  00060	4c 8b 88 90 00
	00 00		 mov	 r9, QWORD PTR [rax+144]
  00067	41 b8 f0 01 00
	00		 mov	 r8d, 496		; 000001f0H
  0006d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00074	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@BGOBGIME@StopIteration_init?$AA@
  0007b	e8 00 00 00 00	 call	 _PyParallel_Guard
  00080	85 c0		 test	 eax, eax
  00082	75 2b		 jne	 SHORT $LN3@StopIterat
  00084	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  00089	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]
  00090	48 89 44 24 40	 mov	 QWORD PTR _py_tmp$20863[rsp], rax
  00095	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  0009a	48 c7 80 90 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+144], 0
  000a5	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _py_tmp$20863[rsp]
  000aa	e8 00 00 00 00	 call	 _Py_DecRef
$LN3@StopIterat:
  000af	33 c0		 xor	 eax, eax
  000b1	85 c0		 test	 eax, eax
  000b3	75 8f		 jne	 SHORT $LN6@StopIterat

; 497  :     if (size > 0)

  000b5	48 83 7c 24 38
	00		 cmp	 QWORD PTR size$[rsp], 0
  000bb	7e 10		 jle	 SHORT $LN2@StopIterat

; 498  :         value = PyTuple_GET_ITEM(args, 0);

  000bd	48 8b 44 24 68	 mov	 rax, QWORD PTR args$[rsp]
  000c2	48 8b 40 70	 mov	 rax, QWORD PTR [rax+112]
  000c6	48 89 44 24 30	 mov	 QWORD PTR value$[rsp], rax

; 499  :     else

  000cb	eb 0c		 jmp	 SHORT $LN1@StopIterat
$LN2@StopIterat:

; 500  :         value = Py_None;

  000cd	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_NoneStruct
  000d4	48 89 44 24 30	 mov	 QWORD PTR value$[rsp], rax
$LN1@StopIterat:

; 501  :     Py_INCREF(value);

  000d9	48 8b 4c 24 30	 mov	 rcx, QWORD PTR value$[rsp]
  000de	e8 00 00 00 00	 call	 _Py_IncRef

; 502  :     self->value = value;

  000e3	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  000e8	48 8b 4c 24 30	 mov	 rcx, QWORD PTR value$[rsp]
  000ed	48 89 88 90 00
	00 00		 mov	 QWORD PTR [rax+144], rcx

; 503  :     return 0;

  000f4	33 c0		 xor	 eax, eax
$LN8@StopIterat:

; 504  : }

  000f6	48 83 c4 58	 add	 rsp, 88			; 00000058H
  000fa	c3		 ret	 0
StopIteration_init ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BE@KHGFCJA@StopIteration_clear?$AA@	; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$StopIteration_clear DD imagerel StopIteration_clear
	DD	imagerel StopIteration_clear+137
	DD	imagerel $unwind$StopIteration_clear
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$StopIteration_clear DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT ??_C@_0BE@KHGFCJA@StopIteration_clear?$AA@
CONST	SEGMENT
??_C@_0BE@KHGFCJA@StopIteration_clear?$AA@ DB 'StopIteration_clear', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT StopIteration_clear
_TEXT	SEGMENT
_py_tmp$20880 = 48
self$ = 80
StopIteration_clear PROC				; COMDAT

; 508  : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
$LN4@StopIterat@2:

; 509  :     Py_CLEAR(self->value);

  00009	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  0000e	48 83 b8 90 00
	00 00 00	 cmp	 QWORD PTR [rax+144], 0
  00016	74 5c		 je	 SHORT $LN1@StopIterat@2
  00018	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00020	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00025	4c 8b 88 90 00
	00 00		 mov	 r9, QWORD PTR [rax+144]
  0002c	41 b8 fd 01 00
	00		 mov	 r8d, 509		; 000001fdH
  00032	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BE@KHGFCJA@StopIteration_clear?$AA@
  00040	e8 00 00 00 00	 call	 _PyParallel_Guard
  00045	85 c0		 test	 eax, eax
  00047	75 2b		 jne	 SHORT $LN1@StopIterat@2
  00049	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  0004e	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]
  00055	48 89 44 24 30	 mov	 QWORD PTR _py_tmp$20880[rsp], rax
  0005a	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  0005f	48 c7 80 90 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+144], 0
  0006a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _py_tmp$20880[rsp]
  0006f	e8 00 00 00 00	 call	 _Py_DecRef
$LN1@StopIterat@2:
  00074	33 c0		 xor	 eax, eax
  00076	85 c0		 test	 eax, eax
  00078	75 8f		 jne	 SHORT $LN4@StopIterat@2

; 510  :     return BaseException_clear((PyBaseExceptionObject *)self);

  0007a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR self$[rsp]
  0007f	e8 00 00 00 00	 call	 BaseException_clear

; 511  : }

  00084	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00088	c3		 ret	 0
StopIteration_clear ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BG@LFOFOOAM@StopIteration_dealloc?$AA@	; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$StopIteration_dealloc DD imagerel StopIteration_dealloc
	DD	imagerel StopIteration_dealloc+283
	DD	imagerel $unwind$StopIteration_dealloc
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$StopIteration_dealloc DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT ??_C@_0BG@LFOFOOAM@StopIteration_dealloc?$AA@
CONST	SEGMENT
??_C@_0BG@LFOFOOAM@StopIteration_dealloc?$AA@ DB 'StopIteration_dealloc', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT StopIteration_dealloc
_TEXT	SEGMENT
g$20894 = 48
tv79 = 56
self$ = 80
StopIteration_dealloc PROC				; COMDAT

; 515  : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 516  :     _PyObject_GC_UNTRACK(self);

  00009	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00011	4c 8b 4c 24 50	 mov	 r9, QWORD PTR self$[rsp]
  00016	41 b8 04 02 00
	00		 mov	 r8d, 516		; 00000204H
  0001c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BG@LFOFOOAM@StopIteration_dealloc?$AA@
  0002a	e8 00 00 00 00	 call	 _PyParallel_Guard
  0002f	85 c0		 test	 eax, eax
  00031	0f 85 c1 00 00
	00		 jne	 $LN4@StopIterat@3
$LN3@StopIterat@3:
  00037	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0003f	4c 8b 4c 24 50	 mov	 r9, QWORD PTR self$[rsp]
  00044	41 b8 04 02 00
	00		 mov	 r8d, 516		; 00000204H
  0004a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00051	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BG@LFOFOOAM@StopIteration_dealloc?$AA@
  00058	e8 00 00 00 00	 call	 _PyParallel_Guard
  0005d	85 c0		 test	 eax, eax
  0005f	74 0b		 je	 SHORT $LN7@StopIterat@3
  00061	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR tv79[rsp], 0
  0006a	eb 0e		 jmp	 SHORT $LN8@StopIterat@3
$LN7@StopIterat@3:
  0006c	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00071	48 83 e8 18	 sub	 rax, 24
  00075	48 89 44 24 38	 mov	 QWORD PTR tv79[rsp], rax
$LN8@StopIterat@3:
  0007a	48 8b 44 24 38	 mov	 rax, QWORD PTR tv79[rsp]
  0007f	48 89 44 24 30	 mov	 QWORD PTR g$20894[rsp], rax
  00084	48 8b 44 24 30	 mov	 rax, QWORD PTR g$20894[rsp]
  00089	48 83 78 10 fe	 cmp	 QWORD PTR [rax+16], -2
  0008e	75 1c		 jne	 SHORT $LN9@StopIterat@3
  00090	41 b8 04 02 00
	00		 mov	 r8d, 516		; 00000204H
  00096	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  0009d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EM@HFMJMDDM@?$AAg?$AA?9?$AA?$DO?$AAg?$AAc?$AA?4?$AAg?$AAc?$AA_?$AAr?$AAe?$AAf?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA_?$AAP?$AAy?$AAG?$AAC?$AA_?$AAR?$AAE?$AAF?$AAS?$AA_?$AAU?$AAN?$AAT?$AAR@
  000a4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  000aa	33 c0		 xor	 eax, eax
$LN9@StopIterat@3:
  000ac	48 8b 44 24 30	 mov	 rax, QWORD PTR g$20894[rsp]
  000b1	48 c7 40 10 fe
	ff ff ff	 mov	 QWORD PTR [rax+16], -2
  000b9	48 8b 44 24 30	 mov	 rax, QWORD PTR g$20894[rsp]
  000be	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000c2	48 8b 4c 24 30	 mov	 rcx, QWORD PTR g$20894[rsp]
  000c7	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000ca	48 89 08	 mov	 QWORD PTR [rax], rcx
  000cd	48 8b 44 24 30	 mov	 rax, QWORD PTR g$20894[rsp]
  000d2	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000d5	48 8b 4c 24 30	 mov	 rcx, QWORD PTR g$20894[rsp]
  000da	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  000de	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  000e2	48 8b 44 24 30	 mov	 rax, QWORD PTR g$20894[rsp]
  000e7	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  000ee	33 c0		 xor	 eax, eax
  000f0	85 c0		 test	 eax, eax
  000f2	0f 85 3f ff ff
	ff		 jne	 $LN3@StopIterat@3
$LN4@StopIterat@3:

; 517  :     StopIteration_clear(self);

  000f8	48 8b 4c 24 50	 mov	 rcx, QWORD PTR self$[rsp]
  000fd	e8 00 00 00 00	 call	 StopIteration_clear

; 518  :     Py_TYPE(self)->tp_free((PyObject *)self);

  00102	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00107	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  0010b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR self$[rsp]
  00110	ff 90 98 01 00
	00		 call	 QWORD PTR [rax+408]

; 519  : }

  00116	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0011a	c3		 ret	 0
StopIteration_dealloc ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BH@NKDPCDNK@StopIteration_traverse?$AA@	; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$StopIteration_traverse DD imagerel StopIteration_traverse
	DD	imagerel StopIteration_traverse+140
	DD	imagerel $unwind$StopIteration_traverse
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$StopIteration_traverse DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT ??_C@_0BH@NKDPCDNK@StopIteration_traverse?$AA@
CONST	SEGMENT
??_C@_0BH@NKDPCDNK@StopIteration_traverse?$AA@ DB 'StopIteration_traverse'
	DB	00H						; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT StopIteration_traverse
_TEXT	SEGMENT
vret$20915 = 32
self$ = 64
visit$ = 72
arg$ = 80
StopIteration_traverse PROC				; COMDAT

; 523  : {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H
$LN6@StopIterat@4:

; 524  :     Py_VISIT(self->value);

  00013	e8 00 00 00 00	 call	 _Py_PXCTX
  00018	85 c0		 test	 eax, eax
  0001a	74 1c		 je	 SHORT $LN3@StopIterat@4
  0001c	45 33 c9	 xor	 r9d, r9d
  0001f	41 b8 0c 02 00
	00		 mov	 r8d, 524		; 0000020cH
  00025	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0002c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BH@NKDPCDNK@StopIteration_traverse?$AA@
  00033	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN3@StopIterat@4:
  00038	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  0003d	48 83 b8 90 00
	00 00 00	 cmp	 QWORD PTR [rax+144], 0
  00045	74 26		 je	 SHORT $LN2@StopIterat@4
  00047	48 8b 54 24 50	 mov	 rdx, QWORD PTR arg$[rsp]
  0004c	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  00051	48 8b 88 90 00
	00 00		 mov	 rcx, QWORD PTR [rax+144]
  00058	ff 54 24 48	 call	 QWORD PTR visit$[rsp]
  0005c	89 44 24 20	 mov	 DWORD PTR vret$20915[rsp], eax
  00060	83 7c 24 20 00	 cmp	 DWORD PTR vret$20915[rsp], 0
  00065	74 06		 je	 SHORT $LN1@StopIterat@4
  00067	8b 44 24 20	 mov	 eax, DWORD PTR vret$20915[rsp]
  0006b	eb 1a		 jmp	 SHORT $LN7@StopIterat@4
$LN1@StopIterat@4:
$LN2@StopIterat@4:
  0006d	33 c0		 xor	 eax, eax
  0006f	85 c0		 test	 eax, eax
  00071	75 a0		 jne	 SHORT $LN6@StopIterat@4

; 525  :     return BaseException_traverse((PyBaseExceptionObject *)self, visit, arg);

  00073	4c 8b 44 24 50	 mov	 r8, QWORD PTR arg$[rsp]
  00078	48 8b 54 24 48	 mov	 rdx, QWORD PTR visit$[rsp]
  0007d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR self$[rsp]
  00082	e8 00 00 00 00	 call	 BaseException_traverse
$LN7@StopIterat@4:

; 526  : }

  00087	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0008b	c3		 ret	 0
StopIteration_traverse ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BA@BPDEMEKG@SystemExit_init?$AA@		; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$SystemExit_init DD imagerel SystemExit_init
	DD	imagerel SystemExit_init+268
	DD	imagerel $unwind$SystemExit_init
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SystemExit_init DD 011301H
	DD	08213H
xdata	ENDS
;	COMDAT ??_C@_0BA@BPDEMEKG@SystemExit_init?$AA@
CONST	SEGMENT
??_C@_0BA@BPDEMEKG@SystemExit_init?$AA@ DB 'SystemExit_init', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT SystemExit_init
_TEXT	SEGMENT
size$ = 48
_py_tmp$20988 = 56
self$ = 80
args$ = 88
kwds$ = 96
SystemExit_init PROC					; COMDAT

; 554  : {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 555  :     Py_ssize_t size = PyTuple_GET_SIZE(args);

  00013	48 8b 44 24 58	 mov	 rax, QWORD PTR args$[rsp]
  00018	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  0001c	48 89 44 24 30	 mov	 QWORD PTR size$[rsp], rax

; 556  : 
; 557  :     if (BaseException_init((PyBaseExceptionObject *)self, args, kwds) == -1)

  00021	4c 8b 44 24 60	 mov	 r8, QWORD PTR kwds$[rsp]
  00026	48 8b 54 24 58	 mov	 rdx, QWORD PTR args$[rsp]
  0002b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR self$[rsp]
  00030	e8 00 00 00 00	 call	 BaseException_init
  00035	83 f8 ff	 cmp	 eax, -1
  00038	75 0a		 jne	 SHORT $LN8@SystemExit

; 558  :         return -1;

  0003a	b8 ff ff ff ff	 mov	 eax, -1
  0003f	e9 c3 00 00 00	 jmp	 $LN9@SystemExit
$LN8@SystemExit:

; 559  : 
; 560  :     if (size == 0)

  00044	48 83 7c 24 30
	00		 cmp	 QWORD PTR size$[rsp], 0
  0004a	75 07		 jne	 SHORT $LN7@SystemExit

; 561  :         return 0;

  0004c	33 c0		 xor	 eax, eax
  0004e	e9 b4 00 00 00	 jmp	 $LN9@SystemExit
$LN7@SystemExit:
$LN6@SystemExit:

; 562  :     Py_CLEAR(self->code);

  00053	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00058	48 83 b8 90 00
	00 00 00	 cmp	 QWORD PTR [rax+144], 0
  00060	74 5c		 je	 SHORT $LN3@SystemExit
  00062	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0006a	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  0006f	4c 8b 88 90 00
	00 00		 mov	 r9, QWORD PTR [rax+144]
  00076	41 b8 32 02 00
	00		 mov	 r8d, 562		; 00000232H
  0007c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00083	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@BPDEMEKG@SystemExit_init?$AA@
  0008a	e8 00 00 00 00	 call	 _PyParallel_Guard
  0008f	85 c0		 test	 eax, eax
  00091	75 2b		 jne	 SHORT $LN3@SystemExit
  00093	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00098	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]
  0009f	48 89 44 24 38	 mov	 QWORD PTR _py_tmp$20988[rsp], rax
  000a4	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  000a9	48 c7 80 90 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+144], 0
  000b4	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _py_tmp$20988[rsp]
  000b9	e8 00 00 00 00	 call	 _Py_DecRef
$LN3@SystemExit:
  000be	33 c0		 xor	 eax, eax
  000c0	85 c0		 test	 eax, eax
  000c2	75 8f		 jne	 SHORT $LN6@SystemExit

; 563  :     if (size == 1)

  000c4	48 83 7c 24 30
	01		 cmp	 QWORD PTR size$[rsp], 1
  000ca	75 17		 jne	 SHORT $LN2@SystemExit

; 564  :         self->code = PyTuple_GET_ITEM(args, 0);

  000cc	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  000d1	48 8b 4c 24 58	 mov	 rcx, QWORD PTR args$[rsp]
  000d6	48 8b 49 70	 mov	 rcx, QWORD PTR [rcx+112]
  000da	48 89 88 90 00
	00 00		 mov	 QWORD PTR [rax+144], rcx

; 565  :     else /* size > 1 */

  000e1	eb 11		 jmp	 SHORT $LN1@SystemExit
$LN2@SystemExit:

; 566  :         self->code = args;

  000e3	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  000e8	48 8b 4c 24 58	 mov	 rcx, QWORD PTR args$[rsp]
  000ed	48 89 88 90 00
	00 00		 mov	 QWORD PTR [rax+144], rcx
$LN1@SystemExit:

; 567  :     Py_INCREF(self->code);

  000f4	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  000f9	48 8b 88 90 00
	00 00		 mov	 rcx, QWORD PTR [rax+144]
  00100	e8 00 00 00 00	 call	 _Py_IncRef

; 568  :     return 0;

  00105	33 c0		 xor	 eax, eax
$LN9@SystemExit:

; 569  : }

  00107	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0010b	c3		 ret	 0
SystemExit_init ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BB@KJMDIHEI@SystemExit_clear?$AA@	; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$SystemExit_clear DD imagerel SystemExit_clear
	DD	imagerel SystemExit_clear+137
	DD	imagerel $unwind$SystemExit_clear
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SystemExit_clear DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT ??_C@_0BB@KJMDIHEI@SystemExit_clear?$AA@
CONST	SEGMENT
??_C@_0BB@KJMDIHEI@SystemExit_clear?$AA@ DB 'SystemExit_clear', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT SystemExit_clear
_TEXT	SEGMENT
_py_tmp$21005 = 48
self$ = 80
SystemExit_clear PROC					; COMDAT

; 573  : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H
$LN4@SystemExit@2:

; 574  :     Py_CLEAR(self->code);

  00009	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  0000e	48 83 b8 90 00
	00 00 00	 cmp	 QWORD PTR [rax+144], 0
  00016	74 5c		 je	 SHORT $LN1@SystemExit@2
  00018	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00020	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00025	4c 8b 88 90 00
	00 00		 mov	 r9, QWORD PTR [rax+144]
  0002c	41 b8 3e 02 00
	00		 mov	 r8d, 574		; 0000023eH
  00032	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@KJMDIHEI@SystemExit_clear?$AA@
  00040	e8 00 00 00 00	 call	 _PyParallel_Guard
  00045	85 c0		 test	 eax, eax
  00047	75 2b		 jne	 SHORT $LN1@SystemExit@2
  00049	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  0004e	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]
  00055	48 89 44 24 30	 mov	 QWORD PTR _py_tmp$21005[rsp], rax
  0005a	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  0005f	48 c7 80 90 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+144], 0
  0006a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _py_tmp$21005[rsp]
  0006f	e8 00 00 00 00	 call	 _Py_DecRef
$LN1@SystemExit@2:
  00074	33 c0		 xor	 eax, eax
  00076	85 c0		 test	 eax, eax
  00078	75 8f		 jne	 SHORT $LN4@SystemExit@2

; 575  :     return BaseException_clear((PyBaseExceptionObject *)self);

  0007a	48 8b 4c 24 50	 mov	 rcx, QWORD PTR self$[rsp]
  0007f	e8 00 00 00 00	 call	 BaseException_clear

; 576  : }

  00084	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00088	c3		 ret	 0
SystemExit_clear ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BD@KLNCEPF@SystemExit_dealloc?$AA@	; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$SystemExit_dealloc DD imagerel SystemExit_dealloc
	DD	imagerel SystemExit_dealloc+283
	DD	imagerel $unwind$SystemExit_dealloc
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SystemExit_dealloc DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT ??_C@_0BD@KLNCEPF@SystemExit_dealloc?$AA@
CONST	SEGMENT
??_C@_0BD@KLNCEPF@SystemExit_dealloc?$AA@ DB 'SystemExit_dealloc', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT SystemExit_dealloc
_TEXT	SEGMENT
g$21019 = 48
tv79 = 56
self$ = 80
SystemExit_dealloc PROC					; COMDAT

; 580  : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 581  :     _PyObject_GC_UNTRACK(self);

  00009	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00011	4c 8b 4c 24 50	 mov	 r9, QWORD PTR self$[rsp]
  00016	41 b8 45 02 00
	00		 mov	 r8d, 581		; 00000245H
  0001c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@KLNCEPF@SystemExit_dealloc?$AA@
  0002a	e8 00 00 00 00	 call	 _PyParallel_Guard
  0002f	85 c0		 test	 eax, eax
  00031	0f 85 c1 00 00
	00		 jne	 $LN4@SystemExit@3
$LN3@SystemExit@3:
  00037	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0003f	4c 8b 4c 24 50	 mov	 r9, QWORD PTR self$[rsp]
  00044	41 b8 45 02 00
	00		 mov	 r8d, 581		; 00000245H
  0004a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00051	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@KLNCEPF@SystemExit_dealloc?$AA@
  00058	e8 00 00 00 00	 call	 _PyParallel_Guard
  0005d	85 c0		 test	 eax, eax
  0005f	74 0b		 je	 SHORT $LN7@SystemExit@3
  00061	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR tv79[rsp], 0
  0006a	eb 0e		 jmp	 SHORT $LN8@SystemExit@3
$LN7@SystemExit@3:
  0006c	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00071	48 83 e8 18	 sub	 rax, 24
  00075	48 89 44 24 38	 mov	 QWORD PTR tv79[rsp], rax
$LN8@SystemExit@3:
  0007a	48 8b 44 24 38	 mov	 rax, QWORD PTR tv79[rsp]
  0007f	48 89 44 24 30	 mov	 QWORD PTR g$21019[rsp], rax
  00084	48 8b 44 24 30	 mov	 rax, QWORD PTR g$21019[rsp]
  00089	48 83 78 10 fe	 cmp	 QWORD PTR [rax+16], -2
  0008e	75 1c		 jne	 SHORT $LN9@SystemExit@3
  00090	41 b8 45 02 00
	00		 mov	 r8d, 581		; 00000245H
  00096	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  0009d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EM@HFMJMDDM@?$AAg?$AA?9?$AA?$DO?$AAg?$AAc?$AA?4?$AAg?$AAc?$AA_?$AAr?$AAe?$AAf?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA_?$AAP?$AAy?$AAG?$AAC?$AA_?$AAR?$AAE?$AAF?$AAS?$AA_?$AAU?$AAN?$AAT?$AAR@
  000a4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  000aa	33 c0		 xor	 eax, eax
$LN9@SystemExit@3:
  000ac	48 8b 44 24 30	 mov	 rax, QWORD PTR g$21019[rsp]
  000b1	48 c7 40 10 fe
	ff ff ff	 mov	 QWORD PTR [rax+16], -2
  000b9	48 8b 44 24 30	 mov	 rax, QWORD PTR g$21019[rsp]
  000be	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000c2	48 8b 4c 24 30	 mov	 rcx, QWORD PTR g$21019[rsp]
  000c7	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000ca	48 89 08	 mov	 QWORD PTR [rax], rcx
  000cd	48 8b 44 24 30	 mov	 rax, QWORD PTR g$21019[rsp]
  000d2	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000d5	48 8b 4c 24 30	 mov	 rcx, QWORD PTR g$21019[rsp]
  000da	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  000de	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  000e2	48 8b 44 24 30	 mov	 rax, QWORD PTR g$21019[rsp]
  000e7	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  000ee	33 c0		 xor	 eax, eax
  000f0	85 c0		 test	 eax, eax
  000f2	0f 85 3f ff ff
	ff		 jne	 $LN3@SystemExit@3
$LN4@SystemExit@3:

; 582  :     SystemExit_clear(self);

  000f8	48 8b 4c 24 50	 mov	 rcx, QWORD PTR self$[rsp]
  000fd	e8 00 00 00 00	 call	 SystemExit_clear

; 583  :     Py_TYPE(self)->tp_free((PyObject *)self);

  00102	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00107	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  0010b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR self$[rsp]
  00110	ff 90 98 01 00
	00		 call	 QWORD PTR [rax+408]

; 584  : }

  00116	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0011a	c3		 ret	 0
SystemExit_dealloc ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BE@BOOBDBKI@SystemExit_traverse?$AA@	; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$SystemExit_traverse DD imagerel SystemExit_traverse
	DD	imagerel SystemExit_traverse+140
	DD	imagerel $unwind$SystemExit_traverse
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SystemExit_traverse DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT ??_C@_0BE@BOOBDBKI@SystemExit_traverse?$AA@
CONST	SEGMENT
??_C@_0BE@BOOBDBKI@SystemExit_traverse?$AA@ DB 'SystemExit_traverse', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT SystemExit_traverse
_TEXT	SEGMENT
vret$21040 = 32
self$ = 64
visit$ = 72
arg$ = 80
SystemExit_traverse PROC				; COMDAT

; 588  : {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H
$LN6@SystemExit@4:

; 589  :     Py_VISIT(self->code);

  00013	e8 00 00 00 00	 call	 _Py_PXCTX
  00018	85 c0		 test	 eax, eax
  0001a	74 1c		 je	 SHORT $LN3@SystemExit@4
  0001c	45 33 c9	 xor	 r9d, r9d
  0001f	41 b8 4d 02 00
	00		 mov	 r8d, 589		; 0000024dH
  00025	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0002c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BE@BOOBDBKI@SystemExit_traverse?$AA@
  00033	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN3@SystemExit@4:
  00038	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  0003d	48 83 b8 90 00
	00 00 00	 cmp	 QWORD PTR [rax+144], 0
  00045	74 26		 je	 SHORT $LN2@SystemExit@4
  00047	48 8b 54 24 50	 mov	 rdx, QWORD PTR arg$[rsp]
  0004c	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  00051	48 8b 88 90 00
	00 00		 mov	 rcx, QWORD PTR [rax+144]
  00058	ff 54 24 48	 call	 QWORD PTR visit$[rsp]
  0005c	89 44 24 20	 mov	 DWORD PTR vret$21040[rsp], eax
  00060	83 7c 24 20 00	 cmp	 DWORD PTR vret$21040[rsp], 0
  00065	74 06		 je	 SHORT $LN1@SystemExit@4
  00067	8b 44 24 20	 mov	 eax, DWORD PTR vret$21040[rsp]
  0006b	eb 1a		 jmp	 SHORT $LN7@SystemExit@4
$LN1@SystemExit@4:
$LN2@SystemExit@4:
  0006d	33 c0		 xor	 eax, eax
  0006f	85 c0		 test	 eax, eax
  00071	75 a0		 jne	 SHORT $LN6@SystemExit@4

; 590  :     return BaseException_traverse((PyBaseExceptionObject *)self, visit, arg);

  00073	4c 8b 44 24 50	 mov	 r8, QWORD PTR arg$[rsp]
  00078	48 8b 54 24 48	 mov	 rdx, QWORD PTR visit$[rsp]
  0007d	48 8b 4c 24 40	 mov	 rcx, QWORD PTR self$[rsp]
  00082	e8 00 00 00 00	 call	 BaseException_traverse
$LN7@SystemExit@4:

; 591  : }

  00087	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0008b	c3		 ret	 0
SystemExit_traverse ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BB@FMIGKJLP@ImportError_init?$AA@	; `string'
EXTRN	PyArg_UnpackTuple:PROC
EXTRN	PyDict_DelItemString:PROC
EXTRN	PyDict_GetItemString:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$ImportError_init DD imagerel ImportError_init
	DD	imagerel ImportError_init+761
	DD	imagerel $unwind$ImportError_init
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$ImportError_init DD 011301H
	DD	0c213H
xdata	ENDS
;	COMDAT ??_C@_0BB@FMIGKJLP@ImportError_init?$AA@
CONST	SEGMENT
??_C@_0BB@FMIGKJLP@ImportError_init?$AA@ DB 'ImportError_init', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ImportError_init
_TEXT	SEGMENT
name$ = 48
msg$ = 56
path$ = 64
_py_tmp$21125 = 72
_py_tmp$21137 = 80
_py_tmp$21153 = 88
self$ = 112
args$ = 120
kwds$ = 128
ImportError_init PROC					; COMDAT

; 616  : {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 68	 sub	 rsp, 104		; 00000068H

; 617  :     PyObject *msg = NULL;

  00013	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR msg$[rsp], 0

; 618  :     PyObject *name = NULL;

  0001c	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR name$[rsp], 0

; 619  :     PyObject *path = NULL;

  00025	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR path$[rsp], 0

; 620  : 
; 621  : /* Macro replacement doesn't allow ## to start the first line of a macro,
; 622  :    so we move the assignment and NULL check into the if-statement. */
; 623  : #define GET_KWD(kwd) { \
; 624  :     kwd = PyDict_GetItemString(kwds, #kwd); \
; 625  :     if (kwd) { \
; 626  :         Py_CLEAR(self->kwd); \
; 627  :         self->kwd = kwd;   \
; 628  :         Py_INCREF(self->kwd);\
; 629  :         if (PyDict_DelItemString(kwds, #kwd)) \
; 630  :             return -1; \
; 631  :     } \
; 632  :     }
; 633  : 
; 634  :     if (kwds) {

  0002e	48 83 bc 24 80
	00 00 00 00	 cmp	 QWORD PTR kwds$[rsp], 0
  00037	0f 84 b4 01 00
	00		 je	 $LN20@ImportErro

; 635  :         GET_KWD(name);

  0003d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_04MEMAJGDJ@name?$AA@
  00044	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR kwds$[rsp]
  0004c	e8 00 00 00 00	 call	 PyDict_GetItemString
  00051	48 89 44 24 30	 mov	 QWORD PTR name$[rsp], rax
  00056	48 83 7c 24 30
	00		 cmp	 QWORD PTR name$[rsp], 0
  0005c	0f 84 b5 00 00
	00		 je	 $LN19@ImportErro
$LN18@ImportErro:
  00062	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00067	48 83 b8 98 00
	00 00 00	 cmp	 QWORD PTR [rax+152], 0
  0006f	74 5c		 je	 SHORT $LN15@ImportErro
  00071	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00079	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  0007e	4c 8b 88 98 00
	00 00		 mov	 r9, QWORD PTR [rax+152]
  00085	41 b8 7b 02 00
	00		 mov	 r8d, 635		; 0000027bH
  0008b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00092	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@FMIGKJLP@ImportError_init?$AA@
  00099	e8 00 00 00 00	 call	 _PyParallel_Guard
  0009e	85 c0		 test	 eax, eax
  000a0	75 2b		 jne	 SHORT $LN15@ImportErro
  000a2	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  000a7	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  000ae	48 89 44 24 48	 mov	 QWORD PTR _py_tmp$21125[rsp], rax
  000b3	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  000b8	48 c7 80 98 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+152], 0
  000c3	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _py_tmp$21125[rsp]
  000c8	e8 00 00 00 00	 call	 _Py_DecRef
$LN15@ImportErro:
  000cd	33 c0		 xor	 eax, eax
  000cf	85 c0		 test	 eax, eax
  000d1	75 8f		 jne	 SHORT $LN18@ImportErro
  000d3	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  000d8	48 8b 4c 24 30	 mov	 rcx, QWORD PTR name$[rsp]
  000dd	48 89 88 98 00
	00 00		 mov	 QWORD PTR [rax+152], rcx
  000e4	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  000e9	48 8b 88 98 00
	00 00		 mov	 rcx, QWORD PTR [rax+152]
  000f0	e8 00 00 00 00	 call	 _Py_IncRef
  000f5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_04MEMAJGDJ@name?$AA@
  000fc	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR kwds$[rsp]
  00104	e8 00 00 00 00	 call	 PyDict_DelItemString
  00109	85 c0		 test	 eax, eax
  0010b	74 0a		 je	 SHORT $LN14@ImportErro
  0010d	b8 ff ff ff ff	 mov	 eax, -1
  00112	e9 dd 01 00 00	 jmp	 $LN21@ImportErro
$LN14@ImportErro:
$LN19@ImportErro:

; 636  :         GET_KWD(path);

  00117	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_04LNEJFJGI@path?$AA@
  0011e	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR kwds$[rsp]
  00126	e8 00 00 00 00	 call	 PyDict_GetItemString
  0012b	48 89 44 24 40	 mov	 QWORD PTR path$[rsp], rax
  00130	48 83 7c 24 40
	00		 cmp	 QWORD PTR path$[rsp], 0
  00136	0f 84 b5 00 00
	00		 je	 $LN13@ImportErro
$LN12@ImportErro:
  0013c	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00141	48 83 b8 a0 00
	00 00 00	 cmp	 QWORD PTR [rax+160], 0
  00149	74 5c		 je	 SHORT $LN9@ImportErro
  0014b	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00153	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00158	4c 8b 88 a0 00
	00 00		 mov	 r9, QWORD PTR [rax+160]
  0015f	41 b8 7c 02 00
	00		 mov	 r8d, 636		; 0000027cH
  00165	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0016c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@FMIGKJLP@ImportError_init?$AA@
  00173	e8 00 00 00 00	 call	 _PyParallel_Guard
  00178	85 c0		 test	 eax, eax
  0017a	75 2b		 jne	 SHORT $LN9@ImportErro
  0017c	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00181	48 8b 80 a0 00
	00 00		 mov	 rax, QWORD PTR [rax+160]
  00188	48 89 44 24 50	 mov	 QWORD PTR _py_tmp$21137[rsp], rax
  0018d	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00192	48 c7 80 a0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+160], 0
  0019d	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _py_tmp$21137[rsp]
  001a2	e8 00 00 00 00	 call	 _Py_DecRef
$LN9@ImportErro:
  001a7	33 c0		 xor	 eax, eax
  001a9	85 c0		 test	 eax, eax
  001ab	75 8f		 jne	 SHORT $LN12@ImportErro
  001ad	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  001b2	48 8b 4c 24 40	 mov	 rcx, QWORD PTR path$[rsp]
  001b7	48 89 88 a0 00
	00 00		 mov	 QWORD PTR [rax+160], rcx
  001be	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  001c3	48 8b 88 a0 00
	00 00		 mov	 rcx, QWORD PTR [rax+160]
  001ca	e8 00 00 00 00	 call	 _Py_IncRef
  001cf	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_04LNEJFJGI@path?$AA@
  001d6	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR kwds$[rsp]
  001de	e8 00 00 00 00	 call	 PyDict_DelItemString
  001e3	85 c0		 test	 eax, eax
  001e5	74 0a		 je	 SHORT $LN8@ImportErro
  001e7	b8 ff ff ff ff	 mov	 eax, -1
  001ec	e9 03 01 00 00	 jmp	 $LN21@ImportErro
$LN8@ImportErro:
$LN13@ImportErro:
$LN20@ImportErro:

; 637  :     }
; 638  : 
; 639  :     if (BaseException_init((PyBaseExceptionObject *)self, args, kwds) == -1)

  001f1	4c 8b 84 24 80
	00 00 00	 mov	 r8, QWORD PTR kwds$[rsp]
  001f9	48 8b 54 24 78	 mov	 rdx, QWORD PTR args$[rsp]
  001fe	48 8b 4c 24 70	 mov	 rcx, QWORD PTR self$[rsp]
  00203	e8 00 00 00 00	 call	 BaseException_init
  00208	83 f8 ff	 cmp	 eax, -1
  0020b	75 0a		 jne	 SHORT $LN7@ImportErro

; 640  :         return -1;

  0020d	b8 ff ff ff ff	 mov	 eax, -1
  00212	e9 dd 00 00 00	 jmp	 $LN21@ImportErro
$LN7@ImportErro:

; 641  :     if (PyTuple_GET_SIZE(args) != 1)

  00217	48 8b 44 24 78	 mov	 rax, QWORD PTR args$[rsp]
  0021c	48 83 78 60 01	 cmp	 QWORD PTR [rax+96], 1
  00221	74 07		 je	 SHORT $LN6@ImportErro

; 642  :         return 0;

  00223	33 c0		 xor	 eax, eax
  00225	e9 ca 00 00 00	 jmp	 $LN21@ImportErro
$LN6@ImportErro:

; 643  :     if (!PyArg_UnpackTuple(args, "ImportError", 1, 1, &msg))

  0022a	48 8d 44 24 38	 lea	 rax, QWORD PTR msg$[rsp]
  0022f	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00234	41 b9 01 00 00
	00		 mov	 r9d, 1
  0023a	41 b8 01 00 00
	00		 mov	 r8d, 1
  00240	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0M@HCFCBBPI@ImportError?$AA@
  00247	48 8b 4c 24 78	 mov	 rcx, QWORD PTR args$[rsp]
  0024c	e8 00 00 00 00	 call	 PyArg_UnpackTuple
  00251	85 c0		 test	 eax, eax
  00253	75 0a		 jne	 SHORT $LN5@ImportErro

; 644  :         return -1;

  00255	b8 ff ff ff ff	 mov	 eax, -1
  0025a	e9 95 00 00 00	 jmp	 $LN21@ImportErro
$LN5@ImportErro:
$LN4@ImportErro:

; 645  : 
; 646  :     Py_CLEAR(self->msg);          /* replacing */

  0025f	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00264	48 83 b8 90 00
	00 00 00	 cmp	 QWORD PTR [rax+144], 0
  0026c	74 5c		 je	 SHORT $LN1@ImportErro
  0026e	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00276	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  0027b	4c 8b 88 90 00
	00 00		 mov	 r9, QWORD PTR [rax+144]
  00282	41 b8 86 02 00
	00		 mov	 r8d, 646		; 00000286H
  00288	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0028f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@FMIGKJLP@ImportError_init?$AA@
  00296	e8 00 00 00 00	 call	 _PyParallel_Guard
  0029b	85 c0		 test	 eax, eax
  0029d	75 2b		 jne	 SHORT $LN1@ImportErro
  0029f	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  002a4	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]
  002ab	48 89 44 24 58	 mov	 QWORD PTR _py_tmp$21153[rsp], rax
  002b0	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  002b5	48 c7 80 90 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+144], 0
  002c0	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _py_tmp$21153[rsp]
  002c5	e8 00 00 00 00	 call	 _Py_DecRef
$LN1@ImportErro:
  002ca	33 c0		 xor	 eax, eax
  002cc	85 c0		 test	 eax, eax
  002ce	75 8f		 jne	 SHORT $LN4@ImportErro

; 647  :     self->msg = msg;

  002d0	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  002d5	48 8b 4c 24 38	 mov	 rcx, QWORD PTR msg$[rsp]
  002da	48 89 88 90 00
	00 00		 mov	 QWORD PTR [rax+144], rcx

; 648  :     Py_INCREF(self->msg);

  002e1	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  002e6	48 8b 88 90 00
	00 00		 mov	 rcx, QWORD PTR [rax+144]
  002ed	e8 00 00 00 00	 call	 _Py_IncRef

; 649  : 
; 650  :     return 0;

  002f2	33 c0		 xor	 eax, eax
$LN21@ImportErro:

; 651  : }

  002f4	48 83 c4 68	 add	 rsp, 104		; 00000068H
  002f8	c3		 ret	 0
ImportError_init ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BC@MNOLJNOF@ImportError_clear?$AA@	; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$ImportError_clear DD imagerel ImportError_clear
	DD	imagerel ImportError_clear+363
	DD	imagerel $unwind$ImportError_clear
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$ImportError_clear DD 010901H
	DD	0a209H
xdata	ENDS
;	COMDAT ??_C@_0BC@MNOLJNOF@ImportError_clear?$AA@
CONST	SEGMENT
??_C@_0BC@MNOLJNOF@ImportError_clear?$AA@ DB 'ImportError_clear', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ImportError_clear
_TEXT	SEGMENT
_py_tmp$21167 = 48
_py_tmp$21175 = 56
_py_tmp$21183 = 64
self$ = 96
ImportError_clear PROC					; COMDAT

; 655  : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 58	 sub	 rsp, 88			; 00000058H
$LN12@ImportErro@2:

; 656  :     Py_CLEAR(self->msg);

  00009	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  0000e	48 83 b8 90 00
	00 00 00	 cmp	 QWORD PTR [rax+144], 0
  00016	74 5c		 je	 SHORT $LN9@ImportErro@2
  00018	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00020	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  00025	4c 8b 88 90 00
	00 00		 mov	 r9, QWORD PTR [rax+144]
  0002c	41 b8 90 02 00
	00		 mov	 r8d, 656		; 00000290H
  00032	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BC@MNOLJNOF@ImportError_clear?$AA@
  00040	e8 00 00 00 00	 call	 _PyParallel_Guard
  00045	85 c0		 test	 eax, eax
  00047	75 2b		 jne	 SHORT $LN9@ImportErro@2
  00049	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  0004e	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]
  00055	48 89 44 24 30	 mov	 QWORD PTR _py_tmp$21167[rsp], rax
  0005a	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  0005f	48 c7 80 90 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+144], 0
  0006a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _py_tmp$21167[rsp]
  0006f	e8 00 00 00 00	 call	 _Py_DecRef
$LN9@ImportErro@2:
  00074	33 c0		 xor	 eax, eax
  00076	85 c0		 test	 eax, eax
  00078	75 8f		 jne	 SHORT $LN12@ImportErro@2
$LN8@ImportErro@2:

; 657  :     Py_CLEAR(self->name);

  0007a	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  0007f	48 83 b8 98 00
	00 00 00	 cmp	 QWORD PTR [rax+152], 0
  00087	74 5c		 je	 SHORT $LN5@ImportErro@2
  00089	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00091	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  00096	4c 8b 88 98 00
	00 00		 mov	 r9, QWORD PTR [rax+152]
  0009d	41 b8 91 02 00
	00		 mov	 r8d, 657		; 00000291H
  000a3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  000aa	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BC@MNOLJNOF@ImportError_clear?$AA@
  000b1	e8 00 00 00 00	 call	 _PyParallel_Guard
  000b6	85 c0		 test	 eax, eax
  000b8	75 2b		 jne	 SHORT $LN5@ImportErro@2
  000ba	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  000bf	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  000c6	48 89 44 24 38	 mov	 QWORD PTR _py_tmp$21175[rsp], rax
  000cb	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  000d0	48 c7 80 98 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+152], 0
  000db	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _py_tmp$21175[rsp]
  000e0	e8 00 00 00 00	 call	 _Py_DecRef
$LN5@ImportErro@2:
  000e5	33 c0		 xor	 eax, eax
  000e7	85 c0		 test	 eax, eax
  000e9	75 8f		 jne	 SHORT $LN8@ImportErro@2
$LN4@ImportErro@2:

; 658  :     Py_CLEAR(self->path);

  000eb	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  000f0	48 83 b8 a0 00
	00 00 00	 cmp	 QWORD PTR [rax+160], 0
  000f8	74 5c		 je	 SHORT $LN1@ImportErro@2
  000fa	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00102	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  00107	4c 8b 88 a0 00
	00 00		 mov	 r9, QWORD PTR [rax+160]
  0010e	41 b8 92 02 00
	00		 mov	 r8d, 658		; 00000292H
  00114	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0011b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BC@MNOLJNOF@ImportError_clear?$AA@
  00122	e8 00 00 00 00	 call	 _PyParallel_Guard
  00127	85 c0		 test	 eax, eax
  00129	75 2b		 jne	 SHORT $LN1@ImportErro@2
  0012b	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  00130	48 8b 80 a0 00
	00 00		 mov	 rax, QWORD PTR [rax+160]
  00137	48 89 44 24 40	 mov	 QWORD PTR _py_tmp$21183[rsp], rax
  0013c	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  00141	48 c7 80 a0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+160], 0
  0014c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _py_tmp$21183[rsp]
  00151	e8 00 00 00 00	 call	 _Py_DecRef
$LN1@ImportErro@2:
  00156	33 c0		 xor	 eax, eax
  00158	85 c0		 test	 eax, eax
  0015a	75 8f		 jne	 SHORT $LN4@ImportErro@2

; 659  :     return BaseException_clear((PyBaseExceptionObject *)self);

  0015c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR self$[rsp]
  00161	e8 00 00 00 00	 call	 BaseException_clear

; 660  : }

  00166	48 83 c4 58	 add	 rsp, 88			; 00000058H
  0016a	c3		 ret	 0
ImportError_clear ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BE@OMHGHLAD@ImportError_dealloc?$AA@	; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$ImportError_dealloc DD imagerel ImportError_dealloc
	DD	imagerel ImportError_dealloc+283
	DD	imagerel $unwind$ImportError_dealloc
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$ImportError_dealloc DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT ??_C@_0BE@OMHGHLAD@ImportError_dealloc?$AA@
CONST	SEGMENT
??_C@_0BE@OMHGHLAD@ImportError_dealloc?$AA@ DB 'ImportError_dealloc', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ImportError_dealloc
_TEXT	SEGMENT
g$21197 = 48
tv79 = 56
self$ = 80
ImportError_dealloc PROC				; COMDAT

; 664  : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 665  :     _PyObject_GC_UNTRACK(self);

  00009	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00011	4c 8b 4c 24 50	 mov	 r9, QWORD PTR self$[rsp]
  00016	41 b8 99 02 00
	00		 mov	 r8d, 665		; 00000299H
  0001c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BE@OMHGHLAD@ImportError_dealloc?$AA@
  0002a	e8 00 00 00 00	 call	 _PyParallel_Guard
  0002f	85 c0		 test	 eax, eax
  00031	0f 85 c1 00 00
	00		 jne	 $LN4@ImportErro@3
$LN3@ImportErro@3:
  00037	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0003f	4c 8b 4c 24 50	 mov	 r9, QWORD PTR self$[rsp]
  00044	41 b8 99 02 00
	00		 mov	 r8d, 665		; 00000299H
  0004a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00051	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BE@OMHGHLAD@ImportError_dealloc?$AA@
  00058	e8 00 00 00 00	 call	 _PyParallel_Guard
  0005d	85 c0		 test	 eax, eax
  0005f	74 0b		 je	 SHORT $LN7@ImportErro@3
  00061	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR tv79[rsp], 0
  0006a	eb 0e		 jmp	 SHORT $LN8@ImportErro@3
$LN7@ImportErro@3:
  0006c	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00071	48 83 e8 18	 sub	 rax, 24
  00075	48 89 44 24 38	 mov	 QWORD PTR tv79[rsp], rax
$LN8@ImportErro@3:
  0007a	48 8b 44 24 38	 mov	 rax, QWORD PTR tv79[rsp]
  0007f	48 89 44 24 30	 mov	 QWORD PTR g$21197[rsp], rax
  00084	48 8b 44 24 30	 mov	 rax, QWORD PTR g$21197[rsp]
  00089	48 83 78 10 fe	 cmp	 QWORD PTR [rax+16], -2
  0008e	75 1c		 jne	 SHORT $LN9@ImportErro@3
  00090	41 b8 99 02 00
	00		 mov	 r8d, 665		; 00000299H
  00096	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  0009d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EM@HFMJMDDM@?$AAg?$AA?9?$AA?$DO?$AAg?$AAc?$AA?4?$AAg?$AAc?$AA_?$AAr?$AAe?$AAf?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA_?$AAP?$AAy?$AAG?$AAC?$AA_?$AAR?$AAE?$AAF?$AAS?$AA_?$AAU?$AAN?$AAT?$AAR@
  000a4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  000aa	33 c0		 xor	 eax, eax
$LN9@ImportErro@3:
  000ac	48 8b 44 24 30	 mov	 rax, QWORD PTR g$21197[rsp]
  000b1	48 c7 40 10 fe
	ff ff ff	 mov	 QWORD PTR [rax+16], -2
  000b9	48 8b 44 24 30	 mov	 rax, QWORD PTR g$21197[rsp]
  000be	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000c2	48 8b 4c 24 30	 mov	 rcx, QWORD PTR g$21197[rsp]
  000c7	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000ca	48 89 08	 mov	 QWORD PTR [rax], rcx
  000cd	48 8b 44 24 30	 mov	 rax, QWORD PTR g$21197[rsp]
  000d2	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000d5	48 8b 4c 24 30	 mov	 rcx, QWORD PTR g$21197[rsp]
  000da	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  000de	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  000e2	48 8b 44 24 30	 mov	 rax, QWORD PTR g$21197[rsp]
  000e7	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  000ee	33 c0		 xor	 eax, eax
  000f0	85 c0		 test	 eax, eax
  000f2	0f 85 3f ff ff
	ff		 jne	 $LN3@ImportErro@3
$LN4@ImportErro@3:

; 666  :     ImportError_clear(self);

  000f8	48 8b 4c 24 50	 mov	 rcx, QWORD PTR self$[rsp]
  000fd	e8 00 00 00 00	 call	 ImportError_clear

; 667  :     Py_TYPE(self)->tp_free((PyObject *)self);

  00102	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00107	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  0010b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR self$[rsp]
  00110	ff 90 98 01 00
	00		 call	 QWORD PTR [rax+408]

; 668  : }

  00116	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0011a	c3		 ret	 0
ImportError_dealloc ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BF@EKNJKNNO@ImportError_traverse?$AA@	; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$ImportError_traverse DD imagerel ImportError_traverse
	DD	imagerel ImportError_traverse+335
	DD	imagerel $unwind$ImportError_traverse
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$ImportError_traverse DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT ??_C@_0BF@EKNJKNNO@ImportError_traverse?$AA@
CONST	SEGMENT
??_C@_0BF@EKNJKNNO@ImportError_traverse?$AA@ DB 'ImportError_traverse', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT ImportError_traverse
_TEXT	SEGMENT
vret$21218 = 32
vret$21226 = 36
vret$21234 = 40
self$ = 64
visit$ = 72
arg$ = 80
ImportError_traverse PROC				; COMDAT

; 672  : {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H
$LN18@ImportErro@4:

; 673  :     Py_VISIT(self->msg);

  00013	e8 00 00 00 00	 call	 _Py_PXCTX
  00018	85 c0		 test	 eax, eax
  0001a	74 1c		 je	 SHORT $LN15@ImportErro@4
  0001c	45 33 c9	 xor	 r9d, r9d
  0001f	41 b8 a1 02 00
	00		 mov	 r8d, 673		; 000002a1H
  00025	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0002c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BF@EKNJKNNO@ImportError_traverse?$AA@
  00033	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN15@ImportErro@4:
  00038	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  0003d	48 83 b8 90 00
	00 00 00	 cmp	 QWORD PTR [rax+144], 0
  00045	74 29		 je	 SHORT $LN14@ImportErro@4
  00047	48 8b 54 24 50	 mov	 rdx, QWORD PTR arg$[rsp]
  0004c	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  00051	48 8b 88 90 00
	00 00		 mov	 rcx, QWORD PTR [rax+144]
  00058	ff 54 24 48	 call	 QWORD PTR visit$[rsp]
  0005c	89 44 24 20	 mov	 DWORD PTR vret$21218[rsp], eax
  00060	83 7c 24 20 00	 cmp	 DWORD PTR vret$21218[rsp], 0
  00065	74 09		 je	 SHORT $LN13@ImportErro@4
  00067	8b 44 24 20	 mov	 eax, DWORD PTR vret$21218[rsp]
  0006b	e9 da 00 00 00	 jmp	 $LN19@ImportErro@4
$LN13@ImportErro@4:
$LN14@ImportErro@4:
  00070	33 c0		 xor	 eax, eax
  00072	85 c0		 test	 eax, eax
  00074	75 9d		 jne	 SHORT $LN18@ImportErro@4
$LN12@ImportErro@4:

; 674  :     Py_VISIT(self->name);

  00076	e8 00 00 00 00	 call	 _Py_PXCTX
  0007b	85 c0		 test	 eax, eax
  0007d	74 1c		 je	 SHORT $LN9@ImportErro@4
  0007f	45 33 c9	 xor	 r9d, r9d
  00082	41 b8 a2 02 00
	00		 mov	 r8d, 674		; 000002a2H
  00088	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0008f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BF@EKNJKNNO@ImportError_traverse?$AA@
  00096	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN9@ImportErro@4:
  0009b	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  000a0	48 83 b8 98 00
	00 00 00	 cmp	 QWORD PTR [rax+152], 0
  000a8	74 26		 je	 SHORT $LN8@ImportErro@4
  000aa	48 8b 54 24 50	 mov	 rdx, QWORD PTR arg$[rsp]
  000af	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  000b4	48 8b 88 98 00
	00 00		 mov	 rcx, QWORD PTR [rax+152]
  000bb	ff 54 24 48	 call	 QWORD PTR visit$[rsp]
  000bf	89 44 24 24	 mov	 DWORD PTR vret$21226[rsp], eax
  000c3	83 7c 24 24 00	 cmp	 DWORD PTR vret$21226[rsp], 0
  000c8	74 06		 je	 SHORT $LN7@ImportErro@4
  000ca	8b 44 24 24	 mov	 eax, DWORD PTR vret$21226[rsp]
  000ce	eb 7a		 jmp	 SHORT $LN19@ImportErro@4
$LN7@ImportErro@4:
$LN8@ImportErro@4:
  000d0	33 c0		 xor	 eax, eax
  000d2	85 c0		 test	 eax, eax
  000d4	75 a0		 jne	 SHORT $LN12@ImportErro@4
$LN6@ImportErro@4:

; 675  :     Py_VISIT(self->path);

  000d6	e8 00 00 00 00	 call	 _Py_PXCTX
  000db	85 c0		 test	 eax, eax
  000dd	74 1c		 je	 SHORT $LN3@ImportErro@4
  000df	45 33 c9	 xor	 r9d, r9d
  000e2	41 b8 a3 02 00
	00		 mov	 r8d, 675		; 000002a3H
  000e8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  000ef	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BF@EKNJKNNO@ImportError_traverse?$AA@
  000f6	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN3@ImportErro@4:
  000fb	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  00100	48 83 b8 a0 00
	00 00 00	 cmp	 QWORD PTR [rax+160], 0
  00108	74 26		 je	 SHORT $LN2@ImportErro@4
  0010a	48 8b 54 24 50	 mov	 rdx, QWORD PTR arg$[rsp]
  0010f	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  00114	48 8b 88 a0 00
	00 00		 mov	 rcx, QWORD PTR [rax+160]
  0011b	ff 54 24 48	 call	 QWORD PTR visit$[rsp]
  0011f	89 44 24 28	 mov	 DWORD PTR vret$21234[rsp], eax
  00123	83 7c 24 28 00	 cmp	 DWORD PTR vret$21234[rsp], 0
  00128	74 06		 je	 SHORT $LN1@ImportErro@4
  0012a	8b 44 24 28	 mov	 eax, DWORD PTR vret$21234[rsp]
  0012e	eb 1a		 jmp	 SHORT $LN19@ImportErro@4
$LN1@ImportErro@4:
$LN2@ImportErro@4:
  00130	33 c0		 xor	 eax, eax
  00132	85 c0		 test	 eax, eax
  00134	75 a0		 jne	 SHORT $LN6@ImportErro@4

; 676  :     return BaseException_traverse((PyBaseExceptionObject *)self, visit, arg);

  00136	4c 8b 44 24 50	 mov	 r8, QWORD PTR arg$[rsp]
  0013b	48 8b 54 24 48	 mov	 rdx, QWORD PTR visit$[rsp]
  00140	48 8b 4c 24 40	 mov	 rcx, QWORD PTR self$[rsp]
  00145	e8 00 00 00 00	 call	 BaseException_traverse
$LN19@ImportErro@4:

; 677  : }

  0014a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0014e	c3		 ret	 0
ImportError_traverse ENDP
_TEXT	ENDS
EXTRN	PyUnicode_Type:BYTE
;	COMDAT pdata
pdata	SEGMENT
$pdata$ImportError_str DD imagerel ImportError_str
	DD	imagerel ImportError_str+97
	DD	imagerel $unwind$ImportError_str
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$ImportError_str DD 010901H
	DD	04209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ImportError_str
_TEXT	SEGMENT
self$ = 48
ImportError_str PROC					; COMDAT

; 681  : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 682  :     if (self->msg && PyUnicode_CheckExact(self->msg)) {

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR self$[rsp]
  0000e	48 83 b8 90 00
	00 00 00	 cmp	 QWORD PTR [rax+144], 0
  00016	74 3a		 je	 SHORT $LN2@ImportErro@5
  00018	48 8b 44 24 30	 mov	 rax, QWORD PTR self$[rsp]
  0001d	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]
  00024	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:PyUnicode_Type
  0002b	48 39 48 58	 cmp	 QWORD PTR [rax+88], rcx
  0002f	75 21		 jne	 SHORT $LN2@ImportErro@5

; 683  :         Py_INCREF(self->msg);

  00031	48 8b 44 24 30	 mov	 rax, QWORD PTR self$[rsp]
  00036	48 8b 88 90 00
	00 00		 mov	 rcx, QWORD PTR [rax+144]
  0003d	e8 00 00 00 00	 call	 _Py_IncRef

; 684  :         return self->msg;

  00042	48 8b 44 24 30	 mov	 rax, QWORD PTR self$[rsp]
  00047	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]
  0004e	eb 0c		 jmp	 SHORT $LN3@ImportErro@5

; 685  :     }
; 686  :     else {

  00050	eb 0a		 jmp	 SHORT $LN1@ImportErro@5
$LN2@ImportErro@5:

; 687  :         return BaseException_str((PyBaseExceptionObject *)self);

  00052	48 8b 4c 24 30	 mov	 rcx, QWORD PTR self$[rsp]
  00057	e8 00 00 00 00	 call	 BaseException_str
$LN1@ImportErro@5:
$LN3@ImportErro@5:

; 688  :     }
; 689  : }

  0005c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00060	c3		 ret	 0
ImportError_str ENDP
_TEXT	ENDS
PUBLIC	winerror_to_errno
EXTRN	__ImageBase:BYTE
;	COMDAT pdata
; File c:\src\pyparallel\pc\errmap.h
pdata	SEGMENT
$pdata$winerror_to_errno DD imagerel $LN82
	DD	imagerel $LN82+1315
	DD	imagerel $unwind$winerror_to_errno
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$winerror_to_errno DD 010801H
	DD	02208H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT winerror_to_errno
_TEXT	SEGMENT
tv64 = 0
winerror$ = 32
winerror_to_errno PROC					; COMDAT

; 3    : {

$LN82:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	48 83 ec 18	 sub	 rsp, 24

; 4    :     switch(winerror) {

  00008	8b 44 24 20	 mov	 eax, DWORD PTR winerror$[rsp]
  0000c	89 04 24	 mov	 DWORD PTR tv64[rsp], eax
  0000f	81 3c 24 0b 01
	00 00		 cmp	 DWORD PTR tv64[rsp], 267 ; 0000010bH
  00016	7f 42		 jg	 SHORT $LN79@winerror_t
  00018	81 3c 24 0b 01
	00 00		 cmp	 DWORD PTR tv64[rsp], 267 ; 0000010bH
  0001f	0f 84 dd 02 00
	00		 je	 $LN3@winerror_t
  00025	8b 04 24	 mov	 eax, DWORD PTR tv64[rsp]
  00028	83 e8 02	 sub	 eax, 2
  0002b	89 04 24	 mov	 DWORD PTR tv64[rsp], eax
  0002e	81 3c 24 e6 00
	00 00		 cmp	 DWORD PTR tv64[rsp], 230 ; 000000e6H
  00035	0f 87 d5 02 00
	00		 ja	 $LN1@winerror_t
  0003b	48 63 04 24	 movsxd	 rax, DWORD PTR tv64[rsp]
  0003f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__ImageBase
  00046	0f b6 84 01 00
	00 00 00	 movzx	 eax, BYTE PTR $LN80@winerror_t[rcx+rax]
  0004e	8b 84 81 00 00
	00 00		 mov	 eax, DWORD PTR $LN81@winerror_t[rcx+rax*4]
  00055	48 03 c1	 add	 rax, rcx
  00058	ff e0		 jmp	 rax
$LN79@winerror_t:
  0005a	81 3c 24 18 07
	00 00		 cmp	 DWORD PTR tv64[rsp], 1816 ; 00000718H
  00061	0f 84 a2 02 00
	00		 je	 $LN2@winerror_t
  00067	e9 a4 02 00 00	 jmp	 $LN1@winerror_t
$LN74@winerror_t:

; 5    :         case 2: return 2;

  0006c	b8 02 00 00 00	 mov	 eax, 2
  00071	e9 9f 02 00 00	 jmp	 $LN77@winerror_t
$LN73@winerror_t:

; 6    :         case 3: return 2;

  00076	b8 02 00 00 00	 mov	 eax, 2
  0007b	e9 95 02 00 00	 jmp	 $LN77@winerror_t
$LN72@winerror_t:

; 7    :         case 4: return 24;

  00080	b8 18 00 00 00	 mov	 eax, 24
  00085	e9 8b 02 00 00	 jmp	 $LN77@winerror_t
$LN71@winerror_t:

; 8    :         case 5: return 13;

  0008a	b8 0d 00 00 00	 mov	 eax, 13
  0008f	e9 81 02 00 00	 jmp	 $LN77@winerror_t
$LN70@winerror_t:

; 9    :         case 6: return 9;

  00094	b8 09 00 00 00	 mov	 eax, 9
  00099	e9 77 02 00 00	 jmp	 $LN77@winerror_t
$LN69@winerror_t:

; 10   :         case 7: return 12;

  0009e	b8 0c 00 00 00	 mov	 eax, 12
  000a3	e9 6d 02 00 00	 jmp	 $LN77@winerror_t
$LN68@winerror_t:

; 11   :         case 8: return 12;

  000a8	b8 0c 00 00 00	 mov	 eax, 12
  000ad	e9 63 02 00 00	 jmp	 $LN77@winerror_t
$LN67@winerror_t:

; 12   :         case 9: return 12;

  000b2	b8 0c 00 00 00	 mov	 eax, 12
  000b7	e9 59 02 00 00	 jmp	 $LN77@winerror_t
$LN66@winerror_t:

; 13   :         case 10: return 7;

  000bc	b8 07 00 00 00	 mov	 eax, 7
  000c1	e9 4f 02 00 00	 jmp	 $LN77@winerror_t
$LN65@winerror_t:

; 14   :         case 11: return 8;

  000c6	b8 08 00 00 00	 mov	 eax, 8
  000cb	e9 45 02 00 00	 jmp	 $LN77@winerror_t
$LN64@winerror_t:

; 15   :         case 15: return 2;

  000d0	b8 02 00 00 00	 mov	 eax, 2
  000d5	e9 3b 02 00 00	 jmp	 $LN77@winerror_t
$LN63@winerror_t:

; 16   :         case 16: return 13;

  000da	b8 0d 00 00 00	 mov	 eax, 13
  000df	e9 31 02 00 00	 jmp	 $LN77@winerror_t
$LN62@winerror_t:

; 17   :         case 17: return 18;

  000e4	b8 12 00 00 00	 mov	 eax, 18
  000e9	e9 27 02 00 00	 jmp	 $LN77@winerror_t
$LN61@winerror_t:

; 18   :         case 18: return 2;

  000ee	b8 02 00 00 00	 mov	 eax, 2
  000f3	e9 1d 02 00 00	 jmp	 $LN77@winerror_t
$LN60@winerror_t:

; 19   :         case 19: return 13;

  000f8	b8 0d 00 00 00	 mov	 eax, 13
  000fd	e9 13 02 00 00	 jmp	 $LN77@winerror_t
$LN59@winerror_t:

; 20   :         case 20: return 13;

  00102	b8 0d 00 00 00	 mov	 eax, 13
  00107	e9 09 02 00 00	 jmp	 $LN77@winerror_t
$LN58@winerror_t:

; 21   :         case 21: return 13;

  0010c	b8 0d 00 00 00	 mov	 eax, 13
  00111	e9 ff 01 00 00	 jmp	 $LN77@winerror_t
$LN57@winerror_t:

; 22   :         case 22: return 13;

  00116	b8 0d 00 00 00	 mov	 eax, 13
  0011b	e9 f5 01 00 00	 jmp	 $LN77@winerror_t
$LN56@winerror_t:

; 23   :         case 23: return 13;

  00120	b8 0d 00 00 00	 mov	 eax, 13
  00125	e9 eb 01 00 00	 jmp	 $LN77@winerror_t
$LN55@winerror_t:

; 24   :         case 24: return 13;

  0012a	b8 0d 00 00 00	 mov	 eax, 13
  0012f	e9 e1 01 00 00	 jmp	 $LN77@winerror_t
$LN54@winerror_t:

; 25   :         case 25: return 13;

  00134	b8 0d 00 00 00	 mov	 eax, 13
  00139	e9 d7 01 00 00	 jmp	 $LN77@winerror_t
$LN53@winerror_t:

; 26   :         case 26: return 13;

  0013e	b8 0d 00 00 00	 mov	 eax, 13
  00143	e9 cd 01 00 00	 jmp	 $LN77@winerror_t
$LN52@winerror_t:

; 27   :         case 27: return 13;

  00148	b8 0d 00 00 00	 mov	 eax, 13
  0014d	e9 c3 01 00 00	 jmp	 $LN77@winerror_t
$LN51@winerror_t:

; 28   :         case 28: return 13;

  00152	b8 0d 00 00 00	 mov	 eax, 13
  00157	e9 b9 01 00 00	 jmp	 $LN77@winerror_t
$LN50@winerror_t:

; 29   :         case 29: return 13;

  0015c	b8 0d 00 00 00	 mov	 eax, 13
  00161	e9 af 01 00 00	 jmp	 $LN77@winerror_t
$LN49@winerror_t:

; 30   :         case 30: return 13;

  00166	b8 0d 00 00 00	 mov	 eax, 13
  0016b	e9 a5 01 00 00	 jmp	 $LN77@winerror_t
$LN48@winerror_t:

; 31   :         case 31: return 13;

  00170	b8 0d 00 00 00	 mov	 eax, 13
  00175	e9 9b 01 00 00	 jmp	 $LN77@winerror_t
$LN47@winerror_t:

; 32   :         case 32: return 13;

  0017a	b8 0d 00 00 00	 mov	 eax, 13
  0017f	e9 91 01 00 00	 jmp	 $LN77@winerror_t
$LN46@winerror_t:

; 33   :         case 33: return 13;

  00184	b8 0d 00 00 00	 mov	 eax, 13
  00189	e9 87 01 00 00	 jmp	 $LN77@winerror_t
$LN45@winerror_t:

; 34   :         case 34: return 13;

  0018e	b8 0d 00 00 00	 mov	 eax, 13
  00193	e9 7d 01 00 00	 jmp	 $LN77@winerror_t
$LN44@winerror_t:

; 35   :         case 35: return 13;

  00198	b8 0d 00 00 00	 mov	 eax, 13
  0019d	e9 73 01 00 00	 jmp	 $LN77@winerror_t
$LN43@winerror_t:

; 36   :         case 36: return 13;

  001a2	b8 0d 00 00 00	 mov	 eax, 13
  001a7	e9 69 01 00 00	 jmp	 $LN77@winerror_t
$LN42@winerror_t:

; 37   :         case 53: return 2;

  001ac	b8 02 00 00 00	 mov	 eax, 2
  001b1	e9 5f 01 00 00	 jmp	 $LN77@winerror_t
$LN41@winerror_t:

; 38   :         case 65: return 13;

  001b6	b8 0d 00 00 00	 mov	 eax, 13
  001bb	e9 55 01 00 00	 jmp	 $LN77@winerror_t
$LN40@winerror_t:

; 39   :         case 67: return 2;

  001c0	b8 02 00 00 00	 mov	 eax, 2
  001c5	e9 4b 01 00 00	 jmp	 $LN77@winerror_t
$LN39@winerror_t:

; 40   :         case 80: return 17;

  001ca	b8 11 00 00 00	 mov	 eax, 17
  001cf	e9 41 01 00 00	 jmp	 $LN77@winerror_t
$LN38@winerror_t:

; 41   :         case 82: return 13;

  001d4	b8 0d 00 00 00	 mov	 eax, 13
  001d9	e9 37 01 00 00	 jmp	 $LN77@winerror_t
$LN37@winerror_t:

; 42   :         case 83: return 13;

  001de	b8 0d 00 00 00	 mov	 eax, 13
  001e3	e9 2d 01 00 00	 jmp	 $LN77@winerror_t
$LN36@winerror_t:

; 43   :         case 89: return 11;

  001e8	b8 0b 00 00 00	 mov	 eax, 11
  001ed	e9 23 01 00 00	 jmp	 $LN77@winerror_t
$LN35@winerror_t:

; 44   :         case 108: return 13;

  001f2	b8 0d 00 00 00	 mov	 eax, 13
  001f7	e9 19 01 00 00	 jmp	 $LN77@winerror_t
$LN34@winerror_t:

; 45   :         case 109: return 32;

  001fc	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00201	e9 0f 01 00 00	 jmp	 $LN77@winerror_t
$LN33@winerror_t:

; 46   :         case 112: return 28;

  00206	b8 1c 00 00 00	 mov	 eax, 28
  0020b	e9 05 01 00 00	 jmp	 $LN77@winerror_t
$LN32@winerror_t:

; 47   :         case 114: return 9;

  00210	b8 09 00 00 00	 mov	 eax, 9
  00215	e9 fb 00 00 00	 jmp	 $LN77@winerror_t
$LN31@winerror_t:

; 48   :         case 128: return 10;

  0021a	b8 0a 00 00 00	 mov	 eax, 10
  0021f	e9 f1 00 00 00	 jmp	 $LN77@winerror_t
$LN30@winerror_t:

; 49   :         case 129: return 10;

  00224	b8 0a 00 00 00	 mov	 eax, 10
  00229	e9 e7 00 00 00	 jmp	 $LN77@winerror_t
$LN29@winerror_t:

; 50   :         case 130: return 9;

  0022e	b8 09 00 00 00	 mov	 eax, 9
  00233	e9 dd 00 00 00	 jmp	 $LN77@winerror_t
$LN28@winerror_t:

; 51   :         case 132: return 13;

  00238	b8 0d 00 00 00	 mov	 eax, 13
  0023d	e9 d3 00 00 00	 jmp	 $LN77@winerror_t
$LN27@winerror_t:

; 52   :         case 145: return 41;

  00242	b8 29 00 00 00	 mov	 eax, 41			; 00000029H
  00247	e9 c9 00 00 00	 jmp	 $LN77@winerror_t
$LN26@winerror_t:

; 53   :         case 158: return 13;

  0024c	b8 0d 00 00 00	 mov	 eax, 13
  00251	e9 bf 00 00 00	 jmp	 $LN77@winerror_t
$LN25@winerror_t:

; 54   :         case 161: return 2;

  00256	b8 02 00 00 00	 mov	 eax, 2
  0025b	e9 b5 00 00 00	 jmp	 $LN77@winerror_t
$LN24@winerror_t:

; 55   :         case 164: return 11;

  00260	b8 0b 00 00 00	 mov	 eax, 11
  00265	e9 ab 00 00 00	 jmp	 $LN77@winerror_t
$LN23@winerror_t:

; 56   :         case 167: return 13;

  0026a	b8 0d 00 00 00	 mov	 eax, 13
  0026f	e9 a1 00 00 00	 jmp	 $LN77@winerror_t
$LN22@winerror_t:

; 57   :         case 183: return 17;

  00274	b8 11 00 00 00	 mov	 eax, 17
  00279	e9 97 00 00 00	 jmp	 $LN77@winerror_t
$LN21@winerror_t:

; 58   :         case 188: return 8;

  0027e	b8 08 00 00 00	 mov	 eax, 8
  00283	e9 8d 00 00 00	 jmp	 $LN77@winerror_t
$LN20@winerror_t:

; 59   :         case 189: return 8;

  00288	b8 08 00 00 00	 mov	 eax, 8
  0028d	e9 83 00 00 00	 jmp	 $LN77@winerror_t
$LN19@winerror_t:

; 60   :         case 190: return 8;

  00292	b8 08 00 00 00	 mov	 eax, 8
  00297	eb 7c		 jmp	 SHORT $LN77@winerror_t
$LN18@winerror_t:

; 61   :         case 191: return 8;

  00299	b8 08 00 00 00	 mov	 eax, 8
  0029e	eb 75		 jmp	 SHORT $LN77@winerror_t
$LN17@winerror_t:

; 62   :         case 192: return 8;

  002a0	b8 08 00 00 00	 mov	 eax, 8
  002a5	eb 6e		 jmp	 SHORT $LN77@winerror_t
$LN16@winerror_t:

; 63   :         case 193: return 8;

  002a7	b8 08 00 00 00	 mov	 eax, 8
  002ac	eb 67		 jmp	 SHORT $LN77@winerror_t
$LN15@winerror_t:

; 64   :         case 194: return 8;

  002ae	b8 08 00 00 00	 mov	 eax, 8
  002b3	eb 60		 jmp	 SHORT $LN77@winerror_t
$LN14@winerror_t:

; 65   :         case 195: return 8;

  002b5	b8 08 00 00 00	 mov	 eax, 8
  002ba	eb 59		 jmp	 SHORT $LN77@winerror_t
$LN13@winerror_t:

; 66   :         case 196: return 8;

  002bc	b8 08 00 00 00	 mov	 eax, 8
  002c1	eb 52		 jmp	 SHORT $LN77@winerror_t
$LN12@winerror_t:

; 67   :         case 197: return 8;

  002c3	b8 08 00 00 00	 mov	 eax, 8
  002c8	eb 4b		 jmp	 SHORT $LN77@winerror_t
$LN11@winerror_t:

; 68   :         case 198: return 8;

  002ca	b8 08 00 00 00	 mov	 eax, 8
  002cf	eb 44		 jmp	 SHORT $LN77@winerror_t
$LN10@winerror_t:

; 69   :         case 199: return 8;

  002d1	b8 08 00 00 00	 mov	 eax, 8
  002d6	eb 3d		 jmp	 SHORT $LN77@winerror_t
$LN9@winerror_t:

; 70   :         case 200: return 8;

  002d8	b8 08 00 00 00	 mov	 eax, 8
  002dd	eb 36		 jmp	 SHORT $LN77@winerror_t
$LN8@winerror_t:

; 71   :         case 201: return 8;

  002df	b8 08 00 00 00	 mov	 eax, 8
  002e4	eb 2f		 jmp	 SHORT $LN77@winerror_t
$LN7@winerror_t:

; 72   :         case 202: return 8;

  002e6	b8 08 00 00 00	 mov	 eax, 8
  002eb	eb 28		 jmp	 SHORT $LN77@winerror_t
$LN6@winerror_t:

; 73   :         case 206: return 2;

  002ed	b8 02 00 00 00	 mov	 eax, 2
  002f2	eb 21		 jmp	 SHORT $LN77@winerror_t
$LN5@winerror_t:

; 74   :         case 215: return 11;

  002f4	b8 0b 00 00 00	 mov	 eax, 11
  002f9	eb 1a		 jmp	 SHORT $LN77@winerror_t
$LN4@winerror_t:

; 75   :         case 232: return 32;

  002fb	b8 20 00 00 00	 mov	 eax, 32			; 00000020H
  00300	eb 13		 jmp	 SHORT $LN77@winerror_t
$LN3@winerror_t:

; 76   :         case 267: return 20;

  00302	b8 14 00 00 00	 mov	 eax, 20
  00307	eb 0c		 jmp	 SHORT $LN77@winerror_t
$LN2@winerror_t:

; 77   :         case 1816: return 12;

  00309	b8 0c 00 00 00	 mov	 eax, 12
  0030e	eb 05		 jmp	 SHORT $LN77@winerror_t
$LN1@winerror_t:

; 78   :         default: return EINVAL;

  00310	b8 16 00 00 00	 mov	 eax, 22
$LN77@winerror_t:

; 79   :     }
; 80   : }

  00315	48 83 c4 18	 add	 rsp, 24
  00319	c3		 ret	 0
  0031a	66 90		 npad	 2
$LN81@winerror_t:
  0031c	00 00 00 00	 DD	 $LN74@winerror_t
  00320	00 00 00 00	 DD	 $LN73@winerror_t
  00324	00 00 00 00	 DD	 $LN72@winerror_t
  00328	00 00 00 00	 DD	 $LN71@winerror_t
  0032c	00 00 00 00	 DD	 $LN70@winerror_t
  00330	00 00 00 00	 DD	 $LN69@winerror_t
  00334	00 00 00 00	 DD	 $LN68@winerror_t
  00338	00 00 00 00	 DD	 $LN67@winerror_t
  0033c	00 00 00 00	 DD	 $LN66@winerror_t
  00340	00 00 00 00	 DD	 $LN65@winerror_t
  00344	00 00 00 00	 DD	 $LN64@winerror_t
  00348	00 00 00 00	 DD	 $LN63@winerror_t
  0034c	00 00 00 00	 DD	 $LN62@winerror_t
  00350	00 00 00 00	 DD	 $LN61@winerror_t
  00354	00 00 00 00	 DD	 $LN60@winerror_t
  00358	00 00 00 00	 DD	 $LN59@winerror_t
  0035c	00 00 00 00	 DD	 $LN58@winerror_t
  00360	00 00 00 00	 DD	 $LN57@winerror_t
  00364	00 00 00 00	 DD	 $LN56@winerror_t
  00368	00 00 00 00	 DD	 $LN55@winerror_t
  0036c	00 00 00 00	 DD	 $LN54@winerror_t
  00370	00 00 00 00	 DD	 $LN53@winerror_t
  00374	00 00 00 00	 DD	 $LN52@winerror_t
  00378	00 00 00 00	 DD	 $LN51@winerror_t
  0037c	00 00 00 00	 DD	 $LN50@winerror_t
  00380	00 00 00 00	 DD	 $LN49@winerror_t
  00384	00 00 00 00	 DD	 $LN48@winerror_t
  00388	00 00 00 00	 DD	 $LN47@winerror_t
  0038c	00 00 00 00	 DD	 $LN46@winerror_t
  00390	00 00 00 00	 DD	 $LN45@winerror_t
  00394	00 00 00 00	 DD	 $LN44@winerror_t
  00398	00 00 00 00	 DD	 $LN43@winerror_t
  0039c	00 00 00 00	 DD	 $LN42@winerror_t
  003a0	00 00 00 00	 DD	 $LN41@winerror_t
  003a4	00 00 00 00	 DD	 $LN40@winerror_t
  003a8	00 00 00 00	 DD	 $LN39@winerror_t
  003ac	00 00 00 00	 DD	 $LN38@winerror_t
  003b0	00 00 00 00	 DD	 $LN37@winerror_t
  003b4	00 00 00 00	 DD	 $LN36@winerror_t
  003b8	00 00 00 00	 DD	 $LN35@winerror_t
  003bc	00 00 00 00	 DD	 $LN34@winerror_t
  003c0	00 00 00 00	 DD	 $LN33@winerror_t
  003c4	00 00 00 00	 DD	 $LN32@winerror_t
  003c8	00 00 00 00	 DD	 $LN31@winerror_t
  003cc	00 00 00 00	 DD	 $LN30@winerror_t
  003d0	00 00 00 00	 DD	 $LN29@winerror_t
  003d4	00 00 00 00	 DD	 $LN28@winerror_t
  003d8	00 00 00 00	 DD	 $LN27@winerror_t
  003dc	00 00 00 00	 DD	 $LN26@winerror_t
  003e0	00 00 00 00	 DD	 $LN25@winerror_t
  003e4	00 00 00 00	 DD	 $LN24@winerror_t
  003e8	00 00 00 00	 DD	 $LN23@winerror_t
  003ec	00 00 00 00	 DD	 $LN22@winerror_t
  003f0	00 00 00 00	 DD	 $LN21@winerror_t
  003f4	00 00 00 00	 DD	 $LN20@winerror_t
  003f8	00 00 00 00	 DD	 $LN19@winerror_t
  003fc	00 00 00 00	 DD	 $LN18@winerror_t
  00400	00 00 00 00	 DD	 $LN17@winerror_t
  00404	00 00 00 00	 DD	 $LN16@winerror_t
  00408	00 00 00 00	 DD	 $LN15@winerror_t
  0040c	00 00 00 00	 DD	 $LN14@winerror_t
  00410	00 00 00 00	 DD	 $LN13@winerror_t
  00414	00 00 00 00	 DD	 $LN12@winerror_t
  00418	00 00 00 00	 DD	 $LN11@winerror_t
  0041c	00 00 00 00	 DD	 $LN10@winerror_t
  00420	00 00 00 00	 DD	 $LN9@winerror_t
  00424	00 00 00 00	 DD	 $LN8@winerror_t
  00428	00 00 00 00	 DD	 $LN7@winerror_t
  0042c	00 00 00 00	 DD	 $LN6@winerror_t
  00430	00 00 00 00	 DD	 $LN5@winerror_t
  00434	00 00 00 00	 DD	 $LN4@winerror_t
  00438	00 00 00 00	 DD	 $LN1@winerror_t
$LN80@winerror_t:
  0043c	00		 DB	 0
  0043d	01		 DB	 1
  0043e	02		 DB	 2
  0043f	03		 DB	 3
  00440	04		 DB	 4
  00441	05		 DB	 5
  00442	06		 DB	 6
  00443	07		 DB	 7
  00444	08		 DB	 8
  00445	09		 DB	 9
  00446	47		 DB	 71			; 00000047H
  00447	47		 DB	 71			; 00000047H
  00448	47		 DB	 71			; 00000047H
  00449	0a		 DB	 10
  0044a	0b		 DB	 11
  0044b	0c		 DB	 12
  0044c	0d		 DB	 13
  0044d	0e		 DB	 14
  0044e	0f		 DB	 15
  0044f	10		 DB	 16
  00450	11		 DB	 17
  00451	12		 DB	 18
  00452	13		 DB	 19
  00453	14		 DB	 20
  00454	15		 DB	 21
  00455	16		 DB	 22
  00456	17		 DB	 23
  00457	18		 DB	 24
  00458	19		 DB	 25
  00459	1a		 DB	 26
  0045a	1b		 DB	 27
  0045b	1c		 DB	 28
  0045c	1d		 DB	 29
  0045d	1e		 DB	 30
  0045e	1f		 DB	 31
  0045f	47		 DB	 71			; 00000047H
  00460	47		 DB	 71			; 00000047H
  00461	47		 DB	 71			; 00000047H
  00462	47		 DB	 71			; 00000047H
  00463	47		 DB	 71			; 00000047H
  00464	47		 DB	 71			; 00000047H
  00465	47		 DB	 71			; 00000047H
  00466	47		 DB	 71			; 00000047H
  00467	47		 DB	 71			; 00000047H
  00468	47		 DB	 71			; 00000047H
  00469	47		 DB	 71			; 00000047H
  0046a	47		 DB	 71			; 00000047H
  0046b	47		 DB	 71			; 00000047H
  0046c	47		 DB	 71			; 00000047H
  0046d	47		 DB	 71			; 00000047H
  0046e	47		 DB	 71			; 00000047H
  0046f	20		 DB	 32			; 00000020H
  00470	47		 DB	 71			; 00000047H
  00471	47		 DB	 71			; 00000047H
  00472	47		 DB	 71			; 00000047H
  00473	47		 DB	 71			; 00000047H
  00474	47		 DB	 71			; 00000047H
  00475	47		 DB	 71			; 00000047H
  00476	47		 DB	 71			; 00000047H
  00477	47		 DB	 71			; 00000047H
  00478	47		 DB	 71			; 00000047H
  00479	47		 DB	 71			; 00000047H
  0047a	47		 DB	 71			; 00000047H
  0047b	21		 DB	 33			; 00000021H
  0047c	47		 DB	 71			; 00000047H
  0047d	22		 DB	 34			; 00000022H
  0047e	47		 DB	 71			; 00000047H
  0047f	47		 DB	 71			; 00000047H
  00480	47		 DB	 71			; 00000047H
  00481	47		 DB	 71			; 00000047H
  00482	47		 DB	 71			; 00000047H
  00483	47		 DB	 71			; 00000047H
  00484	47		 DB	 71			; 00000047H
  00485	47		 DB	 71			; 00000047H
  00486	47		 DB	 71			; 00000047H
  00487	47		 DB	 71			; 00000047H
  00488	47		 DB	 71			; 00000047H
  00489	47		 DB	 71			; 00000047H
  0048a	23		 DB	 35			; 00000023H
  0048b	47		 DB	 71			; 00000047H
  0048c	24		 DB	 36			; 00000024H
  0048d	25		 DB	 37			; 00000025H
  0048e	47		 DB	 71			; 00000047H
  0048f	47		 DB	 71			; 00000047H
  00490	47		 DB	 71			; 00000047H
  00491	47		 DB	 71			; 00000047H
  00492	47		 DB	 71			; 00000047H
  00493	26		 DB	 38			; 00000026H
  00494	47		 DB	 71			; 00000047H
  00495	47		 DB	 71			; 00000047H
  00496	47		 DB	 71			; 00000047H
  00497	47		 DB	 71			; 00000047H
  00498	47		 DB	 71			; 00000047H
  00499	47		 DB	 71			; 00000047H
  0049a	47		 DB	 71			; 00000047H
  0049b	47		 DB	 71			; 00000047H
  0049c	47		 DB	 71			; 00000047H
  0049d	47		 DB	 71			; 00000047H
  0049e	47		 DB	 71			; 00000047H
  0049f	47		 DB	 71			; 00000047H
  004a0	47		 DB	 71			; 00000047H
  004a1	47		 DB	 71			; 00000047H
  004a2	47		 DB	 71			; 00000047H
  004a3	47		 DB	 71			; 00000047H
  004a4	47		 DB	 71			; 00000047H
  004a5	47		 DB	 71			; 00000047H
  004a6	27		 DB	 39			; 00000027H
  004a7	28		 DB	 40			; 00000028H
  004a8	47		 DB	 71			; 00000047H
  004a9	47		 DB	 71			; 00000047H
  004aa	29		 DB	 41			; 00000029H
  004ab	47		 DB	 71			; 00000047H
  004ac	2a		 DB	 42			; 0000002aH
  004ad	47		 DB	 71			; 00000047H
  004ae	47		 DB	 71			; 00000047H
  004af	47		 DB	 71			; 00000047H
  004b0	47		 DB	 71			; 00000047H
  004b1	47		 DB	 71			; 00000047H
  004b2	47		 DB	 71			; 00000047H
  004b3	47		 DB	 71			; 00000047H
  004b4	47		 DB	 71			; 00000047H
  004b5	47		 DB	 71			; 00000047H
  004b6	47		 DB	 71			; 00000047H
  004b7	47		 DB	 71			; 00000047H
  004b8	47		 DB	 71			; 00000047H
  004b9	47		 DB	 71			; 00000047H
  004ba	2b		 DB	 43			; 0000002bH
  004bb	2c		 DB	 44			; 0000002cH
  004bc	2d		 DB	 45			; 0000002dH
  004bd	47		 DB	 71			; 00000047H
  004be	2e		 DB	 46			; 0000002eH
  004bf	47		 DB	 71			; 00000047H
  004c0	47		 DB	 71			; 00000047H
  004c1	47		 DB	 71			; 00000047H
  004c2	47		 DB	 71			; 00000047H
  004c3	47		 DB	 71			; 00000047H
  004c4	47		 DB	 71			; 00000047H
  004c5	47		 DB	 71			; 00000047H
  004c6	47		 DB	 71			; 00000047H
  004c7	47		 DB	 71			; 00000047H
  004c8	47		 DB	 71			; 00000047H
  004c9	47		 DB	 71			; 00000047H
  004ca	47		 DB	 71			; 00000047H
  004cb	2f		 DB	 47			; 0000002fH
  004cc	47		 DB	 71			; 00000047H
  004cd	47		 DB	 71			; 00000047H
  004ce	47		 DB	 71			; 00000047H
  004cf	47		 DB	 71			; 00000047H
  004d0	47		 DB	 71			; 00000047H
  004d1	47		 DB	 71			; 00000047H
  004d2	47		 DB	 71			; 00000047H
  004d3	47		 DB	 71			; 00000047H
  004d4	47		 DB	 71			; 00000047H
  004d5	47		 DB	 71			; 00000047H
  004d6	47		 DB	 71			; 00000047H
  004d7	47		 DB	 71			; 00000047H
  004d8	30		 DB	 48			; 00000030H
  004d9	47		 DB	 71			; 00000047H
  004da	47		 DB	 71			; 00000047H
  004db	31		 DB	 49			; 00000031H
  004dc	47		 DB	 71			; 00000047H
  004dd	47		 DB	 71			; 00000047H
  004de	32		 DB	 50			; 00000032H
  004df	47		 DB	 71			; 00000047H
  004e0	47		 DB	 71			; 00000047H
  004e1	33		 DB	 51			; 00000033H
  004e2	47		 DB	 71			; 00000047H
  004e3	47		 DB	 71			; 00000047H
  004e4	47		 DB	 71			; 00000047H
  004e5	47		 DB	 71			; 00000047H
  004e6	47		 DB	 71			; 00000047H
  004e7	47		 DB	 71			; 00000047H
  004e8	47		 DB	 71			; 00000047H
  004e9	47		 DB	 71			; 00000047H
  004ea	47		 DB	 71			; 00000047H
  004eb	47		 DB	 71			; 00000047H
  004ec	47		 DB	 71			; 00000047H
  004ed	47		 DB	 71			; 00000047H
  004ee	47		 DB	 71			; 00000047H
  004ef	47		 DB	 71			; 00000047H
  004f0	47		 DB	 71			; 00000047H
  004f1	34		 DB	 52			; 00000034H
  004f2	47		 DB	 71			; 00000047H
  004f3	47		 DB	 71			; 00000047H
  004f4	47		 DB	 71			; 00000047H
  004f5	47		 DB	 71			; 00000047H
  004f6	35		 DB	 53			; 00000035H
  004f7	36		 DB	 54			; 00000036H
  004f8	37		 DB	 55			; 00000037H
  004f9	38		 DB	 56			; 00000038H
  004fa	39		 DB	 57			; 00000039H
  004fb	3a		 DB	 58			; 0000003aH
  004fc	3b		 DB	 59			; 0000003bH
  004fd	3c		 DB	 60			; 0000003cH
  004fe	3d		 DB	 61			; 0000003dH
  004ff	3e		 DB	 62			; 0000003eH
  00500	3f		 DB	 63			; 0000003fH
  00501	40		 DB	 64			; 00000040H
  00502	41		 DB	 65			; 00000041H
  00503	42		 DB	 66			; 00000042H
  00504	43		 DB	 67			; 00000043H
  00505	47		 DB	 71			; 00000047H
  00506	47		 DB	 71			; 00000047H
  00507	47		 DB	 71			; 00000047H
  00508	44		 DB	 68			; 00000044H
  00509	47		 DB	 71			; 00000047H
  0050a	47		 DB	 71			; 00000047H
  0050b	47		 DB	 71			; 00000047H
  0050c	47		 DB	 71			; 00000047H
  0050d	47		 DB	 71			; 00000047H
  0050e	47		 DB	 71			; 00000047H
  0050f	47		 DB	 71			; 00000047H
  00510	47		 DB	 71			; 00000047H
  00511	45		 DB	 69			; 00000045H
  00512	47		 DB	 71			; 00000047H
  00513	47		 DB	 71			; 00000047H
  00514	47		 DB	 71			; 00000047H
  00515	47		 DB	 71			; 00000047H
  00516	47		 DB	 71			; 00000047H
  00517	47		 DB	 71			; 00000047H
  00518	47		 DB	 71			; 00000047H
  00519	47		 DB	 71			; 00000047H
  0051a	47		 DB	 71			; 00000047H
  0051b	47		 DB	 71			; 00000047H
  0051c	47		 DB	 71			; 00000047H
  0051d	47		 DB	 71			; 00000047H
  0051e	47		 DB	 71			; 00000047H
  0051f	47		 DB	 71			; 00000047H
  00520	47		 DB	 71			; 00000047H
  00521	47		 DB	 71			; 00000047H
  00522	46		 DB	 70			; 00000046H
winerror_to_errno ENDP
_TEXT	ENDS
PUBLIC	??_C@_1CM@MBNNMDEN@?$AAP?$AAy?$AAT?$AAy?$AAp?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAn?$AAe?$AAw?$AAt?$AAy?$AAp?$AAe?$AA?$CJ?$AA?$AA@ ; `string'
EXTRN	PyErr_Occurred:PROC
EXTRN	PyDict_GetItem:PROC
;	COMDAT pdata
; File c:\src\pyparallel\objects\exceptions.c
pdata	SEGMENT
$pdata$OSError_new DD imagerel OSError_new
	DD	imagerel OSError_new+608
	DD	imagerel $unwind$OSError_new
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$OSError_new DD 011301H
	DD	0c213H
xdata	ENDS
;	COMDAT ??_C@_1CM@MBNNMDEN@?$AAP?$AAy?$AAT?$AAy?$AAp?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAn?$AAe?$AAw?$AAt?$AAy?$AAp?$AAe?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1CM@MBNNMDEN@?$AAP?$AAy?$AAT?$AAy?$AAp?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAn?$AAe?$AAw?$AAt?$AAy?$AAp?$AAe?$AA?$CJ?$AA?$AA@ DB 'P'
	DB	00H, 'y', 00H, 'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, '_', 00H
	DB	'C', 00H, 'h', 00H, 'e', 00H, 'c', 00H, 'k', 00H, '(', 00H, 'n'
	DB	00H, 'e', 00H, 'w', 00H, 't', 00H, 'y', 00H, 'p', 00H, 'e', 00H
	DB	')', 00H, 00H, 00H				; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT OSError_new
_TEXT	SEGMENT
myerrno$ = 48
self$ = 56
winerror$ = 64
strerror$ = 72
filename$ = 80
newtype$21513 = 88
type$ = 112
args$ = 120
kwds$ = 128
OSError_new PROC					; COMDAT

; 881  : {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 68	 sub	 rsp, 104		; 00000068H

; 882  :     PyOSErrorObject *self = NULL;

  00013	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR self$[rsp], 0

; 883  :     PyObject *myerrno = NULL, *strerror = NULL, *filename = NULL;

  0001c	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR myerrno$[rsp], 0
  00025	48 c7 44 24 48
	00 00 00 00	 mov	 QWORD PTR strerror$[rsp], 0
  0002e	48 c7 44 24 50
	00 00 00 00	 mov	 QWORD PTR filename$[rsp], 0

; 884  : #ifdef MS_WINDOWS
; 885  :     PyObject *winerror = NULL;

  00037	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR winerror$[rsp], 0

; 886  : #endif
; 887  : 
; 888  :     if (!oserror_use_init(type)) {

  00040	48 8b 4c 24 70	 mov	 rcx, QWORD PTR type$[rsp]
  00045	e8 00 00 00 00	 call	 oserror_use_init
  0004a	85 c0		 test	 eax, eax
  0004c	0f 85 04 01 00
	00		 jne	 $LN20@OSError_ne

; 889  :         if (!_PyArg_NoKeywords(type->tp_name, kwds))

  00052	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR kwds$[rsp]
  0005a	48 8b 44 24 70	 mov	 rax, QWORD PTR type$[rsp]
  0005f	48 8b 48 70	 mov	 rcx, QWORD PTR [rax+112]
  00063	e8 00 00 00 00	 call	 _PyArg_NoKeywords
  00068	85 c0		 test	 eax, eax
  0006a	75 07		 jne	 SHORT $LN19@OSError_ne

; 890  :             return NULL;

  0006c	33 c0		 xor	 eax, eax
  0006e	e9 e8 01 00 00	 jmp	 $LN21@OSError_ne
$LN19@OSError_ne:

; 891  : 
; 892  :         Py_INCREF(args);

  00073	48 8b 4c 24 78	 mov	 rcx, QWORD PTR args$[rsp]
  00078	e8 00 00 00 00	 call	 _Py_IncRef

; 893  :         if (oserror_parse_args(&args, &myerrno, &strerror, &filename
; 894  : #ifdef MS_WINDOWS
; 895  :                                , &winerror
; 896  : #endif
; 897  :             ))

  0007d	48 8d 44 24 40	 lea	 rax, QWORD PTR winerror$[rsp]
  00082	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00087	4c 8d 4c 24 50	 lea	 r9, QWORD PTR filename$[rsp]
  0008c	4c 8d 44 24 48	 lea	 r8, QWORD PTR strerror$[rsp]
  00091	48 8d 54 24 30	 lea	 rdx, QWORD PTR myerrno$[rsp]
  00096	48 8d 4c 24 78	 lea	 rcx, QWORD PTR args$[rsp]
  0009b	e8 00 00 00 00	 call	 oserror_parse_args
  000a0	85 c0		 test	 eax, eax
  000a2	74 05		 je	 SHORT $LN18@OSError_ne

; 898  :             goto error;

  000a4	e9 80 01 00 00	 jmp	 $error$21509
$LN18@OSError_ne:

; 899  : 
; 900  :         if (myerrno && PyLong_Check(myerrno) &&
; 901  :             errnomap && (PyObject *) type == PyExc_OSError) {

  000a9	48 83 7c 24 30
	00		 cmp	 QWORD PTR myerrno$[rsp], 0
  000af	0f 84 a1 00 00
	00		 je	 $LN17@OSError_ne
  000b5	48 8b 44 24 30	 mov	 rax, QWORD PTR myerrno$[rsp]
  000ba	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  000be	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  000c4	25 00 00 00 01	 and	 eax, 16777216		; 01000000H
  000c9	85 c0		 test	 eax, eax
  000cb	0f 84 85 00 00
	00		 je	 $LN17@OSError_ne
  000d1	48 83 3d 00 00
	00 00 00	 cmp	 QWORD PTR errnomap, 0
  000d9	74 7b		 je	 SHORT $LN17@OSError_ne
  000db	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR PyExc_OSError
  000e2	48 39 44 24 70	 cmp	 QWORD PTR type$[rsp], rax
  000e7	75 6d		 jne	 SHORT $LN17@OSError_ne

; 902  :             PyObject *newtype;
; 903  :             newtype = PyDict_GetItem(errnomap, myerrno);

  000e9	48 8b 54 24 30	 mov	 rdx, QWORD PTR myerrno$[rsp]
  000ee	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  000f5	e8 00 00 00 00	 call	 PyDict_GetItem
  000fa	48 89 44 24 58	 mov	 QWORD PTR newtype$21513[rsp], rax

; 904  :             if (newtype) {

  000ff	48 83 7c 24 58
	00		 cmp	 QWORD PTR newtype$21513[rsp], 0
  00105	74 40		 je	 SHORT $LN16@OSError_ne

; 905  :                 assert(PyType_Check(newtype));

  00107	48 8b 44 24 58	 mov	 rax, QWORD PTR newtype$21513[rsp]
  0010c	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00110	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  00116	25 00 00 00 80	 and	 eax, -2147483648	; ffffffff80000000H
  0011b	85 c0		 test	 eax, eax
  0011d	75 1c		 jne	 SHORT $LN23@OSError_ne
  0011f	41 b8 89 03 00
	00		 mov	 r8d, 905		; 00000389H
  00125	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  0012c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CM@MBNNMDEN@?$AAP?$AAy?$AAT?$AAy?$AAp?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAn?$AAe?$AAw?$AAt?$AAy?$AAp?$AAe?$AA?$CJ?$AA?$AA@
  00133	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  00139	33 c0		 xor	 eax, eax
$LN23@OSError_ne:

; 906  :                 type = (PyTypeObject *) newtype;

  0013b	48 8b 44 24 58	 mov	 rax, QWORD PTR newtype$21513[rsp]
  00140	48 89 44 24 70	 mov	 QWORD PTR type$[rsp], rax
  00145	eb 0f		 jmp	 SHORT $LN15@OSError_ne
$LN16@OSError_ne:

; 907  :             }
; 908  :             else if (PyErr_Occurred())

  00147	e8 00 00 00 00	 call	 PyErr_Occurred
  0014c	48 85 c0	 test	 rax, rax
  0014f	74 05		 je	 SHORT $LN14@OSError_ne

; 909  :                 goto error;

  00151	e9 d3 00 00 00	 jmp	 $error$21509
$LN14@OSError_ne:
$LN15@OSError_ne:
$LN17@OSError_ne:
$LN20@OSError_ne:

; 910  :         }
; 911  :     }
; 912  : 
; 913  :     self = (PyOSErrorObject *) type->tp_alloc(type, 0);

  00156	33 d2		 xor	 edx, edx
  00158	48 8b 4c 24 70	 mov	 rcx, QWORD PTR type$[rsp]
  0015d	48 8b 44 24 70	 mov	 rax, QWORD PTR type$[rsp]
  00162	ff 90 88 01 00
	00		 call	 QWORD PTR [rax+392]
  00168	48 89 44 24 38	 mov	 QWORD PTR self$[rsp], rax

; 914  :     if (!self)

  0016d	48 83 7c 24 38
	00		 cmp	 QWORD PTR self$[rsp], 0
  00173	75 05		 jne	 SHORT $LN13@OSError_ne

; 915  :         goto error;

  00175	e9 af 00 00 00	 jmp	 $error$21509
$LN13@OSError_ne:

; 916  : 
; 917  :     self->dict = NULL;

  0017a	48 8b 44 24 38	 mov	 rax, QWORD PTR self$[rsp]
  0017f	48 c7 40 60 00
	00 00 00	 mov	 QWORD PTR [rax+96], 0

; 918  :     self->traceback = self->cause = self->context = NULL;

  00187	48 8b 44 24 38	 mov	 rax, QWORD PTR self$[rsp]
  0018c	48 c7 40 78 00
	00 00 00	 mov	 QWORD PTR [rax+120], 0
  00194	48 8b 44 24 38	 mov	 rax, QWORD PTR self$[rsp]
  00199	48 c7 80 80 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+128], 0
  001a4	48 8b 44 24 38	 mov	 rax, QWORD PTR self$[rsp]
  001a9	48 c7 40 70 00
	00 00 00	 mov	 QWORD PTR [rax+112], 0

; 919  :     self->written = -1;

  001b1	48 8b 44 24 38	 mov	 rax, QWORD PTR self$[rsp]
  001b6	48 c7 80 b0 00
	00 00 ff ff ff
	ff		 mov	 QWORD PTR [rax+176], -1

; 920  : 
; 921  :     if (!oserror_use_init(type)) {

  001c1	48 8b 4c 24 70	 mov	 rcx, QWORD PTR type$[rsp]
  001c6	e8 00 00 00 00	 call	 oserror_use_init
  001cb	85 c0		 test	 eax, eax
  001cd	75 35		 jne	 SHORT $LN12@OSError_ne

; 922  :         if (oserror_init(self, &args, myerrno, strerror, filename
; 923  : #ifdef MS_WINDOWS
; 924  :                          , winerror
; 925  : #endif
; 926  :             ))

  001cf	48 8b 44 24 40	 mov	 rax, QWORD PTR winerror$[rsp]
  001d4	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  001d9	48 8b 44 24 50	 mov	 rax, QWORD PTR filename$[rsp]
  001de	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  001e3	4c 8b 4c 24 48	 mov	 r9, QWORD PTR strerror$[rsp]
  001e8	4c 8b 44 24 30	 mov	 r8, QWORD PTR myerrno$[rsp]
  001ed	48 8d 54 24 78	 lea	 rdx, QWORD PTR args$[rsp]
  001f2	48 8b 4c 24 38	 mov	 rcx, QWORD PTR self$[rsp]
  001f7	e8 00 00 00 00	 call	 oserror_init
  001fc	85 c0		 test	 eax, eax
  001fe	74 02		 je	 SHORT $LN11@OSError_ne

; 927  :             goto error;

  00200	eb 27		 jmp	 SHORT $error$21509
$LN11@OSError_ne:

; 928  :     }
; 929  :     else {

  00202	eb 1e		 jmp	 SHORT $LN10@OSError_ne
$LN12@OSError_ne:

; 930  :         self->args = PyTuple_New(0);

  00204	33 c9		 xor	 ecx, ecx
  00206	e8 00 00 00 00	 call	 PyTuple_New
  0020b	48 8b 4c 24 38	 mov	 rcx, QWORD PTR self$[rsp]
  00210	48 89 41 68	 mov	 QWORD PTR [rcx+104], rax

; 931  :         if (self->args == NULL)

  00214	48 8b 44 24 38	 mov	 rax, QWORD PTR self$[rsp]
  00219	48 83 78 68 00	 cmp	 QWORD PTR [rax+104], 0
  0021e	75 02		 jne	 SHORT $LN9@OSError_ne

; 932  :             goto error;

  00220	eb 07		 jmp	 SHORT $error$21509
$LN9@OSError_ne:
$LN10@OSError_ne:

; 933  :     }
; 934  : 
; 935  :     return (PyObject *) self;

  00222	48 8b 44 24 38	 mov	 rax, QWORD PTR self$[rsp]
  00227	eb 32		 jmp	 SHORT $LN21@OSError_ne
$error$21509:
$LN8@OSError_ne:

; 936  : 
; 937  : error:
; 938  :     Py_XDECREF(args);

  00229	48 83 7c 24 78
	00		 cmp	 QWORD PTR args$[rsp], 0
  0022f	74 0a		 je	 SHORT $LN5@OSError_ne
  00231	48 8b 4c 24 78	 mov	 rcx, QWORD PTR args$[rsp]
  00236	e8 00 00 00 00	 call	 _Py_DecRef
$LN5@OSError_ne:
  0023b	33 c0		 xor	 eax, eax
  0023d	85 c0		 test	 eax, eax
  0023f	75 e8		 jne	 SHORT $LN8@OSError_ne
$LN4@OSError_ne:

; 939  :     Py_XDECREF(self);

  00241	48 83 7c 24 38
	00		 cmp	 QWORD PTR self$[rsp], 0
  00247	74 0a		 je	 SHORT $LN1@OSError_ne
  00249	48 8b 4c 24 38	 mov	 rcx, QWORD PTR self$[rsp]
  0024e	e8 00 00 00 00	 call	 _Py_DecRef
$LN1@OSError_ne:
  00253	33 c0		 xor	 eax, eax
  00255	85 c0		 test	 eax, eax
  00257	75 e8		 jne	 SHORT $LN4@OSError_ne

; 940  :     return NULL;

  00259	33 c0		 xor	 eax, eax
$LN21@OSError_ne:

; 941  : }

  0025b	48 83 c4 68	 add	 rsp, 104		; 00000068H
  0025f	c3		 ret	 0
OSError_new ENDP
_TEXT	ENDS
EXTRN	PyLong_FromLong:PROC
EXTRN	PyLong_AsLong:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$oserror_parse_args DD imagerel oserror_parse_args
	DD	imagerel oserror_parse_args+533
	DD	imagerel $unwind$oserror_parse_args
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$oserror_parse_args DD 011801H
	DD	0e218H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT oserror_parse_args
_TEXT	SEGMENT
args$ = 64
nargs$ = 72
newargs$21394 = 80
i$21395 = 88
winerrcode$21393 = 96
errcode$21392 = 100
val$21405 = 104
p_args$ = 128
myerrno$ = 136
strerror$ = 144
filename$ = 152
winerror$ = 160
oserror_parse_args PROC					; COMDAT

; 741  : {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 78	 sub	 rsp, 120		; 00000078H

; 742  :     Py_ssize_t nargs;
; 743  :     PyObject *args = *p_args;

  00018	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR p_args$[rsp]
  00020	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00023	48 89 44 24 40	 mov	 QWORD PTR args$[rsp], rax

; 744  : 
; 745  :     nargs = PyTuple_GET_SIZE(args);

  00028	48 8b 44 24 40	 mov	 rax, QWORD PTR args$[rsp]
  0002d	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  00031	48 89 44 24 48	 mov	 QWORD PTR nargs$[rsp], rax

; 746  : 
; 747  : #ifdef MS_WINDOWS
; 748  :     if (nargs >= 2 && nargs <= 4) {

  00036	48 83 7c 24 48
	02		 cmp	 QWORD PTR nargs$[rsp], 2
  0003c	0f 8c cc 01 00
	00		 jl	 $LN11@oserror_pa
  00042	48 83 7c 24 48
	04		 cmp	 QWORD PTR nargs$[rsp], 4
  00048	0f 8f c0 01 00
	00		 jg	 $LN11@oserror_pa

; 749  :         if (!PyArg_UnpackTuple(args, "OSError", 2, 4,
; 750  :                                myerrno, strerror, filename, winerror))

  0004e	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR winerror$[rsp]
  00056	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  0005b	48 8b 84 24 98
	00 00 00	 mov	 rax, QWORD PTR filename$[rsp]
  00063	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  00068	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR strerror$[rsp]
  00070	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00075	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR myerrno$[rsp]
  0007d	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00082	41 b9 04 00 00
	00		 mov	 r9d, 4
  00088	41 b8 02 00 00
	00		 mov	 r8d, 2
  0008e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_07DLGONEPD@OSError?$AA@
  00095	48 8b 4c 24 40	 mov	 rcx, QWORD PTR args$[rsp]
  0009a	e8 00 00 00 00	 call	 PyArg_UnpackTuple
  0009f	85 c0		 test	 eax, eax
  000a1	75 0a		 jne	 SHORT $LN10@oserror_pa

; 751  :             return -1;

  000a3	b8 ff ff ff ff	 mov	 eax, -1
  000a8	e9 63 01 00 00	 jmp	 $LN12@oserror_pa
$LN10@oserror_pa:

; 752  :         if (*winerror && PyLong_Check(*winerror)) {

  000ad	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR winerror$[rsp]
  000b5	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  000b9	0f 84 4f 01 00
	00		 je	 $LN9@oserror_pa
  000bf	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR winerror$[rsp]
  000c7	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ca	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  000ce	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  000d4	25 00 00 00 01	 and	 eax, 16777216		; 01000000H
  000d9	85 c0		 test	 eax, eax
  000db	0f 84 2d 01 00
	00		 je	 $LN9@oserror_pa

; 753  :             long errcode, winerrcode;
; 754  :             PyObject *newargs;
; 755  :             Py_ssize_t i;
; 756  : 
; 757  :             winerrcode = PyLong_AsLong(*winerror);

  000e1	48 8b 84 24 a0
	00 00 00	 mov	 rax, QWORD PTR winerror$[rsp]
  000e9	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  000ec	e8 00 00 00 00	 call	 PyLong_AsLong
  000f1	89 44 24 60	 mov	 DWORD PTR winerrcode$21393[rsp], eax

; 758  :             if (winerrcode == -1 && PyErr_Occurred())

  000f5	83 7c 24 60 ff	 cmp	 DWORD PTR winerrcode$21393[rsp], -1
  000fa	75 14		 jne	 SHORT $LN8@oserror_pa
  000fc	e8 00 00 00 00	 call	 PyErr_Occurred
  00101	48 85 c0	 test	 rax, rax
  00104	74 0a		 je	 SHORT $LN8@oserror_pa

; 759  :                 return -1;

  00106	b8 ff ff ff ff	 mov	 eax, -1
  0010b	e9 00 01 00 00	 jmp	 $LN12@oserror_pa
$LN8@oserror_pa:

; 760  :             /* Set errno to the corresponding POSIX errno (overriding
; 761  :                first argument).  Windows Socket error codes (>= 10000)
; 762  :                have the same value as their POSIX counterparts.
; 763  :             */
; 764  :             if (winerrcode < 10000)

  00110	81 7c 24 60 10
	27 00 00	 cmp	 DWORD PTR winerrcode$21393[rsp], 10000 ; 00002710H
  00118	7d 0f		 jge	 SHORT $LN7@oserror_pa

; 765  :                 errcode = winerror_to_errno(winerrcode);

  0011a	8b 4c 24 60	 mov	 ecx, DWORD PTR winerrcode$21393[rsp]
  0011e	e8 00 00 00 00	 call	 winerror_to_errno
  00123	89 44 24 64	 mov	 DWORD PTR errcode$21392[rsp], eax

; 766  :             else

  00127	eb 08		 jmp	 SHORT $LN6@oserror_pa
$LN7@oserror_pa:

; 767  :                 errcode = winerrcode;

  00129	8b 44 24 60	 mov	 eax, DWORD PTR winerrcode$21393[rsp]
  0012d	89 44 24 64	 mov	 DWORD PTR errcode$21392[rsp], eax
$LN6@oserror_pa:

; 768  :             *myerrno = PyLong_FromLong(errcode);

  00131	8b 4c 24 64	 mov	 ecx, DWORD PTR errcode$21392[rsp]
  00135	e8 00 00 00 00	 call	 PyLong_FromLong
  0013a	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR myerrno$[rsp]
  00142	48 89 01	 mov	 QWORD PTR [rcx], rax

; 769  :             if (!*myerrno)

  00145	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR myerrno$[rsp]
  0014d	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00151	75 0a		 jne	 SHORT $LN5@oserror_pa

; 770  :                 return -1;

  00153	b8 ff ff ff ff	 mov	 eax, -1
  00158	e9 b3 00 00 00	 jmp	 $LN12@oserror_pa
$LN5@oserror_pa:

; 771  :             newargs = PyTuple_New(nargs);

  0015d	48 8b 4c 24 48	 mov	 rcx, QWORD PTR nargs$[rsp]
  00162	e8 00 00 00 00	 call	 PyTuple_New
  00167	48 89 44 24 50	 mov	 QWORD PTR newargs$21394[rsp], rax

; 772  :             if (!newargs)

  0016c	48 83 7c 24 50
	00		 cmp	 QWORD PTR newargs$21394[rsp], 0
  00172	75 0a		 jne	 SHORT $LN4@oserror_pa

; 773  :                 return -1;

  00174	b8 ff ff ff ff	 mov	 eax, -1
  00179	e9 92 00 00 00	 jmp	 $LN12@oserror_pa
$LN4@oserror_pa:

; 774  :             PyTuple_SET_ITEM(newargs, 0, *myerrno);

  0017e	48 8b 44 24 50	 mov	 rax, QWORD PTR newargs$21394[rsp]
  00183	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR myerrno$[rsp]
  0018b	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0018e	48 89 48 70	 mov	 QWORD PTR [rax+112], rcx

; 775  :             for (i = 1; i < nargs; i++) {

  00192	48 c7 44 24 58
	01 00 00 00	 mov	 QWORD PTR i$21395[rsp], 1
  0019b	eb 0d		 jmp	 SHORT $LN3@oserror_pa
$LN2@oserror_pa:
  0019d	48 8b 44 24 58	 mov	 rax, QWORD PTR i$21395[rsp]
  001a2	48 ff c0	 inc	 rax
  001a5	48 89 44 24 58	 mov	 QWORD PTR i$21395[rsp], rax
$LN3@oserror_pa:
  001aa	48 8b 44 24 48	 mov	 rax, QWORD PTR nargs$[rsp]
  001af	48 39 44 24 58	 cmp	 QWORD PTR i$21395[rsp], rax
  001b4	7d 34		 jge	 SHORT $LN1@oserror_pa

; 776  :                 PyObject *val = PyTuple_GET_ITEM(args, i);

  001b6	48 8b 44 24 40	 mov	 rax, QWORD PTR args$[rsp]
  001bb	48 8b 4c 24 58	 mov	 rcx, QWORD PTR i$21395[rsp]
  001c0	48 8b 44 c8 70	 mov	 rax, QWORD PTR [rax+rcx*8+112]
  001c5	48 89 44 24 68	 mov	 QWORD PTR val$21405[rsp], rax

; 777  :                 Py_INCREF(val);

  001ca	48 8b 4c 24 68	 mov	 rcx, QWORD PTR val$21405[rsp]
  001cf	e8 00 00 00 00	 call	 _Py_IncRef

; 778  :                 PyTuple_SET_ITEM(newargs, i, val);

  001d4	48 8b 44 24 50	 mov	 rax, QWORD PTR newargs$21394[rsp]
  001d9	48 8b 4c 24 58	 mov	 rcx, QWORD PTR i$21395[rsp]
  001de	48 8b 54 24 68	 mov	 rdx, QWORD PTR val$21405[rsp]
  001e3	48 89 54 c8 70	 mov	 QWORD PTR [rax+rcx*8+112], rdx

; 779  :             }

  001e8	eb b3		 jmp	 SHORT $LN2@oserror_pa
$LN1@oserror_pa:

; 780  :             Py_DECREF(args);

  001ea	48 8b 4c 24 40	 mov	 rcx, QWORD PTR args$[rsp]
  001ef	e8 00 00 00 00	 call	 _Py_DecRef

; 781  :             args = *p_args = newargs;

  001f4	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR p_args$[rsp]
  001fc	48 8b 4c 24 50	 mov	 rcx, QWORD PTR newargs$21394[rsp]
  00201	48 89 08	 mov	 QWORD PTR [rax], rcx
  00204	48 8b 44 24 50	 mov	 rax, QWORD PTR newargs$21394[rsp]
  00209	48 89 44 24 40	 mov	 QWORD PTR args$[rsp], rax
$LN9@oserror_pa:
$LN11@oserror_pa:

; 782  :         }
; 783  :     }
; 784  : #else
; 785  :     if (nargs >= 2 && nargs <= 3) {
; 786  :         if (!PyArg_UnpackTuple(args, "OSError", 2, 3,
; 787  :                                myerrno, strerror, filename))
; 788  :             return -1;
; 789  :     }
; 790  : #endif
; 791  : 
; 792  :     return 0;

  0020e	33 c0		 xor	 eax, eax
$LN12@oserror_pa:

; 793  : }

  00210	48 83 c4 78	 add	 rsp, 120		; 00000078H
  00214	c3		 ret	 0
oserror_parse_args ENDP
_TEXT	ENDS
PUBLIC	??_C@_0N@ELNMHBPI@oserror_init?$AA@		; `string'
EXTRN	PyTuple_GetSlice:PROC
EXTRN	PyNumber_AsSsize_t:PROC
EXTRN	PyNumber_Check:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$oserror_init DD imagerel oserror_init
	DD	imagerel oserror_init+577
	DD	imagerel $unwind$oserror_init
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$oserror_init DD 011801H
	DD	0a218H
xdata	ENDS
;	COMDAT ??_C@_0N@ELNMHBPI@oserror_init?$AA@
CONST	SEGMENT
??_C@_0N@ELNMHBPI@oserror_init?$AA@ DB 'oserror_init', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT oserror_init
_TEXT	SEGMENT
args$ = 48
nargs$ = 56
subslice$21435 = 64
_py_tmp$21458 = 72
self$ = 96
p_args$ = 104
myerrno$ = 112
strerror$ = 120
filename$ = 128
winerror$ = 136
oserror_init PROC					; COMDAT

; 803  : {

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 58	 sub	 rsp, 88			; 00000058H

; 804  :     PyObject *args = *p_args;

  00018	48 8b 44 24 68	 mov	 rax, QWORD PTR p_args$[rsp]
  0001d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00020	48 89 44 24 30	 mov	 QWORD PTR args$[rsp], rax

; 805  :     Py_ssize_t nargs = PyTuple_GET_SIZE(args);

  00025	48 8b 44 24 30	 mov	 rax, QWORD PTR args$[rsp]
  0002a	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  0002e	48 89 44 24 38	 mov	 QWORD PTR nargs$[rsp], rax

; 806  : 
; 807  :     /* self->filename will remain Py_None otherwise */
; 808  :     if (filename && filename != Py_None) {

  00033	48 83 bc 24 80
	00 00 00 00	 cmp	 QWORD PTR filename$[rsp], 0
  0003c	0f 84 f8 00 00
	00		 je	 $LN22@oserror_in
  00042	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_NoneStruct
  00049	48 39 84 24 80
	00 00 00	 cmp	 QWORD PTR filename$[rsp], rax
  00051	0f 84 e3 00 00
	00		 je	 $LN22@oserror_in

; 809  :         if (Py_TYPE(self) == (PyTypeObject *) PyExc_BlockingIOError &&
; 810  :             PyNumber_Check(filename)) {

  00057	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  0005c	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_BlockingIOError
  00063	48 39 48 58	 cmp	 QWORD PTR [rax+88], rcx
  00067	75 56		 jne	 SHORT $LN21@oserror_in
  00069	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR filename$[rsp]
  00071	e8 00 00 00 00	 call	 PyNumber_Check
  00076	85 c0		 test	 eax, eax
  00078	74 45		 je	 SHORT $LN21@oserror_in

; 811  :             /* BlockingIOError's 3rd argument can be the number of
; 812  :              * characters written.
; 813  :              */
; 814  :             self->written = PyNumber_AsSsize_t(filename, PyExc_ValueError);

  0007a	48 8b 15 00 00
	00 00		 mov	 rdx, QWORD PTR PyExc_ValueError
  00081	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR filename$[rsp]
  00089	e8 00 00 00 00	 call	 PyNumber_AsSsize_t
  0008e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR self$[rsp]
  00093	48 89 81 b0 00
	00 00		 mov	 QWORD PTR [rcx+176], rax

; 815  :             if (self->written == -1 && PyErr_Occurred())

  0009a	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  0009f	48 83 b8 b0 00
	00 00 ff	 cmp	 QWORD PTR [rax+176], -1
  000a7	75 14		 jne	 SHORT $LN20@oserror_in
  000a9	e8 00 00 00 00	 call	 PyErr_Occurred
  000ae	48 85 c0	 test	 rax, rax
  000b1	74 0a		 je	 SHORT $LN20@oserror_in

; 816  :                 return -1;

  000b3	b8 ff ff ff ff	 mov	 eax, -1
  000b8	e9 7f 01 00 00	 jmp	 $LN23@oserror_in
$LN20@oserror_in:

; 817  :         }
; 818  :         else {

  000bd	eb 7b		 jmp	 SHORT $LN19@oserror_in
$LN21@oserror_in:

; 819  :             Py_INCREF(filename);

  000bf	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR filename$[rsp]
  000c7	e8 00 00 00 00	 call	 _Py_IncRef

; 820  :             self->filename = filename;

  000cc	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  000d1	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR filename$[rsp]
  000d9	48 89 88 a0 00
	00 00		 mov	 QWORD PTR [rax+160], rcx

; 821  : 
; 822  :             if (nargs >= 2 && nargs <= 3) {

  000e0	48 83 7c 24 38
	02		 cmp	 QWORD PTR nargs$[rsp], 2
  000e6	7c 52		 jl	 SHORT $LN18@oserror_in
  000e8	48 83 7c 24 38
	03		 cmp	 QWORD PTR nargs$[rsp], 3
  000ee	7f 4a		 jg	 SHORT $LN18@oserror_in

; 823  :                 /* filename is removed from the args tuple (for compatibility
; 824  :                    purposes, see test_exceptions.py) */
; 825  :                 PyObject *subslice = PyTuple_GetSlice(args, 0, 2);

  000f0	41 b8 02 00 00
	00		 mov	 r8d, 2
  000f6	33 d2		 xor	 edx, edx
  000f8	48 8b 4c 24 30	 mov	 rcx, QWORD PTR args$[rsp]
  000fd	e8 00 00 00 00	 call	 PyTuple_GetSlice
  00102	48 89 44 24 40	 mov	 QWORD PTR subslice$21435[rsp], rax

; 826  :                 if (!subslice)

  00107	48 83 7c 24 40
	00		 cmp	 QWORD PTR subslice$21435[rsp], 0
  0010d	75 0a		 jne	 SHORT $LN17@oserror_in

; 827  :                     return -1;

  0010f	b8 ff ff ff ff	 mov	 eax, -1
  00114	e9 23 01 00 00	 jmp	 $LN23@oserror_in
$LN17@oserror_in:

; 828  : 
; 829  :                 Py_DECREF(args);  /* replacing args */

  00119	48 8b 4c 24 30	 mov	 rcx, QWORD PTR args$[rsp]
  0011e	e8 00 00 00 00	 call	 _Py_DecRef

; 830  :                 *p_args = args = subslice;

  00123	48 8b 44 24 40	 mov	 rax, QWORD PTR subslice$21435[rsp]
  00128	48 89 44 24 30	 mov	 QWORD PTR args$[rsp], rax
  0012d	48 8b 44 24 68	 mov	 rax, QWORD PTR p_args$[rsp]
  00132	48 8b 4c 24 30	 mov	 rcx, QWORD PTR args$[rsp]
  00137	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN18@oserror_in:
$LN19@oserror_in:
$LN22@oserror_in:
$LN16@oserror_in:

; 831  :             }
; 832  :         }
; 833  :     }
; 834  :     Py_XINCREF(myerrno);

  0013a	48 83 7c 24 70
	00		 cmp	 QWORD PTR myerrno$[rsp], 0
  00140	74 0a		 je	 SHORT $LN13@oserror_in
  00142	48 8b 4c 24 70	 mov	 rcx, QWORD PTR myerrno$[rsp]
  00147	e8 00 00 00 00	 call	 _Py_IncRef
$LN13@oserror_in:
  0014c	33 c0		 xor	 eax, eax
  0014e	85 c0		 test	 eax, eax
  00150	75 e8		 jne	 SHORT $LN16@oserror_in

; 835  :     self->myerrno = myerrno;

  00152	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  00157	48 8b 4c 24 70	 mov	 rcx, QWORD PTR myerrno$[rsp]
  0015c	48 89 88 90 00
	00 00		 mov	 QWORD PTR [rax+144], rcx
$LN12@oserror_in:

; 836  : 
; 837  :     Py_XINCREF(strerror);

  00163	48 83 7c 24 78
	00		 cmp	 QWORD PTR strerror$[rsp], 0
  00169	74 0a		 je	 SHORT $LN9@oserror_in
  0016b	48 8b 4c 24 78	 mov	 rcx, QWORD PTR strerror$[rsp]
  00170	e8 00 00 00 00	 call	 _Py_IncRef
$LN9@oserror_in:
  00175	33 c0		 xor	 eax, eax
  00177	85 c0		 test	 eax, eax
  00179	75 e8		 jne	 SHORT $LN12@oserror_in

; 838  :     self->strerror = strerror;

  0017b	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  00180	48 8b 4c 24 78	 mov	 rcx, QWORD PTR strerror$[rsp]
  00185	48 89 88 98 00
	00 00		 mov	 QWORD PTR [rax+152], rcx
$LN8@oserror_in:

; 839  : 
; 840  : #ifdef MS_WINDOWS
; 841  :     Py_XINCREF(winerror);

  0018c	48 83 bc 24 88
	00 00 00 00	 cmp	 QWORD PTR winerror$[rsp], 0
  00195	74 0d		 je	 SHORT $LN5@oserror_in
  00197	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR winerror$[rsp]
  0019f	e8 00 00 00 00	 call	 _Py_IncRef
$LN5@oserror_in:
  001a4	33 c0		 xor	 eax, eax
  001a6	85 c0		 test	 eax, eax
  001a8	75 e2		 jne	 SHORT $LN8@oserror_in

; 842  :     self->winerror = winerror;

  001aa	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  001af	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR winerror$[rsp]
  001b7	48 89 88 a8 00
	00 00		 mov	 QWORD PTR [rax+168], rcx
$LN4@oserror_in:

; 843  : #endif
; 844  : 
; 845  :     /* Steals the reference to args */
; 846  :     Py_CLEAR(self->args);

  001be	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  001c3	48 83 78 68 00	 cmp	 QWORD PTR [rax+104], 0
  001c8	74 53		 je	 SHORT $LN1@oserror_in
  001ca	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  001d2	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  001d7	4c 8b 48 68	 mov	 r9, QWORD PTR [rax+104]
  001db	41 b8 4e 03 00
	00		 mov	 r8d, 846		; 0000034eH
  001e1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  001e8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0N@ELNMHBPI@oserror_init?$AA@
  001ef	e8 00 00 00 00	 call	 _PyParallel_Guard
  001f4	85 c0		 test	 eax, eax
  001f6	75 25		 jne	 SHORT $LN1@oserror_in
  001f8	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  001fd	48 8b 40 68	 mov	 rax, QWORD PTR [rax+104]
  00201	48 89 44 24 48	 mov	 QWORD PTR _py_tmp$21458[rsp], rax
  00206	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  0020b	48 c7 40 68 00
	00 00 00	 mov	 QWORD PTR [rax+104], 0
  00213	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _py_tmp$21458[rsp]
  00218	e8 00 00 00 00	 call	 _Py_DecRef
$LN1@oserror_in:
  0021d	33 c0		 xor	 eax, eax
  0021f	85 c0		 test	 eax, eax
  00221	75 9b		 jne	 SHORT $LN4@oserror_in

; 847  :     self->args = args;

  00223	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  00228	48 8b 4c 24 30	 mov	 rcx, QWORD PTR args$[rsp]
  0022d	48 89 48 68	 mov	 QWORD PTR [rax+104], rcx

; 848  :     args = NULL;

  00231	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR args$[rsp], 0

; 849  : 
; 850  :     return 0;

  0023a	33 c0		 xor	 eax, eax
$LN23@oserror_in:

; 851  : }

  0023c	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00240	c3		 ret	 0
oserror_init ENDP
_TEXT	ENDS
PUBLIC	??_C@_1EG@PMFFLPGD@?$AA?$CI?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAO?$AAS?$AAE?$AAr?$AAr@ ; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$oserror_use_init DD imagerel oserror_use_init
	DD	imagerel oserror_use_init+107
	DD	imagerel $unwind$oserror_use_init
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$oserror_use_init DD 010901H
	DD	04209H
xdata	ENDS
;	COMDAT ??_C@_1EG@PMFFLPGD@?$AA?$CI?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAO?$AAS?$AAE?$AAr?$AAr@
CONST	SEGMENT
??_C@_1EG@PMFFLPGD@?$AA?$CI?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAO?$AAS?$AAE?$AAr?$AAr@ DB '('
	DB	00H, 'P', 00H, 'y', 00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, ' ', 00H, '*', 00H, ')', 00H, ' ', 00H, 't'
	DB	00H, 'y', 00H, 'p', 00H, 'e', 00H, ' ', 00H, '!', 00H, '=', 00H
	DB	' ', 00H, 'P', 00H, 'y', 00H, 'E', 00H, 'x', 00H, 'c', 00H, '_'
	DB	00H, 'O', 00H, 'S', 00H, 'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H
	DB	'r', 00H, 00H, 00H				; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT oserror_use_init
_TEXT	SEGMENT
type$ = 48
oserror_use_init PROC					; COMDAT

; 860  : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 861  :     /* When __init__ is defined in a OSError subclass, we want any
; 862  :        extraneous argument to __new__ to be ignored.  The only reasonable
; 863  :        solution, given __new__ takes a variable number of arguments,
; 864  :        is to defer arg parsing and initialization to __init__.
; 865  : 
; 866  :        But when __new__ is overriden as well, it should call our __new__
; 867  :        with the right arguments.
; 868  : 
; 869  :        (see http://bugs.python.org/issue12555#msg148829 )
; 870  :     */
; 871  :     if (type->tp_init != (initproc) OSError_init &&
; 872  :         type->tp_new == (newfunc) OSError_new) {

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR type$[rsp]
  0000e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:OSError_init
  00015	48 39 88 80 01
	00 00		 cmp	 QWORD PTR [rax+384], rcx
  0001c	74 46		 je	 SHORT $LN1@oserror_us
  0001e	48 8b 44 24 30	 mov	 rax, QWORD PTR type$[rsp]
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:OSError_new
  0002a	48 39 88 90 01
	00 00		 cmp	 QWORD PTR [rax+400], rcx
  00031	75 31		 jne	 SHORT $LN1@oserror_us

; 873  :         assert((PyObject *) type != PyExc_OSError);

  00033	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR PyExc_OSError
  0003a	48 39 44 24 30	 cmp	 QWORD PTR type$[rsp], rax
  0003f	75 1c		 jne	 SHORT $LN4@oserror_us
  00041	41 b8 69 03 00
	00		 mov	 r8d, 873		; 00000369H
  00047	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  0004e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EG@PMFFLPGD@?$AA?$CI?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?5?$AA?$CK?$AA?$CJ?$AA?5?$AAt?$AAy?$AAp?$AAe?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAO?$AAS?$AAE?$AAr?$AAr@
  00055	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  0005b	33 c0		 xor	 eax, eax
$LN4@oserror_us:

; 874  :         return 1;

  0005d	b8 01 00 00 00	 mov	 eax, 1
  00062	eb 02		 jmp	 SHORT $LN2@oserror_us
$LN1@oserror_us:

; 875  :     }
; 876  :     return 0;

  00064	33 c0		 xor	 eax, eax
$LN2@oserror_us:

; 877  : }

  00066	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006a	c3		 ret	 0
oserror_use_init ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$OSError_init DD imagerel OSError_init
	DD	imagerel OSError_init+257
	DD	imagerel $unwind$OSError_init
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$OSError_init DD 011301H
	DD	0a213H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT OSError_init
_TEXT	SEGMENT
myerrno$ = 48
winerror$ = 56
strerror$ = 64
filename$ = 72
self$ = 96
args$ = 104
kwds$ = 112
OSError_init PROC					; COMDAT

; 945  : {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 58	 sub	 rsp, 88			; 00000058H

; 946  :     PyObject *myerrno = NULL, *strerror = NULL, *filename = NULL;

  00013	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR myerrno$[rsp], 0
  0001c	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR strerror$[rsp], 0
  00025	48 c7 44 24 48
	00 00 00 00	 mov	 QWORD PTR filename$[rsp], 0

; 947  : #ifdef MS_WINDOWS
; 948  :     PyObject *winerror = NULL;

  0002e	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR winerror$[rsp], 0

; 949  : #endif
; 950  : 
; 951  :     if (!oserror_use_init(Py_TYPE(self)))

  00037	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  0003c	48 8b 48 58	 mov	 rcx, QWORD PTR [rax+88]
  00040	e8 00 00 00 00	 call	 oserror_use_init
  00045	85 c0		 test	 eax, eax
  00047	75 07		 jne	 SHORT $LN8@OSError_in

; 952  :         /* Everything already done in OSError_new */
; 953  :         return 0;

  00049	33 c0		 xor	 eax, eax
  0004b	e9 ac 00 00 00	 jmp	 $LN9@OSError_in
$LN8@OSError_in:

; 954  : 
; 955  :     if (!_PyArg_NoKeywords(Py_TYPE(self)->tp_name, kwds))

  00050	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  00055	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00059	48 8b 54 24 70	 mov	 rdx, QWORD PTR kwds$[rsp]
  0005e	48 8b 48 70	 mov	 rcx, QWORD PTR [rax+112]
  00062	e8 00 00 00 00	 call	 _PyArg_NoKeywords
  00067	85 c0		 test	 eax, eax
  00069	75 0a		 jne	 SHORT $LN7@OSError_in

; 956  :         return -1;

  0006b	b8 ff ff ff ff	 mov	 eax, -1
  00070	e9 87 00 00 00	 jmp	 $LN9@OSError_in
$LN7@OSError_in:

; 957  : 
; 958  :     Py_INCREF(args);

  00075	48 8b 4c 24 68	 mov	 rcx, QWORD PTR args$[rsp]
  0007a	e8 00 00 00 00	 call	 _Py_IncRef

; 959  :     if (oserror_parse_args(&args, &myerrno, &strerror, &filename
; 960  : #ifdef MS_WINDOWS
; 961  :                            , &winerror
; 962  : #endif
; 963  :         ))

  0007f	48 8d 44 24 38	 lea	 rax, QWORD PTR winerror$[rsp]
  00084	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00089	4c 8d 4c 24 48	 lea	 r9, QWORD PTR filename$[rsp]
  0008e	4c 8d 44 24 40	 lea	 r8, QWORD PTR strerror$[rsp]
  00093	48 8d 54 24 30	 lea	 rdx, QWORD PTR myerrno$[rsp]
  00098	48 8d 4c 24 68	 lea	 rcx, QWORD PTR args$[rsp]
  0009d	e8 00 00 00 00	 call	 oserror_parse_args
  000a2	85 c0		 test	 eax, eax
  000a4	74 02		 je	 SHORT $LN6@OSError_in

; 964  :         goto error;

  000a6	eb 37		 jmp	 SHORT $error$21563
$LN6@OSError_in:

; 965  : 
; 966  :     if (oserror_init(self, &args, myerrno, strerror, filename
; 967  : #ifdef MS_WINDOWS
; 968  :                      , winerror
; 969  : #endif
; 970  :         ))

  000a8	48 8b 44 24 38	 mov	 rax, QWORD PTR winerror$[rsp]
  000ad	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000b2	48 8b 44 24 48	 mov	 rax, QWORD PTR filename$[rsp]
  000b7	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000bc	4c 8b 4c 24 40	 mov	 r9, QWORD PTR strerror$[rsp]
  000c1	4c 8b 44 24 30	 mov	 r8, QWORD PTR myerrno$[rsp]
  000c6	48 8d 54 24 68	 lea	 rdx, QWORD PTR args$[rsp]
  000cb	48 8b 4c 24 60	 mov	 rcx, QWORD PTR self$[rsp]
  000d0	e8 00 00 00 00	 call	 oserror_init
  000d5	85 c0		 test	 eax, eax
  000d7	74 02		 je	 SHORT $LN5@OSError_in

; 971  :         goto error;

  000d9	eb 04		 jmp	 SHORT $error$21563
$LN5@OSError_in:

; 972  : 
; 973  :     return 0;

  000db	33 c0		 xor	 eax, eax
  000dd	eb 1d		 jmp	 SHORT $LN9@OSError_in
$error$21563:
$LN4@OSError_in:

; 974  : 
; 975  : error:
; 976  :     Py_XDECREF(args);

  000df	48 83 7c 24 68
	00		 cmp	 QWORD PTR args$[rsp], 0
  000e5	74 0a		 je	 SHORT $LN1@OSError_in
  000e7	48 8b 4c 24 68	 mov	 rcx, QWORD PTR args$[rsp]
  000ec	e8 00 00 00 00	 call	 _Py_DecRef
$LN1@OSError_in:
  000f1	33 c0		 xor	 eax, eax
  000f3	85 c0		 test	 eax, eax
  000f5	75 e8		 jne	 SHORT $LN4@OSError_in

; 977  :     return -1;

  000f7	b8 ff ff ff ff	 mov	 eax, -1
$LN9@OSError_in:

; 978  : }

  000fc	48 83 c4 58	 add	 rsp, 88			; 00000058H
  00100	c3		 ret	 0
OSError_init ENDP
_TEXT	ENDS
PUBLIC	??_C@_0O@EDGPPLNL@OSError_clear?$AA@		; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$OSError_clear DD imagerel OSError_clear
	DD	imagerel OSError_clear+476
	DD	imagerel $unwind$OSError_clear
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$OSError_clear DD 010901H
	DD	0a209H
xdata	ENDS
;	COMDAT ??_C@_0O@EDGPPLNL@OSError_clear?$AA@
CONST	SEGMENT
??_C@_0O@EDGPPLNL@OSError_clear?$AA@ DB 'OSError_clear', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT OSError_clear
_TEXT	SEGMENT
_py_tmp$21579 = 48
_py_tmp$21587 = 56
_py_tmp$21595 = 64
_py_tmp$21603 = 72
self$ = 96
OSError_clear PROC					; COMDAT

; 982  : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 58	 sub	 rsp, 88			; 00000058H
$LN16@OSError_cl:

; 983  :     Py_CLEAR(self->myerrno);

  00009	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  0000e	48 83 b8 90 00
	00 00 00	 cmp	 QWORD PTR [rax+144], 0
  00016	74 5c		 je	 SHORT $LN13@OSError_cl
  00018	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00020	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  00025	4c 8b 88 90 00
	00 00		 mov	 r9, QWORD PTR [rax+144]
  0002c	41 b8 d7 03 00
	00		 mov	 r8d, 983		; 000003d7H
  00032	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0O@EDGPPLNL@OSError_clear?$AA@
  00040	e8 00 00 00 00	 call	 _PyParallel_Guard
  00045	85 c0		 test	 eax, eax
  00047	75 2b		 jne	 SHORT $LN13@OSError_cl
  00049	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  0004e	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]
  00055	48 89 44 24 30	 mov	 QWORD PTR _py_tmp$21579[rsp], rax
  0005a	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  0005f	48 c7 80 90 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+144], 0
  0006a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _py_tmp$21579[rsp]
  0006f	e8 00 00 00 00	 call	 _Py_DecRef
$LN13@OSError_cl:
  00074	33 c0		 xor	 eax, eax
  00076	85 c0		 test	 eax, eax
  00078	75 8f		 jne	 SHORT $LN16@OSError_cl
$LN12@OSError_cl:

; 984  :     Py_CLEAR(self->strerror);

  0007a	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  0007f	48 83 b8 98 00
	00 00 00	 cmp	 QWORD PTR [rax+152], 0
  00087	74 5c		 je	 SHORT $LN9@OSError_cl
  00089	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00091	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  00096	4c 8b 88 98 00
	00 00		 mov	 r9, QWORD PTR [rax+152]
  0009d	41 b8 d8 03 00
	00		 mov	 r8d, 984		; 000003d8H
  000a3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  000aa	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0O@EDGPPLNL@OSError_clear?$AA@
  000b1	e8 00 00 00 00	 call	 _PyParallel_Guard
  000b6	85 c0		 test	 eax, eax
  000b8	75 2b		 jne	 SHORT $LN9@OSError_cl
  000ba	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  000bf	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  000c6	48 89 44 24 38	 mov	 QWORD PTR _py_tmp$21587[rsp], rax
  000cb	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  000d0	48 c7 80 98 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+152], 0
  000db	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _py_tmp$21587[rsp]
  000e0	e8 00 00 00 00	 call	 _Py_DecRef
$LN9@OSError_cl:
  000e5	33 c0		 xor	 eax, eax
  000e7	85 c0		 test	 eax, eax
  000e9	75 8f		 jne	 SHORT $LN12@OSError_cl
$LN8@OSError_cl:

; 985  :     Py_CLEAR(self->filename);

  000eb	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  000f0	48 83 b8 a0 00
	00 00 00	 cmp	 QWORD PTR [rax+160], 0
  000f8	74 5c		 je	 SHORT $LN5@OSError_cl
  000fa	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00102	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  00107	4c 8b 88 a0 00
	00 00		 mov	 r9, QWORD PTR [rax+160]
  0010e	41 b8 d9 03 00
	00		 mov	 r8d, 985		; 000003d9H
  00114	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0011b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0O@EDGPPLNL@OSError_clear?$AA@
  00122	e8 00 00 00 00	 call	 _PyParallel_Guard
  00127	85 c0		 test	 eax, eax
  00129	75 2b		 jne	 SHORT $LN5@OSError_cl
  0012b	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  00130	48 8b 80 a0 00
	00 00		 mov	 rax, QWORD PTR [rax+160]
  00137	48 89 44 24 40	 mov	 QWORD PTR _py_tmp$21595[rsp], rax
  0013c	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  00141	48 c7 80 a0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+160], 0
  0014c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _py_tmp$21595[rsp]
  00151	e8 00 00 00 00	 call	 _Py_DecRef
$LN5@OSError_cl:
  00156	33 c0		 xor	 eax, eax
  00158	85 c0		 test	 eax, eax
  0015a	75 8f		 jne	 SHORT $LN8@OSError_cl
$LN4@OSError_cl:

; 986  : #ifdef MS_WINDOWS
; 987  :     Py_CLEAR(self->winerror);

  0015c	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  00161	48 83 b8 a8 00
	00 00 00	 cmp	 QWORD PTR [rax+168], 0
  00169	74 5c		 je	 SHORT $LN1@OSError_cl
  0016b	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00173	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  00178	4c 8b 88 a8 00
	00 00		 mov	 r9, QWORD PTR [rax+168]
  0017f	41 b8 db 03 00
	00		 mov	 r8d, 987		; 000003dbH
  00185	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0018c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0O@EDGPPLNL@OSError_clear?$AA@
  00193	e8 00 00 00 00	 call	 _PyParallel_Guard
  00198	85 c0		 test	 eax, eax
  0019a	75 2b		 jne	 SHORT $LN1@OSError_cl
  0019c	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  001a1	48 8b 80 a8 00
	00 00		 mov	 rax, QWORD PTR [rax+168]
  001a8	48 89 44 24 48	 mov	 QWORD PTR _py_tmp$21603[rsp], rax
  001ad	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  001b2	48 c7 80 a8 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+168], 0
  001bd	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _py_tmp$21603[rsp]
  001c2	e8 00 00 00 00	 call	 _Py_DecRef
$LN1@OSError_cl:
  001c7	33 c0		 xor	 eax, eax
  001c9	85 c0		 test	 eax, eax
  001cb	75 8f		 jne	 SHORT $LN4@OSError_cl

; 988  : #endif
; 989  :     return BaseException_clear((PyBaseExceptionObject *)self);

  001cd	48 8b 4c 24 60	 mov	 rcx, QWORD PTR self$[rsp]
  001d2	e8 00 00 00 00	 call	 BaseException_clear

; 990  : }

  001d7	48 83 c4 58	 add	 rsp, 88			; 00000058H
  001db	c3		 ret	 0
OSError_clear ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BA@JGCCKJH@OSError_dealloc?$AA@		; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$OSError_dealloc DD imagerel OSError_dealloc
	DD	imagerel OSError_dealloc+283
	DD	imagerel $unwind$OSError_dealloc
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$OSError_dealloc DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT ??_C@_0BA@JGCCKJH@OSError_dealloc?$AA@
CONST	SEGMENT
??_C@_0BA@JGCCKJH@OSError_dealloc?$AA@ DB 'OSError_dealloc', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT OSError_dealloc
_TEXT	SEGMENT
g$21617 = 48
tv79 = 56
self$ = 80
OSError_dealloc PROC					; COMDAT

; 994  : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 995  :     _PyObject_GC_UNTRACK(self);

  00009	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00011	4c 8b 4c 24 50	 mov	 r9, QWORD PTR self$[rsp]
  00016	41 b8 e3 03 00
	00		 mov	 r8d, 995		; 000003e3H
  0001c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JGCCKJH@OSError_dealloc?$AA@
  0002a	e8 00 00 00 00	 call	 _PyParallel_Guard
  0002f	85 c0		 test	 eax, eax
  00031	0f 85 c1 00 00
	00		 jne	 $LN4@OSError_de
$LN3@OSError_de:
  00037	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0003f	4c 8b 4c 24 50	 mov	 r9, QWORD PTR self$[rsp]
  00044	41 b8 e3 03 00
	00		 mov	 r8d, 995		; 000003e3H
  0004a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00051	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JGCCKJH@OSError_dealloc?$AA@
  00058	e8 00 00 00 00	 call	 _PyParallel_Guard
  0005d	85 c0		 test	 eax, eax
  0005f	74 0b		 je	 SHORT $LN7@OSError_de
  00061	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR tv79[rsp], 0
  0006a	eb 0e		 jmp	 SHORT $LN8@OSError_de
$LN7@OSError_de:
  0006c	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00071	48 83 e8 18	 sub	 rax, 24
  00075	48 89 44 24 38	 mov	 QWORD PTR tv79[rsp], rax
$LN8@OSError_de:
  0007a	48 8b 44 24 38	 mov	 rax, QWORD PTR tv79[rsp]
  0007f	48 89 44 24 30	 mov	 QWORD PTR g$21617[rsp], rax
  00084	48 8b 44 24 30	 mov	 rax, QWORD PTR g$21617[rsp]
  00089	48 83 78 10 fe	 cmp	 QWORD PTR [rax+16], -2
  0008e	75 1c		 jne	 SHORT $LN9@OSError_de
  00090	41 b8 e3 03 00
	00		 mov	 r8d, 995		; 000003e3H
  00096	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  0009d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EM@HFMJMDDM@?$AAg?$AA?9?$AA?$DO?$AAg?$AAc?$AA?4?$AAg?$AAc?$AA_?$AAr?$AAe?$AAf?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA_?$AAP?$AAy?$AAG?$AAC?$AA_?$AAR?$AAE?$AAF?$AAS?$AA_?$AAU?$AAN?$AAT?$AAR@
  000a4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  000aa	33 c0		 xor	 eax, eax
$LN9@OSError_de:
  000ac	48 8b 44 24 30	 mov	 rax, QWORD PTR g$21617[rsp]
  000b1	48 c7 40 10 fe
	ff ff ff	 mov	 QWORD PTR [rax+16], -2
  000b9	48 8b 44 24 30	 mov	 rax, QWORD PTR g$21617[rsp]
  000be	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000c2	48 8b 4c 24 30	 mov	 rcx, QWORD PTR g$21617[rsp]
  000c7	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000ca	48 89 08	 mov	 QWORD PTR [rax], rcx
  000cd	48 8b 44 24 30	 mov	 rax, QWORD PTR g$21617[rsp]
  000d2	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000d5	48 8b 4c 24 30	 mov	 rcx, QWORD PTR g$21617[rsp]
  000da	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  000de	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  000e2	48 8b 44 24 30	 mov	 rax, QWORD PTR g$21617[rsp]
  000e7	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  000ee	33 c0		 xor	 eax, eax
  000f0	85 c0		 test	 eax, eax
  000f2	0f 85 3f ff ff
	ff		 jne	 $LN3@OSError_de
$LN4@OSError_de:

; 996  :     OSError_clear(self);

  000f8	48 8b 4c 24 50	 mov	 rcx, QWORD PTR self$[rsp]
  000fd	e8 00 00 00 00	 call	 OSError_clear

; 997  :     Py_TYPE(self)->tp_free((PyObject *)self);

  00102	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00107	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  0010b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR self$[rsp]
  00110	ff 90 98 01 00
	00		 call	 QWORD PTR [rax+408]

; 998  : }

  00116	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0011a	c3		 ret	 0
OSError_dealloc ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BB@LNFOOONC@OSError_traverse?$AA@	; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$OSError_traverse DD imagerel OSError_traverse
	DD	imagerel OSError_traverse+434
	DD	imagerel $unwind$OSError_traverse
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$OSError_traverse DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT ??_C@_0BB@LNFOOONC@OSError_traverse?$AA@
CONST	SEGMENT
??_C@_0BB@LNFOOONC@OSError_traverse?$AA@ DB 'OSError_traverse', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT OSError_traverse
_TEXT	SEGMENT
vret$21638 = 32
vret$21646 = 36
vret$21654 = 40
vret$21662 = 44
self$ = 64
visit$ = 72
arg$ = 80
OSError_traverse PROC					; COMDAT

; 1003 : {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H
$LN24@OSError_tr:

; 1004 :     Py_VISIT(self->myerrno);

  00013	e8 00 00 00 00	 call	 _Py_PXCTX
  00018	85 c0		 test	 eax, eax
  0001a	74 1c		 je	 SHORT $LN21@OSError_tr
  0001c	45 33 c9	 xor	 r9d, r9d
  0001f	41 b8 ec 03 00
	00		 mov	 r8d, 1004		; 000003ecH
  00025	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0002c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@LNFOOONC@OSError_traverse?$AA@
  00033	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN21@OSError_tr:
  00038	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  0003d	48 83 b8 90 00
	00 00 00	 cmp	 QWORD PTR [rax+144], 0
  00045	74 29		 je	 SHORT $LN20@OSError_tr
  00047	48 8b 54 24 50	 mov	 rdx, QWORD PTR arg$[rsp]
  0004c	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  00051	48 8b 88 90 00
	00 00		 mov	 rcx, QWORD PTR [rax+144]
  00058	ff 54 24 48	 call	 QWORD PTR visit$[rsp]
  0005c	89 44 24 20	 mov	 DWORD PTR vret$21638[rsp], eax
  00060	83 7c 24 20 00	 cmp	 DWORD PTR vret$21638[rsp], 0
  00065	74 09		 je	 SHORT $LN19@OSError_tr
  00067	8b 44 24 20	 mov	 eax, DWORD PTR vret$21638[rsp]
  0006b	e9 3d 01 00 00	 jmp	 $LN25@OSError_tr
$LN19@OSError_tr:
$LN20@OSError_tr:
  00070	33 c0		 xor	 eax, eax
  00072	85 c0		 test	 eax, eax
  00074	75 9d		 jne	 SHORT $LN24@OSError_tr
$LN18@OSError_tr:

; 1005 :     Py_VISIT(self->strerror);

  00076	e8 00 00 00 00	 call	 _Py_PXCTX
  0007b	85 c0		 test	 eax, eax
  0007d	74 1c		 je	 SHORT $LN15@OSError_tr
  0007f	45 33 c9	 xor	 r9d, r9d
  00082	41 b8 ed 03 00
	00		 mov	 r8d, 1005		; 000003edH
  00088	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0008f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@LNFOOONC@OSError_traverse?$AA@
  00096	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN15@OSError_tr:
  0009b	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  000a0	48 83 b8 98 00
	00 00 00	 cmp	 QWORD PTR [rax+152], 0
  000a8	74 29		 je	 SHORT $LN14@OSError_tr
  000aa	48 8b 54 24 50	 mov	 rdx, QWORD PTR arg$[rsp]
  000af	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  000b4	48 8b 88 98 00
	00 00		 mov	 rcx, QWORD PTR [rax+152]
  000bb	ff 54 24 48	 call	 QWORD PTR visit$[rsp]
  000bf	89 44 24 24	 mov	 DWORD PTR vret$21646[rsp], eax
  000c3	83 7c 24 24 00	 cmp	 DWORD PTR vret$21646[rsp], 0
  000c8	74 09		 je	 SHORT $LN13@OSError_tr
  000ca	8b 44 24 24	 mov	 eax, DWORD PTR vret$21646[rsp]
  000ce	e9 da 00 00 00	 jmp	 $LN25@OSError_tr
$LN13@OSError_tr:
$LN14@OSError_tr:
  000d3	33 c0		 xor	 eax, eax
  000d5	85 c0		 test	 eax, eax
  000d7	75 9d		 jne	 SHORT $LN18@OSError_tr
$LN12@OSError_tr:

; 1006 :     Py_VISIT(self->filename);

  000d9	e8 00 00 00 00	 call	 _Py_PXCTX
  000de	85 c0		 test	 eax, eax
  000e0	74 1c		 je	 SHORT $LN9@OSError_tr
  000e2	45 33 c9	 xor	 r9d, r9d
  000e5	41 b8 ee 03 00
	00		 mov	 r8d, 1006		; 000003eeH
  000eb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  000f2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@LNFOOONC@OSError_traverse?$AA@
  000f9	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN9@OSError_tr:
  000fe	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  00103	48 83 b8 a0 00
	00 00 00	 cmp	 QWORD PTR [rax+160], 0
  0010b	74 26		 je	 SHORT $LN8@OSError_tr
  0010d	48 8b 54 24 50	 mov	 rdx, QWORD PTR arg$[rsp]
  00112	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  00117	48 8b 88 a0 00
	00 00		 mov	 rcx, QWORD PTR [rax+160]
  0011e	ff 54 24 48	 call	 QWORD PTR visit$[rsp]
  00122	89 44 24 28	 mov	 DWORD PTR vret$21654[rsp], eax
  00126	83 7c 24 28 00	 cmp	 DWORD PTR vret$21654[rsp], 0
  0012b	74 06		 je	 SHORT $LN7@OSError_tr
  0012d	8b 44 24 28	 mov	 eax, DWORD PTR vret$21654[rsp]
  00131	eb 7a		 jmp	 SHORT $LN25@OSError_tr
$LN7@OSError_tr:
$LN8@OSError_tr:
  00133	33 c0		 xor	 eax, eax
  00135	85 c0		 test	 eax, eax
  00137	75 a0		 jne	 SHORT $LN12@OSError_tr
$LN6@OSError_tr:

; 1007 : #ifdef MS_WINDOWS
; 1008 :     Py_VISIT(self->winerror);

  00139	e8 00 00 00 00	 call	 _Py_PXCTX
  0013e	85 c0		 test	 eax, eax
  00140	74 1c		 je	 SHORT $LN3@OSError_tr
  00142	45 33 c9	 xor	 r9d, r9d
  00145	41 b8 f0 03 00
	00		 mov	 r8d, 1008		; 000003f0H
  0014b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00152	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@LNFOOONC@OSError_traverse?$AA@
  00159	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN3@OSError_tr:
  0015e	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  00163	48 83 b8 a8 00
	00 00 00	 cmp	 QWORD PTR [rax+168], 0
  0016b	74 26		 je	 SHORT $LN2@OSError_tr
  0016d	48 8b 54 24 50	 mov	 rdx, QWORD PTR arg$[rsp]
  00172	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  00177	48 8b 88 a8 00
	00 00		 mov	 rcx, QWORD PTR [rax+168]
  0017e	ff 54 24 48	 call	 QWORD PTR visit$[rsp]
  00182	89 44 24 2c	 mov	 DWORD PTR vret$21662[rsp], eax
  00186	83 7c 24 2c 00	 cmp	 DWORD PTR vret$21662[rsp], 0
  0018b	74 06		 je	 SHORT $LN1@OSError_tr
  0018d	8b 44 24 2c	 mov	 eax, DWORD PTR vret$21662[rsp]
  00191	eb 1a		 jmp	 SHORT $LN25@OSError_tr
$LN1@OSError_tr:
$LN2@OSError_tr:
  00193	33 c0		 xor	 eax, eax
  00195	85 c0		 test	 eax, eax
  00197	75 a0		 jne	 SHORT $LN6@OSError_tr

; 1009 : #endif
; 1010 :     return BaseException_traverse((PyBaseExceptionObject *)self, visit, arg);

  00199	4c 8b 44 24 50	 mov	 r8, QWORD PTR arg$[rsp]
  0019e	48 8b 54 24 48	 mov	 rdx, QWORD PTR visit$[rsp]
  001a3	48 8b 4c 24 40	 mov	 rcx, QWORD PTR self$[rsp]
  001a8	e8 00 00 00 00	 call	 BaseException_traverse
$LN25@OSError_tr:

; 1011 : }

  001ad	48 83 c4 38	 add	 rsp, 56			; 00000038H
  001b1	c3		 ret	 0
OSError_traverse ENDP
_TEXT	ENDS
PUBLIC	??_C@_0O@OFFGPKPD@?$FLErrno?5?$CFS?$FN?5?$CFS?$AA@ ; `string'
PUBLIC	??_C@_0BC@ONKJBHKO@?$FLErrno?5?$CFS?$FN?5?$CFS?3?5?$CFR?$AA@ ; `string'
PUBLIC	??_C@_0BB@JOELBMEG@?$FLWinError?5?$CFS?$FN?5?$CFS?$AA@ ; `string'
PUBLIC	??_C@_0BF@FCNBMBLM@?$FLWinError?5?$CFS?$FN?5?$CFS?3?5?$CFR?$AA@ ; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$OSError_str DD imagerel OSError_str
	DD	imagerel OSError_str+646
	DD	imagerel $unwind$OSError_str
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$OSError_str DD 010901H
	DD	0c209H
xdata	ENDS
;	COMDAT ??_C@_0O@OFFGPKPD@?$FLErrno?5?$CFS?$FN?5?$CFS?$AA@
CONST	SEGMENT
??_C@_0O@OFFGPKPD@?$FLErrno?5?$CFS?$FN?5?$CFS?$AA@ DB '[Errno %S] %S', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@ONKJBHKO@?$FLErrno?5?$CFS?$FN?5?$CFS?3?5?$CFR?$AA@
CONST	SEGMENT
??_C@_0BC@ONKJBHKO@?$FLErrno?5?$CFS?$FN?5?$CFS?3?5?$CFR?$AA@ DB '[Errno %'
	DB	'S] %S: %R', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@JOELBMEG@?$FLWinError?5?$CFS?$FN?5?$CFS?$AA@
CONST	SEGMENT
??_C@_0BB@JOELBMEG@?$FLWinError?5?$CFS?$FN?5?$CFS?$AA@ DB '[WinError %S] '
	DB	'%S', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BF@FCNBMBLM@?$FLWinError?5?$CFS?$FN?5?$CFS?3?5?$CFR?$AA@
CONST	SEGMENT
??_C@_0BF@FCNBMBLM@?$FLWinError?5?$CFS?$FN?5?$CFS?3?5?$CFR?$AA@ DB '[WinE'
	DB	'rror %S] %S: %R', 00H			; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT OSError_str
_TEXT	SEGMENT
tv74 = 32
tv79 = 40
tv90 = 48
tv95 = 56
tv138 = 64
tv143 = 72
tv154 = 80
tv159 = 88
self$ = 112
OSError_str PROC					; COMDAT

; 1015 : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 68	 sub	 rsp, 104		; 00000068H

; 1016 : #ifdef MS_WINDOWS
; 1017 :     /* If available, winerror has the priority over myerrno */
; 1018 :     if (self->winerror && self->filename)

  00009	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  0000e	48 83 b8 a8 00
	00 00 00	 cmp	 QWORD PTR [rax+168], 0
  00016	0f 84 96 00 00
	00		 je	 $LN4@OSError_st
  0001c	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00021	48 83 b8 a0 00
	00 00 00	 cmp	 QWORD PTR [rax+160], 0
  00029	0f 84 83 00 00
	00		 je	 $LN4@OSError_st

; 1019 :         return PyUnicode_FromFormat("[WinError %S] %S: %R",
; 1020 :                                     self->winerror ? self->winerror: Py_None,
; 1021 :                                     self->strerror ? self->strerror: Py_None,
; 1022 :                                     self->filename);

  0002f	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00034	48 83 b8 98 00
	00 00 00	 cmp	 QWORD PTR [rax+152], 0
  0003c	74 13		 je	 SHORT $LN7@OSError_st
  0003e	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00043	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  0004a	48 89 44 24 20	 mov	 QWORD PTR tv74[rsp], rax
  0004f	eb 0c		 jmp	 SHORT $LN8@OSError_st
$LN7@OSError_st:
  00051	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_NoneStruct
  00058	48 89 44 24 20	 mov	 QWORD PTR tv74[rsp], rax
$LN8@OSError_st:
  0005d	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00062	48 83 b8 a8 00
	00 00 00	 cmp	 QWORD PTR [rax+168], 0
  0006a	74 13		 je	 SHORT $LN9@OSError_st
  0006c	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00071	48 8b 80 a8 00
	00 00		 mov	 rax, QWORD PTR [rax+168]
  00078	48 89 44 24 28	 mov	 QWORD PTR tv79[rsp], rax
  0007d	eb 0c		 jmp	 SHORT $LN10@OSError_st
$LN9@OSError_st:
  0007f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_NoneStruct
  00086	48 89 44 24 28	 mov	 QWORD PTR tv79[rsp], rax
$LN10@OSError_st:
  0008b	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00090	4c 8b 88 a0 00
	00 00		 mov	 r9, QWORD PTR [rax+160]
  00097	4c 8b 44 24 20	 mov	 r8, QWORD PTR tv74[rsp]
  0009c	48 8b 54 24 28	 mov	 rdx, QWORD PTR tv79[rsp]
  000a1	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BF@FCNBMBLM@?$FLWinError?5?$CFS?$FN?5?$CFS?3?5?$CFR?$AA@
  000a8	e8 00 00 00 00	 call	 PyUnicode_FromFormat
  000ad	e9 cf 01 00 00	 jmp	 $LN5@OSError_st
$LN4@OSError_st:

; 1023 :     if (self->winerror && self->strerror)

  000b2	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  000b7	48 83 b8 a8 00
	00 00 00	 cmp	 QWORD PTR [rax+168], 0
  000bf	0f 84 86 00 00
	00		 je	 $LN3@OSError_st
  000c5	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  000ca	48 83 b8 98 00
	00 00 00	 cmp	 QWORD PTR [rax+152], 0
  000d2	74 77		 je	 SHORT $LN3@OSError_st

; 1024 :         return PyUnicode_FromFormat("[WinError %S] %S",
; 1025 :                                     self->winerror ? self->winerror: Py_None,
; 1026 :                                     self->strerror ? self->strerror: Py_None);

  000d4	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  000d9	48 83 b8 98 00
	00 00 00	 cmp	 QWORD PTR [rax+152], 0
  000e1	74 13		 je	 SHORT $LN11@OSError_st
  000e3	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  000e8	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  000ef	48 89 44 24 30	 mov	 QWORD PTR tv90[rsp], rax
  000f4	eb 0c		 jmp	 SHORT $LN12@OSError_st
$LN11@OSError_st:
  000f6	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_NoneStruct
  000fd	48 89 44 24 30	 mov	 QWORD PTR tv90[rsp], rax
$LN12@OSError_st:
  00102	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00107	48 83 b8 a8 00
	00 00 00	 cmp	 QWORD PTR [rax+168], 0
  0010f	74 13		 je	 SHORT $LN13@OSError_st
  00111	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00116	48 8b 80 a8 00
	00 00		 mov	 rax, QWORD PTR [rax+168]
  0011d	48 89 44 24 38	 mov	 QWORD PTR tv95[rsp], rax
  00122	eb 0c		 jmp	 SHORT $LN14@OSError_st
$LN13@OSError_st:
  00124	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_NoneStruct
  0012b	48 89 44 24 38	 mov	 QWORD PTR tv95[rsp], rax
$LN14@OSError_st:
  00130	4c 8b 44 24 30	 mov	 r8, QWORD PTR tv90[rsp]
  00135	48 8b 54 24 38	 mov	 rdx, QWORD PTR tv95[rsp]
  0013a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@JOELBMEG@?$FLWinError?5?$CFS?$FN?5?$CFS?$AA@
  00141	e8 00 00 00 00	 call	 PyUnicode_FromFormat
  00146	e9 36 01 00 00	 jmp	 $LN5@OSError_st
$LN3@OSError_st:

; 1027 : #endif
; 1028 :     if (self->filename)

  0014b	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00150	48 83 b8 a0 00
	00 00 00	 cmp	 QWORD PTR [rax+160], 0
  00158	0f 84 83 00 00
	00		 je	 $LN2@OSError_st

; 1029 :         return PyUnicode_FromFormat("[Errno %S] %S: %R",
; 1030 :                                     self->myerrno ? self->myerrno: Py_None,
; 1031 :                                     self->strerror ? self->strerror: Py_None,
; 1032 :                                     self->filename);

  0015e	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00163	48 83 b8 98 00
	00 00 00	 cmp	 QWORD PTR [rax+152], 0
  0016b	74 13		 je	 SHORT $LN15@OSError_st
  0016d	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00172	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  00179	48 89 44 24 40	 mov	 QWORD PTR tv138[rsp], rax
  0017e	eb 0c		 jmp	 SHORT $LN16@OSError_st
$LN15@OSError_st:
  00180	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_NoneStruct
  00187	48 89 44 24 40	 mov	 QWORD PTR tv138[rsp], rax
$LN16@OSError_st:
  0018c	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00191	48 83 b8 90 00
	00 00 00	 cmp	 QWORD PTR [rax+144], 0
  00199	74 13		 je	 SHORT $LN17@OSError_st
  0019b	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  001a0	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]
  001a7	48 89 44 24 48	 mov	 QWORD PTR tv143[rsp], rax
  001ac	eb 0c		 jmp	 SHORT $LN18@OSError_st
$LN17@OSError_st:
  001ae	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_NoneStruct
  001b5	48 89 44 24 48	 mov	 QWORD PTR tv143[rsp], rax
$LN18@OSError_st:
  001ba	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  001bf	4c 8b 88 a0 00
	00 00		 mov	 r9, QWORD PTR [rax+160]
  001c6	4c 8b 44 24 40	 mov	 r8, QWORD PTR tv138[rsp]
  001cb	48 8b 54 24 48	 mov	 rdx, QWORD PTR tv143[rsp]
  001d0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BC@ONKJBHKO@?$FLErrno?5?$CFS?$FN?5?$CFS?3?5?$CFR?$AA@
  001d7	e8 00 00 00 00	 call	 PyUnicode_FromFormat
  001dc	e9 a0 00 00 00	 jmp	 $LN5@OSError_st
$LN2@OSError_st:

; 1033 :     if (self->myerrno && self->strerror)

  001e1	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  001e6	48 83 b8 90 00
	00 00 00	 cmp	 QWORD PTR [rax+144], 0
  001ee	0f 84 83 00 00
	00		 je	 $LN1@OSError_st
  001f4	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  001f9	48 83 b8 98 00
	00 00 00	 cmp	 QWORD PTR [rax+152], 0
  00201	74 74		 je	 SHORT $LN1@OSError_st

; 1034 :         return PyUnicode_FromFormat("[Errno %S] %S",
; 1035 :                                     self->myerrno ? self->myerrno: Py_None,
; 1036 :                                     self->strerror ? self->strerror: Py_None);

  00203	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00208	48 83 b8 98 00
	00 00 00	 cmp	 QWORD PTR [rax+152], 0
  00210	74 13		 je	 SHORT $LN19@OSError_st
  00212	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00217	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  0021e	48 89 44 24 50	 mov	 QWORD PTR tv154[rsp], rax
  00223	eb 0c		 jmp	 SHORT $LN20@OSError_st
$LN19@OSError_st:
  00225	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_NoneStruct
  0022c	48 89 44 24 50	 mov	 QWORD PTR tv154[rsp], rax
$LN20@OSError_st:
  00231	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00236	48 83 b8 90 00
	00 00 00	 cmp	 QWORD PTR [rax+144], 0
  0023e	74 13		 je	 SHORT $LN21@OSError_st
  00240	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00245	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]
  0024c	48 89 44 24 58	 mov	 QWORD PTR tv159[rsp], rax
  00251	eb 0c		 jmp	 SHORT $LN22@OSError_st
$LN21@OSError_st:
  00253	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_NoneStruct
  0025a	48 89 44 24 58	 mov	 QWORD PTR tv159[rsp], rax
$LN22@OSError_st:
  0025f	4c 8b 44 24 50	 mov	 r8, QWORD PTR tv154[rsp]
  00264	48 8b 54 24 58	 mov	 rdx, QWORD PTR tv159[rsp]
  00269	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0O@OFFGPKPD@?$FLErrno?5?$CFS?$FN?5?$CFS?$AA@
  00270	e8 00 00 00 00	 call	 PyUnicode_FromFormat
  00275	eb 0a		 jmp	 SHORT $LN5@OSError_st
$LN1@OSError_st:

; 1037 :     return BaseException_str((PyBaseExceptionObject *)self);

  00277	48 8b 4c 24 70	 mov	 rcx, QWORD PTR self$[rsp]
  0027c	e8 00 00 00 00	 call	 BaseException_str
$LN5@OSError_st:

; 1038 : }

  00281	48 83 c4 68	 add	 rsp, 104		; 00000068H
  00285	c3		 ret	 0
OSError_str ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$OSError_reduce DD imagerel OSError_reduce
	DD	imagerel OSError_reduce+335
	DD	imagerel $unwind$OSError_reduce
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$OSError_reduce DD 010901H
	DD	08209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT OSError_reduce
_TEXT	SEGMENT
res$ = 32
args$ = 40
tmp$ = 48
self$ = 80
OSError_reduce PROC					; COMDAT

; 1042 : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 1043 :     PyObject *args = self->args;

  00009	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  0000e	48 8b 40 68	 mov	 rax, QWORD PTR [rax+104]
  00012	48 89 44 24 28	 mov	 QWORD PTR args$[rsp], rax

; 1044 :     PyObject *res = NULL, *tmp;

  00017	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR res$[rsp], 0

; 1045 : 
; 1046 :     /* self->args is only the first two real arguments if there was a
; 1047 :      * file name given to OSError. */
; 1048 :     if (PyTuple_GET_SIZE(args) == 2 && self->filename) {

  00020	48 8b 44 24 28	 mov	 rax, QWORD PTR args$[rsp]
  00025	48 83 78 60 02	 cmp	 QWORD PTR [rax+96], 2
  0002a	0f 85 b0 00 00
	00		 jne	 $LN5@OSError_re
  00030	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00035	48 83 b8 a0 00
	00 00 00	 cmp	 QWORD PTR [rax+160], 0
  0003d	0f 84 9d 00 00
	00		 je	 $LN5@OSError_re

; 1049 :         args = PyTuple_New(3);

  00043	b9 03 00 00 00	 mov	 ecx, 3
  00048	e8 00 00 00 00	 call	 PyTuple_New
  0004d	48 89 44 24 28	 mov	 QWORD PTR args$[rsp], rax

; 1050 :         if (!args)

  00052	48 83 7c 24 28
	00		 cmp	 QWORD PTR args$[rsp], 0
  00058	75 07		 jne	 SHORT $LN4@OSError_re

; 1051 :             return NULL;

  0005a	33 c0		 xor	 eax, eax
  0005c	e9 e9 00 00 00	 jmp	 $LN6@OSError_re
$LN4@OSError_re:

; 1052 : 
; 1053 :         tmp = PyTuple_GET_ITEM(self->args, 0);

  00061	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00066	48 8b 40 68	 mov	 rax, QWORD PTR [rax+104]
  0006a	48 8b 40 70	 mov	 rax, QWORD PTR [rax+112]
  0006e	48 89 44 24 30	 mov	 QWORD PTR tmp$[rsp], rax

; 1054 :         Py_INCREF(tmp);

  00073	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tmp$[rsp]
  00078	e8 00 00 00 00	 call	 _Py_IncRef

; 1055 :         PyTuple_SET_ITEM(args, 0, tmp);

  0007d	48 8b 44 24 28	 mov	 rax, QWORD PTR args$[rsp]
  00082	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tmp$[rsp]
  00087	48 89 48 70	 mov	 QWORD PTR [rax+112], rcx

; 1056 : 
; 1057 :         tmp = PyTuple_GET_ITEM(self->args, 1);

  0008b	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00090	48 8b 40 68	 mov	 rax, QWORD PTR [rax+104]
  00094	48 8b 40 78	 mov	 rax, QWORD PTR [rax+120]
  00098	48 89 44 24 30	 mov	 QWORD PTR tmp$[rsp], rax

; 1058 :         Py_INCREF(tmp);

  0009d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tmp$[rsp]
  000a2	e8 00 00 00 00	 call	 _Py_IncRef

; 1059 :         PyTuple_SET_ITEM(args, 1, tmp);

  000a7	48 8b 44 24 28	 mov	 rax, QWORD PTR args$[rsp]
  000ac	48 8b 4c 24 30	 mov	 rcx, QWORD PTR tmp$[rsp]
  000b1	48 89 48 78	 mov	 QWORD PTR [rax+120], rcx

; 1060 : 
; 1061 :         Py_INCREF(self->filename);

  000b5	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  000ba	48 8b 88 a0 00
	00 00		 mov	 rcx, QWORD PTR [rax+160]
  000c1	e8 00 00 00 00	 call	 _Py_IncRef

; 1062 :         PyTuple_SET_ITEM(args, 2, self->filename);

  000c6	48 8b 44 24 28	 mov	 rax, QWORD PTR args$[rsp]
  000cb	48 8b 4c 24 50	 mov	 rcx, QWORD PTR self$[rsp]
  000d0	48 8b 89 a0 00
	00 00		 mov	 rcx, QWORD PTR [rcx+160]
  000d7	48 89 88 80 00
	00 00		 mov	 QWORD PTR [rax+128], rcx

; 1063 :     } else

  000de	eb 0a		 jmp	 SHORT $LN3@OSError_re
$LN5@OSError_re:

; 1064 :         Py_INCREF(args);

  000e0	48 8b 4c 24 28	 mov	 rcx, QWORD PTR args$[rsp]
  000e5	e8 00 00 00 00	 call	 _Py_IncRef
$LN3@OSError_re:

; 1065 : 
; 1066 :     if (self->dict)

  000ea	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  000ef	48 83 78 60 00	 cmp	 QWORD PTR [rax+96], 0
  000f4	74 28		 je	 SHORT $LN2@OSError_re

; 1067 :         res = PyTuple_Pack(3, Py_TYPE(self), args, self->dict);

  000f6	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  000fb	4c 8b 48 60	 mov	 r9, QWORD PTR [rax+96]
  000ff	4c 8b 44 24 28	 mov	 r8, QWORD PTR args$[rsp]
  00104	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00109	48 8b 50 58	 mov	 rdx, QWORD PTR [rax+88]
  0010d	b9 03 00 00 00	 mov	 ecx, 3
  00112	e8 00 00 00 00	 call	 PyTuple_Pack
  00117	48 89 44 24 20	 mov	 QWORD PTR res$[rsp], rax

; 1068 :     else

  0011c	eb 1d		 jmp	 SHORT $LN1@OSError_re
$LN2@OSError_re:

; 1069 :         res = PyTuple_Pack(2, Py_TYPE(self), args);

  0011e	4c 8b 44 24 28	 mov	 r8, QWORD PTR args$[rsp]
  00123	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00128	48 8b 50 58	 mov	 rdx, QWORD PTR [rax+88]
  0012c	b9 02 00 00 00	 mov	 ecx, 2
  00131	e8 00 00 00 00	 call	 PyTuple_Pack
  00136	48 89 44 24 20	 mov	 QWORD PTR res$[rsp], rax
$LN1@OSError_re:

; 1070 :     Py_DECREF(args);

  0013b	48 8b 4c 24 28	 mov	 rcx, QWORD PTR args$[rsp]
  00140	e8 00 00 00 00	 call	 _Py_DecRef

; 1071 :     return res;

  00145	48 8b 44 24 20	 mov	 rax, QWORD PTR res$[rsp]
$LN6@OSError_re:

; 1072 : }

  0014a	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0014e	c3		 ret	 0
OSError_reduce ENDP
_TEXT	ENDS
EXTRN	PyLong_FromSsize_t:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$OSError_written_get DD imagerel OSError_written_get
	DD	imagerel OSError_written_get+74
	DD	imagerel $unwind$OSError_written_get
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$OSError_written_get DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT OSError_written_get
_TEXT	SEGMENT
self$ = 48
context$ = 56
OSError_written_get PROC				; COMDAT

; 1076 : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1077 :     if (self->written == -1) {

  0000e	48 8b 44 24 30	 mov	 rax, QWORD PTR self$[rsp]
  00013	48 83 b8 b0 00
	00 00 ff	 cmp	 QWORD PTR [rax+176], -1
  0001b	75 17		 jne	 SHORT $LN1@OSError_wr

; 1078 :         PyErr_SetString(PyExc_AttributeError, "characters_written");

  0001d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BD@MJNIBNKM@characters_written?$AA@
  00024	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_AttributeError
  0002b	e8 00 00 00 00	 call	 PyErr_SetString

; 1079 :         return NULL;

  00030	33 c0		 xor	 eax, eax
  00032	eb 11		 jmp	 SHORT $LN2@OSError_wr
$LN1@OSError_wr:

; 1080 :     }
; 1081 :     return PyLong_FromSsize_t(self->written);

  00034	48 8b 44 24 30	 mov	 rax, QWORD PTR self$[rsp]
  00039	48 8b 88 b0 00
	00 00		 mov	 rcx, QWORD PTR [rax+176]
  00040	e8 00 00 00 00	 call	 PyLong_FromSsize_t
$LN2@OSError_wr:

; 1082 : }

  00045	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00049	c3		 ret	 0
OSError_written_get ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$OSError_written_set DD imagerel OSError_written_set
	DD	imagerel OSError_written_set+90
	DD	imagerel $unwind$OSError_written_set
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$OSError_written_set DD 011301H
	DD	06213H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT OSError_written_set
_TEXT	SEGMENT
n$ = 32
self$ = 64
arg$ = 72
context$ = 80
OSError_written_set PROC				; COMDAT

; 1086 : {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 1087 :     Py_ssize_t n;
; 1088 :     n = PyNumber_AsSsize_t(arg, PyExc_ValueError);

  00013	48 8b 15 00 00
	00 00		 mov	 rdx, QWORD PTR PyExc_ValueError
  0001a	48 8b 4c 24 48	 mov	 rcx, QWORD PTR arg$[rsp]
  0001f	e8 00 00 00 00	 call	 PyNumber_AsSsize_t
  00024	48 89 44 24 20	 mov	 QWORD PTR n$[rsp], rax

; 1089 :     if (n == -1 && PyErr_Occurred())

  00029	48 83 7c 24 20
	ff		 cmp	 QWORD PTR n$[rsp], -1
  0002f	75 11		 jne	 SHORT $LN1@OSError_wr@2
  00031	e8 00 00 00 00	 call	 PyErr_Occurred
  00036	48 85 c0	 test	 rax, rax
  00039	74 07		 je	 SHORT $LN1@OSError_wr@2

; 1090 :         return -1;

  0003b	b8 ff ff ff ff	 mov	 eax, -1
  00040	eb 13		 jmp	 SHORT $LN2@OSError_wr@2
$LN1@OSError_wr@2:

; 1091 :     self->written = n;

  00042	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  00047	48 8b 4c 24 20	 mov	 rcx, QWORD PTR n$[rsp]
  0004c	48 89 88 b0 00
	00 00		 mov	 QWORD PTR [rax+176], rcx

; 1092 :     return 0;

  00053	33 c0		 xor	 eax, eax
$LN2@OSError_wr@2:

; 1093 : }

  00055	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00059	c3		 ret	 0
OSError_written_set ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BJ@KFCEHIN@tuple?5index?5out?5of?5range?$AA@ ; `string'
PUBLIC	??_C@_0BB@MHLBJKKM@SyntaxError_init?$AA@	; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$SyntaxError_init DD imagerel SyntaxError_init
	DD	imagerel SyntaxError_init+1085
	DD	imagerel $unwind$SyntaxError_init
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SyntaxError_init DD 011301H
	DD	0e213H
xdata	ENDS
;	COMDAT ??_C@_0BJ@KFCEHIN@tuple?5index?5out?5of?5range?$AA@
CONST	SEGMENT
??_C@_0BJ@KFCEHIN@tuple?5index?5out?5of?5range?$AA@ DB 'tuple index out o'
	DB	'f range', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MHLBJKKM@SyntaxError_init?$AA@
CONST	SEGMENT
??_C@_0BB@MHLBJKKM@SyntaxError_init?$AA@ DB 'SyntaxError_init', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT SyntaxError_init
_TEXT	SEGMENT
lenargs$ = 48
info$ = 56
_py_tmp$22325 = 64
_py_tmp$22342 = 72
_py_tmp$22352 = 80
_py_tmp$22362 = 88
_py_tmp$22372 = 96
self$ = 128
args$ = 136
kwds$ = 144
SyntaxError_init PROC					; COMDAT

; 1207 : {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 78	 sub	 rsp, 120		; 00000078H

; 1208 :     PyObject *info = NULL;

  00013	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR info$[rsp], 0

; 1209 :     Py_ssize_t lenargs = PyTuple_GET_SIZE(args);

  0001c	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR args$[rsp]
  00024	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  00028	48 89 44 24 30	 mov	 QWORD PTR lenargs$[rsp], rax

; 1210 : 
; 1211 :     if (BaseException_init((PyBaseExceptionObject *)self, args, kwds) == -1)

  0002d	4c 8b 84 24 90
	00 00 00	 mov	 r8, QWORD PTR kwds$[rsp]
  00035	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR args$[rsp]
  0003d	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR self$[rsp]
  00045	e8 00 00 00 00	 call	 BaseException_init
  0004a	83 f8 ff	 cmp	 eax, -1
  0004d	75 0a		 jne	 SHORT $LN25@SyntaxErro

; 1212 :         return -1;

  0004f	b8 ff ff ff ff	 mov	 eax, -1
  00054	e9 df 03 00 00	 jmp	 $LN26@SyntaxErro
$LN25@SyntaxErro:

; 1213 : 
; 1214 :     if (lenargs >= 1) {

  00059	48 83 7c 24 30
	01		 cmp	 QWORD PTR lenargs$[rsp], 1
  0005f	0f 8c ac 00 00
	00		 jl	 $LN24@SyntaxErro
$LN23@SyntaxErro:

; 1215 :         Py_CLEAR(self->msg);

  00065	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR self$[rsp]
  0006d	48 83 b8 90 00
	00 00 00	 cmp	 QWORD PTR [rax+144], 0
  00075	74 65		 je	 SHORT $LN20@SyntaxErro
  00077	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0007f	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR self$[rsp]
  00087	4c 8b 88 90 00
	00 00		 mov	 r9, QWORD PTR [rax+144]
  0008e	41 b8 bf 04 00
	00		 mov	 r8d, 1215		; 000004bfH
  00094	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0009b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@MHLBJKKM@SyntaxError_init?$AA@
  000a2	e8 00 00 00 00	 call	 _PyParallel_Guard
  000a7	85 c0		 test	 eax, eax
  000a9	75 31		 jne	 SHORT $LN20@SyntaxErro
  000ab	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR self$[rsp]
  000b3	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]
  000ba	48 89 44 24 40	 mov	 QWORD PTR _py_tmp$22325[rsp], rax
  000bf	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR self$[rsp]
  000c7	48 c7 80 90 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+144], 0
  000d2	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _py_tmp$22325[rsp]
  000d7	e8 00 00 00 00	 call	 _Py_DecRef
$LN20@SyntaxErro:
  000dc	33 c0		 xor	 eax, eax
  000de	85 c0		 test	 eax, eax
  000e0	75 83		 jne	 SHORT $LN23@SyntaxErro

; 1216 :         self->msg = PyTuple_GET_ITEM(args, 0);

  000e2	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR self$[rsp]
  000ea	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR args$[rsp]
  000f2	48 8b 49 70	 mov	 rcx, QWORD PTR [rcx+112]
  000f6	48 89 88 90 00
	00 00		 mov	 QWORD PTR [rax+144], rcx

; 1217 :         Py_INCREF(self->msg);

  000fd	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR self$[rsp]
  00105	48 8b 88 90 00
	00 00		 mov	 rcx, QWORD PTR [rax+144]
  0010c	e8 00 00 00 00	 call	 _Py_IncRef
$LN24@SyntaxErro:

; 1218 :     }
; 1219 :     if (lenargs == 2) {

  00111	48 83 7c 24 30
	02		 cmp	 QWORD PTR lenargs$[rsp], 2
  00117	0f 85 19 03 00
	00		 jne	 $LN19@SyntaxErro

; 1220 :         info = PyTuple_GET_ITEM(args, 1);

  0011d	48 8b 84 24 88
	00 00 00	 mov	 rax, QWORD PTR args$[rsp]
  00125	48 8b 40 78	 mov	 rax, QWORD PTR [rax+120]
  00129	48 89 44 24 38	 mov	 QWORD PTR info$[rsp], rax

; 1221 :         info = PySequence_Tuple(info);

  0012e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR info$[rsp]
  00133	e8 00 00 00 00	 call	 PySequence_Tuple
  00138	48 89 44 24 38	 mov	 QWORD PTR info$[rsp], rax

; 1222 :         if (!info)

  0013d	48 83 7c 24 38
	00		 cmp	 QWORD PTR info$[rsp], 0
  00143	75 0a		 jne	 SHORT $LN18@SyntaxErro

; 1223 :             return -1;

  00145	b8 ff ff ff ff	 mov	 eax, -1
  0014a	e9 e9 02 00 00	 jmp	 $LN26@SyntaxErro
$LN18@SyntaxErro:

; 1224 : 
; 1225 :         if (PyTuple_GET_SIZE(info) != 4) {

  0014f	48 8b 44 24 38	 mov	 rax, QWORD PTR info$[rsp]
  00154	48 83 78 60 04	 cmp	 QWORD PTR [rax+96], 4
  00159	74 27		 je	 SHORT $LN17@SyntaxErro

; 1226 :             /* not a very good error message, but it's what Python 2.4 gives */
; 1227 :             PyErr_SetString(PyExc_IndexError, "tuple index out of range");

  0015b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@KFCEHIN@tuple?5index?5out?5of?5range?$AA@
  00162	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_IndexError
  00169	e8 00 00 00 00	 call	 PyErr_SetString

; 1228 :             Py_DECREF(info);

  0016e	48 8b 4c 24 38	 mov	 rcx, QWORD PTR info$[rsp]
  00173	e8 00 00 00 00	 call	 _Py_DecRef

; 1229 :             return -1;

  00178	b8 ff ff ff ff	 mov	 eax, -1
  0017d	e9 b6 02 00 00	 jmp	 $LN26@SyntaxErro
$LN17@SyntaxErro:
$LN16@SyntaxErro:

; 1230 :         }
; 1231 : 
; 1232 :         Py_CLEAR(self->filename);

  00182	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR self$[rsp]
  0018a	48 83 b8 98 00
	00 00 00	 cmp	 QWORD PTR [rax+152], 0
  00192	74 65		 je	 SHORT $LN13@SyntaxErro
  00194	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0019c	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR self$[rsp]
  001a4	4c 8b 88 98 00
	00 00		 mov	 r9, QWORD PTR [rax+152]
  001ab	41 b8 d0 04 00
	00		 mov	 r8d, 1232		; 000004d0H
  001b1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  001b8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@MHLBJKKM@SyntaxError_init?$AA@
  001bf	e8 00 00 00 00	 call	 _PyParallel_Guard
  001c4	85 c0		 test	 eax, eax
  001c6	75 31		 jne	 SHORT $LN13@SyntaxErro
  001c8	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR self$[rsp]
  001d0	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  001d7	48 89 44 24 48	 mov	 QWORD PTR _py_tmp$22342[rsp], rax
  001dc	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR self$[rsp]
  001e4	48 c7 80 98 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+152], 0
  001ef	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _py_tmp$22342[rsp]
  001f4	e8 00 00 00 00	 call	 _Py_DecRef
$LN13@SyntaxErro:
  001f9	33 c0		 xor	 eax, eax
  001fb	85 c0		 test	 eax, eax
  001fd	75 83		 jne	 SHORT $LN16@SyntaxErro

; 1233 :         self->filename = PyTuple_GET_ITEM(info, 0);

  001ff	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR self$[rsp]
  00207	48 8b 4c 24 38	 mov	 rcx, QWORD PTR info$[rsp]
  0020c	48 8b 49 70	 mov	 rcx, QWORD PTR [rcx+112]
  00210	48 89 88 98 00
	00 00		 mov	 QWORD PTR [rax+152], rcx

; 1234 :         Py_INCREF(self->filename);

  00217	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR self$[rsp]
  0021f	48 8b 88 98 00
	00 00		 mov	 rcx, QWORD PTR [rax+152]
  00226	e8 00 00 00 00	 call	 _Py_IncRef
$LN12@SyntaxErro:

; 1235 : 
; 1236 :         Py_CLEAR(self->lineno);

  0022b	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR self$[rsp]
  00233	48 83 b8 a0 00
	00 00 00	 cmp	 QWORD PTR [rax+160], 0
  0023b	74 65		 je	 SHORT $LN9@SyntaxErro
  0023d	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00245	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR self$[rsp]
  0024d	4c 8b 88 a0 00
	00 00		 mov	 r9, QWORD PTR [rax+160]
  00254	41 b8 d4 04 00
	00		 mov	 r8d, 1236		; 000004d4H
  0025a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00261	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@MHLBJKKM@SyntaxError_init?$AA@
  00268	e8 00 00 00 00	 call	 _PyParallel_Guard
  0026d	85 c0		 test	 eax, eax
  0026f	75 31		 jne	 SHORT $LN9@SyntaxErro
  00271	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR self$[rsp]
  00279	48 8b 80 a0 00
	00 00		 mov	 rax, QWORD PTR [rax+160]
  00280	48 89 44 24 50	 mov	 QWORD PTR _py_tmp$22352[rsp], rax
  00285	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR self$[rsp]
  0028d	48 c7 80 a0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+160], 0
  00298	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _py_tmp$22352[rsp]
  0029d	e8 00 00 00 00	 call	 _Py_DecRef
$LN9@SyntaxErro:
  002a2	33 c0		 xor	 eax, eax
  002a4	85 c0		 test	 eax, eax
  002a6	75 83		 jne	 SHORT $LN12@SyntaxErro

; 1237 :         self->lineno = PyTuple_GET_ITEM(info, 1);

  002a8	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR self$[rsp]
  002b0	48 8b 4c 24 38	 mov	 rcx, QWORD PTR info$[rsp]
  002b5	48 8b 49 78	 mov	 rcx, QWORD PTR [rcx+120]
  002b9	48 89 88 a0 00
	00 00		 mov	 QWORD PTR [rax+160], rcx

; 1238 :         Py_INCREF(self->lineno);

  002c0	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR self$[rsp]
  002c8	48 8b 88 a0 00
	00 00		 mov	 rcx, QWORD PTR [rax+160]
  002cf	e8 00 00 00 00	 call	 _Py_IncRef
$LN8@SyntaxErro:

; 1239 : 
; 1240 :         Py_CLEAR(self->offset);

  002d4	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR self$[rsp]
  002dc	48 83 b8 a8 00
	00 00 00	 cmp	 QWORD PTR [rax+168], 0
  002e4	74 65		 je	 SHORT $LN5@SyntaxErro
  002e6	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  002ee	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR self$[rsp]
  002f6	4c 8b 88 a8 00
	00 00		 mov	 r9, QWORD PTR [rax+168]
  002fd	41 b8 d8 04 00
	00		 mov	 r8d, 1240		; 000004d8H
  00303	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0030a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@MHLBJKKM@SyntaxError_init?$AA@
  00311	e8 00 00 00 00	 call	 _PyParallel_Guard
  00316	85 c0		 test	 eax, eax
  00318	75 31		 jne	 SHORT $LN5@SyntaxErro
  0031a	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR self$[rsp]
  00322	48 8b 80 a8 00
	00 00		 mov	 rax, QWORD PTR [rax+168]
  00329	48 89 44 24 58	 mov	 QWORD PTR _py_tmp$22362[rsp], rax
  0032e	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR self$[rsp]
  00336	48 c7 80 a8 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+168], 0
  00341	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _py_tmp$22362[rsp]
  00346	e8 00 00 00 00	 call	 _Py_DecRef
$LN5@SyntaxErro:
  0034b	33 c0		 xor	 eax, eax
  0034d	85 c0		 test	 eax, eax
  0034f	75 83		 jne	 SHORT $LN8@SyntaxErro

; 1241 :         self->offset = PyTuple_GET_ITEM(info, 2);

  00351	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR self$[rsp]
  00359	48 8b 4c 24 38	 mov	 rcx, QWORD PTR info$[rsp]
  0035e	48 8b 89 80 00
	00 00		 mov	 rcx, QWORD PTR [rcx+128]
  00365	48 89 88 a8 00
	00 00		 mov	 QWORD PTR [rax+168], rcx

; 1242 :         Py_INCREF(self->offset);

  0036c	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR self$[rsp]
  00374	48 8b 88 a8 00
	00 00		 mov	 rcx, QWORD PTR [rax+168]
  0037b	e8 00 00 00 00	 call	 _Py_IncRef
$LN4@SyntaxErro:

; 1243 : 
; 1244 :         Py_CLEAR(self->text);

  00380	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR self$[rsp]
  00388	48 83 b8 b0 00
	00 00 00	 cmp	 QWORD PTR [rax+176], 0
  00390	74 65		 je	 SHORT $LN1@SyntaxErro
  00392	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0039a	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR self$[rsp]
  003a2	4c 8b 88 b0 00
	00 00		 mov	 r9, QWORD PTR [rax+176]
  003a9	41 b8 dc 04 00
	00		 mov	 r8d, 1244		; 000004dcH
  003af	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  003b6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@MHLBJKKM@SyntaxError_init?$AA@
  003bd	e8 00 00 00 00	 call	 _PyParallel_Guard
  003c2	85 c0		 test	 eax, eax
  003c4	75 31		 jne	 SHORT $LN1@SyntaxErro
  003c6	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR self$[rsp]
  003ce	48 8b 80 b0 00
	00 00		 mov	 rax, QWORD PTR [rax+176]
  003d5	48 89 44 24 60	 mov	 QWORD PTR _py_tmp$22372[rsp], rax
  003da	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR self$[rsp]
  003e2	48 c7 80 b0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+176], 0
  003ed	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _py_tmp$22372[rsp]
  003f2	e8 00 00 00 00	 call	 _Py_DecRef
$LN1@SyntaxErro:
  003f7	33 c0		 xor	 eax, eax
  003f9	85 c0		 test	 eax, eax
  003fb	75 83		 jne	 SHORT $LN4@SyntaxErro

; 1245 :         self->text = PyTuple_GET_ITEM(info, 3);

  003fd	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR self$[rsp]
  00405	48 8b 4c 24 38	 mov	 rcx, QWORD PTR info$[rsp]
  0040a	48 8b 89 88 00
	00 00		 mov	 rcx, QWORD PTR [rcx+136]
  00411	48 89 88 b0 00
	00 00		 mov	 QWORD PTR [rax+176], rcx

; 1246 :         Py_INCREF(self->text);

  00418	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR self$[rsp]
  00420	48 8b 88 b0 00
	00 00		 mov	 rcx, QWORD PTR [rax+176]
  00427	e8 00 00 00 00	 call	 _Py_IncRef

; 1247 : 
; 1248 :         Py_DECREF(info);

  0042c	48 8b 4c 24 38	 mov	 rcx, QWORD PTR info$[rsp]
  00431	e8 00 00 00 00	 call	 _Py_DecRef
$LN19@SyntaxErro:

; 1249 :     }
; 1250 :     return 0;

  00436	33 c0		 xor	 eax, eax
$LN26@SyntaxErro:

; 1251 : }

  00438	48 83 c4 78	 add	 rsp, 120		; 00000078H
  0043c	c3		 ret	 0
SyntaxError_init ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BC@EJMOOLAI@SyntaxError_clear?$AA@	; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$SyntaxError_clear DD imagerel SyntaxError_clear
	DD	imagerel SyntaxError_clear+702
	DD	imagerel $unwind$SyntaxError_clear
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SyntaxError_clear DD 010901H
	DD	0c209H
xdata	ENDS
;	COMDAT ??_C@_0BC@EJMOOLAI@SyntaxError_clear?$AA@
CONST	SEGMENT
??_C@_0BC@EJMOOLAI@SyntaxError_clear?$AA@ DB 'SyntaxError_clear', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT SyntaxError_clear
_TEXT	SEGMENT
_py_tmp$22388 = 48
_py_tmp$22396 = 56
_py_tmp$22404 = 64
_py_tmp$22412 = 72
_py_tmp$22420 = 80
_py_tmp$22428 = 88
self$ = 112
SyntaxError_clear PROC					; COMDAT

; 1255 : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 68	 sub	 rsp, 104		; 00000068H
$LN24@SyntaxErro@2:

; 1256 :     Py_CLEAR(self->msg);

  00009	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  0000e	48 83 b8 90 00
	00 00 00	 cmp	 QWORD PTR [rax+144], 0
  00016	74 5c		 je	 SHORT $LN21@SyntaxErro@2
  00018	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00020	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00025	4c 8b 88 90 00
	00 00		 mov	 r9, QWORD PTR [rax+144]
  0002c	41 b8 e8 04 00
	00		 mov	 r8d, 1256		; 000004e8H
  00032	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BC@EJMOOLAI@SyntaxError_clear?$AA@
  00040	e8 00 00 00 00	 call	 _PyParallel_Guard
  00045	85 c0		 test	 eax, eax
  00047	75 2b		 jne	 SHORT $LN21@SyntaxErro@2
  00049	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  0004e	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]
  00055	48 89 44 24 30	 mov	 QWORD PTR _py_tmp$22388[rsp], rax
  0005a	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  0005f	48 c7 80 90 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+144], 0
  0006a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _py_tmp$22388[rsp]
  0006f	e8 00 00 00 00	 call	 _Py_DecRef
$LN21@SyntaxErro@2:
  00074	33 c0		 xor	 eax, eax
  00076	85 c0		 test	 eax, eax
  00078	75 8f		 jne	 SHORT $LN24@SyntaxErro@2
$LN20@SyntaxErro@2:

; 1257 :     Py_CLEAR(self->filename);

  0007a	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  0007f	48 83 b8 98 00
	00 00 00	 cmp	 QWORD PTR [rax+152], 0
  00087	74 5c		 je	 SHORT $LN17@SyntaxErro@2
  00089	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00091	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00096	4c 8b 88 98 00
	00 00		 mov	 r9, QWORD PTR [rax+152]
  0009d	41 b8 e9 04 00
	00		 mov	 r8d, 1257		; 000004e9H
  000a3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  000aa	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BC@EJMOOLAI@SyntaxError_clear?$AA@
  000b1	e8 00 00 00 00	 call	 _PyParallel_Guard
  000b6	85 c0		 test	 eax, eax
  000b8	75 2b		 jne	 SHORT $LN17@SyntaxErro@2
  000ba	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  000bf	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  000c6	48 89 44 24 38	 mov	 QWORD PTR _py_tmp$22396[rsp], rax
  000cb	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  000d0	48 c7 80 98 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+152], 0
  000db	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _py_tmp$22396[rsp]
  000e0	e8 00 00 00 00	 call	 _Py_DecRef
$LN17@SyntaxErro@2:
  000e5	33 c0		 xor	 eax, eax
  000e7	85 c0		 test	 eax, eax
  000e9	75 8f		 jne	 SHORT $LN20@SyntaxErro@2
$LN16@SyntaxErro@2:

; 1258 :     Py_CLEAR(self->lineno);

  000eb	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  000f0	48 83 b8 a0 00
	00 00 00	 cmp	 QWORD PTR [rax+160], 0
  000f8	74 5c		 je	 SHORT $LN13@SyntaxErro@2
  000fa	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00102	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00107	4c 8b 88 a0 00
	00 00		 mov	 r9, QWORD PTR [rax+160]
  0010e	41 b8 ea 04 00
	00		 mov	 r8d, 1258		; 000004eaH
  00114	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0011b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BC@EJMOOLAI@SyntaxError_clear?$AA@
  00122	e8 00 00 00 00	 call	 _PyParallel_Guard
  00127	85 c0		 test	 eax, eax
  00129	75 2b		 jne	 SHORT $LN13@SyntaxErro@2
  0012b	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00130	48 8b 80 a0 00
	00 00		 mov	 rax, QWORD PTR [rax+160]
  00137	48 89 44 24 40	 mov	 QWORD PTR _py_tmp$22404[rsp], rax
  0013c	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00141	48 c7 80 a0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+160], 0
  0014c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _py_tmp$22404[rsp]
  00151	e8 00 00 00 00	 call	 _Py_DecRef
$LN13@SyntaxErro@2:
  00156	33 c0		 xor	 eax, eax
  00158	85 c0		 test	 eax, eax
  0015a	75 8f		 jne	 SHORT $LN16@SyntaxErro@2
$LN12@SyntaxErro@2:

; 1259 :     Py_CLEAR(self->offset);

  0015c	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00161	48 83 b8 a8 00
	00 00 00	 cmp	 QWORD PTR [rax+168], 0
  00169	74 5c		 je	 SHORT $LN9@SyntaxErro@2
  0016b	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00173	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00178	4c 8b 88 a8 00
	00 00		 mov	 r9, QWORD PTR [rax+168]
  0017f	41 b8 eb 04 00
	00		 mov	 r8d, 1259		; 000004ebH
  00185	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0018c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BC@EJMOOLAI@SyntaxError_clear?$AA@
  00193	e8 00 00 00 00	 call	 _PyParallel_Guard
  00198	85 c0		 test	 eax, eax
  0019a	75 2b		 jne	 SHORT $LN9@SyntaxErro@2
  0019c	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  001a1	48 8b 80 a8 00
	00 00		 mov	 rax, QWORD PTR [rax+168]
  001a8	48 89 44 24 48	 mov	 QWORD PTR _py_tmp$22412[rsp], rax
  001ad	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  001b2	48 c7 80 a8 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+168], 0
  001bd	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _py_tmp$22412[rsp]
  001c2	e8 00 00 00 00	 call	 _Py_DecRef
$LN9@SyntaxErro@2:
  001c7	33 c0		 xor	 eax, eax
  001c9	85 c0		 test	 eax, eax
  001cb	75 8f		 jne	 SHORT $LN12@SyntaxErro@2
$LN8@SyntaxErro@2:

; 1260 :     Py_CLEAR(self->text);

  001cd	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  001d2	48 83 b8 b0 00
	00 00 00	 cmp	 QWORD PTR [rax+176], 0
  001da	74 5c		 je	 SHORT $LN5@SyntaxErro@2
  001dc	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  001e4	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  001e9	4c 8b 88 b0 00
	00 00		 mov	 r9, QWORD PTR [rax+176]
  001f0	41 b8 ec 04 00
	00		 mov	 r8d, 1260		; 000004ecH
  001f6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  001fd	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BC@EJMOOLAI@SyntaxError_clear?$AA@
  00204	e8 00 00 00 00	 call	 _PyParallel_Guard
  00209	85 c0		 test	 eax, eax
  0020b	75 2b		 jne	 SHORT $LN5@SyntaxErro@2
  0020d	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00212	48 8b 80 b0 00
	00 00		 mov	 rax, QWORD PTR [rax+176]
  00219	48 89 44 24 50	 mov	 QWORD PTR _py_tmp$22420[rsp], rax
  0021e	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00223	48 c7 80 b0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+176], 0
  0022e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _py_tmp$22420[rsp]
  00233	e8 00 00 00 00	 call	 _Py_DecRef
$LN5@SyntaxErro@2:
  00238	33 c0		 xor	 eax, eax
  0023a	85 c0		 test	 eax, eax
  0023c	75 8f		 jne	 SHORT $LN8@SyntaxErro@2
$LN4@SyntaxErro@2:

; 1261 :     Py_CLEAR(self->print_file_and_line);

  0023e	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00243	48 83 b8 b8 00
	00 00 00	 cmp	 QWORD PTR [rax+184], 0
  0024b	74 5c		 je	 SHORT $LN1@SyntaxErro@2
  0024d	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00255	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  0025a	4c 8b 88 b8 00
	00 00		 mov	 r9, QWORD PTR [rax+184]
  00261	41 b8 ed 04 00
	00		 mov	 r8d, 1261		; 000004edH
  00267	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0026e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BC@EJMOOLAI@SyntaxError_clear?$AA@
  00275	e8 00 00 00 00	 call	 _PyParallel_Guard
  0027a	85 c0		 test	 eax, eax
  0027c	75 2b		 jne	 SHORT $LN1@SyntaxErro@2
  0027e	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00283	48 8b 80 b8 00
	00 00		 mov	 rax, QWORD PTR [rax+184]
  0028a	48 89 44 24 58	 mov	 QWORD PTR _py_tmp$22428[rsp], rax
  0028f	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00294	48 c7 80 b8 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+184], 0
  0029f	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _py_tmp$22428[rsp]
  002a4	e8 00 00 00 00	 call	 _Py_DecRef
$LN1@SyntaxErro@2:
  002a9	33 c0		 xor	 eax, eax
  002ab	85 c0		 test	 eax, eax
  002ad	75 8f		 jne	 SHORT $LN4@SyntaxErro@2

; 1262 :     return BaseException_clear((PyBaseExceptionObject *)self);

  002af	48 8b 4c 24 70	 mov	 rcx, QWORD PTR self$[rsp]
  002b4	e8 00 00 00 00	 call	 BaseException_clear

; 1263 : }

  002b9	48 83 c4 68	 add	 rsp, 104		; 00000068H
  002bd	c3		 ret	 0
SyntaxError_clear ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BE@LOMAKGIO@SyntaxError_dealloc?$AA@	; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$SyntaxError_dealloc DD imagerel SyntaxError_dealloc
	DD	imagerel SyntaxError_dealloc+283
	DD	imagerel $unwind$SyntaxError_dealloc
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SyntaxError_dealloc DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT ??_C@_0BE@LOMAKGIO@SyntaxError_dealloc?$AA@
CONST	SEGMENT
??_C@_0BE@LOMAKGIO@SyntaxError_dealloc?$AA@ DB 'SyntaxError_dealloc', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT SyntaxError_dealloc
_TEXT	SEGMENT
g$22442 = 48
tv79 = 56
self$ = 80
SyntaxError_dealloc PROC				; COMDAT

; 1267 : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 1268 :     _PyObject_GC_UNTRACK(self);

  00009	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00011	4c 8b 4c 24 50	 mov	 r9, QWORD PTR self$[rsp]
  00016	41 b8 f4 04 00
	00		 mov	 r8d, 1268		; 000004f4H
  0001c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BE@LOMAKGIO@SyntaxError_dealloc?$AA@
  0002a	e8 00 00 00 00	 call	 _PyParallel_Guard
  0002f	85 c0		 test	 eax, eax
  00031	0f 85 c1 00 00
	00		 jne	 $LN4@SyntaxErro@3
$LN3@SyntaxErro@3:
  00037	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0003f	4c 8b 4c 24 50	 mov	 r9, QWORD PTR self$[rsp]
  00044	41 b8 f4 04 00
	00		 mov	 r8d, 1268		; 000004f4H
  0004a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00051	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BE@LOMAKGIO@SyntaxError_dealloc?$AA@
  00058	e8 00 00 00 00	 call	 _PyParallel_Guard
  0005d	85 c0		 test	 eax, eax
  0005f	74 0b		 je	 SHORT $LN7@SyntaxErro@3
  00061	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR tv79[rsp], 0
  0006a	eb 0e		 jmp	 SHORT $LN8@SyntaxErro@3
$LN7@SyntaxErro@3:
  0006c	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00071	48 83 e8 18	 sub	 rax, 24
  00075	48 89 44 24 38	 mov	 QWORD PTR tv79[rsp], rax
$LN8@SyntaxErro@3:
  0007a	48 8b 44 24 38	 mov	 rax, QWORD PTR tv79[rsp]
  0007f	48 89 44 24 30	 mov	 QWORD PTR g$22442[rsp], rax
  00084	48 8b 44 24 30	 mov	 rax, QWORD PTR g$22442[rsp]
  00089	48 83 78 10 fe	 cmp	 QWORD PTR [rax+16], -2
  0008e	75 1c		 jne	 SHORT $LN9@SyntaxErro@3
  00090	41 b8 f4 04 00
	00		 mov	 r8d, 1268		; 000004f4H
  00096	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  0009d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EM@HFMJMDDM@?$AAg?$AA?9?$AA?$DO?$AAg?$AAc?$AA?4?$AAg?$AAc?$AA_?$AAr?$AAe?$AAf?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA_?$AAP?$AAy?$AAG?$AAC?$AA_?$AAR?$AAE?$AAF?$AAS?$AA_?$AAU?$AAN?$AAT?$AAR@
  000a4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  000aa	33 c0		 xor	 eax, eax
$LN9@SyntaxErro@3:
  000ac	48 8b 44 24 30	 mov	 rax, QWORD PTR g$22442[rsp]
  000b1	48 c7 40 10 fe
	ff ff ff	 mov	 QWORD PTR [rax+16], -2
  000b9	48 8b 44 24 30	 mov	 rax, QWORD PTR g$22442[rsp]
  000be	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000c2	48 8b 4c 24 30	 mov	 rcx, QWORD PTR g$22442[rsp]
  000c7	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000ca	48 89 08	 mov	 QWORD PTR [rax], rcx
  000cd	48 8b 44 24 30	 mov	 rax, QWORD PTR g$22442[rsp]
  000d2	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000d5	48 8b 4c 24 30	 mov	 rcx, QWORD PTR g$22442[rsp]
  000da	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  000de	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  000e2	48 8b 44 24 30	 mov	 rax, QWORD PTR g$22442[rsp]
  000e7	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  000ee	33 c0		 xor	 eax, eax
  000f0	85 c0		 test	 eax, eax
  000f2	0f 85 3f ff ff
	ff		 jne	 $LN3@SyntaxErro@3
$LN4@SyntaxErro@3:

; 1269 :     SyntaxError_clear(self);

  000f8	48 8b 4c 24 50	 mov	 rcx, QWORD PTR self$[rsp]
  000fd	e8 00 00 00 00	 call	 SyntaxError_clear

; 1270 :     Py_TYPE(self)->tp_free((PyObject *)self);

  00102	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00107	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  0010b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR self$[rsp]
  00110	ff 90 98 01 00
	00		 call	 QWORD PTR [rax+408]

; 1271 : }

  00116	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0011a	c3		 ret	 0
SyntaxError_dealloc ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BF@NJICOEJO@SyntaxError_traverse?$AA@	; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$SyntaxError_traverse DD imagerel SyntaxError_traverse
	DD	imagerel SyntaxError_traverse+632
	DD	imagerel $unwind$SyntaxError_traverse
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SyntaxError_traverse DD 011301H
	DD	08213H
xdata	ENDS
;	COMDAT ??_C@_0BF@NJICOEJO@SyntaxError_traverse?$AA@
CONST	SEGMENT
??_C@_0BF@NJICOEJO@SyntaxError_traverse?$AA@ DB 'SyntaxError_traverse', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT SyntaxError_traverse
_TEXT	SEGMENT
vret$22463 = 32
vret$22471 = 36
vret$22479 = 40
vret$22487 = 44
vret$22495 = 48
vret$22503 = 52
self$ = 80
visit$ = 88
arg$ = 96
SyntaxError_traverse PROC				; COMDAT

; 1275 : {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 48	 sub	 rsp, 72			; 00000048H
$LN36@SyntaxErro@4:

; 1276 :     Py_VISIT(self->msg);

  00013	e8 00 00 00 00	 call	 _Py_PXCTX
  00018	85 c0		 test	 eax, eax
  0001a	74 1c		 je	 SHORT $LN33@SyntaxErro@4
  0001c	45 33 c9	 xor	 r9d, r9d
  0001f	41 b8 fc 04 00
	00		 mov	 r8d, 1276		; 000004fcH
  00025	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0002c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BF@NJICOEJO@SyntaxError_traverse?$AA@
  00033	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN33@SyntaxErro@4:
  00038	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  0003d	48 83 b8 90 00
	00 00 00	 cmp	 QWORD PTR [rax+144], 0
  00045	74 29		 je	 SHORT $LN32@SyntaxErro@4
  00047	48 8b 54 24 60	 mov	 rdx, QWORD PTR arg$[rsp]
  0004c	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00051	48 8b 88 90 00
	00 00		 mov	 rcx, QWORD PTR [rax+144]
  00058	ff 54 24 58	 call	 QWORD PTR visit$[rsp]
  0005c	89 44 24 20	 mov	 DWORD PTR vret$22463[rsp], eax
  00060	83 7c 24 20 00	 cmp	 DWORD PTR vret$22463[rsp], 0
  00065	74 09		 je	 SHORT $LN31@SyntaxErro@4
  00067	8b 44 24 20	 mov	 eax, DWORD PTR vret$22463[rsp]
  0006b	e9 03 02 00 00	 jmp	 $LN37@SyntaxErro@4
$LN31@SyntaxErro@4:
$LN32@SyntaxErro@4:
  00070	33 c0		 xor	 eax, eax
  00072	85 c0		 test	 eax, eax
  00074	75 9d		 jne	 SHORT $LN36@SyntaxErro@4
$LN30@SyntaxErro@4:

; 1277 :     Py_VISIT(self->filename);

  00076	e8 00 00 00 00	 call	 _Py_PXCTX
  0007b	85 c0		 test	 eax, eax
  0007d	74 1c		 je	 SHORT $LN27@SyntaxErro@4
  0007f	45 33 c9	 xor	 r9d, r9d
  00082	41 b8 fd 04 00
	00		 mov	 r8d, 1277		; 000004fdH
  00088	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0008f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BF@NJICOEJO@SyntaxError_traverse?$AA@
  00096	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN27@SyntaxErro@4:
  0009b	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  000a0	48 83 b8 98 00
	00 00 00	 cmp	 QWORD PTR [rax+152], 0
  000a8	74 29		 je	 SHORT $LN26@SyntaxErro@4
  000aa	48 8b 54 24 60	 mov	 rdx, QWORD PTR arg$[rsp]
  000af	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  000b4	48 8b 88 98 00
	00 00		 mov	 rcx, QWORD PTR [rax+152]
  000bb	ff 54 24 58	 call	 QWORD PTR visit$[rsp]
  000bf	89 44 24 24	 mov	 DWORD PTR vret$22471[rsp], eax
  000c3	83 7c 24 24 00	 cmp	 DWORD PTR vret$22471[rsp], 0
  000c8	74 09		 je	 SHORT $LN25@SyntaxErro@4
  000ca	8b 44 24 24	 mov	 eax, DWORD PTR vret$22471[rsp]
  000ce	e9 a0 01 00 00	 jmp	 $LN37@SyntaxErro@4
$LN25@SyntaxErro@4:
$LN26@SyntaxErro@4:
  000d3	33 c0		 xor	 eax, eax
  000d5	85 c0		 test	 eax, eax
  000d7	75 9d		 jne	 SHORT $LN30@SyntaxErro@4
$LN24@SyntaxErro@4:

; 1278 :     Py_VISIT(self->lineno);

  000d9	e8 00 00 00 00	 call	 _Py_PXCTX
  000de	85 c0		 test	 eax, eax
  000e0	74 1c		 je	 SHORT $LN21@SyntaxErro@4
  000e2	45 33 c9	 xor	 r9d, r9d
  000e5	41 b8 fe 04 00
	00		 mov	 r8d, 1278		; 000004feH
  000eb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  000f2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BF@NJICOEJO@SyntaxError_traverse?$AA@
  000f9	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN21@SyntaxErro@4:
  000fe	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00103	48 83 b8 a0 00
	00 00 00	 cmp	 QWORD PTR [rax+160], 0
  0010b	74 29		 je	 SHORT $LN20@SyntaxErro@4
  0010d	48 8b 54 24 60	 mov	 rdx, QWORD PTR arg$[rsp]
  00112	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00117	48 8b 88 a0 00
	00 00		 mov	 rcx, QWORD PTR [rax+160]
  0011e	ff 54 24 58	 call	 QWORD PTR visit$[rsp]
  00122	89 44 24 28	 mov	 DWORD PTR vret$22479[rsp], eax
  00126	83 7c 24 28 00	 cmp	 DWORD PTR vret$22479[rsp], 0
  0012b	74 09		 je	 SHORT $LN19@SyntaxErro@4
  0012d	8b 44 24 28	 mov	 eax, DWORD PTR vret$22479[rsp]
  00131	e9 3d 01 00 00	 jmp	 $LN37@SyntaxErro@4
$LN19@SyntaxErro@4:
$LN20@SyntaxErro@4:
  00136	33 c0		 xor	 eax, eax
  00138	85 c0		 test	 eax, eax
  0013a	75 9d		 jne	 SHORT $LN24@SyntaxErro@4
$LN18@SyntaxErro@4:

; 1279 :     Py_VISIT(self->offset);

  0013c	e8 00 00 00 00	 call	 _Py_PXCTX
  00141	85 c0		 test	 eax, eax
  00143	74 1c		 je	 SHORT $LN15@SyntaxErro@4
  00145	45 33 c9	 xor	 r9d, r9d
  00148	41 b8 ff 04 00
	00		 mov	 r8d, 1279		; 000004ffH
  0014e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00155	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BF@NJICOEJO@SyntaxError_traverse?$AA@
  0015c	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN15@SyntaxErro@4:
  00161	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00166	48 83 b8 a8 00
	00 00 00	 cmp	 QWORD PTR [rax+168], 0
  0016e	74 29		 je	 SHORT $LN14@SyntaxErro@4
  00170	48 8b 54 24 60	 mov	 rdx, QWORD PTR arg$[rsp]
  00175	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  0017a	48 8b 88 a8 00
	00 00		 mov	 rcx, QWORD PTR [rax+168]
  00181	ff 54 24 58	 call	 QWORD PTR visit$[rsp]
  00185	89 44 24 2c	 mov	 DWORD PTR vret$22487[rsp], eax
  00189	83 7c 24 2c 00	 cmp	 DWORD PTR vret$22487[rsp], 0
  0018e	74 09		 je	 SHORT $LN13@SyntaxErro@4
  00190	8b 44 24 2c	 mov	 eax, DWORD PTR vret$22487[rsp]
  00194	e9 da 00 00 00	 jmp	 $LN37@SyntaxErro@4
$LN13@SyntaxErro@4:
$LN14@SyntaxErro@4:
  00199	33 c0		 xor	 eax, eax
  0019b	85 c0		 test	 eax, eax
  0019d	75 9d		 jne	 SHORT $LN18@SyntaxErro@4
$LN12@SyntaxErro@4:

; 1280 :     Py_VISIT(self->text);

  0019f	e8 00 00 00 00	 call	 _Py_PXCTX
  001a4	85 c0		 test	 eax, eax
  001a6	74 1c		 je	 SHORT $LN9@SyntaxErro@4
  001a8	45 33 c9	 xor	 r9d, r9d
  001ab	41 b8 00 05 00
	00		 mov	 r8d, 1280		; 00000500H
  001b1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  001b8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BF@NJICOEJO@SyntaxError_traverse?$AA@
  001bf	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN9@SyntaxErro@4:
  001c4	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  001c9	48 83 b8 b0 00
	00 00 00	 cmp	 QWORD PTR [rax+176], 0
  001d1	74 26		 je	 SHORT $LN8@SyntaxErro@4
  001d3	48 8b 54 24 60	 mov	 rdx, QWORD PTR arg$[rsp]
  001d8	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  001dd	48 8b 88 b0 00
	00 00		 mov	 rcx, QWORD PTR [rax+176]
  001e4	ff 54 24 58	 call	 QWORD PTR visit$[rsp]
  001e8	89 44 24 30	 mov	 DWORD PTR vret$22495[rsp], eax
  001ec	83 7c 24 30 00	 cmp	 DWORD PTR vret$22495[rsp], 0
  001f1	74 06		 je	 SHORT $LN7@SyntaxErro@4
  001f3	8b 44 24 30	 mov	 eax, DWORD PTR vret$22495[rsp]
  001f7	eb 7a		 jmp	 SHORT $LN37@SyntaxErro@4
$LN7@SyntaxErro@4:
$LN8@SyntaxErro@4:
  001f9	33 c0		 xor	 eax, eax
  001fb	85 c0		 test	 eax, eax
  001fd	75 a0		 jne	 SHORT $LN12@SyntaxErro@4
$LN6@SyntaxErro@4:

; 1281 :     Py_VISIT(self->print_file_and_line);

  001ff	e8 00 00 00 00	 call	 _Py_PXCTX
  00204	85 c0		 test	 eax, eax
  00206	74 1c		 je	 SHORT $LN3@SyntaxErro@4
  00208	45 33 c9	 xor	 r9d, r9d
  0020b	41 b8 01 05 00
	00		 mov	 r8d, 1281		; 00000501H
  00211	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00218	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BF@NJICOEJO@SyntaxError_traverse?$AA@
  0021f	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN3@SyntaxErro@4:
  00224	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00229	48 83 b8 b8 00
	00 00 00	 cmp	 QWORD PTR [rax+184], 0
  00231	74 26		 je	 SHORT $LN2@SyntaxErro@4
  00233	48 8b 54 24 60	 mov	 rdx, QWORD PTR arg$[rsp]
  00238	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  0023d	48 8b 88 b8 00
	00 00		 mov	 rcx, QWORD PTR [rax+184]
  00244	ff 54 24 58	 call	 QWORD PTR visit$[rsp]
  00248	89 44 24 34	 mov	 DWORD PTR vret$22503[rsp], eax
  0024c	83 7c 24 34 00	 cmp	 DWORD PTR vret$22503[rsp], 0
  00251	74 06		 je	 SHORT $LN1@SyntaxErro@4
  00253	8b 44 24 34	 mov	 eax, DWORD PTR vret$22503[rsp]
  00257	eb 1a		 jmp	 SHORT $LN37@SyntaxErro@4
$LN1@SyntaxErro@4:
$LN2@SyntaxErro@4:
  00259	33 c0		 xor	 eax, eax
  0025b	85 c0		 test	 eax, eax
  0025d	75 a0		 jne	 SHORT $LN6@SyntaxErro@4

; 1282 :     return BaseException_traverse((PyBaseExceptionObject *)self, visit, arg);

  0025f	4c 8b 44 24 60	 mov	 r8, QWORD PTR arg$[rsp]
  00264	48 8b 54 24 58	 mov	 rdx, QWORD PTR visit$[rsp]
  00269	48 8b 4c 24 50	 mov	 rcx, QWORD PTR self$[rsp]
  0026e	e8 00 00 00 00	 call	 BaseException_traverse
$LN37@SyntaxErro@4:

; 1283 : }

  00273	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00277	c3		 ret	 0
SyntaxError_traverse ENDP
_TEXT	ENDS
PUBLIC	??_C@_0O@KELMGNHM@?$CFS?5?$CIline?5?$CFld?$CJ?$AA@ ; `string'
PUBLIC	??_C@_07HGLGPCMB@?$CFS?5?$CI?$CFU?$CJ?$AA@	; `string'
PUBLIC	??_C@_0BC@PNHCFPFB@?$CFS?5?$CI?$CFU?0?5line?5?$CFld?$CJ?$AA@ ; `string'
EXTRN	PyLong_AsLongAndOverflow:PROC
EXTRN	PyLong_Type:BYTE
;	COMDAT pdata
pdata	SEGMENT
$pdata$SyntaxError_str DD imagerel SyntaxError_str
	DD	imagerel SyntaxError_str+581
	DD	imagerel $unwind$SyntaxError_str
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$SyntaxError_str DD 010901H
	DD	0c209H
xdata	ENDS
;	COMDAT ??_C@_0O@KELMGNHM@?$CFS?5?$CIline?5?$CFld?$CJ?$AA@
CONST	SEGMENT
??_C@_0O@KELMGNHM@?$CFS?5?$CIline?5?$CFld?$CJ?$AA@ DB '%S (line %ld)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07HGLGPCMB@?$CFS?5?$CI?$CFU?$CJ?$AA@
CONST	SEGMENT
??_C@_07HGLGPCMB@?$CFS?5?$CI?$CFU?$CJ?$AA@ DB '%S (%U)', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@PNHCFPFB@?$CFS?5?$CI?$CFU?0?5line?5?$CFld?$CJ?$AA@
CONST	SEGMENT
??_C@_0BC@PNHCFPFB@?$CFS?5?$CI?$CFU?0?5line?5?$CFld?$CJ?$AA@ DB '%S (%U, '
	DB	'line %ld)', 00H				; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT SyntaxError_str
_TEXT	SEGMENT
overflow$ = 32
have_lineno$ = 36
result$ = 40
filename$ = 48
tv80 = 56
tv87 = 64
tv133 = 72
tv142 = 80
tv154 = 88
self$ = 112
SyntaxError_str PROC					; COMDAT

; 1316 : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 68	 sub	 rsp, 104		; 00000068H

; 1317 :     int have_lineno = 0;

  00009	c7 44 24 24 00
	00 00 00	 mov	 DWORD PTR have_lineno$[rsp], 0

; 1318 :     PyObject *filename;
; 1319 :     PyObject *result;
; 1320 :     /* Below, we always ignore overflow errors, just printing -1.
; 1321 :        Still, we cannot allow an OverflowError to be raised, so
; 1322 :        we need to call PyLong_AsLongAndOverflow. */
; 1323 :     int overflow;
; 1324 : 
; 1325 :     /* XXX -- do all the additional formatting with filename and
; 1326 :        lineno here */
; 1327 : 
; 1328 :     if (self->filename && PyUnicode_Check(self->filename)) {

  00011	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00016	48 83 b8 98 00
	00 00 00	 cmp	 QWORD PTR [rax+152], 0
  0001e	74 46		 je	 SHORT $LN12@SyntaxErro@5
  00020	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00025	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  0002c	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00030	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  00036	25 00 00 00 10	 and	 eax, 268435456		; 10000000H
  0003b	85 c0		 test	 eax, eax
  0003d	74 27		 je	 SHORT $LN12@SyntaxErro@5

; 1329 :         filename = my_basename(self->filename);

  0003f	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00044	48 8b 88 98 00
	00 00		 mov	 rcx, QWORD PTR [rax+152]
  0004b	e8 00 00 00 00	 call	 my_basename
  00050	48 89 44 24 30	 mov	 QWORD PTR filename$[rsp], rax

; 1330 :         if (filename == NULL)

  00055	48 83 7c 24 30
	00		 cmp	 QWORD PTR filename$[rsp], 0
  0005b	75 07		 jne	 SHORT $LN11@SyntaxErro@5

; 1331 :             return NULL;

  0005d	33 c0		 xor	 eax, eax
  0005f	e9 dc 01 00 00	 jmp	 $LN13@SyntaxErro@5
$LN11@SyntaxErro@5:

; 1332 :     } else {

  00064	eb 09		 jmp	 SHORT $LN10@SyntaxErro@5
$LN12@SyntaxErro@5:

; 1333 :         filename = NULL;

  00066	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR filename$[rsp], 0
$LN10@SyntaxErro@5:

; 1334 :     }
; 1335 :     have_lineno = (self->lineno != NULL) && PyLong_CheckExact(self->lineno);

  0006f	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00074	48 83 b8 a0 00
	00 00 00	 cmp	 QWORD PTR [rax+160], 0
  0007c	74 23		 je	 SHORT $LN15@SyntaxErro@5
  0007e	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00083	48 8b 80 a0 00
	00 00		 mov	 rax, QWORD PTR [rax+160]
  0008a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:PyLong_Type
  00091	48 39 48 58	 cmp	 QWORD PTR [rax+88], rcx
  00095	75 0a		 jne	 SHORT $LN15@SyntaxErro@5
  00097	c7 44 24 38 01
	00 00 00	 mov	 DWORD PTR tv80[rsp], 1
  0009f	eb 08		 jmp	 SHORT $LN16@SyntaxErro@5
$LN15@SyntaxErro@5:
  000a1	c7 44 24 38 00
	00 00 00	 mov	 DWORD PTR tv80[rsp], 0
$LN16@SyntaxErro@5:
  000a9	8b 44 24 38	 mov	 eax, DWORD PTR tv80[rsp]
  000ad	89 44 24 24	 mov	 DWORD PTR have_lineno$[rsp], eax

; 1336 : 
; 1337 :     if (!filename && !have_lineno)

  000b1	48 83 7c 24 30
	00		 cmp	 QWORD PTR filename$[rsp], 0
  000b7	75 44		 jne	 SHORT $LN9@SyntaxErro@5
  000b9	83 7c 24 24 00	 cmp	 DWORD PTR have_lineno$[rsp], 0
  000be	75 3d		 jne	 SHORT $LN9@SyntaxErro@5

; 1338 :         return PyObject_Str(self->msg ? self->msg : Py_None);

  000c0	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  000c5	48 83 b8 90 00
	00 00 00	 cmp	 QWORD PTR [rax+144], 0
  000cd	74 13		 je	 SHORT $LN17@SyntaxErro@5
  000cf	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  000d4	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]
  000db	48 89 44 24 40	 mov	 QWORD PTR tv87[rsp], rax
  000e0	eb 0c		 jmp	 SHORT $LN18@SyntaxErro@5
$LN17@SyntaxErro@5:
  000e2	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_NoneStruct
  000e9	48 89 44 24 40	 mov	 QWORD PTR tv87[rsp], rax
$LN18@SyntaxErro@5:
  000ee	48 8b 4c 24 40	 mov	 rcx, QWORD PTR tv87[rsp]
  000f3	e8 00 00 00 00	 call	 PyObject_Str
  000f8	e9 43 01 00 00	 jmp	 $LN13@SyntaxErro@5
$LN9@SyntaxErro@5:

; 1339 : 
; 1340 :     if (filename && have_lineno)

  000fd	48 83 7c 24 30
	00		 cmp	 QWORD PTR filename$[rsp], 0
  00103	74 6e		 je	 SHORT $LN8@SyntaxErro@5
  00105	83 7c 24 24 00	 cmp	 DWORD PTR have_lineno$[rsp], 0
  0010a	74 67		 je	 SHORT $LN8@SyntaxErro@5

; 1341 :         result = PyUnicode_FromFormat("%S (%U, line %ld)",
; 1342 :                    self->msg ? self->msg : Py_None,
; 1343 :                    filename,
; 1344 :                    PyLong_AsLongAndOverflow(self->lineno, &overflow));

  0010c	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00111	48 83 b8 90 00
	00 00 00	 cmp	 QWORD PTR [rax+144], 0
  00119	74 13		 je	 SHORT $LN19@SyntaxErro@5
  0011b	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00120	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]
  00127	48 89 44 24 48	 mov	 QWORD PTR tv133[rsp], rax
  0012c	eb 0c		 jmp	 SHORT $LN20@SyntaxErro@5
$LN19@SyntaxErro@5:
  0012e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_NoneStruct
  00135	48 89 44 24 48	 mov	 QWORD PTR tv133[rsp], rax
$LN20@SyntaxErro@5:
  0013a	48 8d 54 24 20	 lea	 rdx, QWORD PTR overflow$[rsp]
  0013f	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00144	48 8b 88 a0 00
	00 00		 mov	 rcx, QWORD PTR [rax+160]
  0014b	e8 00 00 00 00	 call	 PyLong_AsLongAndOverflow
  00150	44 8b c8	 mov	 r9d, eax
  00153	4c 8b 44 24 30	 mov	 r8, QWORD PTR filename$[rsp]
  00158	48 8b 54 24 48	 mov	 rdx, QWORD PTR tv133[rsp]
  0015d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BC@PNHCFPFB@?$CFS?5?$CI?$CFU?0?5line?5?$CFld?$CJ?$AA@
  00164	e8 00 00 00 00	 call	 PyUnicode_FromFormat
  00169	48 89 44 24 28	 mov	 QWORD PTR result$[rsp], rax
  0016e	e9 b0 00 00 00	 jmp	 $LN7@SyntaxErro@5
$LN8@SyntaxErro@5:

; 1345 :     else if (filename)

  00173	48 83 7c 24 30
	00		 cmp	 QWORD PTR filename$[rsp], 0
  00179	74 4b		 je	 SHORT $LN6@SyntaxErro@5

; 1346 :         result = PyUnicode_FromFormat("%S (%U)",
; 1347 :                    self->msg ? self->msg : Py_None,
; 1348 :                    filename);

  0017b	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00180	48 83 b8 90 00
	00 00 00	 cmp	 QWORD PTR [rax+144], 0
  00188	74 13		 je	 SHORT $LN21@SyntaxErro@5
  0018a	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  0018f	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]
  00196	48 89 44 24 50	 mov	 QWORD PTR tv142[rsp], rax
  0019b	eb 0c		 jmp	 SHORT $LN22@SyntaxErro@5
$LN21@SyntaxErro@5:
  0019d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_NoneStruct
  001a4	48 89 44 24 50	 mov	 QWORD PTR tv142[rsp], rax
$LN22@SyntaxErro@5:
  001a9	4c 8b 44 24 30	 mov	 r8, QWORD PTR filename$[rsp]
  001ae	48 8b 54 24 50	 mov	 rdx, QWORD PTR tv142[rsp]
  001b3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_07HGLGPCMB@?$CFS?5?$CI?$CFU?$CJ?$AA@
  001ba	e8 00 00 00 00	 call	 PyUnicode_FromFormat
  001bf	48 89 44 24 28	 mov	 QWORD PTR result$[rsp], rax

; 1349 :     else /* only have_lineno */

  001c4	eb 5d		 jmp	 SHORT $LN5@SyntaxErro@5
$LN6@SyntaxErro@5:

; 1350 :         result = PyUnicode_FromFormat("%S (line %ld)",
; 1351 :                    self->msg ? self->msg : Py_None,
; 1352 :                    PyLong_AsLongAndOverflow(self->lineno, &overflow));

  001c6	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  001cb	48 83 b8 90 00
	00 00 00	 cmp	 QWORD PTR [rax+144], 0
  001d3	74 13		 je	 SHORT $LN23@SyntaxErro@5
  001d5	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  001da	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]
  001e1	48 89 44 24 58	 mov	 QWORD PTR tv154[rsp], rax
  001e6	eb 0c		 jmp	 SHORT $LN24@SyntaxErro@5
$LN23@SyntaxErro@5:
  001e8	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:_Py_NoneStruct
  001ef	48 89 44 24 58	 mov	 QWORD PTR tv154[rsp], rax
$LN24@SyntaxErro@5:
  001f4	48 8d 54 24 20	 lea	 rdx, QWORD PTR overflow$[rsp]
  001f9	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  001fe	48 8b 88 a0 00
	00 00		 mov	 rcx, QWORD PTR [rax+160]
  00205	e8 00 00 00 00	 call	 PyLong_AsLongAndOverflow
  0020a	44 8b c0	 mov	 r8d, eax
  0020d	48 8b 54 24 58	 mov	 rdx, QWORD PTR tv154[rsp]
  00212	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0O@KELMGNHM@?$CFS?5?$CIline?5?$CFld?$CJ?$AA@
  00219	e8 00 00 00 00	 call	 PyUnicode_FromFormat
  0021e	48 89 44 24 28	 mov	 QWORD PTR result$[rsp], rax
$LN5@SyntaxErro@5:
$LN7@SyntaxErro@5:
$LN4@SyntaxErro@5:

; 1353 :     Py_XDECREF(filename);

  00223	48 83 7c 24 30
	00		 cmp	 QWORD PTR filename$[rsp], 0
  00229	74 0a		 je	 SHORT $LN1@SyntaxErro@5
  0022b	48 8b 4c 24 30	 mov	 rcx, QWORD PTR filename$[rsp]
  00230	e8 00 00 00 00	 call	 _Py_DecRef
$LN1@SyntaxErro@5:
  00235	33 c0		 xor	 eax, eax
  00237	85 c0		 test	 eax, eax
  00239	75 e8		 jne	 SHORT $LN4@SyntaxErro@5

; 1354 :     return result;

  0023b	48 8b 44 24 28	 mov	 rax, QWORD PTR result$[rsp]
$LN13@SyntaxErro@5:

; 1355 : }

  00240	48 83 c4 68	 add	 rsp, 104		; 00000068H
  00244	c3		 ret	 0
SyntaxError_str ENDP
_TEXT	ENDS
PUBLIC	??_C@_1EK@BJFMBKIP@?$AA?$CI?$AA?$CI?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?$CK?$AA?$CJ?$AA?$CI?$AAn?$AAa?$AAm?$AAe?$AA?$CJ?$AA?$CJ?$AA?9?$AA?$DO?$AAd?$AAa?$AAt?$AAa@ ; `string'
PUBLIC	??_C@_1DC@BCOPIKLM@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAI?$AAS?$AA_?$AAR?$AAE?$AAA?$AAD?$AAY?$AA?$CI?$AAn?$AAa?$AAm?$AAe?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CM@NNIOODFF@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAn?$AAa?$AAm?$AAe?$AA?$CJ?$AA?$AA@ ; `string'
EXTRN	PyUnicode_Substring:PROC
EXTRN	_PyUnicode_Ready:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$my_basename DD imagerel my_basename
	DD	imagerel my_basename+920
	DD	imagerel $unwind$my_basename
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$my_basename DD 010901H
	DD	0e209H
xdata	ENDS
;	COMDAT ??_C@_1EK@BJFMBKIP@?$AA?$CI?$AA?$CI?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?$CK?$AA?$CJ?$AA?$CI?$AAn?$AAa?$AAm?$AAe?$AA?$CJ?$AA?$CJ?$AA?9?$AA?$DO?$AAd?$AAa?$AAt?$AAa@
CONST	SEGMENT
??_C@_1EK@BJFMBKIP@?$AA?$CI?$AA?$CI?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?$CK?$AA?$CJ?$AA?$CI?$AAn?$AAa?$AAm?$AAe?$AA?$CJ?$AA?$CJ?$AA?9?$AA?$DO?$AAd?$AAa?$AAt?$AAa@ DB '('
	DB	00H, '(', 00H, 'P', 00H, 'y', 00H, 'U', 00H, 'n', 00H, 'i', 00H
	DB	'c', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, '*', 00H, ')', 00H, '(', 00H
	DB	'n', 00H, 'a', 00H, 'm', 00H, 'e', 00H, ')', 00H, ')', 00H, '-'
	DB	00H, '>', 00H, 'd', 00H, 'a', 00H, 't', 00H, 'a', 00H, '.', 00H
	DB	'a', 00H, 'n', 00H, 'y', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DC@BCOPIKLM@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAI?$AAS?$AA_?$AAR?$AAE?$AAA?$AAD?$AAY?$AA?$CI?$AAn?$AAa?$AAm?$AAe?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1DC@BCOPIKLM@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAI?$AAS?$AA_?$AAR?$AAE?$AAA?$AAD?$AAY?$AA?$CI?$AAn?$AAa?$AAm?$AAe?$AA?$CJ?$AA?$AA@ DB 'P'
	DB	00H, 'y', 00H, 'U', 00H, 'n', 00H, 'i', 00H, 'c', 00H, 'o', 00H
	DB	'd', 00H, 'e', 00H, '_', 00H, 'I', 00H, 'S', 00H, '_', 00H, 'R'
	DB	00H, 'E', 00H, 'A', 00H, 'D', 00H, 'Y', 00H, '(', 00H, 'n', 00H
	DB	'a', 00H, 'm', 00H, 'e', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1CM@NNIOODFF@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAn?$AAa?$AAm?$AAe?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1CM@NNIOODFF@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAn?$AAa?$AAm?$AAe?$AA?$CJ?$AA?$AA@ DB 'P'
	DB	00H, 'y', 00H, 'U', 00H, 'n', 00H, 'i', 00H, 'c', 00H, 'o', 00H
	DB	'd', 00H, 'e', 00H, '_', 00H, 'C', 00H, 'h', 00H, 'e', 00H, 'c'
	DB	00H, 'k', 00H, '(', 00H, 'n', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	')', 00H, 00H, 00H				; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT my_basename
_TEXT	SEGMENT
kind$ = 32
i$ = 40
offset$ = 48
size$ = 56
data$ = 64
tv78 = 72
tv164 = 80
tv173 = 88
tv203 = 96
tv202 = 100
name$ = 128
my_basename PROC					; COMDAT

; 1290 : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 78	 sub	 rsp, 120		; 00000078H

; 1291 :     Py_ssize_t i, size, offset;
; 1292 :     int kind;
; 1293 :     void *data;
; 1294 : 
; 1295 :     if (PyUnicode_READY(name))

  00009	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR name$[rsp]
  00011	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00015	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  0001b	25 00 00 00 10	 and	 eax, 268435456		; 10000000H
  00020	85 c0		 test	 eax, eax
  00022	75 1c		 jne	 SHORT $LN10@my_basenam
  00024	41 b8 0f 05 00
	00		 mov	 r8d, 1295		; 0000050fH
  0002a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  00031	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CM@NNIOODFF@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAn?$AAa?$AAm?$AAe?$AA?$CJ?$AA?$AA@
  00038	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  0003e	33 c0		 xor	 eax, eax
$LN10@my_basenam:
  00040	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR name$[rsp]
  00048	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  0004b	c1 e8 07	 shr	 eax, 7
  0004e	83 e0 01	 and	 eax, 1
  00051	85 c0		 test	 eax, eax
  00053	74 0a		 je	 SHORT $LN11@my_basenam
  00055	c7 44 24 48 00
	00 00 00	 mov	 DWORD PTR tv78[rsp], 0
  0005d	eb 11		 jmp	 SHORT $LN12@my_basenam
$LN11@my_basenam:
  0005f	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR name$[rsp]
  00067	e8 00 00 00 00	 call	 _PyUnicode_Ready
  0006c	89 44 24 48	 mov	 DWORD PTR tv78[rsp], eax
$LN12@my_basenam:
  00070	83 7c 24 48 00	 cmp	 DWORD PTR tv78[rsp], 0
  00075	74 07		 je	 SHORT $LN7@my_basenam

; 1296 :         return NULL;

  00077	33 c0		 xor	 eax, eax
  00079	e9 15 03 00 00	 jmp	 $LN8@my_basenam
$LN7@my_basenam:

; 1297 :     kind = PyUnicode_KIND(name);

  0007e	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR name$[rsp]
  00086	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  0008a	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  00090	25 00 00 00 10	 and	 eax, 268435456		; 10000000H
  00095	85 c0		 test	 eax, eax
  00097	75 1c		 jne	 SHORT $LN13@my_basenam
  00099	41 b8 11 05 00
	00		 mov	 r8d, 1297		; 00000511H
  0009f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  000a6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CM@NNIOODFF@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAn?$AAa?$AAm?$AAe?$AA?$CJ?$AA?$AA@
  000ad	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  000b3	33 c0		 xor	 eax, eax
$LN13@my_basenam:
  000b5	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR name$[rsp]
  000bd	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  000c0	c1 e8 07	 shr	 eax, 7
  000c3	83 e0 01	 and	 eax, 1
  000c6	85 c0		 test	 eax, eax
  000c8	75 1c		 jne	 SHORT $LN14@my_basenam
  000ca	41 b8 11 05 00
	00		 mov	 r8d, 1297		; 00000511H
  000d0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  000d7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DC@BCOPIKLM@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAI?$AAS?$AA_?$AAR?$AAE?$AAA?$AAD?$AAY?$AA?$CI?$AAn?$AAa?$AAm?$AAe?$AA?$CJ?$AA?$AA@
  000de	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  000e4	33 c0		 xor	 eax, eax
$LN14@my_basenam:
  000e6	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR name$[rsp]
  000ee	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  000f1	c1 e8 02	 shr	 eax, 2
  000f4	83 e0 07	 and	 eax, 7
  000f7	89 44 24 20	 mov	 DWORD PTR kind$[rsp], eax

; 1298 :     data = PyUnicode_DATA(name);

  000fb	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR name$[rsp]
  00103	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00107	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  0010d	25 00 00 00 10	 and	 eax, 268435456		; 10000000H
  00112	85 c0		 test	 eax, eax
  00114	75 1c		 jne	 SHORT $LN15@my_basenam
  00116	41 b8 12 05 00
	00		 mov	 r8d, 1298		; 00000512H
  0011c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  00123	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CM@NNIOODFF@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAn?$AAa?$AAm?$AAe?$AA?$CJ?$AA?$AA@
  0012a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  00130	33 c0		 xor	 eax, eax
$LN15@my_basenam:
  00132	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR name$[rsp]
  0013a	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  0013d	c1 e8 05	 shr	 eax, 5
  00140	83 e0 01	 and	 eax, 1
  00143	85 c0		 test	 eax, eax
  00145	0f 84 b1 00 00
	00		 je	 $LN21@my_basenam
  0014b	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR name$[rsp]
  00153	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00157	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  0015d	25 00 00 00 10	 and	 eax, 268435456		; 10000000H
  00162	85 c0		 test	 eax, eax
  00164	75 1c		 jne	 SHORT $LN16@my_basenam
  00166	41 b8 12 05 00
	00		 mov	 r8d, 1298		; 00000512H
  0016c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  00173	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CM@NNIOODFF@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAn?$AAa?$AAm?$AAe?$AA?$CJ?$AA?$AA@
  0017a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  00180	33 c0		 xor	 eax, eax
$LN16@my_basenam:
  00182	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR name$[rsp]
  0018a	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  0018d	c1 e8 07	 shr	 eax, 7
  00190	83 e0 01	 and	 eax, 1
  00193	85 c0		 test	 eax, eax
  00195	75 1c		 jne	 SHORT $LN17@my_basenam
  00197	41 b8 12 05 00
	00		 mov	 r8d, 1298		; 00000512H
  0019d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  001a4	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DC@BCOPIKLM@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAI?$AAS?$AA_?$AAR?$AAE?$AAA?$AAD?$AAY?$AA?$CI?$AAn?$AAa?$AAm?$AAe?$AA?$CJ?$AA?$AA@
  001ab	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  001b1	33 c0		 xor	 eax, eax
$LN17@my_basenam:
  001b3	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR name$[rsp]
  001bb	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  001be	c1 e8 06	 shr	 eax, 6
  001c1	83 e0 01	 and	 eax, 1
  001c4	85 c0		 test	 eax, eax
  001c6	74 15		 je	 SHORT $LN18@my_basenam
  001c8	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR name$[rsp]
  001d0	48 05 80 00 00
	00		 add	 rax, 128		; 00000080H
  001d6	48 89 44 24 50	 mov	 QWORD PTR tv164[rsp], rax
  001db	eb 13		 jmp	 SHORT $LN19@my_basenam
$LN18@my_basenam:
  001dd	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR name$[rsp]
  001e5	48 05 a0 00 00
	00		 add	 rax, 160		; 000000a0H
  001eb	48 89 44 24 50	 mov	 QWORD PTR tv164[rsp], rax
$LN19@my_basenam:
  001f0	48 8b 44 24 50	 mov	 rax, QWORD PTR tv164[rsp]
  001f5	48 89 44 24 58	 mov	 QWORD PTR tv173[rsp], rax
  001fa	eb 42		 jmp	 SHORT $LN22@my_basenam
$LN21@my_basenam:
  001fc	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR name$[rsp]
  00204	48 83 b8 a0 00
	00 00 00	 cmp	 QWORD PTR [rax+160], 0
  0020c	75 1c		 jne	 SHORT $LN20@my_basenam
  0020e	41 b8 12 05 00
	00		 mov	 r8d, 1298		; 00000512H
  00214	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  0021b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EK@BJFMBKIP@?$AA?$CI?$AA?$CI?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?$CK?$AA?$CJ?$AA?$CI?$AAn?$AAa?$AAm?$AAe?$AA?$CJ?$AA?$CJ?$AA?9?$AA?$DO?$AAd?$AAa?$AAt?$AAa@
  00222	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  00228	33 c0		 xor	 eax, eax
$LN20@my_basenam:
  0022a	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR name$[rsp]
  00232	48 8b 80 a0 00
	00 00		 mov	 rax, QWORD PTR [rax+160]
  00239	48 89 44 24 58	 mov	 QWORD PTR tv173[rsp], rax
$LN22@my_basenam:
  0023e	48 8b 44 24 58	 mov	 rax, QWORD PTR tv173[rsp]
  00243	48 89 44 24 40	 mov	 QWORD PTR data$[rsp], rax

; 1299 :     size = PyUnicode_GET_LENGTH(name);

  00248	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR name$[rsp]
  00250	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00254	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  0025a	25 00 00 00 10	 and	 eax, 268435456		; 10000000H
  0025f	85 c0		 test	 eax, eax
  00261	75 1c		 jne	 SHORT $LN23@my_basenam
  00263	41 b8 13 05 00
	00		 mov	 r8d, 1299		; 00000513H
  00269	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  00270	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CM@NNIOODFF@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAn?$AAa?$AAm?$AAe?$AA?$CJ?$AA?$AA@
  00277	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  0027d	33 c0		 xor	 eax, eax
$LN23@my_basenam:
  0027f	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR name$[rsp]
  00287	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  0028a	c1 e8 07	 shr	 eax, 7
  0028d	83 e0 01	 and	 eax, 1
  00290	85 c0		 test	 eax, eax
  00292	75 1c		 jne	 SHORT $LN24@my_basenam
  00294	41 b8 13 05 00
	00		 mov	 r8d, 1299		; 00000513H
  0029a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  002a1	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DC@BCOPIKLM@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAI?$AAS?$AA_?$AAR?$AAE?$AAA?$AAD?$AAY?$AA?$CI?$AAn?$AAa?$AAm?$AAe?$AA?$CJ?$AA?$AA@
  002a8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  002ae	33 c0		 xor	 eax, eax
$LN24@my_basenam:
  002b0	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR name$[rsp]
  002b8	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  002bc	48 89 44 24 38	 mov	 QWORD PTR size$[rsp], rax

; 1300 :     offset = 0;

  002c1	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR offset$[rsp], 0

; 1301 :     for(i=0; i < size; i++) {

  002ca	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR i$[rsp], 0
  002d3	eb 0d		 jmp	 SHORT $LN6@my_basenam
$LN5@my_basenam:
  002d5	48 8b 44 24 28	 mov	 rax, QWORD PTR i$[rsp]
  002da	48 ff c0	 inc	 rax
  002dd	48 89 44 24 28	 mov	 QWORD PTR i$[rsp], rax
$LN6@my_basenam:
  002e2	48 8b 44 24 38	 mov	 rax, QWORD PTR size$[rsp]
  002e7	48 39 44 24 28	 cmp	 QWORD PTR i$[rsp], rax
  002ec	7d 6d		 jge	 SHORT $LN4@my_basenam

; 1302 :         if (PyUnicode_READ(kind, data, i) == SEP)

  002ee	83 7c 24 20 01	 cmp	 DWORD PTR kind$[rsp], 1
  002f3	75 19		 jne	 SHORT $LN27@my_basenam
  002f5	48 8b 44 24 28	 mov	 rax, QWORD PTR i$[rsp]
  002fa	48 8b 4c 24 40	 mov	 rcx, QWORD PTR data$[rsp]
  002ff	48 03 c8	 add	 rcx, rax
  00302	48 8b c1	 mov	 rax, rcx
  00305	0f b6 00	 movzx	 eax, BYTE PTR [rax]
  00308	89 44 24 60	 mov	 DWORD PTR tv203[rsp], eax
  0030c	eb 34		 jmp	 SHORT $LN28@my_basenam
$LN27@my_basenam:
  0030e	83 7c 24 20 02	 cmp	 DWORD PTR kind$[rsp], 2
  00313	75 14		 jne	 SHORT $LN25@my_basenam
  00315	48 8b 44 24 40	 mov	 rax, QWORD PTR data$[rsp]
  0031a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR i$[rsp]
  0031f	0f b7 04 48	 movzx	 eax, WORD PTR [rax+rcx*2]
  00323	89 44 24 64	 mov	 DWORD PTR tv202[rsp], eax
  00327	eb 11		 jmp	 SHORT $LN26@my_basenam
$LN25@my_basenam:
  00329	48 8b 44 24 40	 mov	 rax, QWORD PTR data$[rsp]
  0032e	48 8b 4c 24 28	 mov	 rcx, QWORD PTR i$[rsp]
  00333	8b 04 88	 mov	 eax, DWORD PTR [rax+rcx*4]
  00336	89 44 24 64	 mov	 DWORD PTR tv202[rsp], eax
$LN26@my_basenam:
  0033a	8b 44 24 64	 mov	 eax, DWORD PTR tv202[rsp]
  0033e	89 44 24 60	 mov	 DWORD PTR tv203[rsp], eax
$LN28@my_basenam:
  00342	83 7c 24 60 5c	 cmp	 DWORD PTR tv203[rsp], 92 ; 0000005cH
  00347	75 0d		 jne	 SHORT $LN3@my_basenam

; 1303 :             offset = i + 1;

  00349	48 8b 44 24 28	 mov	 rax, QWORD PTR i$[rsp]
  0034e	48 ff c0	 inc	 rax
  00351	48 89 44 24 30	 mov	 QWORD PTR offset$[rsp], rax
$LN3@my_basenam:

; 1304 :     }

  00356	e9 7a ff ff ff	 jmp	 $LN5@my_basenam
$LN4@my_basenam:

; 1305 :     if (offset != 0)

  0035b	48 83 7c 24 30
	00		 cmp	 QWORD PTR offset$[rsp], 0
  00361	74 1b		 je	 SHORT $LN2@my_basenam

; 1306 :         return PyUnicode_Substring(name, offset, size);

  00363	4c 8b 44 24 38	 mov	 r8, QWORD PTR size$[rsp]
  00368	48 8b 54 24 30	 mov	 rdx, QWORD PTR offset$[rsp]
  0036d	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR name$[rsp]
  00375	e8 00 00 00 00	 call	 PyUnicode_Substring
  0037a	eb 17		 jmp	 SHORT $LN8@my_basenam

; 1307 :     else {

  0037c	eb 15		 jmp	 SHORT $LN1@my_basenam
$LN2@my_basenam:

; 1308 :         Py_INCREF(name);

  0037e	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR name$[rsp]
  00386	e8 00 00 00 00	 call	 _Py_IncRef

; 1309 :         return name;

  0038b	48 8b 84 24 80
	00 00 00	 mov	 rax, QWORD PTR name$[rsp]
$LN1@my_basenam:
$LN8@my_basenam:

; 1310 :     }
; 1311 : }

  00393	48 83 c4 78	 add	 rsp, 120		; 00000078H
  00397	c3		 ret	 0
my_basename ENDP
_TEXT	ENDS
EXTRN	PyObject_Repr:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$KeyError_str DD imagerel KeyError_str
	DD	imagerel KeyError_str+60
	DD	imagerel $unwind$KeyError_str
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$KeyError_str DD 010901H
	DD	04209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT KeyError_str
_TEXT	SEGMENT
self$ = 48
KeyError_str PROC					; COMDAT

; 1412 : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1413 :     /* If args is a tuple of exactly one item, apply repr to args[0].
; 1414 :        This is done so that e.g. the exception raised by {}[''] prints
; 1415 :          KeyError: ''
; 1416 :        rather than the confusing
; 1417 :          KeyError
; 1418 :        alone.  The downside is that if KeyError is raised with an explanatory
; 1419 :        string, that string will be displayed in quotes.  Too bad.
; 1420 :        If args is anything else, use the default BaseException__str__().
; 1421 :     */
; 1422 :     if (PyTuple_GET_SIZE(self->args) == 1) {

  00009	48 8b 44 24 30	 mov	 rax, QWORD PTR self$[rsp]
  0000e	48 8b 40 68	 mov	 rax, QWORD PTR [rax+104]
  00012	48 83 78 60 01	 cmp	 QWORD PTR [rax+96], 1
  00017	75 14		 jne	 SHORT $LN1@KeyError_s

; 1423 :         return PyObject_Repr(PyTuple_GET_ITEM(self->args, 0));

  00019	48 8b 44 24 30	 mov	 rax, QWORD PTR self$[rsp]
  0001e	48 8b 40 68	 mov	 rax, QWORD PTR [rax+104]
  00022	48 8b 48 70	 mov	 rcx, QWORD PTR [rax+112]
  00026	e8 00 00 00 00	 call	 PyObject_Repr
  0002b	eb 0a		 jmp	 SHORT $LN2@KeyError_s
$LN1@KeyError_s:

; 1424 :     }
; 1425 :     return BaseException_str(self);

  0002d	48 8b 4c 24 30	 mov	 rcx, QWORD PTR self$[rsp]
  00032	e8 00 00 00 00	 call	 BaseException_str
$LN2@KeyError_s:

; 1426 : }

  00037	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0003b	c3		 ret	 0
KeyError_str ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeEncodeError_GetEncoding
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyUnicodeEncodeError_GetEncoding DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$PyUnicodeEncodeError_GetEncoding
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyUnicodeEncodeError_GetEncoding DD 010901H
	DD	04209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT PyUnicodeEncodeError_GetEncoding
_TEXT	SEGMENT
exc$ = 48
PyUnicodeEncodeError_GetEncoding PROC			; COMDAT

; 1491 : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1492 :     return get_unicode(((PyUnicodeErrorObject *)exc)->encoding, "encoding");

  00009	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_08MLPGAEIK@encoding?$AA@
  00010	48 8b 44 24 30	 mov	 rax, QWORD PTR exc$[rsp]
  00015	48 8b 88 90 00
	00 00		 mov	 rcx, QWORD PTR [rax+144]
  0001c	e8 00 00 00 00	 call	 get_unicode

; 1493 : }

  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	c3		 ret	 0
PyUnicodeEncodeError_GetEncoding ENDP
_TEXT	ENDS
PUBLIC	??_C@_0CB@PPGECACH@?$CF?4200s?5attribute?5must?5be?5unicode@ ; `string'
PUBLIC	??_C@_0BJ@BFONPBGN@?$CF?4200s?5attribute?5not?5set?$AA@ ; `string'
EXTRN	PyErr_Format:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$get_unicode DD imagerel get_unicode
	DD	imagerel get_unicode+122
	DD	imagerel $unwind$get_unicode
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$get_unicode DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT ??_C@_0CB@PPGECACH@?$CF?4200s?5attribute?5must?5be?5unicode@
CONST	SEGMENT
??_C@_0CB@PPGECACH@?$CF?4200s?5attribute?5must?5be?5unicode@ DB '%.200s a'
	DB	'ttribute must be unicode', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@BFONPBGN@?$CF?4200s?5attribute?5not?5set?$AA@
CONST	SEGMENT
??_C@_0BJ@BFONPBGN@?$CF?4200s?5attribute?5not?5set?$AA@ DB '%.200s attrib'
	DB	'ute not set', 00H				; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT get_unicode
_TEXT	SEGMENT
attr$ = 48
name$ = 56
get_unicode PROC					; COMDAT

; 1463 : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1464 :     if (!attr) {

  0000e	48 83 7c 24 30
	00		 cmp	 QWORD PTR attr$[rsp], 0
  00014	75 1c		 jne	 SHORT $LN2@get_unicod

; 1465 :         PyErr_Format(PyExc_TypeError, "%.200s attribute not set", name);

  00016	4c 8b 44 24 38	 mov	 r8, QWORD PTR name$[rsp]
  0001b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@BFONPBGN@?$CF?4200s?5attribute?5not?5set?$AA@
  00022	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  00029	e8 00 00 00 00	 call	 PyErr_Format

; 1466 :         return NULL;

  0002e	33 c0		 xor	 eax, eax
  00030	eb 43		 jmp	 SHORT $LN3@get_unicod
$LN2@get_unicod:

; 1467 :     }
; 1468 : 
; 1469 :     if (!PyUnicode_Check(attr)) {

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR attr$[rsp]
  00037	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  0003b	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  00041	25 00 00 00 10	 and	 eax, 268435456		; 10000000H
  00046	85 c0		 test	 eax, eax
  00048	75 1c		 jne	 SHORT $LN1@get_unicod

; 1470 :         PyErr_Format(PyExc_TypeError,
; 1471 :                      "%.200s attribute must be unicode", name);

  0004a	4c 8b 44 24 38	 mov	 r8, QWORD PTR name$[rsp]
  0004f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CB@PPGECACH@?$CF?4200s?5attribute?5must?5be?5unicode@
  00056	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  0005d	e8 00 00 00 00	 call	 PyErr_Format

; 1472 :         return NULL;

  00062	33 c0		 xor	 eax, eax
  00064	eb 0f		 jmp	 SHORT $LN3@get_unicod
$LN1@get_unicod:

; 1473 :     }
; 1474 :     Py_INCREF(attr);

  00066	48 8b 4c 24 30	 mov	 rcx, QWORD PTR attr$[rsp]
  0006b	e8 00 00 00 00	 call	 _Py_IncRef

; 1475 :     return attr;

  00070	48 8b 44 24 30	 mov	 rax, QWORD PTR attr$[rsp]
$LN3@get_unicod:

; 1476 : }

  00075	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00079	c3		 ret	 0
get_unicode ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeDecodeError_GetEncoding
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyUnicodeDecodeError_GetEncoding DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$PyUnicodeDecodeError_GetEncoding
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyUnicodeDecodeError_GetEncoding DD 010901H
	DD	04209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT PyUnicodeDecodeError_GetEncoding
_TEXT	SEGMENT
exc$ = 48
PyUnicodeDecodeError_GetEncoding PROC			; COMDAT

; 1497 : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1498 :     return get_unicode(((PyUnicodeErrorObject *)exc)->encoding, "encoding");

  00009	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_08MLPGAEIK@encoding?$AA@
  00010	48 8b 44 24 30	 mov	 rax, QWORD PTR exc$[rsp]
  00015	48 8b 88 90 00
	00 00		 mov	 rcx, QWORD PTR [rax+144]
  0001c	e8 00 00 00 00	 call	 get_unicode

; 1499 : }

  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	c3		 ret	 0
PyUnicodeDecodeError_GetEncoding ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeEncodeError_GetObject
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyUnicodeEncodeError_GetObject DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$PyUnicodeEncodeError_GetObject
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyUnicodeEncodeError_GetObject DD 010901H
	DD	04209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT PyUnicodeEncodeError_GetObject
_TEXT	SEGMENT
exc$ = 48
PyUnicodeEncodeError_GetObject PROC			; COMDAT

; 1503 : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1504 :     return get_unicode(((PyUnicodeErrorObject *)exc)->object, "object");

  00009	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06IEOJBDIK@object?$AA@
  00010	48 8b 44 24 30	 mov	 rax, QWORD PTR exc$[rsp]
  00015	48 8b 88 98 00
	00 00		 mov	 rcx, QWORD PTR [rax+152]
  0001c	e8 00 00 00 00	 call	 get_unicode

; 1505 : }

  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	c3		 ret	 0
PyUnicodeEncodeError_GetObject ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeDecodeError_GetObject
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyUnicodeDecodeError_GetObject DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$PyUnicodeDecodeError_GetObject
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyUnicodeDecodeError_GetObject DD 010901H
	DD	04209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT PyUnicodeDecodeError_GetObject
_TEXT	SEGMENT
exc$ = 48
PyUnicodeDecodeError_GetObject PROC			; COMDAT

; 1509 : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1510 :     return get_string(((PyUnicodeErrorObject *)exc)->object, "object");

  00009	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06IEOJBDIK@object?$AA@
  00010	48 8b 44 24 30	 mov	 rax, QWORD PTR exc$[rsp]
  00015	48 8b 88 98 00
	00 00		 mov	 rcx, QWORD PTR [rax+152]
  0001c	e8 00 00 00 00	 call	 get_string

; 1511 : }

  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	c3		 ret	 0
PyUnicodeDecodeError_GetObject ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BP@OHEDFPGI@?$CF?4200s?5attribute?5must?5be?5bytes?$AA@ ; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$get_string DD imagerel get_string
	DD	imagerel get_string+122
	DD	imagerel $unwind$get_string
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$get_string DD 010e01H
	DD	0420eH
xdata	ENDS
;	COMDAT ??_C@_0BP@OHEDFPGI@?$CF?4200s?5attribute?5must?5be?5bytes?$AA@
CONST	SEGMENT
??_C@_0BP@OHEDFPGI@?$CF?4200s?5attribute?5must?5be?5bytes?$AA@ DB '%.200s'
	DB	' attribute must be bytes', 00H		; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT get_string
_TEXT	SEGMENT
attr$ = 48
name$ = 56
get_string PROC						; COMDAT

; 1447 : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1448 :     if (!attr) {

  0000e	48 83 7c 24 30
	00		 cmp	 QWORD PTR attr$[rsp], 0
  00014	75 1c		 jne	 SHORT $LN2@get_string

; 1449 :         PyErr_Format(PyExc_TypeError, "%.200s attribute not set", name);

  00016	4c 8b 44 24 38	 mov	 r8, QWORD PTR name$[rsp]
  0001b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BJ@BFONPBGN@?$CF?4200s?5attribute?5not?5set?$AA@
  00022	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  00029	e8 00 00 00 00	 call	 PyErr_Format

; 1450 :         return NULL;

  0002e	33 c0		 xor	 eax, eax
  00030	eb 43		 jmp	 SHORT $LN3@get_string
$LN2@get_string:

; 1451 :     }
; 1452 : 
; 1453 :     if (!PyBytes_Check(attr)) {

  00032	48 8b 44 24 30	 mov	 rax, QWORD PTR attr$[rsp]
  00037	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  0003b	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  00041	25 00 00 00 08	 and	 eax, 134217728		; 08000000H
  00046	85 c0		 test	 eax, eax
  00048	75 1c		 jne	 SHORT $LN1@get_string

; 1454 :         PyErr_Format(PyExc_TypeError, "%.200s attribute must be bytes", name);

  0004a	4c 8b 44 24 38	 mov	 r8, QWORD PTR name$[rsp]
  0004f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BP@OHEDFPGI@?$CF?4200s?5attribute?5must?5be?5bytes?$AA@
  00056	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  0005d	e8 00 00 00 00	 call	 PyErr_Format

; 1455 :         return NULL;

  00062	33 c0		 xor	 eax, eax
  00064	eb 0f		 jmp	 SHORT $LN3@get_string
$LN1@get_string:

; 1456 :     }
; 1457 :     Py_INCREF(attr);

  00066	48 8b 4c 24 30	 mov	 rcx, QWORD PTR attr$[rsp]
  0006b	e8 00 00 00 00	 call	 _Py_IncRef

; 1458 :     return attr;

  00070	48 8b 44 24 30	 mov	 rax, QWORD PTR attr$[rsp]
$LN3@get_string:

; 1459 : }

  00075	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00079	c3		 ret	 0
get_string ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeTranslateError_GetObject
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyUnicodeTranslateError_GetObject DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$PyUnicodeTranslateError_GetObject
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyUnicodeTranslateError_GetObject DD 010901H
	DD	04209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT PyUnicodeTranslateError_GetObject
_TEXT	SEGMENT
exc$ = 48
PyUnicodeTranslateError_GetObject PROC			; COMDAT

; 1515 : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1516 :     return get_unicode(((PyUnicodeErrorObject *)exc)->object, "object");

  00009	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06IEOJBDIK@object?$AA@
  00010	48 8b 44 24 30	 mov	 rax, QWORD PTR exc$[rsp]
  00015	48 8b 88 98 00
	00 00		 mov	 rcx, QWORD PTR [rax+152]
  0001c	e8 00 00 00 00	 call	 get_unicode

; 1517 : }

  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	c3		 ret	 0
PyUnicodeTranslateError_GetObject ENDP
_TEXT	ENDS
PUBLIC	??_C@_1DA@OCGMGMDG@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAI?$AAS?$AA_?$AAR?$AAE?$AAA?$AAD?$AAY?$AA?$CI?$AAo?$AAb?$AAj?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_1CK@KFNFIMBM@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAo?$AAb?$AAj?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	PyUnicodeEncodeError_GetStart
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyUnicodeEncodeError_GetStart DD imagerel $LN8
	DD	imagerel $LN8+264
	DD	imagerel $unwind$PyUnicodeEncodeError_GetStart
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyUnicodeEncodeError_GetStart DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT ??_C@_1DA@OCGMGMDG@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAI?$AAS?$AA_?$AAR?$AAE?$AAA?$AAD?$AAY?$AA?$CI?$AAo?$AAb?$AAj?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1DA@OCGMGMDG@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAI?$AAS?$AA_?$AAR?$AAE?$AAA?$AAD?$AAY?$AA?$CI?$AAo?$AAb?$AAj?$AA?$CJ?$AA?$AA@ DB 'P'
	DB	00H, 'y', 00H, 'U', 00H, 'n', 00H, 'i', 00H, 'c', 00H, 'o', 00H
	DB	'd', 00H, 'e', 00H, '_', 00H, 'I', 00H, 'S', 00H, '_', 00H, 'R'
	DB	00H, 'E', 00H, 'A', 00H, 'D', 00H, 'Y', 00H, '(', 00H, 'o', 00H
	DB	'b', 00H, 'j', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CK@KFNFIMBM@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAo?$AAb?$AAj?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1CK@KFNFIMBM@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAo?$AAb?$AAj?$AA?$CJ?$AA?$AA@ DB 'P'
	DB	00H, 'y', 00H, 'U', 00H, 'n', 00H, 'i', 00H, 'c', 00H, 'o', 00H
	DB	'd', 00H, 'e', 00H, '_', 00H, 'C', 00H, 'h', 00H, 'e', 00H, 'c'
	DB	00H, 'k', 00H, '(', 00H, 'o', 00H, 'b', 00H, 'j', 00H, ')', 00H
	DB	00H, 00H					; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT PyUnicodeEncodeError_GetStart
_TEXT	SEGMENT
size$ = 32
obj$ = 40
exc$ = 64
start$ = 72
PyUnicodeEncodeError_GetStart PROC			; COMDAT

; 1521 : {

$LN8:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 1522 :     Py_ssize_t size;
; 1523 :     PyObject *obj = get_unicode(((PyUnicodeErrorObject *)exc)->object,
; 1524 :                                 "object");

  0000e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06IEOJBDIK@object?$AA@
  00015	48 8b 44 24 40	 mov	 rax, QWORD PTR exc$[rsp]
  0001a	48 8b 88 98 00
	00 00		 mov	 rcx, QWORD PTR [rax+152]
  00021	e8 00 00 00 00	 call	 get_unicode
  00026	48 89 44 24 28	 mov	 QWORD PTR obj$[rsp], rax

; 1525 :     if (!obj)

  0002b	48 83 7c 24 28
	00		 cmp	 QWORD PTR obj$[rsp], 0
  00031	75 0a		 jne	 SHORT $LN3@PyUnicodeE

; 1526 :         return -1;

  00033	b8 ff ff ff ff	 mov	 eax, -1
  00038	e9 c6 00 00 00	 jmp	 $LN4@PyUnicodeE
$LN3@PyUnicodeE:

; 1527 :     *start = ((PyUnicodeErrorObject *)exc)->start;

  0003d	48 8b 44 24 48	 mov	 rax, QWORD PTR start$[rsp]
  00042	48 8b 4c 24 40	 mov	 rcx, QWORD PTR exc$[rsp]
  00047	48 8b 89 a0 00
	00 00		 mov	 rcx, QWORD PTR [rcx+160]
  0004e	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1528 :     size = PyUnicode_GET_LENGTH(obj);

  00051	48 8b 44 24 28	 mov	 rax, QWORD PTR obj$[rsp]
  00056	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  0005a	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  00060	25 00 00 00 10	 and	 eax, 268435456		; 10000000H
  00065	85 c0		 test	 eax, eax
  00067	75 1c		 jne	 SHORT $LN6@PyUnicodeE
  00069	41 b8 f8 05 00
	00		 mov	 r8d, 1528		; 000005f8H
  0006f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  00076	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CK@KFNFIMBM@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAo?$AAb?$AAj?$AA?$CJ?$AA?$AA@
  0007d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  00083	33 c0		 xor	 eax, eax
$LN6@PyUnicodeE:
  00085	48 8b 44 24 28	 mov	 rax, QWORD PTR obj$[rsp]
  0008a	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  0008d	c1 e8 07	 shr	 eax, 7
  00090	83 e0 01	 and	 eax, 1
  00093	85 c0		 test	 eax, eax
  00095	75 1c		 jne	 SHORT $LN7@PyUnicodeE
  00097	41 b8 f8 05 00
	00		 mov	 r8d, 1528		; 000005f8H
  0009d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  000a4	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DA@OCGMGMDG@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAI?$AAS?$AA_?$AAR?$AAE?$AAA?$AAD?$AAY?$AA?$CI?$AAo?$AAb?$AAj?$AA?$CJ?$AA?$AA@
  000ab	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  000b1	33 c0		 xor	 eax, eax
$LN7@PyUnicodeE:
  000b3	48 8b 44 24 28	 mov	 rax, QWORD PTR obj$[rsp]
  000b8	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  000bc	48 89 44 24 20	 mov	 QWORD PTR size$[rsp], rax

; 1529 :     if (*start<0)

  000c1	48 8b 44 24 48	 mov	 rax, QWORD PTR start$[rsp]
  000c6	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  000ca	7d 0c		 jge	 SHORT $LN2@PyUnicodeE

; 1530 :         *start = 0; /*XXX check for values <0*/

  000cc	48 8b 44 24 48	 mov	 rax, QWORD PTR start$[rsp]
  000d1	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@PyUnicodeE:

; 1531 :     if (*start>=size)

  000d8	48 8b 44 24 48	 mov	 rax, QWORD PTR start$[rsp]
  000dd	48 8b 4c 24 20	 mov	 rcx, QWORD PTR size$[rsp]
  000e2	48 39 08	 cmp	 QWORD PTR [rax], rcx
  000e5	7c 10		 jl	 SHORT $LN1@PyUnicodeE

; 1532 :         *start = size-1;

  000e7	48 8b 44 24 20	 mov	 rax, QWORD PTR size$[rsp]
  000ec	48 ff c8	 dec	 rax
  000ef	48 8b 4c 24 48	 mov	 rcx, QWORD PTR start$[rsp]
  000f4	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN1@PyUnicodeE:

; 1533 :     Py_DECREF(obj);

  000f7	48 8b 4c 24 28	 mov	 rcx, QWORD PTR obj$[rsp]
  000fc	e8 00 00 00 00	 call	 _Py_DecRef

; 1534 :     return 0;

  00101	33 c0		 xor	 eax, eax
$LN4@PyUnicodeE:

; 1535 : }

  00103	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00107	c3		 ret	 0
PyUnicodeEncodeError_GetStart ENDP
_TEXT	ENDS
PUBLIC	??_C@_1CG@BMHHMEBF@?$AAP?$AAy?$AAB?$AAy?$AAt?$AAe?$AAs?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAo?$AAb?$AAj?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	PyUnicodeDecodeError_GetStart
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyUnicodeDecodeError_GetStart DD imagerel $LN7
	DD	imagerel $LN7+218
	DD	imagerel $unwind$PyUnicodeDecodeError_GetStart
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyUnicodeDecodeError_GetStart DD 010e01H
	DD	0620eH
xdata	ENDS
;	COMDAT ??_C@_1CG@BMHHMEBF@?$AAP?$AAy?$AAB?$AAy?$AAt?$AAe?$AAs?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAo?$AAb?$AAj?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1CG@BMHHMEBF@?$AAP?$AAy?$AAB?$AAy?$AAt?$AAe?$AAs?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAo?$AAb?$AAj?$AA?$CJ?$AA?$AA@ DB 'P'
	DB	00H, 'y', 00H, 'B', 00H, 'y', 00H, 't', 00H, 'e', 00H, 's', 00H
	DB	'_', 00H, 'C', 00H, 'h', 00H, 'e', 00H, 'c', 00H, 'k', 00H, '('
	DB	00H, 'o', 00H, 'b', 00H, 'j', 00H, ')', 00H, 00H, 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT PyUnicodeDecodeError_GetStart
_TEXT	SEGMENT
size$ = 32
obj$ = 40
exc$ = 64
start$ = 72
PyUnicodeDecodeError_GetStart PROC			; COMDAT

; 1540 : {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 1541 :     Py_ssize_t size;
; 1542 :     PyObject *obj = get_string(((PyUnicodeErrorObject *)exc)->object, "object");

  0000e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06IEOJBDIK@object?$AA@
  00015	48 8b 44 24 40	 mov	 rax, QWORD PTR exc$[rsp]
  0001a	48 8b 88 98 00
	00 00		 mov	 rcx, QWORD PTR [rax+152]
  00021	e8 00 00 00 00	 call	 get_string
  00026	48 89 44 24 28	 mov	 QWORD PTR obj$[rsp], rax

; 1543 :     if (!obj)

  0002b	48 83 7c 24 28
	00		 cmp	 QWORD PTR obj$[rsp], 0
  00031	75 0a		 jne	 SHORT $LN3@PyUnicodeD

; 1544 :         return -1;

  00033	b8 ff ff ff ff	 mov	 eax, -1
  00038	e9 98 00 00 00	 jmp	 $LN4@PyUnicodeD
$LN3@PyUnicodeD:

; 1545 :     size = PyBytes_GET_SIZE(obj);

  0003d	48 8b 44 24 28	 mov	 rax, QWORD PTR obj$[rsp]
  00042	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00046	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  0004c	25 00 00 00 08	 and	 eax, 134217728		; 08000000H
  00051	85 c0		 test	 eax, eax
  00053	75 1c		 jne	 SHORT $LN6@PyUnicodeD
  00055	41 b8 09 06 00
	00		 mov	 r8d, 1545		; 00000609H
  0005b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  00062	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@BMHHMEBF@?$AAP?$AAy?$AAB?$AAy?$AAt?$AAe?$AAs?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAo?$AAb?$AAj?$AA?$CJ?$AA?$AA@
  00069	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  0006f	33 c0		 xor	 eax, eax
$LN6@PyUnicodeD:
  00071	48 8b 44 24 28	 mov	 rax, QWORD PTR obj$[rsp]
  00076	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  0007a	48 89 44 24 20	 mov	 QWORD PTR size$[rsp], rax

; 1546 :     *start = ((PyUnicodeErrorObject *)exc)->start;

  0007f	48 8b 44 24 48	 mov	 rax, QWORD PTR start$[rsp]
  00084	48 8b 4c 24 40	 mov	 rcx, QWORD PTR exc$[rsp]
  00089	48 8b 89 a0 00
	00 00		 mov	 rcx, QWORD PTR [rcx+160]
  00090	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1547 :     if (*start<0)

  00093	48 8b 44 24 48	 mov	 rax, QWORD PTR start$[rsp]
  00098	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0009c	7d 0c		 jge	 SHORT $LN2@PyUnicodeD

; 1548 :         *start = 0;

  0009e	48 8b 44 24 48	 mov	 rax, QWORD PTR start$[rsp]
  000a3	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@PyUnicodeD:

; 1549 :     if (*start>=size)

  000aa	48 8b 44 24 48	 mov	 rax, QWORD PTR start$[rsp]
  000af	48 8b 4c 24 20	 mov	 rcx, QWORD PTR size$[rsp]
  000b4	48 39 08	 cmp	 QWORD PTR [rax], rcx
  000b7	7c 10		 jl	 SHORT $LN1@PyUnicodeD

; 1550 :         *start = size-1;

  000b9	48 8b 44 24 20	 mov	 rax, QWORD PTR size$[rsp]
  000be	48 ff c8	 dec	 rax
  000c1	48 8b 4c 24 48	 mov	 rcx, QWORD PTR start$[rsp]
  000c6	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN1@PyUnicodeD:

; 1551 :     Py_DECREF(obj);

  000c9	48 8b 4c 24 28	 mov	 rcx, QWORD PTR obj$[rsp]
  000ce	e8 00 00 00 00	 call	 _Py_DecRef

; 1552 :     return 0;

  000d3	33 c0		 xor	 eax, eax
$LN4@PyUnicodeD:

; 1553 : }

  000d5	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000d9	c3		 ret	 0
PyUnicodeDecodeError_GetStart ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeTranslateError_GetStart
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyUnicodeTranslateError_GetStart DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$PyUnicodeTranslateError_GetStart
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyUnicodeTranslateError_GetStart DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT PyUnicodeTranslateError_GetStart
_TEXT	SEGMENT
exc$ = 48
start$ = 56
PyUnicodeTranslateError_GetStart PROC			; COMDAT

; 1558 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1559 :     return PyUnicodeEncodeError_GetStart(exc, start);

  0000e	48 8b 54 24 38	 mov	 rdx, QWORD PTR start$[rsp]
  00013	48 8b 4c 24 30	 mov	 rcx, QWORD PTR exc$[rsp]
  00018	e8 00 00 00 00	 call	 PyUnicodeEncodeError_GetStart

; 1560 : }

  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	c3		 ret	 0
PyUnicodeTranslateError_GetStart ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeEncodeError_SetStart
; Function compile flags: /Odtp
;	COMDAT PyUnicodeEncodeError_SetStart
_TEXT	SEGMENT
exc$ = 8
start$ = 16
PyUnicodeEncodeError_SetStart PROC			; COMDAT

; 1565 : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 1566 :     ((PyUnicodeErrorObject *)exc)->start = start;

  0000a	48 8b 44 24 08	 mov	 rax, QWORD PTR exc$[rsp]
  0000f	48 8b 4c 24 10	 mov	 rcx, QWORD PTR start$[rsp]
  00014	48 89 88 a0 00
	00 00		 mov	 QWORD PTR [rax+160], rcx

; 1567 :     return 0;

  0001b	33 c0		 xor	 eax, eax

; 1568 : }

  0001d	c3		 ret	 0
PyUnicodeEncodeError_SetStart ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeDecodeError_SetStart
; Function compile flags: /Odtp
;	COMDAT PyUnicodeDecodeError_SetStart
_TEXT	SEGMENT
exc$ = 8
start$ = 16
PyUnicodeDecodeError_SetStart PROC			; COMDAT

; 1573 : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 1574 :     ((PyUnicodeErrorObject *)exc)->start = start;

  0000a	48 8b 44 24 08	 mov	 rax, QWORD PTR exc$[rsp]
  0000f	48 8b 4c 24 10	 mov	 rcx, QWORD PTR start$[rsp]
  00014	48 89 88 a0 00
	00 00		 mov	 QWORD PTR [rax+160], rcx

; 1575 :     return 0;

  0001b	33 c0		 xor	 eax, eax

; 1576 : }

  0001d	c3		 ret	 0
PyUnicodeDecodeError_SetStart ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeTranslateError_SetStart
; Function compile flags: /Odtp
;	COMDAT PyUnicodeTranslateError_SetStart
_TEXT	SEGMENT
exc$ = 8
start$ = 16
PyUnicodeTranslateError_SetStart PROC			; COMDAT

; 1581 : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 1582 :     ((PyUnicodeErrorObject *)exc)->start = start;

  0000a	48 8b 44 24 08	 mov	 rax, QWORD PTR exc$[rsp]
  0000f	48 8b 4c 24 10	 mov	 rcx, QWORD PTR start$[rsp]
  00014	48 89 88 a0 00
	00 00		 mov	 QWORD PTR [rax+160], rcx

; 1583 :     return 0;

  0001b	33 c0		 xor	 eax, eax

; 1584 : }

  0001d	c3		 ret	 0
PyUnicodeTranslateError_SetStart ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeEncodeError_GetEnd
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyUnicodeEncodeError_GetEnd DD imagerel $LN8
	DD	imagerel $LN8+261
	DD	imagerel $unwind$PyUnicodeEncodeError_GetEnd
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyUnicodeEncodeError_GetEnd DD 010e01H
	DD	0620eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT PyUnicodeEncodeError_GetEnd
_TEXT	SEGMENT
size$ = 32
obj$ = 40
exc$ = 64
end$ = 72
PyUnicodeEncodeError_GetEnd PROC			; COMDAT

; 1589 : {

$LN8:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 1590 :     Py_ssize_t size;
; 1591 :     PyObject *obj = get_unicode(((PyUnicodeErrorObject *)exc)->object,
; 1592 :                                 "object");

  0000e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06IEOJBDIK@object?$AA@
  00015	48 8b 44 24 40	 mov	 rax, QWORD PTR exc$[rsp]
  0001a	48 8b 88 98 00
	00 00		 mov	 rcx, QWORD PTR [rax+152]
  00021	e8 00 00 00 00	 call	 get_unicode
  00026	48 89 44 24 28	 mov	 QWORD PTR obj$[rsp], rax

; 1593 :     if (!obj)

  0002b	48 83 7c 24 28
	00		 cmp	 QWORD PTR obj$[rsp], 0
  00031	75 0a		 jne	 SHORT $LN3@PyUnicodeE@2

; 1594 :         return -1;

  00033	b8 ff ff ff ff	 mov	 eax, -1
  00038	e9 c3 00 00 00	 jmp	 $LN4@PyUnicodeE@2
$LN3@PyUnicodeE@2:

; 1595 :     *end = ((PyUnicodeErrorObject *)exc)->end;

  0003d	48 8b 44 24 48	 mov	 rax, QWORD PTR end$[rsp]
  00042	48 8b 4c 24 40	 mov	 rcx, QWORD PTR exc$[rsp]
  00047	48 8b 89 a8 00
	00 00		 mov	 rcx, QWORD PTR [rcx+168]
  0004e	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1596 :     size = PyUnicode_GET_LENGTH(obj);

  00051	48 8b 44 24 28	 mov	 rax, QWORD PTR obj$[rsp]
  00056	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  0005a	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  00060	25 00 00 00 10	 and	 eax, 268435456		; 10000000H
  00065	85 c0		 test	 eax, eax
  00067	75 1c		 jne	 SHORT $LN6@PyUnicodeE@2
  00069	41 b8 3c 06 00
	00		 mov	 r8d, 1596		; 0000063cH
  0006f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  00076	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CK@KFNFIMBM@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAo?$AAb?$AAj?$AA?$CJ?$AA?$AA@
  0007d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  00083	33 c0		 xor	 eax, eax
$LN6@PyUnicodeE@2:
  00085	48 8b 44 24 28	 mov	 rax, QWORD PTR obj$[rsp]
  0008a	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  0008d	c1 e8 07	 shr	 eax, 7
  00090	83 e0 01	 and	 eax, 1
  00093	85 c0		 test	 eax, eax
  00095	75 1c		 jne	 SHORT $LN7@PyUnicodeE@2
  00097	41 b8 3c 06 00
	00		 mov	 r8d, 1596		; 0000063cH
  0009d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  000a4	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DA@OCGMGMDG@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAI?$AAS?$AA_?$AAR?$AAE?$AAA?$AAD?$AAY?$AA?$CI?$AAo?$AAb?$AAj?$AA?$CJ?$AA?$AA@
  000ab	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  000b1	33 c0		 xor	 eax, eax
$LN7@PyUnicodeE@2:
  000b3	48 8b 44 24 28	 mov	 rax, QWORD PTR obj$[rsp]
  000b8	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  000bc	48 89 44 24 20	 mov	 QWORD PTR size$[rsp], rax

; 1597 :     if (*end<1)

  000c1	48 8b 44 24 48	 mov	 rax, QWORD PTR end$[rsp]
  000c6	48 83 38 01	 cmp	 QWORD PTR [rax], 1
  000ca	7d 0c		 jge	 SHORT $LN2@PyUnicodeE@2

; 1598 :         *end = 1;

  000cc	48 8b 44 24 48	 mov	 rax, QWORD PTR end$[rsp]
  000d1	48 c7 00 01 00
	00 00		 mov	 QWORD PTR [rax], 1
$LN2@PyUnicodeE@2:

; 1599 :     if (*end>size)

  000d8	48 8b 44 24 48	 mov	 rax, QWORD PTR end$[rsp]
  000dd	48 8b 4c 24 20	 mov	 rcx, QWORD PTR size$[rsp]
  000e2	48 39 08	 cmp	 QWORD PTR [rax], rcx
  000e5	7e 0d		 jle	 SHORT $LN1@PyUnicodeE@2

; 1600 :         *end = size;

  000e7	48 8b 44 24 48	 mov	 rax, QWORD PTR end$[rsp]
  000ec	48 8b 4c 24 20	 mov	 rcx, QWORD PTR size$[rsp]
  000f1	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN1@PyUnicodeE@2:

; 1601 :     Py_DECREF(obj);

  000f4	48 8b 4c 24 28	 mov	 rcx, QWORD PTR obj$[rsp]
  000f9	e8 00 00 00 00	 call	 _Py_DecRef

; 1602 :     return 0;

  000fe	33 c0		 xor	 eax, eax
$LN4@PyUnicodeE@2:

; 1603 : }

  00100	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00104	c3		 ret	 0
PyUnicodeEncodeError_GetEnd ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeDecodeError_GetEnd
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyUnicodeDecodeError_GetEnd DD imagerel $LN7
	DD	imagerel $LN7+215
	DD	imagerel $unwind$PyUnicodeDecodeError_GetEnd
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyUnicodeDecodeError_GetEnd DD 010e01H
	DD	0620eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT PyUnicodeDecodeError_GetEnd
_TEXT	SEGMENT
size$ = 32
obj$ = 40
exc$ = 64
end$ = 72
PyUnicodeDecodeError_GetEnd PROC			; COMDAT

; 1608 : {

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 1609 :     Py_ssize_t size;
; 1610 :     PyObject *obj = get_string(((PyUnicodeErrorObject *)exc)->object, "object");

  0000e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06IEOJBDIK@object?$AA@
  00015	48 8b 44 24 40	 mov	 rax, QWORD PTR exc$[rsp]
  0001a	48 8b 88 98 00
	00 00		 mov	 rcx, QWORD PTR [rax+152]
  00021	e8 00 00 00 00	 call	 get_string
  00026	48 89 44 24 28	 mov	 QWORD PTR obj$[rsp], rax

; 1611 :     if (!obj)

  0002b	48 83 7c 24 28
	00		 cmp	 QWORD PTR obj$[rsp], 0
  00031	75 0a		 jne	 SHORT $LN3@PyUnicodeD@2

; 1612 :         return -1;

  00033	b8 ff ff ff ff	 mov	 eax, -1
  00038	e9 95 00 00 00	 jmp	 $LN4@PyUnicodeD@2
$LN3@PyUnicodeD@2:

; 1613 :     size = PyBytes_GET_SIZE(obj);

  0003d	48 8b 44 24 28	 mov	 rax, QWORD PTR obj$[rsp]
  00042	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00046	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  0004c	25 00 00 00 08	 and	 eax, 134217728		; 08000000H
  00051	85 c0		 test	 eax, eax
  00053	75 1c		 jne	 SHORT $LN6@PyUnicodeD@2
  00055	41 b8 4d 06 00
	00		 mov	 r8d, 1613		; 0000064dH
  0005b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  00062	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@BMHHMEBF@?$AAP?$AAy?$AAB?$AAy?$AAt?$AAe?$AAs?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAo?$AAb?$AAj?$AA?$CJ?$AA?$AA@
  00069	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  0006f	33 c0		 xor	 eax, eax
$LN6@PyUnicodeD@2:
  00071	48 8b 44 24 28	 mov	 rax, QWORD PTR obj$[rsp]
  00076	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  0007a	48 89 44 24 20	 mov	 QWORD PTR size$[rsp], rax

; 1614 :     *end = ((PyUnicodeErrorObject *)exc)->end;

  0007f	48 8b 44 24 48	 mov	 rax, QWORD PTR end$[rsp]
  00084	48 8b 4c 24 40	 mov	 rcx, QWORD PTR exc$[rsp]
  00089	48 8b 89 a8 00
	00 00		 mov	 rcx, QWORD PTR [rcx+168]
  00090	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1615 :     if (*end<1)

  00093	48 8b 44 24 48	 mov	 rax, QWORD PTR end$[rsp]
  00098	48 83 38 01	 cmp	 QWORD PTR [rax], 1
  0009c	7d 0c		 jge	 SHORT $LN2@PyUnicodeD@2

; 1616 :         *end = 1;

  0009e	48 8b 44 24 48	 mov	 rax, QWORD PTR end$[rsp]
  000a3	48 c7 00 01 00
	00 00		 mov	 QWORD PTR [rax], 1
$LN2@PyUnicodeD@2:

; 1617 :     if (*end>size)

  000aa	48 8b 44 24 48	 mov	 rax, QWORD PTR end$[rsp]
  000af	48 8b 4c 24 20	 mov	 rcx, QWORD PTR size$[rsp]
  000b4	48 39 08	 cmp	 QWORD PTR [rax], rcx
  000b7	7e 0d		 jle	 SHORT $LN1@PyUnicodeD@2

; 1618 :         *end = size;

  000b9	48 8b 44 24 48	 mov	 rax, QWORD PTR end$[rsp]
  000be	48 8b 4c 24 20	 mov	 rcx, QWORD PTR size$[rsp]
  000c3	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN1@PyUnicodeD@2:

; 1619 :     Py_DECREF(obj);

  000c6	48 8b 4c 24 28	 mov	 rcx, QWORD PTR obj$[rsp]
  000cb	e8 00 00 00 00	 call	 _Py_DecRef

; 1620 :     return 0;

  000d0	33 c0		 xor	 eax, eax
$LN4@PyUnicodeD@2:

; 1621 : }

  000d2	48 83 c4 38	 add	 rsp, 56			; 00000038H
  000d6	c3		 ret	 0
PyUnicodeDecodeError_GetEnd ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeTranslateError_GetEnd
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyUnicodeTranslateError_GetEnd DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$PyUnicodeTranslateError_GetEnd
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyUnicodeTranslateError_GetEnd DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT PyUnicodeTranslateError_GetEnd
_TEXT	SEGMENT
exc$ = 48
start$ = 56
PyUnicodeTranslateError_GetEnd PROC			; COMDAT

; 1626 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1627 :     return PyUnicodeEncodeError_GetEnd(exc, start);

  0000e	48 8b 54 24 38	 mov	 rdx, QWORD PTR start$[rsp]
  00013	48 8b 4c 24 30	 mov	 rcx, QWORD PTR exc$[rsp]
  00018	e8 00 00 00 00	 call	 PyUnicodeEncodeError_GetEnd

; 1628 : }

  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	c3		 ret	 0
PyUnicodeTranslateError_GetEnd ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeEncodeError_SetEnd
; Function compile flags: /Odtp
;	COMDAT PyUnicodeEncodeError_SetEnd
_TEXT	SEGMENT
exc$ = 8
end$ = 16
PyUnicodeEncodeError_SetEnd PROC			; COMDAT

; 1633 : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 1634 :     ((PyUnicodeErrorObject *)exc)->end = end;

  0000a	48 8b 44 24 08	 mov	 rax, QWORD PTR exc$[rsp]
  0000f	48 8b 4c 24 10	 mov	 rcx, QWORD PTR end$[rsp]
  00014	48 89 88 a8 00
	00 00		 mov	 QWORD PTR [rax+168], rcx

; 1635 :     return 0;

  0001b	33 c0		 xor	 eax, eax

; 1636 : }

  0001d	c3		 ret	 0
PyUnicodeEncodeError_SetEnd ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeDecodeError_SetEnd
; Function compile flags: /Odtp
;	COMDAT PyUnicodeDecodeError_SetEnd
_TEXT	SEGMENT
exc$ = 8
end$ = 16
PyUnicodeDecodeError_SetEnd PROC			; COMDAT

; 1641 : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 1642 :     ((PyUnicodeErrorObject *)exc)->end = end;

  0000a	48 8b 44 24 08	 mov	 rax, QWORD PTR exc$[rsp]
  0000f	48 8b 4c 24 10	 mov	 rcx, QWORD PTR end$[rsp]
  00014	48 89 88 a8 00
	00 00		 mov	 QWORD PTR [rax+168], rcx

; 1643 :     return 0;

  0001b	33 c0		 xor	 eax, eax

; 1644 : }

  0001d	c3		 ret	 0
PyUnicodeDecodeError_SetEnd ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeTranslateError_SetEnd
; Function compile flags: /Odtp
;	COMDAT PyUnicodeTranslateError_SetEnd
_TEXT	SEGMENT
exc$ = 8
end$ = 16
PyUnicodeTranslateError_SetEnd PROC			; COMDAT

; 1649 : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx

; 1650 :     ((PyUnicodeErrorObject *)exc)->end = end;

  0000a	48 8b 44 24 08	 mov	 rax, QWORD PTR exc$[rsp]
  0000f	48 8b 4c 24 10	 mov	 rcx, QWORD PTR end$[rsp]
  00014	48 89 88 a8 00
	00 00		 mov	 QWORD PTR [rax+168], rcx

; 1651 :     return 0;

  0001b	33 c0		 xor	 eax, eax

; 1652 : }

  0001d	c3		 ret	 0
PyUnicodeTranslateError_SetEnd ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeEncodeError_GetReason
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyUnicodeEncodeError_GetReason DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$PyUnicodeEncodeError_GetReason
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyUnicodeEncodeError_GetReason DD 010901H
	DD	04209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT PyUnicodeEncodeError_GetReason
_TEXT	SEGMENT
exc$ = 48
PyUnicodeEncodeError_GetReason PROC			; COMDAT

; 1656 : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1657 :     return get_unicode(((PyUnicodeErrorObject *)exc)->reason, "reason");

  00009	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06CEHAOENB@reason?$AA@
  00010	48 8b 44 24 30	 mov	 rax, QWORD PTR exc$[rsp]
  00015	48 8b 88 b0 00
	00 00		 mov	 rcx, QWORD PTR [rax+176]
  0001c	e8 00 00 00 00	 call	 get_unicode

; 1658 : }

  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	c3		 ret	 0
PyUnicodeEncodeError_GetReason ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeDecodeError_GetReason
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyUnicodeDecodeError_GetReason DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$PyUnicodeDecodeError_GetReason
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyUnicodeDecodeError_GetReason DD 010901H
	DD	04209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT PyUnicodeDecodeError_GetReason
_TEXT	SEGMENT
exc$ = 48
PyUnicodeDecodeError_GetReason PROC			; COMDAT

; 1663 : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1664 :     return get_unicode(((PyUnicodeErrorObject *)exc)->reason, "reason");

  00009	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06CEHAOENB@reason?$AA@
  00010	48 8b 44 24 30	 mov	 rax, QWORD PTR exc$[rsp]
  00015	48 8b 88 b0 00
	00 00		 mov	 rcx, QWORD PTR [rax+176]
  0001c	e8 00 00 00 00	 call	 get_unicode

; 1665 : }

  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	c3		 ret	 0
PyUnicodeDecodeError_GetReason ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeTranslateError_GetReason
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyUnicodeTranslateError_GetReason DD imagerel $LN3
	DD	imagerel $LN3+38
	DD	imagerel $unwind$PyUnicodeTranslateError_GetReason
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyUnicodeTranslateError_GetReason DD 010901H
	DD	04209H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT PyUnicodeTranslateError_GetReason
_TEXT	SEGMENT
exc$ = 48
PyUnicodeTranslateError_GetReason PROC			; COMDAT

; 1670 : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1671 :     return get_unicode(((PyUnicodeErrorObject *)exc)->reason, "reason");

  00009	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06CEHAOENB@reason?$AA@
  00010	48 8b 44 24 30	 mov	 rax, QWORD PTR exc$[rsp]
  00015	48 8b 88 b0 00
	00 00		 mov	 rcx, QWORD PTR [rax+176]
  0001c	e8 00 00 00 00	 call	 get_unicode

; 1672 : }

  00021	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00025	c3		 ret	 0
PyUnicodeTranslateError_GetReason ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeEncodeError_SetReason
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyUnicodeEncodeError_SetReason DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$PyUnicodeEncodeError_SetReason
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyUnicodeEncodeError_SetReason DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT PyUnicodeEncodeError_SetReason
_TEXT	SEGMENT
exc$ = 48
reason$ = 56
PyUnicodeEncodeError_SetReason PROC			; COMDAT

; 1677 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1678 :     return set_unicodefromstring(&((PyUnicodeErrorObject *)exc)->reason,
; 1679 :                                  reason);

  0000e	48 8b 44 24 30	 mov	 rax, QWORD PTR exc$[rsp]
  00013	48 05 b0 00 00
	00		 add	 rax, 176		; 000000b0H
  00019	48 8b 54 24 38	 mov	 rdx, QWORD PTR reason$[rsp]
  0001e	48 8b c8	 mov	 rcx, rax
  00021	e8 00 00 00 00	 call	 set_unicodefromstring

; 1680 : }

  00026	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002a	c3		 ret	 0
PyUnicodeEncodeError_SetReason ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BG@JJLDAHKM@set_unicodefromstring?$AA@	; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$set_unicodefromstring DD imagerel set_unicodefromstring
	DD	imagerel set_unicodefromstring+161
	DD	imagerel $unwind$set_unicodefromstring
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$set_unicodefromstring DD 010e01H
	DD	0820eH
xdata	ENDS
;	COMDAT ??_C@_0BG@JJLDAHKM@set_unicodefromstring?$AA@
CONST	SEGMENT
??_C@_0BG@JJLDAHKM@set_unicodefromstring?$AA@ DB 'set_unicodefromstring', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT set_unicodefromstring
_TEXT	SEGMENT
obj$ = 48
_py_tmp$22869 = 56
attr$ = 80
value$ = 88
set_unicodefromstring PROC				; COMDAT

; 1480 : {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 1481 :     PyObject *obj = PyUnicode_FromString(value);

  0000e	48 8b 4c 24 58	 mov	 rcx, QWORD PTR value$[rsp]
  00013	e8 00 00 00 00	 call	 PyUnicode_FromString
  00018	48 89 44 24 30	 mov	 QWORD PTR obj$[rsp], rax

; 1482 :     if (!obj)

  0001d	48 83 7c 24 30
	00		 cmp	 QWORD PTR obj$[rsp], 0
  00023	75 07		 jne	 SHORT $LN5@set_unicod

; 1483 :         return -1;

  00025	b8 ff ff ff ff	 mov	 eax, -1
  0002a	eb 70		 jmp	 SHORT $LN6@set_unicod
$LN5@set_unicod:
$LN4@set_unicod:

; 1484 :     Py_CLEAR(*attr);

  0002c	48 8b 44 24 50	 mov	 rax, QWORD PTR attr$[rsp]
  00031	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00035	74 50		 je	 SHORT $LN1@set_unicod
  00037	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0003f	48 8b 44 24 50	 mov	 rax, QWORD PTR attr$[rsp]
  00044	4c 8b 08	 mov	 r9, QWORD PTR [rax]
  00047	41 b8 cc 05 00
	00		 mov	 r8d, 1484		; 000005ccH
  0004d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00054	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BG@JJLDAHKM@set_unicodefromstring?$AA@
  0005b	e8 00 00 00 00	 call	 _PyParallel_Guard
  00060	85 c0		 test	 eax, eax
  00062	75 23		 jne	 SHORT $LN1@set_unicod
  00064	48 8b 44 24 50	 mov	 rax, QWORD PTR attr$[rsp]
  00069	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006c	48 89 44 24 38	 mov	 QWORD PTR _py_tmp$22869[rsp], rax
  00071	48 8b 44 24 50	 mov	 rax, QWORD PTR attr$[rsp]
  00076	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  0007d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _py_tmp$22869[rsp]
  00082	e8 00 00 00 00	 call	 _Py_DecRef
$LN1@set_unicod:
  00087	33 c0		 xor	 eax, eax
  00089	85 c0		 test	 eax, eax
  0008b	75 9f		 jne	 SHORT $LN4@set_unicod

; 1485 :     *attr = obj;

  0008d	48 8b 44 24 50	 mov	 rax, QWORD PTR attr$[rsp]
  00092	48 8b 4c 24 30	 mov	 rcx, QWORD PTR obj$[rsp]
  00097	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1486 :     return 0;

  0009a	33 c0		 xor	 eax, eax
$LN6@set_unicod:

; 1487 : }

  0009c	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000a0	c3		 ret	 0
set_unicodefromstring ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeDecodeError_SetReason
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyUnicodeDecodeError_SetReason DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$PyUnicodeDecodeError_SetReason
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyUnicodeDecodeError_SetReason DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT PyUnicodeDecodeError_SetReason
_TEXT	SEGMENT
exc$ = 48
reason$ = 56
PyUnicodeDecodeError_SetReason PROC			; COMDAT

; 1685 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1686 :     return set_unicodefromstring(&((PyUnicodeErrorObject *)exc)->reason,
; 1687 :                                  reason);

  0000e	48 8b 44 24 30	 mov	 rax, QWORD PTR exc$[rsp]
  00013	48 05 b0 00 00
	00		 add	 rax, 176		; 000000b0H
  00019	48 8b 54 24 38	 mov	 rdx, QWORD PTR reason$[rsp]
  0001e	48 8b c8	 mov	 rcx, rax
  00021	e8 00 00 00 00	 call	 set_unicodefromstring

; 1688 : }

  00026	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002a	c3		 ret	 0
PyUnicodeDecodeError_SetReason ENDP
_TEXT	ENDS
PUBLIC	PyUnicodeTranslateError_SetReason
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyUnicodeTranslateError_SetReason DD imagerel $LN3
	DD	imagerel $LN3+43
	DD	imagerel $unwind$PyUnicodeTranslateError_SetReason
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyUnicodeTranslateError_SetReason DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT PyUnicodeTranslateError_SetReason
_TEXT	SEGMENT
exc$ = 48
reason$ = 56
PyUnicodeTranslateError_SetReason PROC			; COMDAT

; 1693 : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	48 83 ec 28	 sub	 rsp, 40			; 00000028H

; 1694 :     return set_unicodefromstring(&((PyUnicodeErrorObject *)exc)->reason,
; 1695 :                                  reason);

  0000e	48 8b 44 24 30	 mov	 rax, QWORD PTR exc$[rsp]
  00013	48 05 b0 00 00
	00		 add	 rax, 176		; 000000b0H
  00019	48 8b 54 24 38	 mov	 rdx, QWORD PTR reason$[rsp]
  0001e	48 8b c8	 mov	 rcx, rax
  00021	e8 00 00 00 00	 call	 set_unicodefromstring

; 1696 : }

  00026	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0002a	c3		 ret	 0
PyUnicodeTranslateError_SetReason ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BD@OHFGNGCN@UnicodeError_clear?$AA@	; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$UnicodeError_clear DD imagerel UnicodeError_clear
	DD	imagerel UnicodeError_clear+363
	DD	imagerel $unwind$UnicodeError_clear
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$UnicodeError_clear DD 010901H
	DD	0a209H
xdata	ENDS
;	COMDAT ??_C@_0BD@OHFGNGCN@UnicodeError_clear?$AA@
CONST	SEGMENT
??_C@_0BD@OHFGNGCN@UnicodeError_clear?$AA@ DB 'UnicodeError_clear', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT UnicodeError_clear
_TEXT	SEGMENT
_py_tmp$23052 = 48
_py_tmp$23060 = 56
_py_tmp$23068 = 64
self$ = 96
UnicodeError_clear PROC					; COMDAT

; 1701 : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 58	 sub	 rsp, 88			; 00000058H
$LN12@UnicodeErr:

; 1702 :     Py_CLEAR(self->encoding);

  00009	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  0000e	48 83 b8 90 00
	00 00 00	 cmp	 QWORD PTR [rax+144], 0
  00016	74 5c		 je	 SHORT $LN9@UnicodeErr
  00018	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00020	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  00025	4c 8b 88 90 00
	00 00		 mov	 r9, QWORD PTR [rax+144]
  0002c	41 b8 a6 06 00
	00		 mov	 r8d, 1702		; 000006a6H
  00032	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OHFGNGCN@UnicodeError_clear?$AA@
  00040	e8 00 00 00 00	 call	 _PyParallel_Guard
  00045	85 c0		 test	 eax, eax
  00047	75 2b		 jne	 SHORT $LN9@UnicodeErr
  00049	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  0004e	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]
  00055	48 89 44 24 30	 mov	 QWORD PTR _py_tmp$23052[rsp], rax
  0005a	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  0005f	48 c7 80 90 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+144], 0
  0006a	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _py_tmp$23052[rsp]
  0006f	e8 00 00 00 00	 call	 _Py_DecRef
$LN9@UnicodeErr:
  00074	33 c0		 xor	 eax, eax
  00076	85 c0		 test	 eax, eax
  00078	75 8f		 jne	 SHORT $LN12@UnicodeErr
$LN8@UnicodeErr:

; 1703 :     Py_CLEAR(self->object);

  0007a	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  0007f	48 83 b8 98 00
	00 00 00	 cmp	 QWORD PTR [rax+152], 0
  00087	74 5c		 je	 SHORT $LN5@UnicodeErr
  00089	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00091	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  00096	4c 8b 88 98 00
	00 00		 mov	 r9, QWORD PTR [rax+152]
  0009d	41 b8 a7 06 00
	00		 mov	 r8d, 1703		; 000006a7H
  000a3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  000aa	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OHFGNGCN@UnicodeError_clear?$AA@
  000b1	e8 00 00 00 00	 call	 _PyParallel_Guard
  000b6	85 c0		 test	 eax, eax
  000b8	75 2b		 jne	 SHORT $LN5@UnicodeErr
  000ba	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  000bf	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  000c6	48 89 44 24 38	 mov	 QWORD PTR _py_tmp$23060[rsp], rax
  000cb	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  000d0	48 c7 80 98 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+152], 0
  000db	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _py_tmp$23060[rsp]
  000e0	e8 00 00 00 00	 call	 _Py_DecRef
$LN5@UnicodeErr:
  000e5	33 c0		 xor	 eax, eax
  000e7	85 c0		 test	 eax, eax
  000e9	75 8f		 jne	 SHORT $LN8@UnicodeErr
$LN4@UnicodeErr:

; 1704 :     Py_CLEAR(self->reason);

  000eb	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  000f0	48 83 b8 b0 00
	00 00 00	 cmp	 QWORD PTR [rax+176], 0
  000f8	74 5c		 je	 SHORT $LN1@UnicodeErr
  000fa	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00102	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  00107	4c 8b 88 b0 00
	00 00		 mov	 r9, QWORD PTR [rax+176]
  0010e	41 b8 a8 06 00
	00		 mov	 r8d, 1704		; 000006a8H
  00114	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0011b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OHFGNGCN@UnicodeError_clear?$AA@
  00122	e8 00 00 00 00	 call	 _PyParallel_Guard
  00127	85 c0		 test	 eax, eax
  00129	75 2b		 jne	 SHORT $LN1@UnicodeErr
  0012b	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  00130	48 8b 80 b0 00
	00 00		 mov	 rax, QWORD PTR [rax+176]
  00137	48 89 44 24 40	 mov	 QWORD PTR _py_tmp$23068[rsp], rax
  0013c	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  00141	48 c7 80 b0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+176], 0
  0014c	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _py_tmp$23068[rsp]
  00151	e8 00 00 00 00	 call	 _Py_DecRef
$LN1@UnicodeErr:
  00156	33 c0		 xor	 eax, eax
  00158	85 c0		 test	 eax, eax
  0015a	75 8f		 jne	 SHORT $LN4@UnicodeErr

; 1705 :     return BaseException_clear((PyBaseExceptionObject *)self);

  0015c	48 8b 4c 24 60	 mov	 rcx, QWORD PTR self$[rsp]
  00161	e8 00 00 00 00	 call	 BaseException_clear

; 1706 : }

  00166	48 83 c4 58	 add	 rsp, 88			; 00000058H
  0016a	c3		 ret	 0
UnicodeError_clear ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BF@OFLJEOA@UnicodeError_dealloc?$AA@	; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$UnicodeError_dealloc DD imagerel UnicodeError_dealloc
	DD	imagerel UnicodeError_dealloc+283
	DD	imagerel $unwind$UnicodeError_dealloc
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$UnicodeError_dealloc DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT ??_C@_0BF@OFLJEOA@UnicodeError_dealloc?$AA@
CONST	SEGMENT
??_C@_0BF@OFLJEOA@UnicodeError_dealloc?$AA@ DB 'UnicodeError_dealloc', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT UnicodeError_dealloc
_TEXT	SEGMENT
g$23082 = 48
tv79 = 56
self$ = 80
UnicodeError_dealloc PROC				; COMDAT

; 1710 : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 1711 :     _PyObject_GC_UNTRACK(self);

  00009	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00011	4c 8b 4c 24 50	 mov	 r9, QWORD PTR self$[rsp]
  00016	41 b8 af 06 00
	00		 mov	 r8d, 1711		; 000006afH
  0001c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BF@OFLJEOA@UnicodeError_dealloc?$AA@
  0002a	e8 00 00 00 00	 call	 _PyParallel_Guard
  0002f	85 c0		 test	 eax, eax
  00031	0f 85 c1 00 00
	00		 jne	 $LN4@UnicodeErr@2
$LN3@UnicodeErr@2:
  00037	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0003f	4c 8b 4c 24 50	 mov	 r9, QWORD PTR self$[rsp]
  00044	41 b8 af 06 00
	00		 mov	 r8d, 1711		; 000006afH
  0004a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00051	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BF@OFLJEOA@UnicodeError_dealloc?$AA@
  00058	e8 00 00 00 00	 call	 _PyParallel_Guard
  0005d	85 c0		 test	 eax, eax
  0005f	74 0b		 je	 SHORT $LN7@UnicodeErr@2
  00061	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR tv79[rsp], 0
  0006a	eb 0e		 jmp	 SHORT $LN8@UnicodeErr@2
$LN7@UnicodeErr@2:
  0006c	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00071	48 83 e8 18	 sub	 rax, 24
  00075	48 89 44 24 38	 mov	 QWORD PTR tv79[rsp], rax
$LN8@UnicodeErr@2:
  0007a	48 8b 44 24 38	 mov	 rax, QWORD PTR tv79[rsp]
  0007f	48 89 44 24 30	 mov	 QWORD PTR g$23082[rsp], rax
  00084	48 8b 44 24 30	 mov	 rax, QWORD PTR g$23082[rsp]
  00089	48 83 78 10 fe	 cmp	 QWORD PTR [rax+16], -2
  0008e	75 1c		 jne	 SHORT $LN9@UnicodeErr@2
  00090	41 b8 af 06 00
	00		 mov	 r8d, 1711		; 000006afH
  00096	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  0009d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EM@HFMJMDDM@?$AAg?$AA?9?$AA?$DO?$AAg?$AAc?$AA?4?$AAg?$AAc?$AA_?$AAr?$AAe?$AAf?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA_?$AAP?$AAy?$AAG?$AAC?$AA_?$AAR?$AAE?$AAF?$AAS?$AA_?$AAU?$AAN?$AAT?$AAR@
  000a4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  000aa	33 c0		 xor	 eax, eax
$LN9@UnicodeErr@2:
  000ac	48 8b 44 24 30	 mov	 rax, QWORD PTR g$23082[rsp]
  000b1	48 c7 40 10 fe
	ff ff ff	 mov	 QWORD PTR [rax+16], -2
  000b9	48 8b 44 24 30	 mov	 rax, QWORD PTR g$23082[rsp]
  000be	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000c2	48 8b 4c 24 30	 mov	 rcx, QWORD PTR g$23082[rsp]
  000c7	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000ca	48 89 08	 mov	 QWORD PTR [rax], rcx
  000cd	48 8b 44 24 30	 mov	 rax, QWORD PTR g$23082[rsp]
  000d2	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000d5	48 8b 4c 24 30	 mov	 rcx, QWORD PTR g$23082[rsp]
  000da	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  000de	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  000e2	48 8b 44 24 30	 mov	 rax, QWORD PTR g$23082[rsp]
  000e7	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  000ee	33 c0		 xor	 eax, eax
  000f0	85 c0		 test	 eax, eax
  000f2	0f 85 3f ff ff
	ff		 jne	 $LN3@UnicodeErr@2
$LN4@UnicodeErr@2:

; 1712 :     UnicodeError_clear(self);

  000f8	48 8b 4c 24 50	 mov	 rcx, QWORD PTR self$[rsp]
  000fd	e8 00 00 00 00	 call	 UnicodeError_clear

; 1713 :     Py_TYPE(self)->tp_free((PyObject *)self);

  00102	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00107	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  0010b	48 8b 4c 24 50	 mov	 rcx, QWORD PTR self$[rsp]
  00110	ff 90 98 01 00
	00		 call	 QWORD PTR [rax+408]

; 1714 : }

  00116	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0011a	c3		 ret	 0
UnicodeError_dealloc ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BG@HDDIDDPD@UnicodeError_traverse?$AA@	; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$UnicodeError_traverse DD imagerel UnicodeError_traverse
	DD	imagerel UnicodeError_traverse+335
	DD	imagerel $unwind$UnicodeError_traverse
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$UnicodeError_traverse DD 011301H
	DD	06213H
xdata	ENDS
;	COMDAT ??_C@_0BG@HDDIDDPD@UnicodeError_traverse?$AA@
CONST	SEGMENT
??_C@_0BG@HDDIDDPD@UnicodeError_traverse?$AA@ DB 'UnicodeError_traverse', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT UnicodeError_traverse
_TEXT	SEGMENT
vret$23103 = 32
vret$23111 = 36
vret$23119 = 40
self$ = 64
visit$ = 72
arg$ = 80
UnicodeError_traverse PROC				; COMDAT

; 1718 : {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 38	 sub	 rsp, 56			; 00000038H
$LN18@UnicodeErr@3:

; 1719 :     Py_VISIT(self->encoding);

  00013	e8 00 00 00 00	 call	 _Py_PXCTX
  00018	85 c0		 test	 eax, eax
  0001a	74 1c		 je	 SHORT $LN15@UnicodeErr@3
  0001c	45 33 c9	 xor	 r9d, r9d
  0001f	41 b8 b7 06 00
	00		 mov	 r8d, 1719		; 000006b7H
  00025	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0002c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BG@HDDIDDPD@UnicodeError_traverse?$AA@
  00033	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN15@UnicodeErr@3:
  00038	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  0003d	48 83 b8 90 00
	00 00 00	 cmp	 QWORD PTR [rax+144], 0
  00045	74 29		 je	 SHORT $LN14@UnicodeErr@3
  00047	48 8b 54 24 50	 mov	 rdx, QWORD PTR arg$[rsp]
  0004c	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  00051	48 8b 88 90 00
	00 00		 mov	 rcx, QWORD PTR [rax+144]
  00058	ff 54 24 48	 call	 QWORD PTR visit$[rsp]
  0005c	89 44 24 20	 mov	 DWORD PTR vret$23103[rsp], eax
  00060	83 7c 24 20 00	 cmp	 DWORD PTR vret$23103[rsp], 0
  00065	74 09		 je	 SHORT $LN13@UnicodeErr@3
  00067	8b 44 24 20	 mov	 eax, DWORD PTR vret$23103[rsp]
  0006b	e9 da 00 00 00	 jmp	 $LN19@UnicodeErr@3
$LN13@UnicodeErr@3:
$LN14@UnicodeErr@3:
  00070	33 c0		 xor	 eax, eax
  00072	85 c0		 test	 eax, eax
  00074	75 9d		 jne	 SHORT $LN18@UnicodeErr@3
$LN12@UnicodeErr@3:

; 1720 :     Py_VISIT(self->object);

  00076	e8 00 00 00 00	 call	 _Py_PXCTX
  0007b	85 c0		 test	 eax, eax
  0007d	74 1c		 je	 SHORT $LN9@UnicodeErr@3
  0007f	45 33 c9	 xor	 r9d, r9d
  00082	41 b8 b8 06 00
	00		 mov	 r8d, 1720		; 000006b8H
  00088	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0008f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BG@HDDIDDPD@UnicodeError_traverse?$AA@
  00096	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN9@UnicodeErr@3:
  0009b	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  000a0	48 83 b8 98 00
	00 00 00	 cmp	 QWORD PTR [rax+152], 0
  000a8	74 26		 je	 SHORT $LN8@UnicodeErr@3
  000aa	48 8b 54 24 50	 mov	 rdx, QWORD PTR arg$[rsp]
  000af	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  000b4	48 8b 88 98 00
	00 00		 mov	 rcx, QWORD PTR [rax+152]
  000bb	ff 54 24 48	 call	 QWORD PTR visit$[rsp]
  000bf	89 44 24 24	 mov	 DWORD PTR vret$23111[rsp], eax
  000c3	83 7c 24 24 00	 cmp	 DWORD PTR vret$23111[rsp], 0
  000c8	74 06		 je	 SHORT $LN7@UnicodeErr@3
  000ca	8b 44 24 24	 mov	 eax, DWORD PTR vret$23111[rsp]
  000ce	eb 7a		 jmp	 SHORT $LN19@UnicodeErr@3
$LN7@UnicodeErr@3:
$LN8@UnicodeErr@3:
  000d0	33 c0		 xor	 eax, eax
  000d2	85 c0		 test	 eax, eax
  000d4	75 a0		 jne	 SHORT $LN12@UnicodeErr@3
$LN6@UnicodeErr@3:

; 1721 :     Py_VISIT(self->reason);

  000d6	e8 00 00 00 00	 call	 _Py_PXCTX
  000db	85 c0		 test	 eax, eax
  000dd	74 1c		 je	 SHORT $LN3@UnicodeErr@3
  000df	45 33 c9	 xor	 r9d, r9d
  000e2	41 b8 b9 06 00
	00		 mov	 r8d, 1721		; 000006b9H
  000e8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  000ef	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BG@HDDIDDPD@UnicodeError_traverse?$AA@
  000f6	e8 00 00 00 00	 call	 _PyParallel_ContextGuardFailure
$LN3@UnicodeErr@3:
  000fb	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  00100	48 83 b8 b0 00
	00 00 00	 cmp	 QWORD PTR [rax+176], 0
  00108	74 26		 je	 SHORT $LN2@UnicodeErr@3
  0010a	48 8b 54 24 50	 mov	 rdx, QWORD PTR arg$[rsp]
  0010f	48 8b 44 24 40	 mov	 rax, QWORD PTR self$[rsp]
  00114	48 8b 88 b0 00
	00 00		 mov	 rcx, QWORD PTR [rax+176]
  0011b	ff 54 24 48	 call	 QWORD PTR visit$[rsp]
  0011f	89 44 24 28	 mov	 DWORD PTR vret$23119[rsp], eax
  00123	83 7c 24 28 00	 cmp	 DWORD PTR vret$23119[rsp], 0
  00128	74 06		 je	 SHORT $LN1@UnicodeErr@3
  0012a	8b 44 24 28	 mov	 eax, DWORD PTR vret$23119[rsp]
  0012e	eb 1a		 jmp	 SHORT $LN19@UnicodeErr@3
$LN1@UnicodeErr@3:
$LN2@UnicodeErr@3:
  00130	33 c0		 xor	 eax, eax
  00132	85 c0		 test	 eax, eax
  00134	75 a0		 jne	 SHORT $LN6@UnicodeErr@3

; 1722 :     return BaseException_traverse((PyBaseExceptionObject *)self, visit, arg);

  00136	4c 8b 44 24 50	 mov	 r8, QWORD PTR arg$[rsp]
  0013b	48 8b 54 24 48	 mov	 rdx, QWORD PTR visit$[rsp]
  00140	48 8b 4c 24 40	 mov	 rcx, QWORD PTR self$[rsp]
  00145	e8 00 00 00 00	 call	 BaseException_traverse
$LN19@UnicodeErr@3:

; 1723 : }

  0014a	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0014e	c3		 ret	 0
UnicodeError_traverse ENDP
_TEXT	ENDS
PUBLIC	??_C@_1DK@FDFAKJOC@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAe?$AAr?$AAr?$AA?9?$AA?$DO?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?$CJ?$AA?$AA@ ; `string'
PUBLIC	??_C@_08FJBAAAEO@O?$CBO?$CBnnO?$CB?$AA@		; `string'
PUBLIC	??_C@_0BI@CBDDJOHM@UnicodeEncodeError_init?$AA@	; `string'
EXTRN	_PyArg_ParseTuple_SizeT:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$UnicodeEncodeError_init DD imagerel UnicodeEncodeError_init
	DD	imagerel UnicodeEncodeError_init+816
	DD	imagerel $unwind$UnicodeEncodeError_init
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$UnicodeEncodeError_init DD 021601H
	DD	0110116H
xdata	ENDS
;	COMDAT ??_C@_1DK@FDFAKJOC@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAe?$AAr?$AAr?$AA?9?$AA?$DO?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1DK@FDFAKJOC@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAe?$AAr?$AAr?$AA?9?$AA?$DO?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?$CJ?$AA?$AA@ DB 'P'
	DB	00H, 'y', 00H, 'U', 00H, 'n', 00H, 'i', 00H, 'c', 00H, 'o', 00H
	DB	'd', 00H, 'e', 00H, '_', 00H, 'C', 00H, 'h', 00H, 'e', 00H, 'c'
	DB	00H, 'k', 00H, '(', 00H, 'e', 00H, 'r', 00H, 'r', 00H, '-', 00H
	DB	'>', 00H, 'o', 00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't'
	DB	00H, ')', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_08FJBAAAEO@O?$CBO?$CBnnO?$CB?$AA@
CONST	SEGMENT
??_C@_08FJBAAAEO@O?$CBO?$CBnnO?$CB?$AA@ DB 'O!O!nnO!', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@CBDDJOHM@UnicodeEncodeError_init?$AA@
CONST	SEGMENT
??_C@_0BI@CBDDJOHM@UnicodeEncodeError_init?$AA@ DB 'UnicodeEncodeError_in'
	DB	'it', 00H					; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT UnicodeEncodeError_init
_TEXT	SEGMENT
err$ = 80
_py_tmp$23164 = 88
_py_tmp$23172 = 96
_py_tmp$23180 = 104
tv180 = 112
self$ = 144
args$ = 152
kwds$ = 160
UnicodeEncodeError_init PROC				; COMDAT

; 1746 : {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 81 ec 88 00
	00 00		 sub	 rsp, 136		; 00000088H

; 1747 :     PyUnicodeErrorObject *err;
; 1748 : 
; 1749 :     if (BaseException_init((PyBaseExceptionObject *)self, args, kwds) == -1)

  00016	4c 8b 84 24 a0
	00 00 00	 mov	 r8, QWORD PTR kwds$[rsp]
  0001e	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR args$[rsp]
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR self$[rsp]
  0002e	e8 00 00 00 00	 call	 BaseException_init
  00033	83 f8 ff	 cmp	 eax, -1
  00036	75 0a		 jne	 SHORT $LN15@UnicodeEnc

; 1750 :         return -1;

  00038	b8 ff ff ff ff	 mov	 eax, -1
  0003d	e9 e6 02 00 00	 jmp	 $LN16@UnicodeEnc
$LN15@UnicodeEnc:

; 1751 : 
; 1752 :     err = (PyUnicodeErrorObject *)self;

  00042	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR self$[rsp]
  0004a	48 89 44 24 50	 mov	 QWORD PTR err$[rsp], rax
$LN14@UnicodeEnc:

; 1753 : 
; 1754 :     Py_CLEAR(err->encoding);

  0004f	48 8b 44 24 50	 mov	 rax, QWORD PTR err$[rsp]
  00054	48 83 b8 90 00
	00 00 00	 cmp	 QWORD PTR [rax+144], 0
  0005c	74 5c		 je	 SHORT $LN11@UnicodeEnc
  0005e	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00066	48 8b 44 24 50	 mov	 rax, QWORD PTR err$[rsp]
  0006b	4c 8b 88 90 00
	00 00		 mov	 r9, QWORD PTR [rax+144]
  00072	41 b8 da 06 00
	00		 mov	 r8d, 1754		; 000006daH
  00078	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0007f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CBDDJOHM@UnicodeEncodeError_init?$AA@
  00086	e8 00 00 00 00	 call	 _PyParallel_Guard
  0008b	85 c0		 test	 eax, eax
  0008d	75 2b		 jne	 SHORT $LN11@UnicodeEnc
  0008f	48 8b 44 24 50	 mov	 rax, QWORD PTR err$[rsp]
  00094	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]
  0009b	48 89 44 24 58	 mov	 QWORD PTR _py_tmp$23164[rsp], rax
  000a0	48 8b 44 24 50	 mov	 rax, QWORD PTR err$[rsp]
  000a5	48 c7 80 90 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+144], 0
  000b0	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _py_tmp$23164[rsp]
  000b5	e8 00 00 00 00	 call	 _Py_DecRef
$LN11@UnicodeEnc:
  000ba	33 c0		 xor	 eax, eax
  000bc	85 c0		 test	 eax, eax
  000be	75 8f		 jne	 SHORT $LN14@UnicodeEnc
$LN10@UnicodeEnc:

; 1755 :     Py_CLEAR(err->object);

  000c0	48 8b 44 24 50	 mov	 rax, QWORD PTR err$[rsp]
  000c5	48 83 b8 98 00
	00 00 00	 cmp	 QWORD PTR [rax+152], 0
  000cd	74 5c		 je	 SHORT $LN7@UnicodeEnc
  000cf	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  000d7	48 8b 44 24 50	 mov	 rax, QWORD PTR err$[rsp]
  000dc	4c 8b 88 98 00
	00 00		 mov	 r9, QWORD PTR [rax+152]
  000e3	41 b8 db 06 00
	00		 mov	 r8d, 1755		; 000006dbH
  000e9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  000f0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CBDDJOHM@UnicodeEncodeError_init?$AA@
  000f7	e8 00 00 00 00	 call	 _PyParallel_Guard
  000fc	85 c0		 test	 eax, eax
  000fe	75 2b		 jne	 SHORT $LN7@UnicodeEnc
  00100	48 8b 44 24 50	 mov	 rax, QWORD PTR err$[rsp]
  00105	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  0010c	48 89 44 24 60	 mov	 QWORD PTR _py_tmp$23172[rsp], rax
  00111	48 8b 44 24 50	 mov	 rax, QWORD PTR err$[rsp]
  00116	48 c7 80 98 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+152], 0
  00121	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _py_tmp$23172[rsp]
  00126	e8 00 00 00 00	 call	 _Py_DecRef
$LN7@UnicodeEnc:
  0012b	33 c0		 xor	 eax, eax
  0012d	85 c0		 test	 eax, eax
  0012f	75 8f		 jne	 SHORT $LN10@UnicodeEnc
$LN6@UnicodeEnc:

; 1756 :     Py_CLEAR(err->reason);

  00131	48 8b 44 24 50	 mov	 rax, QWORD PTR err$[rsp]
  00136	48 83 b8 b0 00
	00 00 00	 cmp	 QWORD PTR [rax+176], 0
  0013e	74 5c		 je	 SHORT $LN3@UnicodeEnc
  00140	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00148	48 8b 44 24 50	 mov	 rax, QWORD PTR err$[rsp]
  0014d	4c 8b 88 b0 00
	00 00		 mov	 r9, QWORD PTR [rax+176]
  00154	41 b8 dc 06 00
	00		 mov	 r8d, 1756		; 000006dcH
  0015a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00161	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@CBDDJOHM@UnicodeEncodeError_init?$AA@
  00168	e8 00 00 00 00	 call	 _PyParallel_Guard
  0016d	85 c0		 test	 eax, eax
  0016f	75 2b		 jne	 SHORT $LN3@UnicodeEnc
  00171	48 8b 44 24 50	 mov	 rax, QWORD PTR err$[rsp]
  00176	48 8b 80 b0 00
	00 00		 mov	 rax, QWORD PTR [rax+176]
  0017d	48 89 44 24 68	 mov	 QWORD PTR _py_tmp$23180[rsp], rax
  00182	48 8b 44 24 50	 mov	 rax, QWORD PTR err$[rsp]
  00187	48 c7 80 b0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+176], 0
  00192	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _py_tmp$23180[rsp]
  00197	e8 00 00 00 00	 call	 _Py_DecRef
$LN3@UnicodeEnc:
  0019c	33 c0		 xor	 eax, eax
  0019e	85 c0		 test	 eax, eax
  001a0	75 8f		 jne	 SHORT $LN6@UnicodeEnc

; 1757 : 
; 1758 :     if (!PyArg_ParseTuple(args, "O!O!nnO!",
; 1759 :         &PyUnicode_Type, &err->encoding,
; 1760 :         &PyUnicode_Type, &err->object,
; 1761 :         &err->start,
; 1762 :         &err->end,
; 1763 :         &PyUnicode_Type, &err->reason)) {

  001a2	48 8b 44 24 50	 mov	 rax, QWORD PTR err$[rsp]
  001a7	48 05 b0 00 00
	00		 add	 rax, 176		; 000000b0H
  001ad	48 8b 4c 24 50	 mov	 rcx, QWORD PTR err$[rsp]
  001b2	48 81 c1 a8 00
	00 00		 add	 rcx, 168		; 000000a8H
  001b9	48 8b 54 24 50	 mov	 rdx, QWORD PTR err$[rsp]
  001be	48 81 c2 a0 00
	00 00		 add	 rdx, 160		; 000000a0H
  001c5	4c 8b 44 24 50	 mov	 r8, QWORD PTR err$[rsp]
  001ca	49 81 c0 98 00
	00 00		 add	 r8, 152			; 00000098H
  001d1	4c 8b 4c 24 50	 mov	 r9, QWORD PTR err$[rsp]
  001d6	49 81 c1 90 00
	00 00		 add	 r9, 144			; 00000090H
  001dd	48 89 44 24 48	 mov	 QWORD PTR [rsp+72], rax
  001e2	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:PyUnicode_Type
  001e9	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  001ee	48 89 4c 24 38	 mov	 QWORD PTR [rsp+56], rcx
  001f3	48 89 54 24 30	 mov	 QWORD PTR [rsp+48], rdx
  001f8	4c 89 44 24 28	 mov	 QWORD PTR [rsp+40], r8
  001fd	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:PyUnicode_Type
  00204	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00209	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:PyUnicode_Type
  00210	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_08FJBAAAEO@O?$CBO?$CBnnO?$CB?$AA@
  00217	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR args$[rsp]
  0021f	e8 00 00 00 00	 call	 _PyArg_ParseTuple_SizeT
  00224	85 c0		 test	 eax, eax
  00226	75 3a		 jne	 SHORT $LN2@UnicodeEnc

; 1764 :           err->encoding = err->object = err->reason = NULL;

  00228	48 8b 44 24 50	 mov	 rax, QWORD PTR err$[rsp]
  0022d	48 c7 80 b0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+176], 0
  00238	48 8b 44 24 50	 mov	 rax, QWORD PTR err$[rsp]
  0023d	48 c7 80 98 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+152], 0
  00248	48 8b 44 24 50	 mov	 rax, QWORD PTR err$[rsp]
  0024d	48 c7 80 90 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+144], 0

; 1765 :           return -1;

  00258	b8 ff ff ff ff	 mov	 eax, -1
  0025d	e9 c6 00 00 00	 jmp	 $LN16@UnicodeEnc
$LN2@UnicodeEnc:

; 1766 :     }
; 1767 : 
; 1768 :     if (PyUnicode_READY(err->object) < -1) {

  00262	48 8b 44 24 50	 mov	 rax, QWORD PTR err$[rsp]
  00267	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  0026e	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00272	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  00278	25 00 00 00 10	 and	 eax, 268435456		; 10000000H
  0027d	85 c0		 test	 eax, eax
  0027f	75 1c		 jne	 SHORT $LN18@UnicodeEnc
  00281	41 b8 e8 06 00
	00		 mov	 r8d, 1768		; 000006e8H
  00287	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  0028e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DK@FDFAKJOC@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAe?$AAr?$AAr?$AA?9?$AA?$DO?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?$CJ?$AA?$AA@
  00295	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  0029b	33 c0		 xor	 eax, eax
$LN18@UnicodeEnc:
  0029d	48 8b 44 24 50	 mov	 rax, QWORD PTR err$[rsp]
  002a2	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  002a9	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  002ac	c1 e8 07	 shr	 eax, 7
  002af	83 e0 01	 and	 eax, 1
  002b2	85 c0		 test	 eax, eax
  002b4	74 0a		 je	 SHORT $LN19@UnicodeEnc
  002b6	c7 44 24 70 00
	00 00 00	 mov	 DWORD PTR tv180[rsp], 0
  002be	eb 15		 jmp	 SHORT $LN20@UnicodeEnc
$LN19@UnicodeEnc:
  002c0	48 8b 44 24 50	 mov	 rax, QWORD PTR err$[rsp]
  002c5	48 8b 88 98 00
	00 00		 mov	 rcx, QWORD PTR [rax+152]
  002cc	e8 00 00 00 00	 call	 _PyUnicode_Ready
  002d1	89 44 24 70	 mov	 DWORD PTR tv180[rsp], eax
$LN20@UnicodeEnc:
  002d5	83 7c 24 70 ff	 cmp	 DWORD PTR tv180[rsp], -1
  002da	7d 17		 jge	 SHORT $LN1@UnicodeEnc

; 1769 :         err->encoding = NULL;

  002dc	48 8b 44 24 50	 mov	 rax, QWORD PTR err$[rsp]
  002e1	48 c7 80 90 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+144], 0

; 1770 :         return -1;

  002ec	b8 ff ff ff ff	 mov	 eax, -1
  002f1	eb 35		 jmp	 SHORT $LN16@UnicodeEnc
$LN1@UnicodeEnc:

; 1771 :     }
; 1772 : 
; 1773 :     Py_INCREF(err->encoding);

  002f3	48 8b 44 24 50	 mov	 rax, QWORD PTR err$[rsp]
  002f8	48 8b 88 90 00
	00 00		 mov	 rcx, QWORD PTR [rax+144]
  002ff	e8 00 00 00 00	 call	 _Py_IncRef

; 1774 :     Py_INCREF(err->object);

  00304	48 8b 44 24 50	 mov	 rax, QWORD PTR err$[rsp]
  00309	48 8b 88 98 00
	00 00		 mov	 rcx, QWORD PTR [rax+152]
  00310	e8 00 00 00 00	 call	 _Py_IncRef

; 1775 :     Py_INCREF(err->reason);

  00315	48 8b 44 24 50	 mov	 rax, QWORD PTR err$[rsp]
  0031a	48 8b 88 b0 00
	00 00		 mov	 rcx, QWORD PTR [rax+176]
  00321	e8 00 00 00 00	 call	 _Py_IncRef

; 1776 : 
; 1777 :     return 0;

  00326	33 c0		 xor	 eax, eax
$LN16@UnicodeEnc:

; 1778 : }

  00328	48 81 c4 88 00
	00 00		 add	 rsp, 136		; 00000088H
  0032f	c3		 ret	 0
UnicodeEncodeError_init ENDP
_TEXT	ENDS
PUBLIC	??_C@_0DL@BEIEHOJG@?8?$CFU?8?5codec?5can?8t?5encode?5characte@ ; `string'
PUBLIC	??_C@_0DP@KPHMCNEI@?8?$CFU?8?5codec?5can?8t?5encode?5characte@ ; `string'
PUBLIC	??_C@_0DP@KIJONJAD@?8?$CFU?8?5codec?5can?8t?5encode?5characte@ ; `string'
PUBLIC	??_C@_0DP@NFOMCNNN@?8?$CFU?8?5codec?5can?8t?5encode?5characte@ ; `string'
PUBLIC	??_C@_1EE@LAIEGHIO@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAI?$AAS?$AA_?$AAR?$AAE?$AAA?$AAD?$AAY?$AA?$CI?$AAu?$AAs?$AAe?$AAl?$AAf?$AA?9?$AA?$DO?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt@ ; `string'
PUBLIC	??_C@_1DO@FEKJNGCM@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAu?$AAs?$AAe?$AAl?$AAf?$AA?9?$AA?$DO?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?$CJ?$AA?$AA@ ; `string'
EXTRN	PyUnicode_ReadChar:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$UnicodeEncodeError_str DD imagerel UnicodeEncodeError_str
	DD	imagerel UnicodeEncodeError_str+557
	DD	imagerel $unwind$UnicodeEncodeError_str
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$UnicodeEncodeError_str DD 010901H
	DD	0c209H
xdata	ENDS
;	COMDAT ??_C@_0DL@BEIEHOJG@?8?$CFU?8?5codec?5can?8t?5encode?5characte@
CONST	SEGMENT
??_C@_0DL@BEIEHOJG@?8?$CFU?8?5codec?5can?8t?5encode?5characte@ DB '''%U'''
	DB	' codec can''t encode characters in position %zd-%zd: %U', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@KPHMCNEI@?8?$CFU?8?5codec?5can?8t?5encode?5characte@
CONST	SEGMENT
??_C@_0DP@KPHMCNEI@?8?$CFU?8?5codec?5can?8t?5encode?5characte@ DB '''%U'''
	DB	' codec can''t encode character ''\U%08x'' in position %zd: %U'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@KIJONJAD@?8?$CFU?8?5codec?5can?8t?5encode?5characte@
CONST	SEGMENT
??_C@_0DP@KIJONJAD@?8?$CFU?8?5codec?5can?8t?5encode?5characte@ DB '''%U'''
	DB	' codec can''t encode character ''\u%04x'' in position %zd: %U'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@NFOMCNNN@?8?$CFU?8?5codec?5can?8t?5encode?5characte@
CONST	SEGMENT
??_C@_0DP@NFOMCNNN@?8?$CFU?8?5codec?5can?8t?5encode?5characte@ DB '''%U'''
	DB	' codec can''t encode character ''\x%02x'' in position %zd: %U'
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@LAIEGHIO@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAI?$AAS?$AA_?$AAR?$AAE?$AAA?$AAD?$AAY?$AA?$CI?$AAu?$AAs?$AAe?$AAl?$AAf?$AA?9?$AA?$DO?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt@
CONST	SEGMENT
??_C@_1EE@LAIEGHIO@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAI?$AAS?$AA_?$AAR?$AAE?$AAA?$AAD?$AAY?$AA?$CI?$AAu?$AAs?$AAe?$AAl?$AAf?$AA?9?$AA?$DO?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt@ DB 'P'
	DB	00H, 'y', 00H, 'U', 00H, 'n', 00H, 'i', 00H, 'c', 00H, 'o', 00H
	DB	'd', 00H, 'e', 00H, '_', 00H, 'I', 00H, 'S', 00H, '_', 00H, 'R'
	DB	00H, 'E', 00H, 'A', 00H, 'D', 00H, 'Y', 00H, '(', 00H, 'u', 00H
	DB	's', 00H, 'e', 00H, 'l', 00H, 'f', 00H, '-', 00H, '>', 00H, 'o'
	DB	00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, ')', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1DO@FEKJNGCM@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAu?$AAs?$AAe?$AAl?$AAf?$AA?9?$AA?$DO?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1DO@FEKJNGCM@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAu?$AAs?$AAe?$AAl?$AAf?$AA?9?$AA?$DO?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?$CJ?$AA?$AA@ DB 'P'
	DB	00H, 'y', 00H, 'U', 00H, 'n', 00H, 'i', 00H, 'c', 00H, 'o', 00H
	DB	'd', 00H, 'e', 00H, '_', 00H, 'C', 00H, 'h', 00H, 'e', 00H, 'c'
	DB	00H, 'k', 00H, '(', 00H, 'u', 00H, 's', 00H, 'e', 00H, 'l', 00H
	DB	'f', 00H, '-', 00H, '>', 00H, 'o', 00H, 'b', 00H, 'j', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, ')', 00H, 00H, 00H	; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT UnicodeEncodeError_str
_TEXT	SEGMENT
encoding_str$ = 48
uself$ = 56
reason_str$ = 64
result$ = 72
fmt$23223 = 80
badchar$23222 = 88
self$ = 112
UnicodeEncodeError_str PROC				; COMDAT

; 1782 : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 68	 sub	 rsp, 104		; 00000068H

; 1783 :     PyUnicodeErrorObject *uself = (PyUnicodeErrorObject *)self;

  00009	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  0000e	48 89 44 24 38	 mov	 QWORD PTR uself$[rsp], rax

; 1784 :     PyObject *result = NULL;

  00013	48 c7 44 24 48
	00 00 00 00	 mov	 QWORD PTR result$[rsp], 0

; 1785 :     PyObject *reason_str = NULL;

  0001c	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR reason_str$[rsp], 0

; 1786 :     PyObject *encoding_str = NULL;

  00025	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR encoding_str$[rsp], 0

; 1787 : 
; 1788 :     /* Get reason and encoding as strings, which they might not be if
; 1789 :        they've been modified after we were contructed. */
; 1790 :     reason_str = PyObject_Str(uself->reason);

  0002e	48 8b 44 24 38	 mov	 rax, QWORD PTR uself$[rsp]
  00033	48 8b 88 b0 00
	00 00		 mov	 rcx, QWORD PTR [rax+176]
  0003a	e8 00 00 00 00	 call	 PyObject_Str
  0003f	48 89 44 24 40	 mov	 QWORD PTR reason_str$[rsp], rax

; 1791 :     if (reason_str == NULL)

  00044	48 83 7c 24 40
	00		 cmp	 QWORD PTR reason_str$[rsp], 0
  0004a	75 05		 jne	 SHORT $LN16@UnicodeEnc@2

; 1792 :         goto done;

  0004c	e9 a2 01 00 00	 jmp	 $done$23211
$LN16@UnicodeEnc@2:

; 1793 :     encoding_str = PyObject_Str(uself->encoding);

  00051	48 8b 44 24 38	 mov	 rax, QWORD PTR uself$[rsp]
  00056	48 8b 88 90 00
	00 00		 mov	 rcx, QWORD PTR [rax+144]
  0005d	e8 00 00 00 00	 call	 PyObject_Str
  00062	48 89 44 24 30	 mov	 QWORD PTR encoding_str$[rsp], rax

; 1794 :     if (encoding_str == NULL)

  00067	48 83 7c 24 30
	00		 cmp	 QWORD PTR encoding_str$[rsp], 0
  0006d	75 05		 jne	 SHORT $LN15@UnicodeEnc@2

; 1795 :         goto done;

  0006f	e9 7f 01 00 00	 jmp	 $done$23211
$LN15@UnicodeEnc@2:

; 1796 : 
; 1797 :     if (uself->start < PyUnicode_GET_LENGTH(uself->object) && uself->end == uself->start+1) {

  00074	48 8b 44 24 38	 mov	 rax, QWORD PTR uself$[rsp]
  00079	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  00080	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00084	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  0008a	25 00 00 00 10	 and	 eax, 268435456		; 10000000H
  0008f	85 c0		 test	 eax, eax
  00091	75 1c		 jne	 SHORT $LN19@UnicodeEnc@2
  00093	41 b8 05 07 00
	00		 mov	 r8d, 1797		; 00000705H
  00099	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  000a0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DO@FEKJNGCM@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAu?$AAs?$AAe?$AAl?$AAf?$AA?9?$AA?$DO?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?$CJ?$AA?$AA@
  000a7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  000ad	33 c0		 xor	 eax, eax
$LN19@UnicodeEnc@2:
  000af	48 8b 44 24 38	 mov	 rax, QWORD PTR uself$[rsp]
  000b4	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  000bb	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  000be	c1 e8 07	 shr	 eax, 7
  000c1	83 e0 01	 and	 eax, 1
  000c4	85 c0		 test	 eax, eax
  000c6	75 1c		 jne	 SHORT $LN20@UnicodeEnc@2
  000c8	41 b8 05 07 00
	00		 mov	 r8d, 1797		; 00000705H
  000ce	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  000d5	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EE@LAIEGHIO@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAI?$AAS?$AA_?$AAR?$AAE?$AAA?$AAD?$AAY?$AA?$CI?$AAu?$AAs?$AAe?$AAl?$AAf?$AA?9?$AA?$DO?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt@
  000dc	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  000e2	33 c0		 xor	 eax, eax
$LN20@UnicodeEnc@2:
  000e4	48 8b 44 24 38	 mov	 rax, QWORD PTR uself$[rsp]
  000e9	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  000f0	48 8b 4c 24 38	 mov	 rcx, QWORD PTR uself$[rsp]
  000f5	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  000f9	48 39 81 a0 00
	00 00		 cmp	 QWORD PTR [rcx+160], rax
  00100	0f 8d af 00 00
	00		 jge	 $LN14@UnicodeEnc@2
  00106	48 8b 44 24 38	 mov	 rax, QWORD PTR uself$[rsp]
  0010b	48 8b 80 a0 00
	00 00		 mov	 rax, QWORD PTR [rax+160]
  00112	48 ff c0	 inc	 rax
  00115	48 8b 4c 24 38	 mov	 rcx, QWORD PTR uself$[rsp]
  0011a	48 39 81 a8 00
	00 00		 cmp	 QWORD PTR [rcx+168], rax
  00121	0f 85 8e 00 00
	00		 jne	 $LN14@UnicodeEnc@2

; 1798 :         Py_UCS4 badchar = PyUnicode_ReadChar(uself->object, uself->start);

  00127	48 8b 44 24 38	 mov	 rax, QWORD PTR uself$[rsp]
  0012c	48 8b 90 a0 00
	00 00		 mov	 rdx, QWORD PTR [rax+160]
  00133	48 8b 44 24 38	 mov	 rax, QWORD PTR uself$[rsp]
  00138	48 8b 88 98 00
	00 00		 mov	 rcx, QWORD PTR [rax+152]
  0013f	e8 00 00 00 00	 call	 PyUnicode_ReadChar
  00144	89 44 24 58	 mov	 DWORD PTR badchar$23222[rsp], eax

; 1799 :         const char *fmt;
; 1800 :         if (badchar <= 0xff)

  00148	81 7c 24 58 ff
	00 00 00	 cmp	 DWORD PTR badchar$23222[rsp], 255 ; 000000ffH
  00150	77 0e		 ja	 SHORT $LN13@UnicodeEnc@2

; 1801 :             fmt = "'%U' codec can't encode character '\\x%02x' in position %zd: %U";

  00152	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DP@NFOMCNNN@?8?$CFU?8?5codec?5can?8t?5encode?5characte@
  00159	48 89 44 24 50	 mov	 QWORD PTR fmt$23223[rsp], rax
  0015e	eb 24		 jmp	 SHORT $LN12@UnicodeEnc@2
$LN13@UnicodeEnc@2:

; 1802 :         else if (badchar <= 0xffff)

  00160	81 7c 24 58 ff
	ff 00 00	 cmp	 DWORD PTR badchar$23222[rsp], 65535 ; 0000ffffH
  00168	77 0e		 ja	 SHORT $LN11@UnicodeEnc@2

; 1803 :             fmt = "'%U' codec can't encode character '\\u%04x' in position %zd: %U";

  0016a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DP@KIJONJAD@?8?$CFU?8?5codec?5can?8t?5encode?5characte@
  00171	48 89 44 24 50	 mov	 QWORD PTR fmt$23223[rsp], rax

; 1804 :         else

  00176	eb 0c		 jmp	 SHORT $LN10@UnicodeEnc@2
$LN11@UnicodeEnc@2:

; 1805 :             fmt = "'%U' codec can't encode character '\\U%08x' in position %zd: %U";

  00178	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DP@KPHMCNEI@?8?$CFU?8?5codec?5can?8t?5encode?5characte@
  0017f	48 89 44 24 50	 mov	 QWORD PTR fmt$23223[rsp], rax
$LN10@UnicodeEnc@2:
$LN12@UnicodeEnc@2:

; 1806 :         result = PyUnicode_FromFormat(
; 1807 :             fmt,
; 1808 :             encoding_str,
; 1809 :             (int)badchar,
; 1810 :             uself->start,
; 1811 :             reason_str);

  00184	48 8b 44 24 40	 mov	 rax, QWORD PTR reason_str$[rsp]
  00189	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0018e	48 8b 44 24 38	 mov	 rax, QWORD PTR uself$[rsp]
  00193	4c 8b 88 a0 00
	00 00		 mov	 r9, QWORD PTR [rax+160]
  0019a	44 8b 44 24 58	 mov	 r8d, DWORD PTR badchar$23222[rsp]
  0019f	48 8b 54 24 30	 mov	 rdx, QWORD PTR encoding_str$[rsp]
  001a4	48 8b 4c 24 50	 mov	 rcx, QWORD PTR fmt$23223[rsp]
  001a9	e8 00 00 00 00	 call	 PyUnicode_FromFormat
  001ae	48 89 44 24 48	 mov	 QWORD PTR result$[rsp], rax

; 1812 :     }
; 1813 :     else {

  001b3	eb 3e		 jmp	 SHORT $LN9@UnicodeEnc@2
$LN14@UnicodeEnc@2:

; 1814 :         result = PyUnicode_FromFormat(
; 1815 :             "'%U' codec can't encode characters in position %zd-%zd: %U",
; 1816 :             encoding_str,
; 1817 :             uself->start,
; 1818 :             uself->end-1,
; 1819 :             reason_str);

  001b5	48 8b 44 24 38	 mov	 rax, QWORD PTR uself$[rsp]
  001ba	48 8b 80 a8 00
	00 00		 mov	 rax, QWORD PTR [rax+168]
  001c1	48 ff c8	 dec	 rax
  001c4	48 8b 4c 24 40	 mov	 rcx, QWORD PTR reason_str$[rsp]
  001c9	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  001ce	4c 8b c8	 mov	 r9, rax
  001d1	48 8b 44 24 38	 mov	 rax, QWORD PTR uself$[rsp]
  001d6	4c 8b 80 a0 00
	00 00		 mov	 r8, QWORD PTR [rax+160]
  001dd	48 8b 54 24 30	 mov	 rdx, QWORD PTR encoding_str$[rsp]
  001e2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0DL@BEIEHOJG@?8?$CFU?8?5codec?5can?8t?5encode?5characte@
  001e9	e8 00 00 00 00	 call	 PyUnicode_FromFormat
  001ee	48 89 44 24 48	 mov	 QWORD PTR result$[rsp], rax
$LN9@UnicodeEnc@2:
$done$23211:
$LN8@UnicodeEnc@2:

; 1820 :     }
; 1821 : done:
; 1822 :     Py_XDECREF(reason_str);

  001f3	48 83 7c 24 40
	00		 cmp	 QWORD PTR reason_str$[rsp], 0
  001f9	74 0a		 je	 SHORT $LN5@UnicodeEnc@2
  001fb	48 8b 4c 24 40	 mov	 rcx, QWORD PTR reason_str$[rsp]
  00200	e8 00 00 00 00	 call	 _Py_DecRef
$LN5@UnicodeEnc@2:
  00205	33 c0		 xor	 eax, eax
  00207	85 c0		 test	 eax, eax
  00209	75 e8		 jne	 SHORT $LN8@UnicodeEnc@2
$LN4@UnicodeEnc@2:

; 1823 :     Py_XDECREF(encoding_str);

  0020b	48 83 7c 24 30
	00		 cmp	 QWORD PTR encoding_str$[rsp], 0
  00211	74 0a		 je	 SHORT $LN1@UnicodeEnc@2
  00213	48 8b 4c 24 30	 mov	 rcx, QWORD PTR encoding_str$[rsp]
  00218	e8 00 00 00 00	 call	 _Py_DecRef
$LN1@UnicodeEnc@2:
  0021d	33 c0		 xor	 eax, eax
  0021f	85 c0		 test	 eax, eax
  00221	75 e8		 jne	 SHORT $LN4@UnicodeEnc@2

; 1824 :     return result;

  00223	48 8b 44 24 48	 mov	 rax, QWORD PTR result$[rsp]

; 1825 : }

  00228	48 83 c4 68	 add	 rsp, 104		; 00000068H
  0022c	c3		 ret	 0
UnicodeEncodeError_str ENDP
_TEXT	ENDS
PUBLIC	??_C@_06PPDPGPLO@su?$CDnns?$AA@			; `string'
PUBLIC	PyUnicodeEncodeError_Create
EXTRN	_PyObject_CallFunction_SizeT:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyUnicodeEncodeError_Create DD imagerel $LN3
	DD	imagerel $LN3+98
	DD	imagerel $unwind$PyUnicodeEncodeError_Create
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyUnicodeEncodeError_Create DD 011801H
	DD	08218H
xdata	ENDS
;	COMDAT ??_C@_06PPDPGPLO@su?$CDnns?$AA@
CONST	SEGMENT
??_C@_06PPDPGPLO@su?$CDnns?$AA@ DB 'su#nns', 00H	; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT PyUnicodeEncodeError_Create
_TEXT	SEGMENT
encoding$ = 80
object$ = 88
length$ = 96
start$ = 104
end$ = 112
reason$ = 120
PyUnicodeEncodeError_Create PROC			; COMDAT

; 1845 : {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 1846 :     return PyObject_CallFunction(PyExc_UnicodeEncodeError, "su#nns",
; 1847 :                                  encoding, object, length, start, end, reason);

  00018	48 8b 44 24 78	 mov	 rax, QWORD PTR reason$[rsp]
  0001d	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  00022	48 8b 44 24 70	 mov	 rax, QWORD PTR end$[rsp]
  00027	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0002c	48 8b 44 24 68	 mov	 rax, QWORD PTR start$[rsp]
  00031	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00036	48 8b 44 24 60	 mov	 rax, QWORD PTR length$[rsp]
  0003b	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00040	4c 8b 4c 24 58	 mov	 r9, QWORD PTR object$[rsp]
  00045	4c 8b 44 24 50	 mov	 r8, QWORD PTR encoding$[rsp]
  0004a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06PPDPGPLO@su?$CDnns?$AA@
  00051	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_UnicodeEncodeError
  00058	e8 00 00 00 00	 call	 _PyObject_CallFunction_SizeT

; 1848 : }

  0005d	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00061	c3		 ret	 0
PyUnicodeEncodeError_Create ENDP
_TEXT	ENDS
PUBLIC	??_C@_07PHAGOMEE@O?$CBOnnO?$CB?$AA@		; `string'
PUBLIC	??_C@_0BI@PMEOHOIC@UnicodeDecodeError_init?$AA@	; `string'
EXTRN	PyBytes_FromStringAndSize:PROC
EXTRN	PyObject_AsReadBuffer:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$UnicodeDecodeError_init DD imagerel UnicodeDecodeError_init
	DD	imagerel UnicodeDecodeError_init+805
	DD	imagerel $unwind$UnicodeDecodeError_init
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$UnicodeDecodeError_init DD 021601H
	DD	0110116H
xdata	ENDS
;	COMDAT ??_C@_07PHAGOMEE@O?$CBOnnO?$CB?$AA@
CONST	SEGMENT
??_C@_07PHAGOMEE@O?$CBOnnO?$CB?$AA@ DB 'O!OnnO!', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@PMEOHOIC@UnicodeDecodeError_init?$AA@
CONST	SEGMENT
??_C@_0BI@PMEOHOIC@UnicodeDecodeError_init?$AA@ DB 'UnicodeDecodeError_in'
	DB	'it', 00H					; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT UnicodeDecodeError_init
_TEXT	SEGMENT
ude$ = 80
size$ = 88
data$ = 96
_py_tmp$23303 = 104
_py_tmp$23311 = 112
_py_tmp$23319 = 120
self$ = 144
args$ = 152
kwds$ = 160
UnicodeDecodeError_init PROC				; COMDAT

; 1857 : {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 81 ec 88 00
	00 00		 sub	 rsp, 136		; 00000088H

; 1858 :     PyUnicodeErrorObject *ude;
; 1859 :     const char *data;
; 1860 :     Py_ssize_t size;
; 1861 : 
; 1862 :     if (BaseException_init((PyBaseExceptionObject *)self, args, kwds) == -1)

  00016	4c 8b 84 24 a0
	00 00 00	 mov	 r8, QWORD PTR kwds$[rsp]
  0001e	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR args$[rsp]
  00026	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR self$[rsp]
  0002e	e8 00 00 00 00	 call	 BaseException_init
  00033	83 f8 ff	 cmp	 eax, -1
  00036	75 0a		 jne	 SHORT $LN17@UnicodeDec

; 1863 :         return -1;

  00038	b8 ff ff ff ff	 mov	 eax, -1
  0003d	e9 db 02 00 00	 jmp	 $LN18@UnicodeDec
$LN17@UnicodeDec:

; 1864 : 
; 1865 :     ude = (PyUnicodeErrorObject *)self;

  00042	48 8b 84 24 90
	00 00 00	 mov	 rax, QWORD PTR self$[rsp]
  0004a	48 89 44 24 50	 mov	 QWORD PTR ude$[rsp], rax
$LN16@UnicodeDec:

; 1866 : 
; 1867 :     Py_CLEAR(ude->encoding);

  0004f	48 8b 44 24 50	 mov	 rax, QWORD PTR ude$[rsp]
  00054	48 83 b8 90 00
	00 00 00	 cmp	 QWORD PTR [rax+144], 0
  0005c	74 5c		 je	 SHORT $LN13@UnicodeDec
  0005e	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00066	48 8b 44 24 50	 mov	 rax, QWORD PTR ude$[rsp]
  0006b	4c 8b 88 90 00
	00 00		 mov	 r9, QWORD PTR [rax+144]
  00072	41 b8 4b 07 00
	00		 mov	 r8d, 1867		; 0000074bH
  00078	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0007f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@PMEOHOIC@UnicodeDecodeError_init?$AA@
  00086	e8 00 00 00 00	 call	 _PyParallel_Guard
  0008b	85 c0		 test	 eax, eax
  0008d	75 2b		 jne	 SHORT $LN13@UnicodeDec
  0008f	48 8b 44 24 50	 mov	 rax, QWORD PTR ude$[rsp]
  00094	48 8b 80 90 00
	00 00		 mov	 rax, QWORD PTR [rax+144]
  0009b	48 89 44 24 68	 mov	 QWORD PTR _py_tmp$23303[rsp], rax
  000a0	48 8b 44 24 50	 mov	 rax, QWORD PTR ude$[rsp]
  000a5	48 c7 80 90 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+144], 0
  000b0	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _py_tmp$23303[rsp]
  000b5	e8 00 00 00 00	 call	 _Py_DecRef
$LN13@UnicodeDec:
  000ba	33 c0		 xor	 eax, eax
  000bc	85 c0		 test	 eax, eax
  000be	75 8f		 jne	 SHORT $LN16@UnicodeDec
$LN12@UnicodeDec:

; 1868 :     Py_CLEAR(ude->object);

  000c0	48 8b 44 24 50	 mov	 rax, QWORD PTR ude$[rsp]
  000c5	48 83 b8 98 00
	00 00 00	 cmp	 QWORD PTR [rax+152], 0
  000cd	74 5c		 je	 SHORT $LN9@UnicodeDec
  000cf	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  000d7	48 8b 44 24 50	 mov	 rax, QWORD PTR ude$[rsp]
  000dc	4c 8b 88 98 00
	00 00		 mov	 r9, QWORD PTR [rax+152]
  000e3	41 b8 4c 07 00
	00		 mov	 r8d, 1868		; 0000074cH
  000e9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  000f0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@PMEOHOIC@UnicodeDecodeError_init?$AA@
  000f7	e8 00 00 00 00	 call	 _PyParallel_Guard
  000fc	85 c0		 test	 eax, eax
  000fe	75 2b		 jne	 SHORT $LN9@UnicodeDec
  00100	48 8b 44 24 50	 mov	 rax, QWORD PTR ude$[rsp]
  00105	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  0010c	48 89 44 24 70	 mov	 QWORD PTR _py_tmp$23311[rsp], rax
  00111	48 8b 44 24 50	 mov	 rax, QWORD PTR ude$[rsp]
  00116	48 c7 80 98 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+152], 0
  00121	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _py_tmp$23311[rsp]
  00126	e8 00 00 00 00	 call	 _Py_DecRef
$LN9@UnicodeDec:
  0012b	33 c0		 xor	 eax, eax
  0012d	85 c0		 test	 eax, eax
  0012f	75 8f		 jne	 SHORT $LN12@UnicodeDec
$LN8@UnicodeDec:

; 1869 :     Py_CLEAR(ude->reason);

  00131	48 8b 44 24 50	 mov	 rax, QWORD PTR ude$[rsp]
  00136	48 83 b8 b0 00
	00 00 00	 cmp	 QWORD PTR [rax+176], 0
  0013e	74 5c		 je	 SHORT $LN5@UnicodeDec
  00140	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00148	48 8b 44 24 50	 mov	 rax, QWORD PTR ude$[rsp]
  0014d	4c 8b 88 b0 00
	00 00		 mov	 r9, QWORD PTR [rax+176]
  00154	41 b8 4d 07 00
	00		 mov	 r8d, 1869		; 0000074dH
  0015a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00161	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BI@PMEOHOIC@UnicodeDecodeError_init?$AA@
  00168	e8 00 00 00 00	 call	 _PyParallel_Guard
  0016d	85 c0		 test	 eax, eax
  0016f	75 2b		 jne	 SHORT $LN5@UnicodeDec
  00171	48 8b 44 24 50	 mov	 rax, QWORD PTR ude$[rsp]
  00176	48 8b 80 b0 00
	00 00		 mov	 rax, QWORD PTR [rax+176]
  0017d	48 89 44 24 78	 mov	 QWORD PTR _py_tmp$23319[rsp], rax
  00182	48 8b 44 24 50	 mov	 rax, QWORD PTR ude$[rsp]
  00187	48 c7 80 b0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+176], 0
  00192	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _py_tmp$23319[rsp]
  00197	e8 00 00 00 00	 call	 _Py_DecRef
$LN5@UnicodeDec:
  0019c	33 c0		 xor	 eax, eax
  0019e	85 c0		 test	 eax, eax
  001a0	75 8f		 jne	 SHORT $LN8@UnicodeDec

; 1870 : 
; 1871 :     if (!PyArg_ParseTuple(args, "O!OnnO!",
; 1872 :          &PyUnicode_Type, &ude->encoding,
; 1873 :          &ude->object,
; 1874 :          &ude->start,
; 1875 :          &ude->end,
; 1876 :          &PyUnicode_Type, &ude->reason)) {

  001a2	48 8b 44 24 50	 mov	 rax, QWORD PTR ude$[rsp]
  001a7	48 05 b0 00 00
	00		 add	 rax, 176		; 000000b0H
  001ad	48 8b 4c 24 50	 mov	 rcx, QWORD PTR ude$[rsp]
  001b2	48 81 c1 a8 00
	00 00		 add	 rcx, 168		; 000000a8H
  001b9	48 8b 54 24 50	 mov	 rdx, QWORD PTR ude$[rsp]
  001be	48 81 c2 a0 00
	00 00		 add	 rdx, 160		; 000000a0H
  001c5	4c 8b 44 24 50	 mov	 r8, QWORD PTR ude$[rsp]
  001ca	49 81 c0 98 00
	00 00		 add	 r8, 152			; 00000098H
  001d1	4c 8b 4c 24 50	 mov	 r9, QWORD PTR ude$[rsp]
  001d6	49 81 c1 90 00
	00 00		 add	 r9, 144			; 00000090H
  001dd	48 89 44 24 40	 mov	 QWORD PTR [rsp+64], rax
  001e2	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:PyUnicode_Type
  001e9	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  001ee	48 89 4c 24 30	 mov	 QWORD PTR [rsp+48], rcx
  001f3	48 89 54 24 28	 mov	 QWORD PTR [rsp+40], rdx
  001f8	4c 89 44 24 20	 mov	 QWORD PTR [rsp+32], r8
  001fd	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:PyUnicode_Type
  00204	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_07PHAGOMEE@O?$CBOnnO?$CB?$AA@
  0020b	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR args$[rsp]
  00213	e8 00 00 00 00	 call	 _PyArg_ParseTuple_SizeT
  00218	85 c0		 test	 eax, eax
  0021a	75 3a		 jne	 SHORT $LN4@UnicodeDec

; 1877 :              ude->encoding = ude->object = ude->reason = NULL;

  0021c	48 8b 44 24 50	 mov	 rax, QWORD PTR ude$[rsp]
  00221	48 c7 80 b0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+176], 0
  0022c	48 8b 44 24 50	 mov	 rax, QWORD PTR ude$[rsp]
  00231	48 c7 80 98 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+152], 0
  0023c	48 8b 44 24 50	 mov	 rax, QWORD PTR ude$[rsp]
  00241	48 c7 80 90 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+144], 0

; 1878 :              return -1;

  0024c	b8 ff ff ff ff	 mov	 eax, -1
  00251	e9 c7 00 00 00	 jmp	 $LN18@UnicodeDec
$LN4@UnicodeDec:

; 1879 :     }
; 1880 : 
; 1881 :     if (!PyBytes_Check(ude->object)) {

  00256	48 8b 44 24 50	 mov	 rax, QWORD PTR ude$[rsp]
  0025b	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  00262	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00266	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  0026c	25 00 00 00 08	 and	 eax, 134217728		; 08000000H
  00271	85 c0		 test	 eax, eax
  00273	75 73		 jne	 SHORT $LN3@UnicodeDec

; 1882 :         if (PyObject_AsReadBuffer(ude->object, (const void **)&data, &size)) {

  00275	4c 8d 44 24 58	 lea	 r8, QWORD PTR size$[rsp]
  0027a	48 8d 54 24 60	 lea	 rdx, QWORD PTR data$[rsp]
  0027f	48 8b 44 24 50	 mov	 rax, QWORD PTR ude$[rsp]
  00284	48 8b 88 98 00
	00 00		 mov	 rcx, QWORD PTR [rax+152]
  0028b	e8 00 00 00 00	 call	 PyObject_AsReadBuffer
  00290	85 c0		 test	 eax, eax
  00292	74 37		 je	 SHORT $LN2@UnicodeDec

; 1883 :             ude->encoding = ude->object = ude->reason = NULL;

  00294	48 8b 44 24 50	 mov	 rax, QWORD PTR ude$[rsp]
  00299	48 c7 80 b0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+176], 0
  002a4	48 8b 44 24 50	 mov	 rax, QWORD PTR ude$[rsp]
  002a9	48 c7 80 98 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+152], 0
  002b4	48 8b 44 24 50	 mov	 rax, QWORD PTR ude$[rsp]
  002b9	48 c7 80 90 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+144], 0

; 1884 :             return -1;

  002c4	b8 ff ff ff ff	 mov	 eax, -1
  002c9	eb 52		 jmp	 SHORT $LN18@UnicodeDec
$LN2@UnicodeDec:

; 1885 :         }
; 1886 :         ude->object = PyBytes_FromStringAndSize(data, size);

  002cb	48 8b 54 24 58	 mov	 rdx, QWORD PTR size$[rsp]
  002d0	48 8b 4c 24 60	 mov	 rcx, QWORD PTR data$[rsp]
  002d5	e8 00 00 00 00	 call	 PyBytes_FromStringAndSize
  002da	48 8b 4c 24 50	 mov	 rcx, QWORD PTR ude$[rsp]
  002df	48 89 81 98 00
	00 00		 mov	 QWORD PTR [rcx+152], rax

; 1887 :     }
; 1888 :     else {

  002e6	eb 11		 jmp	 SHORT $LN1@UnicodeDec
$LN3@UnicodeDec:

; 1889 :         Py_INCREF(ude->object);

  002e8	48 8b 44 24 50	 mov	 rax, QWORD PTR ude$[rsp]
  002ed	48 8b 88 98 00
	00 00		 mov	 rcx, QWORD PTR [rax+152]
  002f4	e8 00 00 00 00	 call	 _Py_IncRef
$LN1@UnicodeDec:

; 1890 :     }
; 1891 : 
; 1892 :     Py_INCREF(ude->encoding);

  002f9	48 8b 44 24 50	 mov	 rax, QWORD PTR ude$[rsp]
  002fe	48 8b 88 90 00
	00 00		 mov	 rcx, QWORD PTR [rax+144]
  00305	e8 00 00 00 00	 call	 _Py_IncRef

; 1893 :     Py_INCREF(ude->reason);

  0030a	48 8b 44 24 50	 mov	 rax, QWORD PTR ude$[rsp]
  0030f	48 8b 88 b0 00
	00 00		 mov	 rcx, QWORD PTR [rax+176]
  00316	e8 00 00 00 00	 call	 _Py_IncRef

; 1894 : 
; 1895 :     return 0;

  0031b	33 c0		 xor	 eax, eax
$LN18@UnicodeDec:

; 1896 : }

  0031d	48 81 c4 88 00
	00 00		 add	 rsp, 136		; 00000088H
  00324	c3		 ret	 0
UnicodeDecodeError_init ENDP
_TEXT	ENDS
PUBLIC	??_C@_0DG@HGDBIPGF@?8?$CFU?8?5codec?5can?8t?5decode?5bytes?5in@ ; `string'
PUBLIC	??_C@_0DI@IBOOJBGM@?8?$CFU?8?5codec?5can?8t?5decode?5byte?50x?$CF@ ; `string'
PUBLIC	??_C@_1GM@MDLHJIIM@?$AAP?$AAy?$AAB?$AAy?$AAt?$AAe?$AAs?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AA?$CI?$AA?$CI?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AAE?$AAr?$AAr?$AAo?$AAr?$AAO?$AAb@ ; `string'
PUBLIC	??_C@_1DK@PMINBLPF@?$AAP?$AAy?$AAB?$AAy?$AAt?$AAe?$AAs?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAu?$AAs?$AAe?$AAl?$AAf?$AA?9?$AA?$DO?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?$CJ?$AA?$AA@ ; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$UnicodeDecodeError_str DD imagerel UnicodeDecodeError_str
	DD	imagerel UnicodeDecodeError_str+510
	DD	imagerel $unwind$UnicodeDecodeError_str
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$UnicodeDecodeError_str DD 010901H
	DD	0c209H
xdata	ENDS
;	COMDAT ??_C@_0DG@HGDBIPGF@?8?$CFU?8?5codec?5can?8t?5decode?5bytes?5in@
CONST	SEGMENT
??_C@_0DG@HGDBIPGF@?8?$CFU?8?5codec?5can?8t?5decode?5bytes?5in@ DB '''%U'''
	DB	' codec can''t decode bytes in position %zd-%zd: %U', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@IBOOJBGM@?8?$CFU?8?5codec?5can?8t?5decode?5byte?50x?$CF@
CONST	SEGMENT
??_C@_0DI@IBOOJBGM@?8?$CFU?8?5codec?5can?8t?5decode?5byte?50x?$CF@ DB ''''
	DB	'%U'' codec can''t decode byte 0x%02x in position %zd: %U', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GM@MDLHJIIM@?$AAP?$AAy?$AAB?$AAy?$AAt?$AAe?$AAs?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AA?$CI?$AA?$CI?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AAE?$AAr?$AAr?$AAo?$AAr?$AAO?$AAb@
CONST	SEGMENT
??_C@_1GM@MDLHJIIM@?$AAP?$AAy?$AAB?$AAy?$AAt?$AAe?$AAs?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AA?$CI?$AA?$CI?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AAE?$AAr?$AAr?$AAo?$AAr?$AAO?$AAb@ DB 'P'
	DB	00H, 'y', 00H, 'B', 00H, 'y', 00H, 't', 00H, 'e', 00H, 's', 00H
	DB	'_', 00H, 'C', 00H, 'h', 00H, 'e', 00H, 'c', 00H, 'k', 00H, '('
	DB	00H, '(', 00H, '(', 00H, 'P', 00H, 'y', 00H, 'U', 00H, 'n', 00H
	DB	'i', 00H, 'c', 00H, 'o', 00H, 'd', 00H, 'e', 00H, 'E', 00H, 'r'
	DB	00H, 'r', 00H, 'o', 00H, 'r', 00H, 'O', 00H, 'b', 00H, 'j', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, ' ', 00H, '*', 00H, ')', 00H, 's'
	DB	00H, 'e', 00H, 'l', 00H, 'f', 00H, ')', 00H, '-', 00H, '>', 00H
	DB	'o', 00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, ')'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1DK@PMINBLPF@?$AAP?$AAy?$AAB?$AAy?$AAt?$AAe?$AAs?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAu?$AAs?$AAe?$AAl?$AAf?$AA?9?$AA?$DO?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?$CJ?$AA?$AA@
CONST	SEGMENT
??_C@_1DK@PMINBLPF@?$AAP?$AAy?$AAB?$AAy?$AAt?$AAe?$AAs?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAu?$AAs?$AAe?$AAl?$AAf?$AA?9?$AA?$DO?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?$CJ?$AA?$AA@ DB 'P'
	DB	00H, 'y', 00H, 'B', 00H, 'y', 00H, 't', 00H, 'e', 00H, 's', 00H
	DB	'_', 00H, 'C', 00H, 'h', 00H, 'e', 00H, 'c', 00H, 'k', 00H, '('
	DB	00H, 'u', 00H, 's', 00H, 'e', 00H, 'l', 00H, 'f', 00H, '-', 00H
	DB	'>', 00H, 'o', 00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't'
	DB	00H, ')', 00H, 00H, 00H			; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT UnicodeDecodeError_str
_TEXT	SEGMENT
encoding_str$ = 48
uself$ = 56
reason_str$ = 64
result$ = 72
byte$23357 = 80
self$ = 112
UnicodeDecodeError_str PROC				; COMDAT

; 1900 : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 68	 sub	 rsp, 104		; 00000068H

; 1901 :     PyUnicodeErrorObject *uself = (PyUnicodeErrorObject *)self;

  00009	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  0000e	48 89 44 24 38	 mov	 QWORD PTR uself$[rsp], rax

; 1902 :     PyObject *result = NULL;

  00013	48 c7 44 24 48
	00 00 00 00	 mov	 QWORD PTR result$[rsp], 0

; 1903 :     PyObject *reason_str = NULL;

  0001c	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR reason_str$[rsp], 0

; 1904 :     PyObject *encoding_str = NULL;

  00025	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR encoding_str$[rsp], 0

; 1905 : 
; 1906 :     /* Get reason and encoding as strings, which they might not be if
; 1907 :        they've been modified after we were contructed. */
; 1908 :     reason_str = PyObject_Str(uself->reason);

  0002e	48 8b 44 24 38	 mov	 rax, QWORD PTR uself$[rsp]
  00033	48 8b 88 b0 00
	00 00		 mov	 rcx, QWORD PTR [rax+176]
  0003a	e8 00 00 00 00	 call	 PyObject_Str
  0003f	48 89 44 24 40	 mov	 QWORD PTR reason_str$[rsp], rax

; 1909 :     if (reason_str == NULL)

  00044	48 83 7c 24 40
	00		 cmp	 QWORD PTR reason_str$[rsp], 0
  0004a	75 05		 jne	 SHORT $LN12@UnicodeDec@2

; 1910 :         goto done;

  0004c	e9 73 01 00 00	 jmp	 $done$23349
$LN12@UnicodeDec@2:

; 1911 :     encoding_str = PyObject_Str(uself->encoding);

  00051	48 8b 44 24 38	 mov	 rax, QWORD PTR uself$[rsp]
  00056	48 8b 88 90 00
	00 00		 mov	 rcx, QWORD PTR [rax+144]
  0005d	e8 00 00 00 00	 call	 PyObject_Str
  00062	48 89 44 24 30	 mov	 QWORD PTR encoding_str$[rsp], rax

; 1912 :     if (encoding_str == NULL)

  00067	48 83 7c 24 30
	00		 cmp	 QWORD PTR encoding_str$[rsp], 0
  0006d	75 05		 jne	 SHORT $LN11@UnicodeDec@2

; 1913 :         goto done;

  0006f	e9 50 01 00 00	 jmp	 $done$23349
$LN11@UnicodeDec@2:

; 1914 : 
; 1915 :     if (uself->start < PyBytes_GET_SIZE(uself->object) && uself->end == uself->start+1) {

  00074	48 8b 44 24 38	 mov	 rax, QWORD PTR uself$[rsp]
  00079	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  00080	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00084	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  0008a	25 00 00 00 08	 and	 eax, 134217728		; 08000000H
  0008f	85 c0		 test	 eax, eax
  00091	75 1c		 jne	 SHORT $LN15@UnicodeDec@2
  00093	41 b8 7b 07 00
	00		 mov	 r8d, 1915		; 0000077bH
  00099	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  000a0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DK@PMINBLPF@?$AAP?$AAy?$AAB?$AAy?$AAt?$AAe?$AAs?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAu?$AAs?$AAe?$AAl?$AAf?$AA?9?$AA?$DO?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?$CJ?$AA?$AA@
  000a7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  000ad	33 c0		 xor	 eax, eax
$LN15@UnicodeDec@2:
  000af	48 8b 44 24 38	 mov	 rax, QWORD PTR uself$[rsp]
  000b4	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  000bb	48 8b 4c 24 38	 mov	 rcx, QWORD PTR uself$[rsp]
  000c0	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  000c4	48 39 81 a0 00
	00 00		 cmp	 QWORD PTR [rcx+160], rax
  000cb	0f 8d b5 00 00
	00		 jge	 $LN10@UnicodeDec@2
  000d1	48 8b 44 24 38	 mov	 rax, QWORD PTR uself$[rsp]
  000d6	48 8b 80 a0 00
	00 00		 mov	 rax, QWORD PTR [rax+160]
  000dd	48 ff c0	 inc	 rax
  000e0	48 8b 4c 24 38	 mov	 rcx, QWORD PTR uself$[rsp]
  000e5	48 39 81 a8 00
	00 00		 cmp	 QWORD PTR [rcx+168], rax
  000ec	0f 85 94 00 00
	00		 jne	 $LN10@UnicodeDec@2

; 1916 :         int byte = (int)(PyBytes_AS_STRING(((PyUnicodeErrorObject *)self)->object)[uself->start]&0xff);

  000f2	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  000f7	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  000fe	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00102	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  00108	25 00 00 00 08	 and	 eax, 134217728		; 08000000H
  0010d	85 c0		 test	 eax, eax
  0010f	75 1c		 jne	 SHORT $LN16@UnicodeDec@2
  00111	41 b8 7c 07 00
	00		 mov	 r8d, 1916		; 0000077cH
  00117	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  0011e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1GM@MDLHJIIM@?$AAP?$AAy?$AAB?$AAy?$AAt?$AAe?$AAs?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AA?$CI?$AA?$CI?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AAE?$AAr?$AAr?$AAo?$AAr?$AAO?$AAb@
  00125	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  0012b	33 c0		 xor	 eax, eax
$LN16@UnicodeDec@2:
  0012d	48 8b 44 24 70	 mov	 rax, QWORD PTR self$[rsp]
  00132	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  00139	48 8b 4c 24 38	 mov	 rcx, QWORD PTR uself$[rsp]
  0013e	48 8b 89 a0 00
	00 00		 mov	 rcx, QWORD PTR [rcx+160]
  00145	0f be 44 08 78	 movsx	 eax, BYTE PTR [rax+rcx+120]
  0014a	25 ff 00 00 00	 and	 eax, 255		; 000000ffH
  0014f	89 44 24 50	 mov	 DWORD PTR byte$23357[rsp], eax

; 1917 :         result = PyUnicode_FromFormat(
; 1918 :             "'%U' codec can't decode byte 0x%02x in position %zd: %U",
; 1919 :             encoding_str,
; 1920 :             byte,
; 1921 :             uself->start,
; 1922 :             reason_str);

  00153	48 8b 44 24 40	 mov	 rax, QWORD PTR reason_str$[rsp]
  00158	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0015d	48 8b 44 24 38	 mov	 rax, QWORD PTR uself$[rsp]
  00162	4c 8b 88 a0 00
	00 00		 mov	 r9, QWORD PTR [rax+160]
  00169	44 8b 44 24 50	 mov	 r8d, DWORD PTR byte$23357[rsp]
  0016e	48 8b 54 24 30	 mov	 rdx, QWORD PTR encoding_str$[rsp]
  00173	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0DI@IBOOJBGM@?8?$CFU?8?5codec?5can?8t?5decode?5byte?50x?$CF@
  0017a	e8 00 00 00 00	 call	 PyUnicode_FromFormat
  0017f	48 89 44 24 48	 mov	 QWORD PTR result$[rsp], rax

; 1923 :     }
; 1924 :     else {

  00184	eb 3e		 jmp	 SHORT $LN9@UnicodeDec@2
$LN10@UnicodeDec@2:

; 1925 :         result = PyUnicode_FromFormat(
; 1926 :             "'%U' codec can't decode bytes in position %zd-%zd: %U",
; 1927 :             encoding_str,
; 1928 :             uself->start,
; 1929 :             uself->end-1,
; 1930 :             reason_str
; 1931 :             );

  00186	48 8b 44 24 38	 mov	 rax, QWORD PTR uself$[rsp]
  0018b	48 8b 80 a8 00
	00 00		 mov	 rax, QWORD PTR [rax+168]
  00192	48 ff c8	 dec	 rax
  00195	48 8b 4c 24 40	 mov	 rcx, QWORD PTR reason_str$[rsp]
  0019a	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  0019f	4c 8b c8	 mov	 r9, rax
  001a2	48 8b 44 24 38	 mov	 rax, QWORD PTR uself$[rsp]
  001a7	4c 8b 80 a0 00
	00 00		 mov	 r8, QWORD PTR [rax+160]
  001ae	48 8b 54 24 30	 mov	 rdx, QWORD PTR encoding_str$[rsp]
  001b3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0DG@HGDBIPGF@?8?$CFU?8?5codec?5can?8t?5decode?5bytes?5in@
  001ba	e8 00 00 00 00	 call	 PyUnicode_FromFormat
  001bf	48 89 44 24 48	 mov	 QWORD PTR result$[rsp], rax
$LN9@UnicodeDec@2:
$done$23349:
$LN8@UnicodeDec@2:

; 1932 :     }
; 1933 : done:
; 1934 :     Py_XDECREF(reason_str);

  001c4	48 83 7c 24 40
	00		 cmp	 QWORD PTR reason_str$[rsp], 0
  001ca	74 0a		 je	 SHORT $LN5@UnicodeDec@2
  001cc	48 8b 4c 24 40	 mov	 rcx, QWORD PTR reason_str$[rsp]
  001d1	e8 00 00 00 00	 call	 _Py_DecRef
$LN5@UnicodeDec@2:
  001d6	33 c0		 xor	 eax, eax
  001d8	85 c0		 test	 eax, eax
  001da	75 e8		 jne	 SHORT $LN8@UnicodeDec@2
$LN4@UnicodeDec@2:

; 1935 :     Py_XDECREF(encoding_str);

  001dc	48 83 7c 24 30
	00		 cmp	 QWORD PTR encoding_str$[rsp], 0
  001e2	74 0a		 je	 SHORT $LN1@UnicodeDec@2
  001e4	48 8b 4c 24 30	 mov	 rcx, QWORD PTR encoding_str$[rsp]
  001e9	e8 00 00 00 00	 call	 _Py_DecRef
$LN1@UnicodeDec@2:
  001ee	33 c0		 xor	 eax, eax
  001f0	85 c0		 test	 eax, eax
  001f2	75 e8		 jne	 SHORT $LN4@UnicodeDec@2

; 1936 :     return result;

  001f4	48 8b 44 24 48	 mov	 rax, QWORD PTR result$[rsp]

; 1937 : }

  001f9	48 83 c4 68	 add	 rsp, 104		; 00000068H
  001fd	c3		 ret	 0
UnicodeDecodeError_str ENDP
_TEXT	ENDS
PUBLIC	??_C@_06IIPNKPMF@sy?$CDnns?$AA@			; `string'
PUBLIC	PyUnicodeDecodeError_Create
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyUnicodeDecodeError_Create DD imagerel $LN3
	DD	imagerel $LN3+98
	DD	imagerel $unwind$PyUnicodeDecodeError_Create
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyUnicodeDecodeError_Create DD 011801H
	DD	08218H
xdata	ENDS
;	COMDAT ??_C@_06IIPNKPMF@sy?$CDnns?$AA@
CONST	SEGMENT
??_C@_06IIPNKPMF@sy?$CDnns?$AA@ DB 'sy#nns', 00H	; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT PyUnicodeDecodeError_Create
_TEXT	SEGMENT
encoding$ = 80
object$ = 88
length$ = 96
start$ = 104
end$ = 112
reason$ = 120
PyUnicodeDecodeError_Create PROC			; COMDAT

; 1957 : {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 1958 :     return PyObject_CallFunction(PyExc_UnicodeDecodeError, "sy#nns",
; 1959 :                                  encoding, object, length, start, end, reason);

  00018	48 8b 44 24 78	 mov	 rax, QWORD PTR reason$[rsp]
  0001d	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  00022	48 8b 44 24 70	 mov	 rax, QWORD PTR end$[rsp]
  00027	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  0002c	48 8b 44 24 68	 mov	 rax, QWORD PTR start$[rsp]
  00031	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00036	48 8b 44 24 60	 mov	 rax, QWORD PTR length$[rsp]
  0003b	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00040	4c 8b 4c 24 58	 mov	 r9, QWORD PTR object$[rsp]
  00045	4c 8b 44 24 50	 mov	 r8, QWORD PTR encoding$[rsp]
  0004a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06IIPNKPMF@sy?$CDnns?$AA@
  00051	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_UnicodeDecodeError
  00058	e8 00 00 00 00	 call	 _PyObject_CallFunction_SizeT

; 1960 : }

  0005d	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00061	c3		 ret	 0
PyUnicodeDecodeError_Create ENDP
_TEXT	ENDS
PUBLIC	??_C@_06BGICGFIA@O?$CBnnO?$CB?$AA@		; `string'
PUBLIC	??_C@_0BL@HEMDIHME@UnicodeTranslateError_init?$AA@ ; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$UnicodeTranslateError_init DD imagerel UnicodeTranslateError_init
	DD	imagerel UnicodeTranslateError_init+465
	DD	imagerel $unwind$UnicodeTranslateError_init
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$UnicodeTranslateError_init DD 011301H
	DD	0a213H
xdata	ENDS
;	COMDAT ??_C@_06BGICGFIA@O?$CBnnO?$CB?$AA@
CONST	SEGMENT
??_C@_06BGICGFIA@O?$CBnnO?$CB?$AA@ DB 'O!nnO!', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@HEMDIHME@UnicodeTranslateError_init?$AA@
CONST	SEGMENT
??_C@_0BL@HEMDIHME@UnicodeTranslateError_init?$AA@ DB 'UnicodeTranslateEr'
	DB	'ror_init', 00H				; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT UnicodeTranslateError_init
_TEXT	SEGMENT
_py_tmp$23433 = 64
_py_tmp$23441 = 72
self$ = 96
args$ = 104
kwds$ = 112
UnicodeTranslateError_init PROC				; COMDAT

; 1970 : {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 58	 sub	 rsp, 88			; 00000058H

; 1971 :     if (BaseException_init((PyBaseExceptionObject *)self, args, kwds) == -1)

  00013	4c 8b 44 24 70	 mov	 r8, QWORD PTR kwds$[rsp]
  00018	48 8b 54 24 68	 mov	 rdx, QWORD PTR args$[rsp]
  0001d	48 8b 4c 24 60	 mov	 rcx, QWORD PTR self$[rsp]
  00022	e8 00 00 00 00	 call	 BaseException_init
  00027	83 f8 ff	 cmp	 eax, -1
  0002a	75 0a		 jne	 SHORT $LN10@UnicodeTra

; 1972 :         return -1;

  0002c	b8 ff ff ff ff	 mov	 eax, -1
  00031	e9 96 01 00 00	 jmp	 $LN11@UnicodeTra
$LN10@UnicodeTra:
$LN9@UnicodeTra:

; 1973 : 
; 1974 :     Py_CLEAR(self->object);

  00036	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  0003b	48 83 b8 98 00
	00 00 00	 cmp	 QWORD PTR [rax+152], 0
  00043	74 5c		 je	 SHORT $LN6@UnicodeTra
  00045	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0004d	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  00052	4c 8b 88 98 00
	00 00		 mov	 r9, QWORD PTR [rax+152]
  00059	41 b8 b6 07 00
	00		 mov	 r8d, 1974		; 000007b6H
  0005f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00066	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BL@HEMDIHME@UnicodeTranslateError_init?$AA@
  0006d	e8 00 00 00 00	 call	 _PyParallel_Guard
  00072	85 c0		 test	 eax, eax
  00074	75 2b		 jne	 SHORT $LN6@UnicodeTra
  00076	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  0007b	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  00082	48 89 44 24 40	 mov	 QWORD PTR _py_tmp$23433[rsp], rax
  00087	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  0008c	48 c7 80 98 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+152], 0
  00097	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _py_tmp$23433[rsp]
  0009c	e8 00 00 00 00	 call	 _Py_DecRef
$LN6@UnicodeTra:
  000a1	33 c0		 xor	 eax, eax
  000a3	85 c0		 test	 eax, eax
  000a5	75 8f		 jne	 SHORT $LN9@UnicodeTra
$LN5@UnicodeTra:

; 1975 :     Py_CLEAR(self->reason);

  000a7	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  000ac	48 83 b8 b0 00
	00 00 00	 cmp	 QWORD PTR [rax+176], 0
  000b4	74 5c		 je	 SHORT $LN2@UnicodeTra
  000b6	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  000be	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  000c3	4c 8b 88 b0 00
	00 00		 mov	 r9, QWORD PTR [rax+176]
  000ca	41 b8 b7 07 00
	00		 mov	 r8d, 1975		; 000007b7H
  000d0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  000d7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BL@HEMDIHME@UnicodeTranslateError_init?$AA@
  000de	e8 00 00 00 00	 call	 _PyParallel_Guard
  000e3	85 c0		 test	 eax, eax
  000e5	75 2b		 jne	 SHORT $LN2@UnicodeTra
  000e7	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  000ec	48 8b 80 b0 00
	00 00		 mov	 rax, QWORD PTR [rax+176]
  000f3	48 89 44 24 48	 mov	 QWORD PTR _py_tmp$23441[rsp], rax
  000f8	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  000fd	48 c7 80 b0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+176], 0
  00108	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _py_tmp$23441[rsp]
  0010d	e8 00 00 00 00	 call	 _Py_DecRef
$LN2@UnicodeTra:
  00112	33 c0		 xor	 eax, eax
  00114	85 c0		 test	 eax, eax
  00116	75 8f		 jne	 SHORT $LN5@UnicodeTra

; 1976 : 
; 1977 :     if (!PyArg_ParseTuple(args, "O!nnO!",
; 1978 :         &PyUnicode_Type, &self->object,
; 1979 :         &self->start,
; 1980 :         &self->end,
; 1981 :         &PyUnicode_Type, &self->reason)) {

  00118	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  0011d	48 05 b0 00 00
	00		 add	 rax, 176		; 000000b0H
  00123	48 8b 4c 24 60	 mov	 rcx, QWORD PTR self$[rsp]
  00128	48 81 c1 a8 00
	00 00		 add	 rcx, 168		; 000000a8H
  0012f	48 8b 54 24 60	 mov	 rdx, QWORD PTR self$[rsp]
  00134	48 81 c2 a0 00
	00 00		 add	 rdx, 160		; 000000a0H
  0013b	4c 8b 44 24 60	 mov	 r8, QWORD PTR self$[rsp]
  00140	49 81 c0 98 00
	00 00		 add	 r8, 152			; 00000098H
  00147	48 89 44 24 38	 mov	 QWORD PTR [rsp+56], rax
  0014c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:PyUnicode_Type
  00153	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  00158	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  0015d	48 89 54 24 20	 mov	 QWORD PTR [rsp+32], rdx
  00162	4d 8b c8	 mov	 r9, r8
  00165	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:PyUnicode_Type
  0016c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06BGICGFIA@O?$CBnnO?$CB?$AA@
  00173	48 8b 4c 24 68	 mov	 rcx, QWORD PTR args$[rsp]
  00178	e8 00 00 00 00	 call	 _PyArg_ParseTuple_SizeT
  0017d	85 c0		 test	 eax, eax
  0017f	75 27		 jne	 SHORT $LN1@UnicodeTra

; 1982 :         self->object = self->reason = NULL;

  00181	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  00186	48 c7 80 b0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+176], 0
  00191	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  00196	48 c7 80 98 00
	00 00 00 00 00
	00		 mov	 QWORD PTR [rax+152], 0

; 1983 :         return -1;

  001a1	b8 ff ff ff ff	 mov	 eax, -1
  001a6	eb 24		 jmp	 SHORT $LN11@UnicodeTra
$LN1@UnicodeTra:

; 1984 :     }
; 1985 : 
; 1986 :     Py_INCREF(self->object);

  001a8	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  001ad	48 8b 88 98 00
	00 00		 mov	 rcx, QWORD PTR [rax+152]
  001b4	e8 00 00 00 00	 call	 _Py_IncRef

; 1987 :     Py_INCREF(self->reason);

  001b9	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  001be	48 8b 88 b0 00
	00 00		 mov	 rcx, QWORD PTR [rax+176]
  001c5	e8 00 00 00 00	 call	 _Py_IncRef

; 1988 : 
; 1989 :     return 0;

  001ca	33 c0		 xor	 eax, eax
$LN11@UnicodeTra:

; 1990 : }

  001cc	48 83 c4 58	 add	 rsp, 88			; 00000058H
  001d0	c3		 ret	 0
UnicodeTranslateError_init ENDP
_TEXT	ENDS
PUBLIC	??_C@_0DD@IEACBGMI@can?8t?5translate?5characters?5in?5po@ ; `string'
PUBLIC	??_C@_0DH@FPLMGDMI@can?8t?5translate?5character?5?8?2U?$CF08@ ; `string'
PUBLIC	??_C@_0DH@FIFOJHID@can?8t?5translate?5character?5?8?2u?$CF04@ ; `string'
PUBLIC	??_C@_0DH@CFCMGDFN@can?8t?5translate?5character?5?8?2x?$CF02@ ; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$UnicodeTranslateError_str DD imagerel UnicodeTranslateError_str
	DD	imagerel UnicodeTranslateError_str+468
	DD	imagerel $unwind$UnicodeTranslateError_str
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$UnicodeTranslateError_str DD 010901H
	DD	0a209H
xdata	ENDS
;	COMDAT ??_C@_0DD@IEACBGMI@can?8t?5translate?5characters?5in?5po@
CONST	SEGMENT
??_C@_0DD@IEACBGMI@can?8t?5translate?5characters?5in?5po@ DB 'can''t tran'
	DB	'slate characters in position %zd-%zd: %U', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@FPLMGDMI@can?8t?5translate?5character?5?8?2U?$CF08@
CONST	SEGMENT
??_C@_0DH@FPLMGDMI@can?8t?5translate?5character?5?8?2U?$CF08@ DB 'can''t '
	DB	'translate character ''\U%08x'' in position %zd: %U', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@FIFOJHID@can?8t?5translate?5character?5?8?2u?$CF04@
CONST	SEGMENT
??_C@_0DH@FIFOJHID@can?8t?5translate?5character?5?8?2u?$CF04@ DB 'can''t '
	DB	'translate character ''\u%04x'' in position %zd: %U', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DH@CFCMGDFN@can?8t?5translate?5character?5?8?2x?$CF02@
CONST	SEGMENT
??_C@_0DH@CFCMGDFN@can?8t?5translate?5character?5?8?2x?$CF02@ DB 'can''t '
	DB	'translate character ''\x%02x'' in position %zd: %U', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT UnicodeTranslateError_str
_TEXT	SEGMENT
uself$ = 32
reason_str$ = 40
result$ = 48
fmt$23470 = 56
badchar$23469 = 64
self$ = 96
UnicodeTranslateError_str PROC				; COMDAT

; 1995 : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 58	 sub	 rsp, 88			; 00000058H

; 1996 :     PyUnicodeErrorObject *uself = (PyUnicodeErrorObject *)self;

  00009	48 8b 44 24 60	 mov	 rax, QWORD PTR self$[rsp]
  0000e	48 89 44 24 20	 mov	 QWORD PTR uself$[rsp], rax

; 1997 :     PyObject *result = NULL;

  00013	48 c7 44 24 30
	00 00 00 00	 mov	 QWORD PTR result$[rsp], 0

; 1998 :     PyObject *reason_str = NULL;

  0001c	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR reason_str$[rsp], 0

; 1999 : 
; 2000 :     /* Get reason as a string, which it might not be if it's been
; 2001 :        modified after we were contructed. */
; 2002 :     reason_str = PyObject_Str(uself->reason);

  00025	48 8b 44 24 20	 mov	 rax, QWORD PTR uself$[rsp]
  0002a	48 8b 88 b0 00
	00 00		 mov	 rcx, QWORD PTR [rax+176]
  00031	e8 00 00 00 00	 call	 PyObject_Str
  00036	48 89 44 24 28	 mov	 QWORD PTR reason_str$[rsp], rax

; 2003 :     if (reason_str == NULL)

  0003b	48 83 7c 24 28
	00		 cmp	 QWORD PTR reason_str$[rsp], 0
  00041	75 05		 jne	 SHORT $LN11@UnicodeTra@2

; 2004 :         goto done;

  00043	e9 6a 01 00 00	 jmp	 $done$23462
$LN11@UnicodeTra@2:

; 2005 : 
; 2006 :     if (uself->start < PyUnicode_GET_LENGTH(uself->object) && uself->end == uself->start+1) {

  00048	48 8b 44 24 20	 mov	 rax, QWORD PTR uself$[rsp]
  0004d	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  00054	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00058	8b 80 00 01 00
	00		 mov	 eax, DWORD PTR [rax+256]
  0005e	25 00 00 00 10	 and	 eax, 268435456		; 10000000H
  00063	85 c0		 test	 eax, eax
  00065	75 1c		 jne	 SHORT $LN14@UnicodeTra@2
  00067	41 b8 d6 07 00
	00		 mov	 r8d, 2006		; 000007d6H
  0006d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  00074	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DO@FEKJNGCM@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAC?$AAh?$AAe?$AAc?$AAk?$AA?$CI?$AAu?$AAs?$AAe?$AAl?$AAf?$AA?9?$AA?$DO?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt?$AA?$CJ?$AA?$AA@
  0007b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  00081	33 c0		 xor	 eax, eax
$LN14@UnicodeTra@2:
  00083	48 8b 44 24 20	 mov	 rax, QWORD PTR uself$[rsp]
  00088	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  0008f	8b 40 70	 mov	 eax, DWORD PTR [rax+112]
  00092	c1 e8 07	 shr	 eax, 7
  00095	83 e0 01	 and	 eax, 1
  00098	85 c0		 test	 eax, eax
  0009a	75 1c		 jne	 SHORT $LN15@UnicodeTra@2
  0009c	41 b8 d6 07 00
	00		 mov	 r8d, 2006		; 000007d6H
  000a2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  000a9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EE@LAIEGHIO@?$AAP?$AAy?$AAU?$AAn?$AAi?$AAc?$AAo?$AAd?$AAe?$AA_?$AAI?$AAS?$AA_?$AAR?$AAE?$AAA?$AAD?$AAY?$AA?$CI?$AAu?$AAs?$AAe?$AAl?$AAf?$AA?9?$AA?$DO?$AAo?$AAb?$AAj?$AAe?$AAc?$AAt@
  000b0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  000b6	33 c0		 xor	 eax, eax
$LN15@UnicodeTra@2:
  000b8	48 8b 44 24 20	 mov	 rax, QWORD PTR uself$[rsp]
  000bd	48 8b 80 98 00
	00 00		 mov	 rax, QWORD PTR [rax+152]
  000c4	48 8b 4c 24 20	 mov	 rcx, QWORD PTR uself$[rsp]
  000c9	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  000cd	48 39 81 a0 00
	00 00		 cmp	 QWORD PTR [rcx+160], rax
  000d4	0f 8d a4 00 00
	00		 jge	 $LN10@UnicodeTra@2
  000da	48 8b 44 24 20	 mov	 rax, QWORD PTR uself$[rsp]
  000df	48 8b 80 a0 00
	00 00		 mov	 rax, QWORD PTR [rax+160]
  000e6	48 ff c0	 inc	 rax
  000e9	48 8b 4c 24 20	 mov	 rcx, QWORD PTR uself$[rsp]
  000ee	48 39 81 a8 00
	00 00		 cmp	 QWORD PTR [rcx+168], rax
  000f5	0f 85 83 00 00
	00		 jne	 $LN10@UnicodeTra@2

; 2007 :         Py_UCS4 badchar = PyUnicode_ReadChar(uself->object, uself->start);

  000fb	48 8b 44 24 20	 mov	 rax, QWORD PTR uself$[rsp]
  00100	48 8b 90 a0 00
	00 00		 mov	 rdx, QWORD PTR [rax+160]
  00107	48 8b 44 24 20	 mov	 rax, QWORD PTR uself$[rsp]
  0010c	48 8b 88 98 00
	00 00		 mov	 rcx, QWORD PTR [rax+152]
  00113	e8 00 00 00 00	 call	 PyUnicode_ReadChar
  00118	89 44 24 40	 mov	 DWORD PTR badchar$23469[rsp], eax

; 2008 :         const char *fmt;
; 2009 :         if (badchar <= 0xff)

  0011c	81 7c 24 40 ff
	00 00 00	 cmp	 DWORD PTR badchar$23469[rsp], 255 ; 000000ffH
  00124	77 0e		 ja	 SHORT $LN9@UnicodeTra@2

; 2010 :             fmt = "can't translate character '\\x%02x' in position %zd: %U";

  00126	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DH@CFCMGDFN@can?8t?5translate?5character?5?8?2x?$CF02@
  0012d	48 89 44 24 38	 mov	 QWORD PTR fmt$23470[rsp], rax
  00132	eb 24		 jmp	 SHORT $LN8@UnicodeTra@2
$LN9@UnicodeTra@2:

; 2011 :         else if (badchar <= 0xffff)

  00134	81 7c 24 40 ff
	ff 00 00	 cmp	 DWORD PTR badchar$23469[rsp], 65535 ; 0000ffffH
  0013c	77 0e		 ja	 SHORT $LN7@UnicodeTra@2

; 2012 :             fmt = "can't translate character '\\u%04x' in position %zd: %U";

  0013e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DH@FIFOJHID@can?8t?5translate?5character?5?8?2u?$CF04@
  00145	48 89 44 24 38	 mov	 QWORD PTR fmt$23470[rsp], rax

; 2013 :         else

  0014a	eb 0c		 jmp	 SHORT $LN6@UnicodeTra@2
$LN7@UnicodeTra@2:

; 2014 :             fmt = "can't translate character '\\U%08x' in position %zd: %U";

  0014c	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DH@FPLMGDMI@can?8t?5translate?5character?5?8?2U?$CF08@
  00153	48 89 44 24 38	 mov	 QWORD PTR fmt$23470[rsp], rax
$LN6@UnicodeTra@2:
$LN8@UnicodeTra@2:

; 2015 :         result = PyUnicode_FromFormat(
; 2016 :             fmt,
; 2017 :             (int)badchar,
; 2018 :             uself->start,
; 2019 :             reason_str
; 2020 :         );

  00158	4c 8b 4c 24 28	 mov	 r9, QWORD PTR reason_str$[rsp]
  0015d	48 8b 44 24 20	 mov	 rax, QWORD PTR uself$[rsp]
  00162	4c 8b 80 a0 00
	00 00		 mov	 r8, QWORD PTR [rax+160]
  00169	8b 54 24 40	 mov	 edx, DWORD PTR badchar$23469[rsp]
  0016d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR fmt$23470[rsp]
  00172	e8 00 00 00 00	 call	 PyUnicode_FromFormat
  00177	48 89 44 24 30	 mov	 QWORD PTR result$[rsp], rax

; 2021 :     } else {

  0017c	eb 34		 jmp	 SHORT $LN5@UnicodeTra@2
$LN10@UnicodeTra@2:

; 2022 :         result = PyUnicode_FromFormat(
; 2023 :             "can't translate characters in position %zd-%zd: %U",
; 2024 :             uself->start,
; 2025 :             uself->end-1,
; 2026 :             reason_str
; 2027 :             );

  0017e	48 8b 44 24 20	 mov	 rax, QWORD PTR uself$[rsp]
  00183	48 8b 80 a8 00
	00 00		 mov	 rax, QWORD PTR [rax+168]
  0018a	48 ff c8	 dec	 rax
  0018d	4c 8b 4c 24 28	 mov	 r9, QWORD PTR reason_str$[rsp]
  00192	4c 8b c0	 mov	 r8, rax
  00195	48 8b 44 24 20	 mov	 rax, QWORD PTR uself$[rsp]
  0019a	48 8b 90 a0 00
	00 00		 mov	 rdx, QWORD PTR [rax+160]
  001a1	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0DD@IEACBGMI@can?8t?5translate?5characters?5in?5po@
  001a8	e8 00 00 00 00	 call	 PyUnicode_FromFormat
  001ad	48 89 44 24 30	 mov	 QWORD PTR result$[rsp], rax
$LN5@UnicodeTra@2:
$done$23462:
$LN4@UnicodeTra@2:

; 2028 :     }
; 2029 : done:
; 2030 :     Py_XDECREF(reason_str);

  001b2	48 83 7c 24 28
	00		 cmp	 QWORD PTR reason_str$[rsp], 0
  001b8	74 0a		 je	 SHORT $LN1@UnicodeTra@2
  001ba	48 8b 4c 24 28	 mov	 rcx, QWORD PTR reason_str$[rsp]
  001bf	e8 00 00 00 00	 call	 _Py_DecRef
$LN1@UnicodeTra@2:
  001c4	33 c0		 xor	 eax, eax
  001c6	85 c0		 test	 eax, eax
  001c8	75 e8		 jne	 SHORT $LN4@UnicodeTra@2

; 2031 :     return result;

  001ca	48 8b 44 24 30	 mov	 rax, QWORD PTR result$[rsp]

; 2032 : }

  001cf	48 83 c4 58	 add	 rsp, 88			; 00000058H
  001d3	c3		 ret	 0
UnicodeTranslateError_str ENDP
_TEXT	ENDS
PUBLIC	??_C@_05OBBNLNF@u?$CDnns?$AA@			; `string'
PUBLIC	PyUnicodeTranslateError_Create
;	COMDAT pdata
pdata	SEGMENT
$pdata$PyUnicodeTranslateError_Create DD imagerel $LN3
	DD	imagerel $LN3+88
	DD	imagerel $unwind$PyUnicodeTranslateError_Create
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$PyUnicodeTranslateError_Create DD 011801H
	DD	08218H
xdata	ENDS
;	COMDAT ??_C@_05OBBNLNF@u?$CDnns?$AA@
CONST	SEGMENT
??_C@_05OBBNLNF@u?$CDnns?$AA@ DB 'u#nns', 00H		; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT PyUnicodeTranslateError_Create
_TEXT	SEGMENT
object$ = 80
length$ = 88
start$ = 96
end$ = 104
reason$ = 112
PyUnicodeTranslateError_Create PROC			; COMDAT

; 2053 : {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 2054 :     return PyObject_CallFunction(PyExc_UnicodeTranslateError, "u#nns",
; 2055 :                                  object, length, start, end, reason);

  00018	48 8b 44 24 70	 mov	 rax, QWORD PTR reason$[rsp]
  0001d	48 89 44 24 30	 mov	 QWORD PTR [rsp+48], rax
  00022	48 8b 44 24 68	 mov	 rax, QWORD PTR end$[rsp]
  00027	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0002c	48 8b 44 24 60	 mov	 rax, QWORD PTR start$[rsp]
  00031	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00036	4c 8b 4c 24 58	 mov	 r9, QWORD PTR length$[rsp]
  0003b	4c 8b 44 24 50	 mov	 r8, QWORD PTR object$[rsp]
  00040	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_05OBBNLNF@u?$CDnns?$AA@
  00047	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_UnicodeTranslateError
  0004e	e8 00 00 00 00	 call	 _PyObject_CallFunction_SizeT

; 2056 : }

  00053	48 83 c4 48	 add	 rsp, 72			; 00000048H
  00057	c3		 ret	 0
PyUnicodeTranslateError_Create ENDP
_TEXT	ENDS
PUBLIC	??_C@_03FLJHKEJH@Ons?$AA@			; `string'
PUBLIC	_PyUnicodeTranslateError_Create
;	COMDAT pdata
pdata	SEGMENT
$pdata$_PyUnicodeTranslateError_Create DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$_PyUnicodeTranslateError_Create
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_PyUnicodeTranslateError_Create DD 011801H
	DD	06218H
xdata	ENDS
;	COMDAT ??_C@_03FLJHKEJH@Ons?$AA@
CONST	SEGMENT
??_C@_03FLJHKEJH@Ons?$AA@ DB 'Ons', 00H			; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT _PyUnicodeTranslateError_Create
_TEXT	SEGMENT
object$ = 64
start$ = 72
end$ = 80
reason$ = 88
_PyUnicodeTranslateError_Create PROC			; COMDAT

; 2062 : {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 2063 :     return PyObject_CallFunction(PyExc_UnicodeTranslateError, "Ons",
; 2064 :                                  object, start, end, reason);

  00018	48 8b 44 24 58	 mov	 rax, QWORD PTR reason$[rsp]
  0001d	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00022	48 8b 44 24 50	 mov	 rax, QWORD PTR end$[rsp]
  00027	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0002c	4c 8b 4c 24 48	 mov	 r9, QWORD PTR start$[rsp]
  00031	4c 8b 44 24 40	 mov	 r8, QWORD PTR object$[rsp]
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_03FLJHKEJH@Ons?$AA@
  0003d	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_UnicodeTranslateError
  00044	e8 00 00 00 00	 call	 _PyObject_CallFunction_SizeT

; 2065 : }

  00049	48 83 c4 38	 add	 rsp, 56			; 00000038H
  0004d	c3		 ret	 0
_PyUnicodeTranslateError_Create ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BK@BNIPEKEF@GC?5object?5already?5tracked?$AA@ ; `string'
PUBLIC	??_C@_0BA@CGAMGHCJ@MemoryError_new?$AA@		; `string'
EXTRN	_PyGC_generation0:QWORD
EXTRN	Py_FatalError:PROC
EXTRN	_Py_NewReference:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$MemoryError_new DD imagerel MemoryError_new
	DD	imagerel MemoryError_new+441
	DD	imagerel $unwind$MemoryError_new
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$MemoryError_new DD 011301H
	DD	0a213H
xdata	ENDS
;	COMDAT ??_C@_0BK@BNIPEKEF@GC?5object?5already?5tracked?$AA@
CONST	SEGMENT
??_C@_0BK@BNIPEKEF@GC?5object?5already?5tracked?$AA@ DB 'GC object alread'
	DB	'y tracked', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@CGAMGHCJ@MemoryError_new?$AA@
CONST	SEGMENT
??_C@_0BA@CGAMGHCJ@MemoryError_new?$AA@ DB 'MemoryError_new', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT MemoryError_new
_TEXT	SEGMENT
self$ = 48
g$23987 = 56
tv130 = 64
type$ = 96
args$ = 104
kwds$ = 112
MemoryError_new PROC					; COMDAT

; 2197 : {

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	48 83 ec 58	 sub	 rsp, 88			; 00000058H

; 2198 :     PyBaseExceptionObject *self;
; 2199 : 
; 2200 :     if (type != (PyTypeObject *) PyExc_MemoryError)

  00013	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR PyExc_MemoryError
  0001a	48 39 44 24 60	 cmp	 QWORD PTR type$[rsp], rax
  0001f	74 19		 je	 SHORT $LN8@MemoryErro

; 2201 :         return BaseException_new(type, args, kwds);

  00021	4c 8b 44 24 70	 mov	 r8, QWORD PTR kwds$[rsp]
  00026	48 8b 54 24 68	 mov	 rdx, QWORD PTR args$[rsp]
  0002b	48 8b 4c 24 60	 mov	 rcx, QWORD PTR type$[rsp]
  00030	e8 00 00 00 00	 call	 BaseException_new
  00035	e9 7a 01 00 00	 jmp	 $LN9@MemoryErro
$LN8@MemoryErro:

; 2202 :     if (memerrors_freelist == NULL)

  0003a	48 83 3d 00 00
	00 00 00	 cmp	 QWORD PTR memerrors_freelist, 0
  00042	75 19		 jne	 SHORT $LN7@MemoryErro

; 2203 :         return BaseException_new(type, args, kwds);

  00044	4c 8b 44 24 70	 mov	 r8, QWORD PTR kwds$[rsp]
  00049	48 8b 54 24 68	 mov	 rdx, QWORD PTR args$[rsp]
  0004e	48 8b 4c 24 60	 mov	 rcx, QWORD PTR type$[rsp]
  00053	e8 00 00 00 00	 call	 BaseException_new
  00058	e9 57 01 00 00	 jmp	 $LN9@MemoryErro
$LN7@MemoryErro:

; 2204 :     /* Fetch object from freelist and revive it */
; 2205 :     self = memerrors_freelist;

  0005d	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR memerrors_freelist
  00064	48 89 44 24 30	 mov	 QWORD PTR self$[rsp], rax

; 2206 :     self->args = PyTuple_New(0);

  00069	33 c9		 xor	 ecx, ecx
  0006b	e8 00 00 00 00	 call	 PyTuple_New
  00070	48 8b 4c 24 30	 mov	 rcx, QWORD PTR self$[rsp]
  00075	48 89 41 68	 mov	 QWORD PTR [rcx+104], rax

; 2207 :     /* This shouldn't happen since the empty tuple is persistent */
; 2208 :     if (self->args == NULL)

  00079	48 8b 44 24 30	 mov	 rax, QWORD PTR self$[rsp]
  0007e	48 83 78 68 00	 cmp	 QWORD PTR [rax+104], 0
  00083	75 07		 jne	 SHORT $LN6@MemoryErro

; 2209 :         return NULL;

  00085	33 c0		 xor	 eax, eax
  00087	e9 28 01 00 00	 jmp	 $LN9@MemoryErro
$LN6@MemoryErro:

; 2210 :     memerrors_freelist = (PyBaseExceptionObject *) self->dict;

  0008c	48 8b 44 24 30	 mov	 rax, QWORD PTR self$[rsp]
  00091	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  00095	48 89 05 00 00
	00 00		 mov	 QWORD PTR memerrors_freelist, rax

; 2211 :     memerrors_numfree--;

  0009c	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR memerrors_numfree
  000a2	ff c8		 dec	 eax
  000a4	89 05 00 00 00
	00		 mov	 DWORD PTR memerrors_numfree, eax

; 2212 :     self->dict = NULL;

  000aa	48 8b 44 24 30	 mov	 rax, QWORD PTR self$[rsp]
  000af	48 c7 40 60 00
	00 00 00	 mov	 QWORD PTR [rax+96], 0

; 2213 :     _Py_NewReference((PyObject *)self);

  000b7	48 8b 4c 24 30	 mov	 rcx, QWORD PTR self$[rsp]
  000bc	e8 00 00 00 00	 call	 _Py_NewReference

; 2214 :     _PyObject_GC_TRACK(self);

  000c1	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  000c9	4c 8b 4c 24 30	 mov	 r9, QWORD PTR self$[rsp]
  000ce	41 b8 a6 08 00
	00		 mov	 r8d, 2214		; 000008a6H
  000d4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  000db	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@CGAMGHCJ@MemoryError_new?$AA@
  000e2	e8 00 00 00 00	 call	 _PyParallel_Guard
  000e7	85 c0		 test	 eax, eax
  000e9	0f 85 c0 00 00
	00		 jne	 $LN5@MemoryErro
$LN4@MemoryErro:
  000ef	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  000f7	4c 8b 4c 24 30	 mov	 r9, QWORD PTR self$[rsp]
  000fc	41 b8 a6 08 00
	00		 mov	 r8d, 2214		; 000008a6H
  00102	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00109	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@CGAMGHCJ@MemoryError_new?$AA@
  00110	e8 00 00 00 00	 call	 _PyParallel_Guard
  00115	85 c0		 test	 eax, eax
  00117	74 0b		 je	 SHORT $LN11@MemoryErro
  00119	48 c7 44 24 40
	00 00 00 00	 mov	 QWORD PTR tv130[rsp], 0
  00122	eb 0e		 jmp	 SHORT $LN12@MemoryErro
$LN11@MemoryErro:
  00124	48 8b 44 24 30	 mov	 rax, QWORD PTR self$[rsp]
  00129	48 83 e8 18	 sub	 rax, 24
  0012d	48 89 44 24 40	 mov	 QWORD PTR tv130[rsp], rax
$LN12@MemoryErro:
  00132	48 8b 44 24 40	 mov	 rax, QWORD PTR tv130[rsp]
  00137	48 89 44 24 38	 mov	 QWORD PTR g$23987[rsp], rax
  0013c	48 8b 44 24 38	 mov	 rax, QWORD PTR g$23987[rsp]
  00141	48 83 78 10 fe	 cmp	 QWORD PTR [rax+16], -2
  00146	74 0c		 je	 SHORT $LN1@MemoryErro
  00148	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@BNIPEKEF@GC?5object?5already?5tracked?$AA@
  0014f	e8 00 00 00 00	 call	 Py_FatalError
$LN1@MemoryErro:
  00154	48 8b 44 24 38	 mov	 rax, QWORD PTR g$23987[rsp]
  00159	48 c7 40 10 fd
	ff ff ff	 mov	 QWORD PTR [rax+16], -3
  00161	48 8b 44 24 38	 mov	 rax, QWORD PTR g$23987[rsp]
  00166	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR _PyGC_generation0
  0016d	48 89 08	 mov	 QWORD PTR [rax], rcx
  00170	48 8b 44 24 38	 mov	 rax, QWORD PTR g$23987[rsp]
  00175	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR _PyGC_generation0
  0017c	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00180	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  00184	48 8b 44 24 38	 mov	 rax, QWORD PTR g$23987[rsp]
  00189	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0018d	48 8b 4c 24 38	 mov	 rcx, QWORD PTR g$23987[rsp]
  00192	48 89 08	 mov	 QWORD PTR [rax], rcx
  00195	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR _PyGC_generation0
  0019c	48 8b 4c 24 38	 mov	 rcx, QWORD PTR g$23987[rsp]
  001a1	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  001a5	33 c0		 xor	 eax, eax
  001a7	85 c0		 test	 eax, eax
  001a9	0f 85 40 ff ff
	ff		 jne	 $LN4@MemoryErro
$LN5@MemoryErro:

; 2215 :     return (PyObject *)self;

  001af	48 8b 44 24 30	 mov	 rax, QWORD PTR self$[rsp]
$LN9@MemoryErro:

; 2216 : }

  001b4	48 83 c4 58	 add	 rsp, 88			; 00000058H
  001b8	c3		 ret	 0
MemoryError_new ENDP
_TEXT	ENDS
PUBLIC	??_C@_0BE@IKDMGMCA@MemoryError_dealloc?$AA@	; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$MemoryError_dealloc DD imagerel MemoryError_dealloc
	DD	imagerel MemoryError_dealloc+336
	DD	imagerel $unwind$MemoryError_dealloc
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$MemoryError_dealloc DD 010901H
	DD	08209H
xdata	ENDS
;	COMDAT ??_C@_0BE@IKDMGMCA@MemoryError_dealloc?$AA@
CONST	SEGMENT
??_C@_0BE@IKDMGMCA@MemoryError_dealloc?$AA@ DB 'MemoryError_dealloc', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT MemoryError_dealloc
_TEXT	SEGMENT
g$24002 = 48
tv79 = 56
self$ = 80
MemoryError_dealloc PROC				; COMDAT

; 2220 : {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 83 ec 48	 sub	 rsp, 72			; 00000048H

; 2221 :     _PyObject_GC_UNTRACK(self);

  00009	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00011	4c 8b 4c 24 50	 mov	 r9, QWORD PTR self$[rsp]
  00016	41 b8 ad 08 00
	00		 mov	 r8d, 2221		; 000008adH
  0001c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BE@IKDMGMCA@MemoryError_dealloc?$AA@
  0002a	e8 00 00 00 00	 call	 _PyParallel_Guard
  0002f	85 c0		 test	 eax, eax
  00031	0f 85 c1 00 00
	00		 jne	 $LN6@MemoryErro@2
$LN5@MemoryErro@2:
  00037	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  0003f	4c 8b 4c 24 50	 mov	 r9, QWORD PTR self$[rsp]
  00044	41 b8 ad 08 00
	00		 mov	 r8d, 2221		; 000008adH
  0004a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  00051	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BE@IKDMGMCA@MemoryError_dealloc?$AA@
  00058	e8 00 00 00 00	 call	 _PyParallel_Guard
  0005d	85 c0		 test	 eax, eax
  0005f	74 0b		 je	 SHORT $LN9@MemoryErro@2
  00061	48 c7 44 24 38
	00 00 00 00	 mov	 QWORD PTR tv79[rsp], 0
  0006a	eb 0e		 jmp	 SHORT $LN10@MemoryErro@2
$LN9@MemoryErro@2:
  0006c	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00071	48 83 e8 18	 sub	 rax, 24
  00075	48 89 44 24 38	 mov	 QWORD PTR tv79[rsp], rax
$LN10@MemoryErro@2:
  0007a	48 8b 44 24 38	 mov	 rax, QWORD PTR tv79[rsp]
  0007f	48 89 44 24 30	 mov	 QWORD PTR g$24002[rsp], rax
  00084	48 8b 44 24 30	 mov	 rax, QWORD PTR g$24002[rsp]
  00089	48 83 78 10 fe	 cmp	 QWORD PTR [rax+16], -2
  0008e	75 1c		 jne	 SHORT $LN11@MemoryErro@2
  00090	41 b8 ad 08 00
	00		 mov	 r8d, 2221		; 000008adH
  00096	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  0009d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EM@HFMJMDDM@?$AAg?$AA?9?$AA?$DO?$AAg?$AAc?$AA?4?$AAg?$AAc?$AA_?$AAr?$AAe?$AAf?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA_?$AAP?$AAy?$AAG?$AAC?$AA_?$AAR?$AAE?$AAF?$AAS?$AA_?$AAU?$AAN?$AAT?$AAR@
  000a4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  000aa	33 c0		 xor	 eax, eax
$LN11@MemoryErro@2:
  000ac	48 8b 44 24 30	 mov	 rax, QWORD PTR g$24002[rsp]
  000b1	48 c7 40 10 fe
	ff ff ff	 mov	 QWORD PTR [rax+16], -2
  000b9	48 8b 44 24 30	 mov	 rax, QWORD PTR g$24002[rsp]
  000be	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000c2	48 8b 4c 24 30	 mov	 rcx, QWORD PTR g$24002[rsp]
  000c7	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000ca	48 89 08	 mov	 QWORD PTR [rax], rcx
  000cd	48 8b 44 24 30	 mov	 rax, QWORD PTR g$24002[rsp]
  000d2	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000d5	48 8b 4c 24 30	 mov	 rcx, QWORD PTR g$24002[rsp]
  000da	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  000de	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  000e2	48 8b 44 24 30	 mov	 rax, QWORD PTR g$24002[rsp]
  000e7	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  000ee	33 c0		 xor	 eax, eax
  000f0	85 c0		 test	 eax, eax
  000f2	0f 85 3f ff ff
	ff		 jne	 $LN5@MemoryErro@2
$LN6@MemoryErro@2:

; 2222 :     BaseException_clear(self);

  000f8	48 8b 4c 24 50	 mov	 rcx, QWORD PTR self$[rsp]
  000fd	e8 00 00 00 00	 call	 BaseException_clear

; 2223 :     if (memerrors_numfree >= MEMERRORS_SAVE)

  00102	83 3d 00 00 00
	00 10		 cmp	 DWORD PTR memerrors_numfree, 16
  00109	7c 16		 jl	 SHORT $LN2@MemoryErro@2

; 2224 :         Py_TYPE(self)->tp_free((PyObject *)self);

  0010b	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00110	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00114	48 8b 4c 24 50	 mov	 rcx, QWORD PTR self$[rsp]
  00119	ff 90 98 01 00
	00		 call	 QWORD PTR [rax+408]

; 2225 :     else {

  0011f	eb 2a		 jmp	 SHORT $LN1@MemoryErro@2
$LN2@MemoryErro@2:

; 2226 :         self->dict = (PyObject *) memerrors_freelist;

  00121	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00126	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR memerrors_freelist
  0012d	48 89 48 60	 mov	 QWORD PTR [rax+96], rcx

; 2227 :         memerrors_freelist = self;

  00131	48 8b 44 24 50	 mov	 rax, QWORD PTR self$[rsp]
  00136	48 89 05 00 00
	00 00		 mov	 QWORD PTR memerrors_freelist, rax

; 2228 :         memerrors_numfree++;

  0013d	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR memerrors_numfree
  00143	ff c0		 inc	 eax
  00145	89 05 00 00 00
	00		 mov	 DWORD PTR memerrors_numfree, eax
$LN1@MemoryErro@2:

; 2229 :     }
; 2230 : }

  0014b	48 83 c4 48	 add	 rsp, 72			; 00000048H
  0014f	c3		 ret	 0
MemoryError_dealloc ENDP
_TEXT	ENDS
PUBLIC	??_C@_0CK@HNJAAFFN@init?5of?5pre?9allocated?5RuntimeErr@ ; `string'
PUBLIC	??_C@_0DG@DCAIDKJK@cannot?5allocate?5tuple?5for?5Runtim@ ; `string'
PUBLIC	??_C@_0DJ@IIJEFPMJ@cannot?5allocate?5argument?5for?5Run@ ; `string'
PUBLIC	??_C@_0CB@JIEDPDLF@maximum?5recursion?5depth?5exceeded@ ; `string'
PUBLIC	??_C@_0DP@ICIAEEBH@Cannot?5pre?9allocate?5RuntimeError@ ; `string'
PUBLIC	??_C@_1HI@JGBKNOGF@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAT@ ; `string'
PUBLIC	??_C@_1IE@PKICBNGH@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAP@ ; `string'
PUBLIC	??_C@_1HO@PFEFNGNN@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAP@ ; `string'
PUBLIC	??_C@_1IA@HPPAOLHI@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAI@ ; `string'
PUBLIC	??_C@_1IE@IDPOBJCC@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAN@ ; `string'
PUBLIC	??_C@_1IC@FBEGNJIO@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAI@ ; `string'
PUBLIC	??_C@_1IC@ONNKMPKA@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAF@ ; `string'
PUBLIC	??_C@_1HO@OBOMCJIK@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAF@ ; `string'
PUBLIC	??_C@_1II@HPBIAIEI@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAC@ ; `string'
PUBLIC	??_C@_1IM@FEBJAOOI@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAC@ ; `string'
PUBLIC	??_C@_1IM@EMAHNOPP@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAC@ ; `string'
PUBLIC	??_C@_1IC@DJCIMOHJ@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAC@ ; `string'
PUBLIC	??_C@_1HO@COJMDIJF@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAB@ ; `string'
PUBLIC	??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@ ; `string'
PUBLIC	??_C@_1HO@DGEMPBJC@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAB@ ; `string'
PUBLIC	??_C@_0DG@OANAGHEJ@Cannot?5allocate?5map?5from?5errnos?5@ ; `string'
PUBLIC	??_C@_0N@FANLAMLN@WindowsError?$AA@		; `string'
PUBLIC	??_C@_07FNHPCLMO@IOError?$AA@			; `string'
PUBLIC	??_C@_0BB@KOECNPDN@EnvironmentError?$AA@	; `string'
PUBLIC	??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@ ; `string'
PUBLIC	??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@ ; `string'
PUBLIC	_PyExc_Init
EXTRN	PyDict_SetItem:PROC
EXTRN	_PyObject_RealIsSubclass:PROC
EXTRN	PyDict_New:PROC
EXTRN	PyDict_SetItemString:PROC
EXTRN	PyModule_GetDict:PROC
EXTRN	PyType_Ready:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$_PyExc_Init DD imagerel $LN300
	DD	imagerel $LN300+9919
	DD	imagerel $unwind$_PyExc_Init
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_PyExc_Init DD 020c01H
	DD	01d010cH
xdata	ENDS
;	COMDAT ??_C@_0CK@HNJAAFFN@init?5of?5pre?9allocated?5RuntimeErr@
CONST	SEGMENT
??_C@_0CK@HNJAAFFN@init?5of?5pre?9allocated?5RuntimeErr@ DB 'init of pre-'
	DB	'allocated RuntimeError failed', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@DCAIDKJK@cannot?5allocate?5tuple?5for?5Runtim@
CONST	SEGMENT
??_C@_0DG@DCAIDKJK@cannot?5allocate?5tuple?5for?5Runtim@ DB 'cannot alloc'
	DB	'ate tuple for RuntimeError pre-allocation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@IIJEFPMJ@cannot?5allocate?5argument?5for?5Run@
CONST	SEGMENT
??_C@_0DJ@IIJEFPMJ@cannot?5allocate?5argument?5for?5Run@ DB 'cannot alloc'
	DB	'ate argument for RuntimeError pre-allocation', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@JIEDPDLF@maximum?5recursion?5depth?5exceeded@
CONST	SEGMENT
??_C@_0CB@JIEDPDLF@maximum?5recursion?5depth?5exceeded@ DB 'maximum recur'
	DB	'sion depth exceeded', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0DP@ICIAEEBH@Cannot?5pre?9allocate?5RuntimeError@
CONST	SEGMENT
??_C@_0DP@ICIAEEBH@Cannot?5pre?9allocate?5RuntimeError@ DB 'Cannot pre-al'
	DB	'locate RuntimeError instance for recursion errors', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1HI@JGBKNOGF@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAT@
CONST	SEGMENT
??_C@_1HI@JGBKNOGF@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAT@ DB '_'
	DB	00H, 'P', 00H, 'y', 00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, '_', 00H, 'R', 00H, 'e', 00H, 'a', 00H, 'l'
	DB	00H, 'I', 00H, 's', 00H, 'S', 00H, 'u', 00H, 'b', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, '(', 00H, 'P', 00H, 'y'
	DB	00H, 'E', 00H, 'x', 00H, 'c', 00H, '_', 00H, 'T', 00H, 'i', 00H
	DB	'm', 00H, 'e', 00H, 'o', 00H, 'u', 00H, 't', 00H, 'E', 00H, 'r'
	DB	00H, 'r', 00H, 'o', 00H, 'r', 00H, ',', 00H, ' ', 00H, 'P', 00H
	DB	'y', 00H, 'E', 00H, 'x', 00H, 'c', 00H, '_', 00H, 'O', 00H, 'S'
	DB	00H, 'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ')', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1IE@PKICBNGH@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAP@
CONST	SEGMENT
??_C@_1IE@PKICBNGH@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAP@ DB '_'
	DB	00H, 'P', 00H, 'y', 00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, '_', 00H, 'R', 00H, 'e', 00H, 'a', 00H, 'l'
	DB	00H, 'I', 00H, 's', 00H, 'S', 00H, 'u', 00H, 'b', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, '(', 00H, 'P', 00H, 'y'
	DB	00H, 'E', 00H, 'x', 00H, 'c', 00H, '_', 00H, 'P', 00H, 'r', 00H
	DB	'o', 00H, 'c', 00H, 'e', 00H, 's', 00H, 's', 00H, 'L', 00H, 'o'
	DB	00H, 'o', 00H, 'k', 00H, 'u', 00H, 'p', 00H, 'E', 00H, 'r', 00H
	DB	'r', 00H, 'o', 00H, 'r', 00H, ',', 00H, ' ', 00H, 'P', 00H, 'y'
	DB	00H, 'E', 00H, 'x', 00H, 'c', 00H, '_', 00H, 'O', 00H, 'S', 00H
	DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ')', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1HO@PFEFNGNN@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAP@
CONST	SEGMENT
??_C@_1HO@PFEFNGNN@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAP@ DB '_'
	DB	00H, 'P', 00H, 'y', 00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, '_', 00H, 'R', 00H, 'e', 00H, 'a', 00H, 'l'
	DB	00H, 'I', 00H, 's', 00H, 'S', 00H, 'u', 00H, 'b', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, '(', 00H, 'P', 00H, 'y'
	DB	00H, 'E', 00H, 'x', 00H, 'c', 00H, '_', 00H, 'P', 00H, 'e', 00H
	DB	'r', 00H, 'm', 00H, 'i', 00H, 's', 00H, 's', 00H, 'i', 00H, 'o'
	DB	00H, 'n', 00H, 'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H
	DB	',', 00H, ' ', 00H, 'P', 00H, 'y', 00H, 'E', 00H, 'x', 00H, 'c'
	DB	00H, '_', 00H, 'O', 00H, 'S', 00H, 'E', 00H, 'r', 00H, 'r', 00H
	DB	'o', 00H, 'r', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1IA@HPPAOLHI@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAI@
CONST	SEGMENT
??_C@_1IA@HPPAOLHI@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAI@ DB '_'
	DB	00H, 'P', 00H, 'y', 00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, '_', 00H, 'R', 00H, 'e', 00H, 'a', 00H, 'l'
	DB	00H, 'I', 00H, 's', 00H, 'S', 00H, 'u', 00H, 'b', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, '(', 00H, 'P', 00H, 'y'
	DB	00H, 'E', 00H, 'x', 00H, 'c', 00H, '_', 00H, 'I', 00H, 'n', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'r', 00H, 'u', 00H, 'p', 00H, 't'
	DB	00H, 'e', 00H, 'd', 00H, 'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H
	DB	'r', 00H, ',', 00H, ' ', 00H, 'P', 00H, 'y', 00H, 'E', 00H, 'x'
	DB	00H, 'c', 00H, '_', 00H, 'O', 00H, 'S', 00H, 'E', 00H, 'r', 00H
	DB	'r', 00H, 'o', 00H, 'r', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1IE@IDPOBJCC@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAN@
CONST	SEGMENT
??_C@_1IE@IDPOBJCC@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAN@ DB '_'
	DB	00H, 'P', 00H, 'y', 00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, '_', 00H, 'R', 00H, 'e', 00H, 'a', 00H, 'l'
	DB	00H, 'I', 00H, 's', 00H, 'S', 00H, 'u', 00H, 'b', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, '(', 00H, 'P', 00H, 'y'
	DB	00H, 'E', 00H, 'x', 00H, 'c', 00H, '_', 00H, 'N', 00H, 'o', 00H
	DB	't', 00H, 'A', 00H, 'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 'E', 00H, 'r', 00H
	DB	'r', 00H, 'o', 00H, 'r', 00H, ',', 00H, ' ', 00H, 'P', 00H, 'y'
	DB	00H, 'E', 00H, 'x', 00H, 'c', 00H, '_', 00H, 'O', 00H, 'S', 00H
	DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ')', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1IC@FBEGNJIO@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAI@
CONST	SEGMENT
??_C@_1IC@FBEGNJIO@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAI@ DB '_'
	DB	00H, 'P', 00H, 'y', 00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, '_', 00H, 'R', 00H, 'e', 00H, 'a', 00H, 'l'
	DB	00H, 'I', 00H, 's', 00H, 'S', 00H, 'u', 00H, 'b', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, '(', 00H, 'P', 00H, 'y'
	DB	00H, 'E', 00H, 'x', 00H, 'c', 00H, '_', 00H, 'I', 00H, 's', 00H
	DB	'A', 00H, 'D', 00H, 'i', 00H, 'r', 00H, 'e', 00H, 'c', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, 'y', 00H, 'E', 00H, 'r', 00H, 'r', 00H
	DB	'o', 00H, 'r', 00H, ',', 00H, ' ', 00H, 'P', 00H, 'y', 00H, 'E'
	DB	00H, 'x', 00H, 'c', 00H, '_', 00H, 'O', 00H, 'S', 00H, 'E', 00H
	DB	'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1IC@ONNKMPKA@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAF@
CONST	SEGMENT
??_C@_1IC@ONNKMPKA@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAF@ DB '_'
	DB	00H, 'P', 00H, 'y', 00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, '_', 00H, 'R', 00H, 'e', 00H, 'a', 00H, 'l'
	DB	00H, 'I', 00H, 's', 00H, 'S', 00H, 'u', 00H, 'b', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, '(', 00H, 'P', 00H, 'y'
	DB	00H, 'E', 00H, 'x', 00H, 'c', 00H, '_', 00H, 'F', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, 'N', 00H, 'o', 00H, 't', 00H, 'F', 00H, 'o'
	DB	00H, 'u', 00H, 'n', 00H, 'd', 00H, 'E', 00H, 'r', 00H, 'r', 00H
	DB	'o', 00H, 'r', 00H, ',', 00H, ' ', 00H, 'P', 00H, 'y', 00H, 'E'
	DB	00H, 'x', 00H, 'c', 00H, '_', 00H, 'O', 00H, 'S', 00H, 'E', 00H
	DB	'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1HO@OBOMCJIK@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAF@
CONST	SEGMENT
??_C@_1HO@OBOMCJIK@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAF@ DB '_'
	DB	00H, 'P', 00H, 'y', 00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, '_', 00H, 'R', 00H, 'e', 00H, 'a', 00H, 'l'
	DB	00H, 'I', 00H, 's', 00H, 'S', 00H, 'u', 00H, 'b', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, '(', 00H, 'P', 00H, 'y'
	DB	00H, 'E', 00H, 'x', 00H, 'c', 00H, '_', 00H, 'F', 00H, 'i', 00H
	DB	'l', 00H, 'e', 00H, 'E', 00H, 'x', 00H, 'i', 00H, 's', 00H, 't'
	DB	00H, 's', 00H, 'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H
	DB	',', 00H, ' ', 00H, 'P', 00H, 'y', 00H, 'E', 00H, 'x', 00H, 'c'
	DB	00H, '_', 00H, 'O', 00H, 'S', 00H, 'E', 00H, 'r', 00H, 'r', 00H
	DB	'o', 00H, 'r', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1II@HPBIAIEI@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAC@
CONST	SEGMENT
??_C@_1II@HPBIAIEI@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAC@ DB '_'
	DB	00H, 'P', 00H, 'y', 00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, '_', 00H, 'R', 00H, 'e', 00H, 'a', 00H, 'l'
	DB	00H, 'I', 00H, 's', 00H, 'S', 00H, 'u', 00H, 'b', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, '(', 00H, 'P', 00H, 'y'
	DB	00H, 'E', 00H, 'x', 00H, 'c', 00H, '_', 00H, 'C', 00H, 'o', 00H
	DB	'n', 00H, 'n', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'o'
	DB	00H, 'n', 00H, 'R', 00H, 'e', 00H, 's', 00H, 'e', 00H, 't', 00H
	DB	'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ',', 00H, ' '
	DB	00H, 'P', 00H, 'y', 00H, 'E', 00H, 'x', 00H, 'c', 00H, '_', 00H
	DB	'O', 00H, 'S', 00H, 'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r'
	DB	00H, ')', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1IM@FEBJAOOI@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAC@
CONST	SEGMENT
??_C@_1IM@FEBJAOOI@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAC@ DB '_'
	DB	00H, 'P', 00H, 'y', 00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, '_', 00H, 'R', 00H, 'e', 00H, 'a', 00H, 'l'
	DB	00H, 'I', 00H, 's', 00H, 'S', 00H, 'u', 00H, 'b', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, '(', 00H, 'P', 00H, 'y'
	DB	00H, 'E', 00H, 'x', 00H, 'c', 00H, '_', 00H, 'C', 00H, 'o', 00H
	DB	'n', 00H, 'n', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'o'
	DB	00H, 'n', 00H, 'R', 00H, 'e', 00H, 'f', 00H, 'u', 00H, 's', 00H
	DB	'e', 00H, 'd', 00H, 'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r'
	DB	00H, ',', 00H, ' ', 00H, 'P', 00H, 'y', 00H, 'E', 00H, 'x', 00H
	DB	'c', 00H, '_', 00H, 'O', 00H, 'S', 00H, 'E', 00H, 'r', 00H, 'r'
	DB	00H, 'o', 00H, 'r', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1IM@EMAHNOPP@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAC@
CONST	SEGMENT
??_C@_1IM@EMAHNOPP@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAC@ DB '_'
	DB	00H, 'P', 00H, 'y', 00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, '_', 00H, 'R', 00H, 'e', 00H, 'a', 00H, 'l'
	DB	00H, 'I', 00H, 's', 00H, 'S', 00H, 'u', 00H, 'b', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, '(', 00H, 'P', 00H, 'y'
	DB	00H, 'E', 00H, 'x', 00H, 'c', 00H, '_', 00H, 'C', 00H, 'o', 00H
	DB	'n', 00H, 'n', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'o'
	DB	00H, 'n', 00H, 'A', 00H, 'b', 00H, 'o', 00H, 'r', 00H, 't', 00H
	DB	'e', 00H, 'd', 00H, 'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r'
	DB	00H, ',', 00H, ' ', 00H, 'P', 00H, 'y', 00H, 'E', 00H, 'x', 00H
	DB	'c', 00H, '_', 00H, 'O', 00H, 'S', 00H, 'E', 00H, 'r', 00H, 'r'
	DB	00H, 'o', 00H, 'r', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1IC@DJCIMOHJ@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAC@
CONST	SEGMENT
??_C@_1IC@DJCIMOHJ@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAC@ DB '_'
	DB	00H, 'P', 00H, 'y', 00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, '_', 00H, 'R', 00H, 'e', 00H, 'a', 00H, 'l'
	DB	00H, 'I', 00H, 's', 00H, 'S', 00H, 'u', 00H, 'b', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, '(', 00H, 'P', 00H, 'y'
	DB	00H, 'E', 00H, 'x', 00H, 'c', 00H, '_', 00H, 'C', 00H, 'h', 00H
	DB	'i', 00H, 'l', 00H, 'd', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'c'
	DB	00H, 'e', 00H, 's', 00H, 's', 00H, 'E', 00H, 'r', 00H, 'r', 00H
	DB	'o', 00H, 'r', 00H, ',', 00H, ' ', 00H, 'P', 00H, 'y', 00H, 'E'
	DB	00H, 'x', 00H, 'c', 00H, '_', 00H, 'O', 00H, 'S', 00H, 'E', 00H
	DB	'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H, ')', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1HO@COJMDIJF@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAB@
CONST	SEGMENT
??_C@_1HO@COJMDIJF@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAB@ DB '_'
	DB	00H, 'P', 00H, 'y', 00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, '_', 00H, 'R', 00H, 'e', 00H, 'a', 00H, 'l'
	DB	00H, 'I', 00H, 's', 00H, 'S', 00H, 'u', 00H, 'b', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, '(', 00H, 'P', 00H, 'y'
	DB	00H, 'E', 00H, 'x', 00H, 'c', 00H, '_', 00H, 'B', 00H, 'r', 00H
	DB	'o', 00H, 'k', 00H, 'e', 00H, 'n', 00H, 'P', 00H, 'i', 00H, 'p'
	DB	00H, 'e', 00H, 'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H
	DB	',', 00H, ' ', 00H, 'P', 00H, 'y', 00H, 'E', 00H, 'x', 00H, 'c'
	DB	00H, '_', 00H, 'O', 00H, 'S', 00H, 'E', 00H, 'r', 00H, 'r', 00H
	DB	'o', 00H, 'r', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
CONST	SEGMENT
??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@ DB 'errmap insertion'
	DB	' problem.', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1HO@DGEMPBJC@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAB@
CONST	SEGMENT
??_C@_1HO@DGEMPBJC@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAB@ DB '_'
	DB	00H, 'P', 00H, 'y', 00H, 'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, '_', 00H, 'R', 00H, 'e', 00H, 'a', 00H, 'l'
	DB	00H, 'I', 00H, 's', 00H, 'S', 00H, 'u', 00H, 'b', 00H, 'c', 00H
	DB	'l', 00H, 'a', 00H, 's', 00H, 's', 00H, '(', 00H, 'P', 00H, 'y'
	DB	00H, 'E', 00H, 'x', 00H, 'c', 00H, '_', 00H, 'B', 00H, 'l', 00H
	DB	'o', 00H, 'c', 00H, 'k', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 'I'
	DB	00H, 'O', 00H, 'E', 00H, 'r', 00H, 'r', 00H, 'o', 00H, 'r', 00H
	DB	',', 00H, ' ', 00H, 'P', 00H, 'y', 00H, 'E', 00H, 'x', 00H, 'c'
	DB	00H, '_', 00H, 'O', 00H, 'S', 00H, 'E', 00H, 'r', 00H, 'r', 00H
	DB	'o', 00H, 'r', 00H, ')', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0DG@OANAGHEJ@Cannot?5allocate?5map?5from?5errnos?5@
CONST	SEGMENT
??_C@_0DG@OANAGHEJ@Cannot?5allocate?5map?5from?5errnos?5@ DB 'Cannot allo'
	DB	'cate map from errnos to OSError subclasses', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@FANLAMLN@WindowsError?$AA@
CONST	SEGMENT
??_C@_0N@FANLAMLN@WindowsError?$AA@ DB 'WindowsError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07FNHPCLMO@IOError?$AA@
CONST	SEGMENT
??_C@_07FNHPCLMO@IOError?$AA@ DB 'IOError', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@KOECNPDN@EnvironmentError?$AA@
CONST	SEGMENT
??_C@_0BB@KOECNPDN@EnvironmentError?$AA@ DB 'EnvironmentError', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
CONST	SEGMENT
??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@ DB 'Module dictio'
	DB	'nary insertion problem.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
CONST	SEGMENT
??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@ DB 'exceptions'
	DB	' bootstrapping error.', 00H			; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT _PyExc_Init
_TEXT	SEGMENT
bdict$ = 32
_code$126109 = 40
_code$126116 = 48
_code$126121 = 56
_code$126126 = 64
_code$126132 = 72
_code$126138 = 80
_code$126144 = 88
_code$126151 = 96
_code$126158 = 104
_code$126165 = 112
_code$126172 = 120
_code$126179 = 128
_code$126186 = 136
_code$126193 = 144
_code$126200 = 152
_code$126207 = 160
_code$126213 = 168
_code$126219 = 176
_code$126226 = 184
exc_message$126241 = 192
args_tuple$126240 = 200
err_inst$126238 = 208
bltinmod$ = 240
_PyExc_Init PROC					; COMDAT

; 2455 : {

$LN300:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H

; 2456 :     PyObject *bdict;
; 2457 : 
; 2458 :     PRE_INIT(BaseException)

  0000c	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_BaseException+256
  00012	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00017	85 c0		 test	 eax, eax
  00019	75 28		 jne	 SHORT $LN278@PyExc_Init
  0001b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_BaseException
  00022	e8 00 00 00 00	 call	 PyType_Ready
  00027	85 c0		 test	 eax, eax
  00029	7d 0c		 jge	 SHORT $LN277@PyExc_Init
  0002b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00032	e8 00 00 00 00	 call	 Py_FatalError
$LN277@PyExc_Init:
  00037	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_BaseException
  0003e	e8 00 00 00 00	 call	 _Py_IncRef
$LN278@PyExc_Init:

; 2459 :     PRE_INIT(Exception)

  00043	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_Exception+256
  00049	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  0004e	85 c0		 test	 eax, eax
  00050	75 28		 jne	 SHORT $LN276@PyExc_Init
  00052	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_Exception
  00059	e8 00 00 00 00	 call	 PyType_Ready
  0005e	85 c0		 test	 eax, eax
  00060	7d 0c		 jge	 SHORT $LN275@PyExc_Init
  00062	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00069	e8 00 00 00 00	 call	 Py_FatalError
$LN275@PyExc_Init:
  0006e	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_Exception
  00075	e8 00 00 00 00	 call	 _Py_IncRef
$LN276@PyExc_Init:

; 2460 :     PRE_INIT(TypeError)

  0007a	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_TypeError+256
  00080	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00085	85 c0		 test	 eax, eax
  00087	75 28		 jne	 SHORT $LN274@PyExc_Init
  00089	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_TypeError
  00090	e8 00 00 00 00	 call	 PyType_Ready
  00095	85 c0		 test	 eax, eax
  00097	7d 0c		 jge	 SHORT $LN273@PyExc_Init
  00099	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  000a0	e8 00 00 00 00	 call	 Py_FatalError
$LN273@PyExc_Init:
  000a5	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TypeError
  000ac	e8 00 00 00 00	 call	 _Py_IncRef
$LN274@PyExc_Init:

; 2461 :     PRE_INIT(StopIteration)

  000b1	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_StopIteration+256
  000b7	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  000bc	85 c0		 test	 eax, eax
  000be	75 28		 jne	 SHORT $LN272@PyExc_Init
  000c0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_StopIteration
  000c7	e8 00 00 00 00	 call	 PyType_Ready
  000cc	85 c0		 test	 eax, eax
  000ce	7d 0c		 jge	 SHORT $LN271@PyExc_Init
  000d0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  000d7	e8 00 00 00 00	 call	 Py_FatalError
$LN271@PyExc_Init:
  000dc	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_StopIteration
  000e3	e8 00 00 00 00	 call	 _Py_IncRef
$LN272@PyExc_Init:

; 2462 :     PRE_INIT(GeneratorExit)

  000e8	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_GeneratorExit+256
  000ee	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  000f3	85 c0		 test	 eax, eax
  000f5	75 28		 jne	 SHORT $LN270@PyExc_Init
  000f7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_GeneratorExit
  000fe	e8 00 00 00 00	 call	 PyType_Ready
  00103	85 c0		 test	 eax, eax
  00105	7d 0c		 jge	 SHORT $LN269@PyExc_Init
  00107	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  0010e	e8 00 00 00 00	 call	 Py_FatalError
$LN269@PyExc_Init:
  00113	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_GeneratorExit
  0011a	e8 00 00 00 00	 call	 _Py_IncRef
$LN270@PyExc_Init:

; 2463 :     PRE_INIT(SystemExit)

  0011f	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_SystemExit+256
  00125	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  0012a	85 c0		 test	 eax, eax
  0012c	75 28		 jne	 SHORT $LN268@PyExc_Init
  0012e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_SystemExit
  00135	e8 00 00 00 00	 call	 PyType_Ready
  0013a	85 c0		 test	 eax, eax
  0013c	7d 0c		 jge	 SHORT $LN267@PyExc_Init
  0013e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00145	e8 00 00 00 00	 call	 Py_FatalError
$LN267@PyExc_Init:
  0014a	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_SystemExit
  00151	e8 00 00 00 00	 call	 _Py_IncRef
$LN268@PyExc_Init:

; 2464 :     PRE_INIT(KeyboardInterrupt)

  00156	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_KeyboardInterrupt+256
  0015c	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00161	85 c0		 test	 eax, eax
  00163	75 28		 jne	 SHORT $LN266@PyExc_Init
  00165	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_KeyboardInterrupt
  0016c	e8 00 00 00 00	 call	 PyType_Ready
  00171	85 c0		 test	 eax, eax
  00173	7d 0c		 jge	 SHORT $LN265@PyExc_Init
  00175	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  0017c	e8 00 00 00 00	 call	 Py_FatalError
$LN265@PyExc_Init:
  00181	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_KeyboardInterrupt
  00188	e8 00 00 00 00	 call	 _Py_IncRef
$LN266@PyExc_Init:

; 2465 :     PRE_INIT(ImportError)

  0018d	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_ImportError+256
  00193	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00198	85 c0		 test	 eax, eax
  0019a	75 28		 jne	 SHORT $LN264@PyExc_Init
  0019c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ImportError
  001a3	e8 00 00 00 00	 call	 PyType_Ready
  001a8	85 c0		 test	 eax, eax
  001aa	7d 0c		 jge	 SHORT $LN263@PyExc_Init
  001ac	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  001b3	e8 00 00 00 00	 call	 Py_FatalError
$LN263@PyExc_Init:
  001b8	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ImportError
  001bf	e8 00 00 00 00	 call	 _Py_IncRef
$LN264@PyExc_Init:

; 2466 :     PRE_INIT(OSError)

  001c4	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_OSError+256
  001ca	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  001cf	85 c0		 test	 eax, eax
  001d1	75 28		 jne	 SHORT $LN262@PyExc_Init
  001d3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_OSError
  001da	e8 00 00 00 00	 call	 PyType_Ready
  001df	85 c0		 test	 eax, eax
  001e1	7d 0c		 jge	 SHORT $LN261@PyExc_Init
  001e3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  001ea	e8 00 00 00 00	 call	 Py_FatalError
$LN261@PyExc_Init:
  001ef	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_OSError
  001f6	e8 00 00 00 00	 call	 _Py_IncRef
$LN262@PyExc_Init:

; 2467 :     PRE_INIT(EOFError)

  001fb	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_EOFError+256
  00201	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00206	85 c0		 test	 eax, eax
  00208	75 28		 jne	 SHORT $LN260@PyExc_Init
  0020a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_EOFError
  00211	e8 00 00 00 00	 call	 PyType_Ready
  00216	85 c0		 test	 eax, eax
  00218	7d 0c		 jge	 SHORT $LN259@PyExc_Init
  0021a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00221	e8 00 00 00 00	 call	 Py_FatalError
$LN259@PyExc_Init:
  00226	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_EOFError
  0022d	e8 00 00 00 00	 call	 _Py_IncRef
$LN260@PyExc_Init:

; 2468 :     PRE_INIT(RuntimeError)

  00232	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_RuntimeError+256
  00238	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  0023d	85 c0		 test	 eax, eax
  0023f	75 28		 jne	 SHORT $LN258@PyExc_Init
  00241	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_RuntimeError
  00248	e8 00 00 00 00	 call	 PyType_Ready
  0024d	85 c0		 test	 eax, eax
  0024f	7d 0c		 jge	 SHORT $LN257@PyExc_Init
  00251	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00258	e8 00 00 00 00	 call	 Py_FatalError
$LN257@PyExc_Init:
  0025d	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_RuntimeError
  00264	e8 00 00 00 00	 call	 _Py_IncRef
$LN258@PyExc_Init:

; 2469 :     PRE_INIT(NotImplementedError)

  00269	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_NotImplementedError+256
  0026f	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00274	85 c0		 test	 eax, eax
  00276	75 28		 jne	 SHORT $LN256@PyExc_Init
  00278	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_NotImplementedError
  0027f	e8 00 00 00 00	 call	 PyType_Ready
  00284	85 c0		 test	 eax, eax
  00286	7d 0c		 jge	 SHORT $LN255@PyExc_Init
  00288	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  0028f	e8 00 00 00 00	 call	 Py_FatalError
$LN255@PyExc_Init:
  00294	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_NotImplementedError
  0029b	e8 00 00 00 00	 call	 _Py_IncRef
$LN256@PyExc_Init:

; 2470 :     PRE_INIT(NameError)

  002a0	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_NameError+256
  002a6	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  002ab	85 c0		 test	 eax, eax
  002ad	75 28		 jne	 SHORT $LN254@PyExc_Init
  002af	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_NameError
  002b6	e8 00 00 00 00	 call	 PyType_Ready
  002bb	85 c0		 test	 eax, eax
  002bd	7d 0c		 jge	 SHORT $LN253@PyExc_Init
  002bf	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  002c6	e8 00 00 00 00	 call	 Py_FatalError
$LN253@PyExc_Init:
  002cb	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_NameError
  002d2	e8 00 00 00 00	 call	 _Py_IncRef
$LN254@PyExc_Init:

; 2471 :     PRE_INIT(UnboundLocalError)

  002d7	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_UnboundLocalError+256
  002dd	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  002e2	85 c0		 test	 eax, eax
  002e4	75 28		 jne	 SHORT $LN252@PyExc_Init
  002e6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_UnboundLocalError
  002ed	e8 00 00 00 00	 call	 PyType_Ready
  002f2	85 c0		 test	 eax, eax
  002f4	7d 0c		 jge	 SHORT $LN251@PyExc_Init
  002f6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  002fd	e8 00 00 00 00	 call	 Py_FatalError
$LN251@PyExc_Init:
  00302	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_UnboundLocalError
  00309	e8 00 00 00 00	 call	 _Py_IncRef
$LN252@PyExc_Init:

; 2472 :     PRE_INIT(AttributeError)

  0030e	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_AttributeError+256
  00314	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00319	85 c0		 test	 eax, eax
  0031b	75 28		 jne	 SHORT $LN250@PyExc_Init
  0031d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_AttributeError
  00324	e8 00 00 00 00	 call	 PyType_Ready
  00329	85 c0		 test	 eax, eax
  0032b	7d 0c		 jge	 SHORT $LN249@PyExc_Init
  0032d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00334	e8 00 00 00 00	 call	 Py_FatalError
$LN249@PyExc_Init:
  00339	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_AttributeError
  00340	e8 00 00 00 00	 call	 _Py_IncRef
$LN250@PyExc_Init:

; 2473 :     PRE_INIT(SyntaxError)

  00345	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_SyntaxError+256
  0034b	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00350	85 c0		 test	 eax, eax
  00352	75 28		 jne	 SHORT $LN248@PyExc_Init
  00354	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_SyntaxError
  0035b	e8 00 00 00 00	 call	 PyType_Ready
  00360	85 c0		 test	 eax, eax
  00362	7d 0c		 jge	 SHORT $LN247@PyExc_Init
  00364	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  0036b	e8 00 00 00 00	 call	 Py_FatalError
$LN247@PyExc_Init:
  00370	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_SyntaxError
  00377	e8 00 00 00 00	 call	 _Py_IncRef
$LN248@PyExc_Init:

; 2474 :     PRE_INIT(IndentationError)

  0037c	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_IndentationError+256
  00382	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00387	85 c0		 test	 eax, eax
  00389	75 28		 jne	 SHORT $LN246@PyExc_Init
  0038b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_IndentationError
  00392	e8 00 00 00 00	 call	 PyType_Ready
  00397	85 c0		 test	 eax, eax
  00399	7d 0c		 jge	 SHORT $LN245@PyExc_Init
  0039b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  003a2	e8 00 00 00 00	 call	 Py_FatalError
$LN245@PyExc_Init:
  003a7	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_IndentationError
  003ae	e8 00 00 00 00	 call	 _Py_IncRef
$LN246@PyExc_Init:

; 2475 :     PRE_INIT(TabError)

  003b3	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_TabError+256
  003b9	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  003be	85 c0		 test	 eax, eax
  003c0	75 28		 jne	 SHORT $LN244@PyExc_Init
  003c2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_TabError
  003c9	e8 00 00 00 00	 call	 PyType_Ready
  003ce	85 c0		 test	 eax, eax
  003d0	7d 0c		 jge	 SHORT $LN243@PyExc_Init
  003d2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  003d9	e8 00 00 00 00	 call	 Py_FatalError
$LN243@PyExc_Init:
  003de	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TabError
  003e5	e8 00 00 00 00	 call	 _Py_IncRef
$LN244@PyExc_Init:

; 2476 :     PRE_INIT(LookupError)

  003ea	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_LookupError+256
  003f0	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  003f5	85 c0		 test	 eax, eax
  003f7	75 28		 jne	 SHORT $LN242@PyExc_Init
  003f9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_LookupError
  00400	e8 00 00 00 00	 call	 PyType_Ready
  00405	85 c0		 test	 eax, eax
  00407	7d 0c		 jge	 SHORT $LN241@PyExc_Init
  00409	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00410	e8 00 00 00 00	 call	 Py_FatalError
$LN241@PyExc_Init:
  00415	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_LookupError
  0041c	e8 00 00 00 00	 call	 _Py_IncRef
$LN242@PyExc_Init:

; 2477 :     PRE_INIT(IndexError)

  00421	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_IndexError+256
  00427	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  0042c	85 c0		 test	 eax, eax
  0042e	75 28		 jne	 SHORT $LN240@PyExc_Init
  00430	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_IndexError
  00437	e8 00 00 00 00	 call	 PyType_Ready
  0043c	85 c0		 test	 eax, eax
  0043e	7d 0c		 jge	 SHORT $LN239@PyExc_Init
  00440	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00447	e8 00 00 00 00	 call	 Py_FatalError
$LN239@PyExc_Init:
  0044c	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_IndexError
  00453	e8 00 00 00 00	 call	 _Py_IncRef
$LN240@PyExc_Init:

; 2478 :     PRE_INIT(KeyError)

  00458	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_KeyError+256
  0045e	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00463	85 c0		 test	 eax, eax
  00465	75 28		 jne	 SHORT $LN238@PyExc_Init
  00467	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_KeyError
  0046e	e8 00 00 00 00	 call	 PyType_Ready
  00473	85 c0		 test	 eax, eax
  00475	7d 0c		 jge	 SHORT $LN237@PyExc_Init
  00477	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  0047e	e8 00 00 00 00	 call	 Py_FatalError
$LN237@PyExc_Init:
  00483	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_KeyError
  0048a	e8 00 00 00 00	 call	 _Py_IncRef
$LN238@PyExc_Init:

; 2479 :     PRE_INIT(ValueError)

  0048f	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_ValueError+256
  00495	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  0049a	85 c0		 test	 eax, eax
  0049c	75 28		 jne	 SHORT $LN236@PyExc_Init
  0049e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ValueError
  004a5	e8 00 00 00 00	 call	 PyType_Ready
  004aa	85 c0		 test	 eax, eax
  004ac	7d 0c		 jge	 SHORT $LN235@PyExc_Init
  004ae	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  004b5	e8 00 00 00 00	 call	 Py_FatalError
$LN235@PyExc_Init:
  004ba	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ValueError
  004c1	e8 00 00 00 00	 call	 _Py_IncRef
$LN236@PyExc_Init:

; 2480 :     PRE_INIT(UnicodeError)

  004c6	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_UnicodeError+256
  004cc	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  004d1	85 c0		 test	 eax, eax
  004d3	75 28		 jne	 SHORT $LN234@PyExc_Init
  004d5	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_UnicodeError
  004dc	e8 00 00 00 00	 call	 PyType_Ready
  004e1	85 c0		 test	 eax, eax
  004e3	7d 0c		 jge	 SHORT $LN233@PyExc_Init
  004e5	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  004ec	e8 00 00 00 00	 call	 Py_FatalError
$LN233@PyExc_Init:
  004f1	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_UnicodeError
  004f8	e8 00 00 00 00	 call	 _Py_IncRef
$LN234@PyExc_Init:

; 2481 :     PRE_INIT(UnicodeEncodeError)

  004fd	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_UnicodeEncodeError+256
  00503	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00508	85 c0		 test	 eax, eax
  0050a	75 28		 jne	 SHORT $LN232@PyExc_Init
  0050c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_UnicodeEncodeError
  00513	e8 00 00 00 00	 call	 PyType_Ready
  00518	85 c0		 test	 eax, eax
  0051a	7d 0c		 jge	 SHORT $LN231@PyExc_Init
  0051c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00523	e8 00 00 00 00	 call	 Py_FatalError
$LN231@PyExc_Init:
  00528	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_UnicodeEncodeError
  0052f	e8 00 00 00 00	 call	 _Py_IncRef
$LN232@PyExc_Init:

; 2482 :     PRE_INIT(UnicodeDecodeError)

  00534	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_UnicodeDecodeError+256
  0053a	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  0053f	85 c0		 test	 eax, eax
  00541	75 28		 jne	 SHORT $LN230@PyExc_Init
  00543	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_UnicodeDecodeError
  0054a	e8 00 00 00 00	 call	 PyType_Ready
  0054f	85 c0		 test	 eax, eax
  00551	7d 0c		 jge	 SHORT $LN229@PyExc_Init
  00553	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  0055a	e8 00 00 00 00	 call	 Py_FatalError
$LN229@PyExc_Init:
  0055f	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_UnicodeDecodeError
  00566	e8 00 00 00 00	 call	 _Py_IncRef
$LN230@PyExc_Init:

; 2483 :     PRE_INIT(UnicodeTranslateError)

  0056b	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_UnicodeTranslateError+256
  00571	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00576	85 c0		 test	 eax, eax
  00578	75 28		 jne	 SHORT $LN228@PyExc_Init
  0057a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_UnicodeTranslateError
  00581	e8 00 00 00 00	 call	 PyType_Ready
  00586	85 c0		 test	 eax, eax
  00588	7d 0c		 jge	 SHORT $LN227@PyExc_Init
  0058a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00591	e8 00 00 00 00	 call	 Py_FatalError
$LN227@PyExc_Init:
  00596	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_UnicodeTranslateError
  0059d	e8 00 00 00 00	 call	 _Py_IncRef
$LN228@PyExc_Init:

; 2484 :     PRE_INIT(AssertionError)

  005a2	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_AssertionError+256
  005a8	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  005ad	85 c0		 test	 eax, eax
  005af	75 28		 jne	 SHORT $LN226@PyExc_Init
  005b1	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_AssertionError
  005b8	e8 00 00 00 00	 call	 PyType_Ready
  005bd	85 c0		 test	 eax, eax
  005bf	7d 0c		 jge	 SHORT $LN225@PyExc_Init
  005c1	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  005c8	e8 00 00 00 00	 call	 Py_FatalError
$LN225@PyExc_Init:
  005cd	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_AssertionError
  005d4	e8 00 00 00 00	 call	 _Py_IncRef
$LN226@PyExc_Init:

; 2485 :     PRE_INIT(ArithmeticError)

  005d9	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_ArithmeticError+256
  005df	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  005e4	85 c0		 test	 eax, eax
  005e6	75 28		 jne	 SHORT $LN224@PyExc_Init
  005e8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ArithmeticError
  005ef	e8 00 00 00 00	 call	 PyType_Ready
  005f4	85 c0		 test	 eax, eax
  005f6	7d 0c		 jge	 SHORT $LN223@PyExc_Init
  005f8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  005ff	e8 00 00 00 00	 call	 Py_FatalError
$LN223@PyExc_Init:
  00604	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ArithmeticError
  0060b	e8 00 00 00 00	 call	 _Py_IncRef
$LN224@PyExc_Init:

; 2486 :     PRE_INIT(FloatingPointError)

  00610	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_FloatingPointError+256
  00616	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  0061b	85 c0		 test	 eax, eax
  0061d	75 28		 jne	 SHORT $LN222@PyExc_Init
  0061f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_FloatingPointError
  00626	e8 00 00 00 00	 call	 PyType_Ready
  0062b	85 c0		 test	 eax, eax
  0062d	7d 0c		 jge	 SHORT $LN221@PyExc_Init
  0062f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00636	e8 00 00 00 00	 call	 Py_FatalError
$LN221@PyExc_Init:
  0063b	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_FloatingPointError
  00642	e8 00 00 00 00	 call	 _Py_IncRef
$LN222@PyExc_Init:

; 2487 :     PRE_INIT(OverflowError)

  00647	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_OverflowError+256
  0064d	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00652	85 c0		 test	 eax, eax
  00654	75 28		 jne	 SHORT $LN220@PyExc_Init
  00656	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_OverflowError
  0065d	e8 00 00 00 00	 call	 PyType_Ready
  00662	85 c0		 test	 eax, eax
  00664	7d 0c		 jge	 SHORT $LN219@PyExc_Init
  00666	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  0066d	e8 00 00 00 00	 call	 Py_FatalError
$LN219@PyExc_Init:
  00672	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_OverflowError
  00679	e8 00 00 00 00	 call	 _Py_IncRef
$LN220@PyExc_Init:

; 2488 :     PRE_INIT(ZeroDivisionError)

  0067e	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_ZeroDivisionError+256
  00684	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00689	85 c0		 test	 eax, eax
  0068b	75 28		 jne	 SHORT $LN218@PyExc_Init
  0068d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ZeroDivisionError
  00694	e8 00 00 00 00	 call	 PyType_Ready
  00699	85 c0		 test	 eax, eax
  0069b	7d 0c		 jge	 SHORT $LN217@PyExc_Init
  0069d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  006a4	e8 00 00 00 00	 call	 Py_FatalError
$LN217@PyExc_Init:
  006a9	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ZeroDivisionError
  006b0	e8 00 00 00 00	 call	 _Py_IncRef
$LN218@PyExc_Init:

; 2489 :     PRE_INIT(SystemError)

  006b5	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_SystemError+256
  006bb	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  006c0	85 c0		 test	 eax, eax
  006c2	75 28		 jne	 SHORT $LN216@PyExc_Init
  006c4	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_SystemError
  006cb	e8 00 00 00 00	 call	 PyType_Ready
  006d0	85 c0		 test	 eax, eax
  006d2	7d 0c		 jge	 SHORT $LN215@PyExc_Init
  006d4	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  006db	e8 00 00 00 00	 call	 Py_FatalError
$LN215@PyExc_Init:
  006e0	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_SystemError
  006e7	e8 00 00 00 00	 call	 _Py_IncRef
$LN216@PyExc_Init:

; 2490 :     PRE_INIT(ReferenceError)

  006ec	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_ReferenceError+256
  006f2	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  006f7	85 c0		 test	 eax, eax
  006f9	75 28		 jne	 SHORT $LN214@PyExc_Init
  006fb	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ReferenceError
  00702	e8 00 00 00 00	 call	 PyType_Ready
  00707	85 c0		 test	 eax, eax
  00709	7d 0c		 jge	 SHORT $LN213@PyExc_Init
  0070b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00712	e8 00 00 00 00	 call	 Py_FatalError
$LN213@PyExc_Init:
  00717	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ReferenceError
  0071e	e8 00 00 00 00	 call	 _Py_IncRef
$LN214@PyExc_Init:

; 2491 :     PRE_INIT(BufferError)

  00723	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_BufferError+256
  00729	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  0072e	85 c0		 test	 eax, eax
  00730	75 28		 jne	 SHORT $LN212@PyExc_Init
  00732	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_BufferError
  00739	e8 00 00 00 00	 call	 PyType_Ready
  0073e	85 c0		 test	 eax, eax
  00740	7d 0c		 jge	 SHORT $LN211@PyExc_Init
  00742	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00749	e8 00 00 00 00	 call	 Py_FatalError
$LN211@PyExc_Init:
  0074e	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_BufferError
  00755	e8 00 00 00 00	 call	 _Py_IncRef
$LN212@PyExc_Init:

; 2492 :     PRE_INIT(MemoryError)

  0075a	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_MemoryError+256
  00760	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00765	85 c0		 test	 eax, eax
  00767	75 28		 jne	 SHORT $LN210@PyExc_Init
  00769	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_MemoryError
  00770	e8 00 00 00 00	 call	 PyType_Ready
  00775	85 c0		 test	 eax, eax
  00777	7d 0c		 jge	 SHORT $LN209@PyExc_Init
  00779	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00780	e8 00 00 00 00	 call	 Py_FatalError
$LN209@PyExc_Init:
  00785	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_MemoryError
  0078c	e8 00 00 00 00	 call	 _Py_IncRef
$LN210@PyExc_Init:

; 2493 :     PRE_INIT(BufferError)

  00791	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_BufferError+256
  00797	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  0079c	85 c0		 test	 eax, eax
  0079e	75 28		 jne	 SHORT $LN208@PyExc_Init
  007a0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_BufferError
  007a7	e8 00 00 00 00	 call	 PyType_Ready
  007ac	85 c0		 test	 eax, eax
  007ae	7d 0c		 jge	 SHORT $LN207@PyExc_Init
  007b0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  007b7	e8 00 00 00 00	 call	 Py_FatalError
$LN207@PyExc_Init:
  007bc	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_BufferError
  007c3	e8 00 00 00 00	 call	 _Py_IncRef
$LN208@PyExc_Init:

; 2494 : #ifdef WITH_PARALLEL
; 2495 :     PRE_INIT(ParallelError)

  007c8	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_ParallelError+256
  007ce	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  007d3	85 c0		 test	 eax, eax
  007d5	75 28		 jne	 SHORT $LN206@PyExc_Init
  007d7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ParallelError
  007de	e8 00 00 00 00	 call	 PyType_Ready
  007e3	85 c0		 test	 eax, eax
  007e5	7d 0c		 jge	 SHORT $LN205@PyExc_Init
  007e7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  007ee	e8 00 00 00 00	 call	 Py_FatalError
$LN205@PyExc_Init:
  007f3	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ParallelError
  007fa	e8 00 00 00 00	 call	 _Py_IncRef
$LN206@PyExc_Init:

; 2496 :     PRE_INIT(ParallelThreadInitializationError)

  007ff	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_ParallelThreadInitializationError+256
  00805	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  0080a	85 c0		 test	 eax, eax
  0080c	75 28		 jne	 SHORT $LN204@PyExc_Init
  0080e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ParallelThreadInitializationError
  00815	e8 00 00 00 00	 call	 PyType_Ready
  0081a	85 c0		 test	 eax, eax
  0081c	7d 0c		 jge	 SHORT $LN203@PyExc_Init
  0081e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00825	e8 00 00 00 00	 call	 Py_FatalError
$LN203@PyExc_Init:
  0082a	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ParallelThreadInitializationError
  00831	e8 00 00 00 00	 call	 _Py_IncRef
$LN204@PyExc_Init:

; 2497 :     PRE_INIT(ParallelContextInitializationError)

  00836	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_ParallelContextInitializationError+256
  0083c	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00841	85 c0		 test	 eax, eax
  00843	75 28		 jne	 SHORT $LN202@PyExc_Init
  00845	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ParallelContextInitializationError
  0084c	e8 00 00 00 00	 call	 PyType_Ready
  00851	85 c0		 test	 eax, eax
  00853	7d 0c		 jge	 SHORT $LN201@PyExc_Init
  00855	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  0085c	e8 00 00 00 00	 call	 Py_FatalError
$LN201@PyExc_Init:
  00861	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ParallelContextInitializationError
  00868	e8 00 00 00 00	 call	 _Py_IncRef
$LN202@PyExc_Init:

; 2498 :     PRE_INIT(ParallelContextError)

  0086d	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_ParallelContextError+256
  00873	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00878	85 c0		 test	 eax, eax
  0087a	75 28		 jne	 SHORT $LN200@PyExc_Init
  0087c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ParallelContextError
  00883	e8 00 00 00 00	 call	 PyType_Ready
  00888	85 c0		 test	 eax, eax
  0088a	7d 0c		 jge	 SHORT $LN199@PyExc_Init
  0088c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00893	e8 00 00 00 00	 call	 Py_FatalError
$LN199@PyExc_Init:
  00898	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ParallelContextError
  0089f	e8 00 00 00 00	 call	 _Py_IncRef
$LN200@PyExc_Init:

; 2499 :     PRE_INIT(ParallelImportError)

  008a4	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_ParallelImportError+256
  008aa	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  008af	85 c0		 test	 eax, eax
  008b1	75 28		 jne	 SHORT $LN198@PyExc_Init
  008b3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ParallelImportError
  008ba	e8 00 00 00 00	 call	 PyType_Ready
  008bf	85 c0		 test	 eax, eax
  008c1	7d 0c		 jge	 SHORT $LN197@PyExc_Init
  008c3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  008ca	e8 00 00 00 00	 call	 Py_FatalError
$LN197@PyExc_Init:
  008cf	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ParallelImportError
  008d6	e8 00 00 00 00	 call	 _Py_IncRef
$LN198@PyExc_Init:

; 2500 :     PRE_INIT(ParallelGlobalVariableAccessError)

  008db	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_ParallelGlobalVariableAccessError+256
  008e1	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  008e6	85 c0		 test	 eax, eax
  008e8	75 28		 jne	 SHORT $LN196@PyExc_Init
  008ea	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ParallelGlobalVariableAccessError
  008f1	e8 00 00 00 00	 call	 PyType_Ready
  008f6	85 c0		 test	 eax, eax
  008f8	7d 0c		 jge	 SHORT $LN195@PyExc_Init
  008fa	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00901	e8 00 00 00 00	 call	 Py_FatalError
$LN195@PyExc_Init:
  00906	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ParallelGlobalVariableAccessError
  0090d	e8 00 00 00 00	 call	 _Py_IncRef
$LN196@PyExc_Init:

; 2501 :     PRE_INIT(ParallelNonlocalVariableAccessError)

  00912	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_ParallelNonlocalVariableAccessError+256
  00918	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  0091d	85 c0		 test	 eax, eax
  0091f	75 28		 jne	 SHORT $LN194@PyExc_Init
  00921	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ParallelNonlocalVariableAccessError
  00928	e8 00 00 00 00	 call	 PyType_Ready
  0092d	85 c0		 test	 eax, eax
  0092f	7d 0c		 jge	 SHORT $LN193@PyExc_Init
  00931	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00938	e8 00 00 00 00	 call	 Py_FatalError
$LN193@PyExc_Init:
  0093d	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ParallelNonlocalVariableAccessError
  00944	e8 00 00 00 00	 call	 _Py_IncRef
$LN194@PyExc_Init:

; 2502 :     PRE_INIT(AsyncError)

  00949	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_AsyncError+256
  0094f	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00954	85 c0		 test	 eax, eax
  00956	75 28		 jne	 SHORT $LN192@PyExc_Init
  00958	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_AsyncError
  0095f	e8 00 00 00 00	 call	 PyType_Ready
  00964	85 c0		 test	 eax, eax
  00966	7d 0c		 jge	 SHORT $LN191@PyExc_Init
  00968	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  0096f	e8 00 00 00 00	 call	 Py_FatalError
$LN191@PyExc_Init:
  00974	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_AsyncError
  0097b	e8 00 00 00 00	 call	 _Py_IncRef
$LN192@PyExc_Init:

; 2503 :     PRE_INIT(AsyncRunCalledWithoutEventsError)

  00980	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_AsyncRunCalledWithoutEventsError+256
  00986	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  0098b	85 c0		 test	 eax, eax
  0098d	75 28		 jne	 SHORT $LN190@PyExc_Init
  0098f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_AsyncRunCalledWithoutEventsError
  00996	e8 00 00 00 00	 call	 PyType_Ready
  0099b	85 c0		 test	 eax, eax
  0099d	7d 0c		 jge	 SHORT $LN189@PyExc_Init
  0099f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  009a6	e8 00 00 00 00	 call	 Py_FatalError
$LN189@PyExc_Init:
  009ab	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_AsyncRunCalledWithoutEventsError
  009b2	e8 00 00 00 00	 call	 _Py_IncRef
$LN190@PyExc_Init:

; 2504 :     PRE_INIT(AsyncRunNoActiveEventsError)

  009b7	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_AsyncRunNoActiveEventsError+256
  009bd	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  009c2	85 c0		 test	 eax, eax
  009c4	75 28		 jne	 SHORT $LN188@PyExc_Init
  009c6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_AsyncRunNoActiveEventsError
  009cd	e8 00 00 00 00	 call	 PyType_Ready
  009d2	85 c0		 test	 eax, eax
  009d4	7d 0c		 jge	 SHORT $LN187@PyExc_Init
  009d6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  009dd	e8 00 00 00 00	 call	 Py_FatalError
$LN187@PyExc_Init:
  009e2	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_AsyncRunNoActiveEventsError
  009e9	e8 00 00 00 00	 call	 _Py_IncRef
$LN188@PyExc_Init:

; 2505 : #endif
; 2506 :     PRE_INIT(Warning)

  009ee	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_Warning+256
  009f4	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  009f9	85 c0		 test	 eax, eax
  009fb	75 28		 jne	 SHORT $LN186@PyExc_Init
  009fd	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_Warning
  00a04	e8 00 00 00 00	 call	 PyType_Ready
  00a09	85 c0		 test	 eax, eax
  00a0b	7d 0c		 jge	 SHORT $LN185@PyExc_Init
  00a0d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00a14	e8 00 00 00 00	 call	 Py_FatalError
$LN185@PyExc_Init:
  00a19	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_Warning
  00a20	e8 00 00 00 00	 call	 _Py_IncRef
$LN186@PyExc_Init:

; 2507 :     PRE_INIT(UserWarning)

  00a25	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_UserWarning+256
  00a2b	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00a30	85 c0		 test	 eax, eax
  00a32	75 28		 jne	 SHORT $LN184@PyExc_Init
  00a34	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_UserWarning
  00a3b	e8 00 00 00 00	 call	 PyType_Ready
  00a40	85 c0		 test	 eax, eax
  00a42	7d 0c		 jge	 SHORT $LN183@PyExc_Init
  00a44	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00a4b	e8 00 00 00 00	 call	 Py_FatalError
$LN183@PyExc_Init:
  00a50	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_UserWarning
  00a57	e8 00 00 00 00	 call	 _Py_IncRef
$LN184@PyExc_Init:

; 2508 :     PRE_INIT(DeprecationWarning)

  00a5c	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_DeprecationWarning+256
  00a62	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00a67	85 c0		 test	 eax, eax
  00a69	75 28		 jne	 SHORT $LN182@PyExc_Init
  00a6b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_DeprecationWarning
  00a72	e8 00 00 00 00	 call	 PyType_Ready
  00a77	85 c0		 test	 eax, eax
  00a79	7d 0c		 jge	 SHORT $LN181@PyExc_Init
  00a7b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00a82	e8 00 00 00 00	 call	 Py_FatalError
$LN181@PyExc_Init:
  00a87	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_DeprecationWarning
  00a8e	e8 00 00 00 00	 call	 _Py_IncRef
$LN182@PyExc_Init:

; 2509 :     PRE_INIT(PendingDeprecationWarning)

  00a93	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_PendingDeprecationWarning+256
  00a99	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00a9e	85 c0		 test	 eax, eax
  00aa0	75 28		 jne	 SHORT $LN180@PyExc_Init
  00aa2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_PendingDeprecationWarning
  00aa9	e8 00 00 00 00	 call	 PyType_Ready
  00aae	85 c0		 test	 eax, eax
  00ab0	7d 0c		 jge	 SHORT $LN179@PyExc_Init
  00ab2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00ab9	e8 00 00 00 00	 call	 Py_FatalError
$LN179@PyExc_Init:
  00abe	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_PendingDeprecationWarning
  00ac5	e8 00 00 00 00	 call	 _Py_IncRef
$LN180@PyExc_Init:

; 2510 :     PRE_INIT(SyntaxWarning)

  00aca	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_SyntaxWarning+256
  00ad0	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00ad5	85 c0		 test	 eax, eax
  00ad7	75 28		 jne	 SHORT $LN178@PyExc_Init
  00ad9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_SyntaxWarning
  00ae0	e8 00 00 00 00	 call	 PyType_Ready
  00ae5	85 c0		 test	 eax, eax
  00ae7	7d 0c		 jge	 SHORT $LN177@PyExc_Init
  00ae9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00af0	e8 00 00 00 00	 call	 Py_FatalError
$LN177@PyExc_Init:
  00af5	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_SyntaxWarning
  00afc	e8 00 00 00 00	 call	 _Py_IncRef
$LN178@PyExc_Init:

; 2511 :     PRE_INIT(RuntimeWarning)

  00b01	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_RuntimeWarning+256
  00b07	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00b0c	85 c0		 test	 eax, eax
  00b0e	75 28		 jne	 SHORT $LN176@PyExc_Init
  00b10	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_RuntimeWarning
  00b17	e8 00 00 00 00	 call	 PyType_Ready
  00b1c	85 c0		 test	 eax, eax
  00b1e	7d 0c		 jge	 SHORT $LN175@PyExc_Init
  00b20	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00b27	e8 00 00 00 00	 call	 Py_FatalError
$LN175@PyExc_Init:
  00b2c	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_RuntimeWarning
  00b33	e8 00 00 00 00	 call	 _Py_IncRef
$LN176@PyExc_Init:

; 2512 :     PRE_INIT(FutureWarning)

  00b38	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_FutureWarning+256
  00b3e	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00b43	85 c0		 test	 eax, eax
  00b45	75 28		 jne	 SHORT $LN174@PyExc_Init
  00b47	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_FutureWarning
  00b4e	e8 00 00 00 00	 call	 PyType_Ready
  00b53	85 c0		 test	 eax, eax
  00b55	7d 0c		 jge	 SHORT $LN173@PyExc_Init
  00b57	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00b5e	e8 00 00 00 00	 call	 Py_FatalError
$LN173@PyExc_Init:
  00b63	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_FutureWarning
  00b6a	e8 00 00 00 00	 call	 _Py_IncRef
$LN174@PyExc_Init:

; 2513 :     PRE_INIT(ImportWarning)

  00b6f	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_ImportWarning+256
  00b75	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00b7a	85 c0		 test	 eax, eax
  00b7c	75 28		 jne	 SHORT $LN172@PyExc_Init
  00b7e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ImportWarning
  00b85	e8 00 00 00 00	 call	 PyType_Ready
  00b8a	85 c0		 test	 eax, eax
  00b8c	7d 0c		 jge	 SHORT $LN171@PyExc_Init
  00b8e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00b95	e8 00 00 00 00	 call	 Py_FatalError
$LN171@PyExc_Init:
  00b9a	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ImportWarning
  00ba1	e8 00 00 00 00	 call	 _Py_IncRef
$LN172@PyExc_Init:

; 2514 :     PRE_INIT(UnicodeWarning)

  00ba6	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_UnicodeWarning+256
  00bac	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00bb1	85 c0		 test	 eax, eax
  00bb3	75 28		 jne	 SHORT $LN170@PyExc_Init
  00bb5	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_UnicodeWarning
  00bbc	e8 00 00 00 00	 call	 PyType_Ready
  00bc1	85 c0		 test	 eax, eax
  00bc3	7d 0c		 jge	 SHORT $LN169@PyExc_Init
  00bc5	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00bcc	e8 00 00 00 00	 call	 Py_FatalError
$LN169@PyExc_Init:
  00bd1	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_UnicodeWarning
  00bd8	e8 00 00 00 00	 call	 _Py_IncRef
$LN170@PyExc_Init:

; 2515 :     PRE_INIT(BytesWarning)

  00bdd	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_BytesWarning+256
  00be3	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00be8	85 c0		 test	 eax, eax
  00bea	75 28		 jne	 SHORT $LN168@PyExc_Init
  00bec	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_BytesWarning
  00bf3	e8 00 00 00 00	 call	 PyType_Ready
  00bf8	85 c0		 test	 eax, eax
  00bfa	7d 0c		 jge	 SHORT $LN167@PyExc_Init
  00bfc	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00c03	e8 00 00 00 00	 call	 Py_FatalError
$LN167@PyExc_Init:
  00c08	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_BytesWarning
  00c0f	e8 00 00 00 00	 call	 _Py_IncRef
$LN168@PyExc_Init:

; 2516 :     PRE_INIT(ResourceWarning)

  00c14	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_ResourceWarning+256
  00c1a	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00c1f	85 c0		 test	 eax, eax
  00c21	75 28		 jne	 SHORT $LN166@PyExc_Init
  00c23	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ResourceWarning
  00c2a	e8 00 00 00 00	 call	 PyType_Ready
  00c2f	85 c0		 test	 eax, eax
  00c31	7d 0c		 jge	 SHORT $LN165@PyExc_Init
  00c33	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00c3a	e8 00 00 00 00	 call	 Py_FatalError
$LN165@PyExc_Init:
  00c3f	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ResourceWarning
  00c46	e8 00 00 00 00	 call	 _Py_IncRef
$LN166@PyExc_Init:

; 2517 : 
; 2518 :     /* OSError subclasses */
; 2519 :     PRE_INIT(ConnectionError);

  00c4b	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_ConnectionError+256
  00c51	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00c56	85 c0		 test	 eax, eax
  00c58	75 28		 jne	 SHORT $LN164@PyExc_Init
  00c5a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ConnectionError
  00c61	e8 00 00 00 00	 call	 PyType_Ready
  00c66	85 c0		 test	 eax, eax
  00c68	7d 0c		 jge	 SHORT $LN163@PyExc_Init
  00c6a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00c71	e8 00 00 00 00	 call	 Py_FatalError
$LN163@PyExc_Init:
  00c76	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ConnectionError
  00c7d	e8 00 00 00 00	 call	 _Py_IncRef
$LN164@PyExc_Init:

; 2520 : 
; 2521 :     PRE_INIT(BlockingIOError);

  00c82	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_BlockingIOError+256
  00c88	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00c8d	85 c0		 test	 eax, eax
  00c8f	75 28		 jne	 SHORT $LN162@PyExc_Init
  00c91	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_BlockingIOError
  00c98	e8 00 00 00 00	 call	 PyType_Ready
  00c9d	85 c0		 test	 eax, eax
  00c9f	7d 0c		 jge	 SHORT $LN161@PyExc_Init
  00ca1	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00ca8	e8 00 00 00 00	 call	 Py_FatalError
$LN161@PyExc_Init:
  00cad	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_BlockingIOError
  00cb4	e8 00 00 00 00	 call	 _Py_IncRef
$LN162@PyExc_Init:

; 2522 :     PRE_INIT(BrokenPipeError);

  00cb9	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_BrokenPipeError+256
  00cbf	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00cc4	85 c0		 test	 eax, eax
  00cc6	75 28		 jne	 SHORT $LN160@PyExc_Init
  00cc8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_BrokenPipeError
  00ccf	e8 00 00 00 00	 call	 PyType_Ready
  00cd4	85 c0		 test	 eax, eax
  00cd6	7d 0c		 jge	 SHORT $LN159@PyExc_Init
  00cd8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00cdf	e8 00 00 00 00	 call	 Py_FatalError
$LN159@PyExc_Init:
  00ce4	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_BrokenPipeError
  00ceb	e8 00 00 00 00	 call	 _Py_IncRef
$LN160@PyExc_Init:

; 2523 :     PRE_INIT(ChildProcessError);

  00cf0	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_ChildProcessError+256
  00cf6	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00cfb	85 c0		 test	 eax, eax
  00cfd	75 28		 jne	 SHORT $LN158@PyExc_Init
  00cff	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ChildProcessError
  00d06	e8 00 00 00 00	 call	 PyType_Ready
  00d0b	85 c0		 test	 eax, eax
  00d0d	7d 0c		 jge	 SHORT $LN157@PyExc_Init
  00d0f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00d16	e8 00 00 00 00	 call	 Py_FatalError
$LN157@PyExc_Init:
  00d1b	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ChildProcessError
  00d22	e8 00 00 00 00	 call	 _Py_IncRef
$LN158@PyExc_Init:

; 2524 :     PRE_INIT(ConnectionAbortedError);

  00d27	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_ConnectionAbortedError+256
  00d2d	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00d32	85 c0		 test	 eax, eax
  00d34	75 28		 jne	 SHORT $LN156@PyExc_Init
  00d36	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ConnectionAbortedError
  00d3d	e8 00 00 00 00	 call	 PyType_Ready
  00d42	85 c0		 test	 eax, eax
  00d44	7d 0c		 jge	 SHORT $LN155@PyExc_Init
  00d46	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00d4d	e8 00 00 00 00	 call	 Py_FatalError
$LN155@PyExc_Init:
  00d52	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ConnectionAbortedError
  00d59	e8 00 00 00 00	 call	 _Py_IncRef
$LN156@PyExc_Init:

; 2525 :     PRE_INIT(ConnectionRefusedError);

  00d5e	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_ConnectionRefusedError+256
  00d64	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00d69	85 c0		 test	 eax, eax
  00d6b	75 28		 jne	 SHORT $LN154@PyExc_Init
  00d6d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ConnectionRefusedError
  00d74	e8 00 00 00 00	 call	 PyType_Ready
  00d79	85 c0		 test	 eax, eax
  00d7b	7d 0c		 jge	 SHORT $LN153@PyExc_Init
  00d7d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00d84	e8 00 00 00 00	 call	 Py_FatalError
$LN153@PyExc_Init:
  00d89	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ConnectionRefusedError
  00d90	e8 00 00 00 00	 call	 _Py_IncRef
$LN154@PyExc_Init:

; 2526 :     PRE_INIT(ConnectionResetError);

  00d95	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_ConnectionResetError+256
  00d9b	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00da0	85 c0		 test	 eax, eax
  00da2	75 28		 jne	 SHORT $LN152@PyExc_Init
  00da4	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ConnectionResetError
  00dab	e8 00 00 00 00	 call	 PyType_Ready
  00db0	85 c0		 test	 eax, eax
  00db2	7d 0c		 jge	 SHORT $LN151@PyExc_Init
  00db4	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00dbb	e8 00 00 00 00	 call	 Py_FatalError
$LN151@PyExc_Init:
  00dc0	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ConnectionResetError
  00dc7	e8 00 00 00 00	 call	 _Py_IncRef
$LN152@PyExc_Init:

; 2527 :     PRE_INIT(FileExistsError);

  00dcc	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_FileExistsError+256
  00dd2	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00dd7	85 c0		 test	 eax, eax
  00dd9	75 28		 jne	 SHORT $LN150@PyExc_Init
  00ddb	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_FileExistsError
  00de2	e8 00 00 00 00	 call	 PyType_Ready
  00de7	85 c0		 test	 eax, eax
  00de9	7d 0c		 jge	 SHORT $LN149@PyExc_Init
  00deb	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00df2	e8 00 00 00 00	 call	 Py_FatalError
$LN149@PyExc_Init:
  00df7	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_FileExistsError
  00dfe	e8 00 00 00 00	 call	 _Py_IncRef
$LN150@PyExc_Init:

; 2528 :     PRE_INIT(FileNotFoundError);

  00e03	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_FileNotFoundError+256
  00e09	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00e0e	85 c0		 test	 eax, eax
  00e10	75 28		 jne	 SHORT $LN148@PyExc_Init
  00e12	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_FileNotFoundError
  00e19	e8 00 00 00 00	 call	 PyType_Ready
  00e1e	85 c0		 test	 eax, eax
  00e20	7d 0c		 jge	 SHORT $LN147@PyExc_Init
  00e22	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00e29	e8 00 00 00 00	 call	 Py_FatalError
$LN147@PyExc_Init:
  00e2e	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_FileNotFoundError
  00e35	e8 00 00 00 00	 call	 _Py_IncRef
$LN148@PyExc_Init:

; 2529 :     PRE_INIT(IsADirectoryError);

  00e3a	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_IsADirectoryError+256
  00e40	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00e45	85 c0		 test	 eax, eax
  00e47	75 28		 jne	 SHORT $LN146@PyExc_Init
  00e49	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_IsADirectoryError
  00e50	e8 00 00 00 00	 call	 PyType_Ready
  00e55	85 c0		 test	 eax, eax
  00e57	7d 0c		 jge	 SHORT $LN145@PyExc_Init
  00e59	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00e60	e8 00 00 00 00	 call	 Py_FatalError
$LN145@PyExc_Init:
  00e65	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_IsADirectoryError
  00e6c	e8 00 00 00 00	 call	 _Py_IncRef
$LN146@PyExc_Init:

; 2530 :     PRE_INIT(NotADirectoryError);

  00e71	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_NotADirectoryError+256
  00e77	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00e7c	85 c0		 test	 eax, eax
  00e7e	75 28		 jne	 SHORT $LN144@PyExc_Init
  00e80	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_NotADirectoryError
  00e87	e8 00 00 00 00	 call	 PyType_Ready
  00e8c	85 c0		 test	 eax, eax
  00e8e	7d 0c		 jge	 SHORT $LN143@PyExc_Init
  00e90	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00e97	e8 00 00 00 00	 call	 Py_FatalError
$LN143@PyExc_Init:
  00e9c	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_NotADirectoryError
  00ea3	e8 00 00 00 00	 call	 _Py_IncRef
$LN144@PyExc_Init:

; 2531 :     PRE_INIT(InterruptedError);

  00ea8	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_InterruptedError+256
  00eae	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00eb3	85 c0		 test	 eax, eax
  00eb5	75 28		 jne	 SHORT $LN142@PyExc_Init
  00eb7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_InterruptedError
  00ebe	e8 00 00 00 00	 call	 PyType_Ready
  00ec3	85 c0		 test	 eax, eax
  00ec5	7d 0c		 jge	 SHORT $LN141@PyExc_Init
  00ec7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00ece	e8 00 00 00 00	 call	 Py_FatalError
$LN141@PyExc_Init:
  00ed3	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_InterruptedError
  00eda	e8 00 00 00 00	 call	 _Py_IncRef
$LN142@PyExc_Init:

; 2532 :     PRE_INIT(PermissionError);

  00edf	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_PermissionError+256
  00ee5	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00eea	85 c0		 test	 eax, eax
  00eec	75 28		 jne	 SHORT $LN140@PyExc_Init
  00eee	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_PermissionError
  00ef5	e8 00 00 00 00	 call	 PyType_Ready
  00efa	85 c0		 test	 eax, eax
  00efc	7d 0c		 jge	 SHORT $LN139@PyExc_Init
  00efe	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00f05	e8 00 00 00 00	 call	 Py_FatalError
$LN139@PyExc_Init:
  00f0a	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_PermissionError
  00f11	e8 00 00 00 00	 call	 _Py_IncRef
$LN140@PyExc_Init:

; 2533 :     PRE_INIT(ProcessLookupError);

  00f16	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_ProcessLookupError+256
  00f1c	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00f21	85 c0		 test	 eax, eax
  00f23	75 28		 jne	 SHORT $LN138@PyExc_Init
  00f25	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_ProcessLookupError
  00f2c	e8 00 00 00 00	 call	 PyType_Ready
  00f31	85 c0		 test	 eax, eax
  00f33	7d 0c		 jge	 SHORT $LN137@PyExc_Init
  00f35	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00f3c	e8 00 00 00 00	 call	 Py_FatalError
$LN137@PyExc_Init:
  00f41	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ProcessLookupError
  00f48	e8 00 00 00 00	 call	 _Py_IncRef
$LN138@PyExc_Init:

; 2534 :     PRE_INIT(TimeoutError);

  00f4d	8b 05 00 01 00
	00		 mov	 eax, DWORD PTR _PyExc_TimeoutError+256
  00f53	25 00 10 00 00	 and	 eax, 4096		; 00001000H
  00f58	85 c0		 test	 eax, eax
  00f5a	75 28		 jne	 SHORT $LN136@PyExc_Init
  00f5c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_TimeoutError
  00f63	e8 00 00 00 00	 call	 PyType_Ready
  00f68	85 c0		 test	 eax, eax
  00f6a	7d 0c		 jge	 SHORT $LN135@PyExc_Init
  00f6c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00f73	e8 00 00 00 00	 call	 Py_FatalError
$LN135@PyExc_Init:
  00f78	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TimeoutError
  00f7f	e8 00 00 00 00	 call	 _Py_IncRef
$LN136@PyExc_Init:

; 2535 : 
; 2536 :     bdict = PyModule_GetDict(bltinmod);

  00f84	48 8b 8c 24 f0
	00 00 00	 mov	 rcx, QWORD PTR bltinmod$[rsp]
  00f8c	e8 00 00 00 00	 call	 PyModule_GetDict
  00f91	48 89 44 24 20	 mov	 QWORD PTR bdict$[rsp], rax

; 2537 :     if (bdict == NULL)

  00f96	48 83 7c 24 20
	00		 cmp	 QWORD PTR bdict$[rsp], 0
  00f9c	75 0c		 jne	 SHORT $LN134@PyExc_Init

; 2538 :         Py_FatalError("exceptions bootstrapping error.");

  00f9e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CA@IHFBLKAO@exceptions?5bootstrapping?5error?4?$AA@
  00fa5	e8 00 00 00 00	 call	 Py_FatalError
$LN134@PyExc_Init:

; 2539 : 
; 2540 :     POST_INIT(BaseException)

  00faa	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_BaseException
  00fb1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0O@GCAIIPIB@BaseException?$AA@
  00fb8	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  00fbd	e8 00 00 00 00	 call	 PyDict_SetItemString
  00fc2	85 c0		 test	 eax, eax
  00fc4	74 0c		 je	 SHORT $LN133@PyExc_Init
  00fc6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  00fcd	e8 00 00 00 00	 call	 Py_FatalError
$LN133@PyExc_Init:

; 2541 :     POST_INIT(Exception)

  00fd2	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_Exception
  00fd9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_09FBNMMHMJ@Exception?$AA@
  00fe0	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  00fe5	e8 00 00 00 00	 call	 PyDict_SetItemString
  00fea	85 c0		 test	 eax, eax
  00fec	74 0c		 je	 SHORT $LN132@PyExc_Init
  00fee	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  00ff5	e8 00 00 00 00	 call	 Py_FatalError
$LN132@PyExc_Init:

; 2542 :     POST_INIT(TypeError)

  00ffa	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_TypeError
  01001	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_09MGGHOBOJ@TypeError?$AA@
  01008	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  0100d	e8 00 00 00 00	 call	 PyDict_SetItemString
  01012	85 c0		 test	 eax, eax
  01014	74 0c		 je	 SHORT $LN131@PyExc_Init
  01016	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0101d	e8 00 00 00 00	 call	 Py_FatalError
$LN131@PyExc_Init:

; 2543 :     POST_INIT(StopIteration)

  01022	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_StopIteration
  01029	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0O@LGLKOGMF@StopIteration?$AA@
  01030	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  01035	e8 00 00 00 00	 call	 PyDict_SetItemString
  0103a	85 c0		 test	 eax, eax
  0103c	74 0c		 je	 SHORT $LN130@PyExc_Init
  0103e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01045	e8 00 00 00 00	 call	 Py_FatalError
$LN130@PyExc_Init:

; 2544 :     POST_INIT(GeneratorExit)

  0104a	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_GeneratorExit
  01051	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0O@GBGLOLNB@GeneratorExit?$AA@
  01058	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  0105d	e8 00 00 00 00	 call	 PyDict_SetItemString
  01062	85 c0		 test	 eax, eax
  01064	74 0c		 je	 SHORT $LN129@PyExc_Init
  01066	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0106d	e8 00 00 00 00	 call	 Py_FatalError
$LN129@PyExc_Init:

; 2545 :     POST_INIT(SystemExit)

  01072	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_SystemExit
  01079	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0L@MBGFFHMP@SystemExit?$AA@
  01080	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  01085	e8 00 00 00 00	 call	 PyDict_SetItemString
  0108a	85 c0		 test	 eax, eax
  0108c	74 0c		 je	 SHORT $LN128@PyExc_Init
  0108e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01095	e8 00 00 00 00	 call	 Py_FatalError
$LN128@PyExc_Init:

; 2546 :     POST_INIT(KeyboardInterrupt)

  0109a	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_KeyboardInterrupt
  010a1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BC@BACBBCED@KeyboardInterrupt?$AA@
  010a8	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  010ad	e8 00 00 00 00	 call	 PyDict_SetItemString
  010b2	85 c0		 test	 eax, eax
  010b4	74 0c		 je	 SHORT $LN127@PyExc_Init
  010b6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  010bd	e8 00 00 00 00	 call	 Py_FatalError
$LN127@PyExc_Init:

; 2547 :     POST_INIT(ImportError)

  010c2	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ImportError
  010c9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0M@HCFCBBPI@ImportError?$AA@
  010d0	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  010d5	e8 00 00 00 00	 call	 PyDict_SetItemString
  010da	85 c0		 test	 eax, eax
  010dc	74 0c		 je	 SHORT $LN126@PyExc_Init
  010de	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  010e5	e8 00 00 00 00	 call	 Py_FatalError
$LN126@PyExc_Init:

; 2548 :     POST_INIT(OSError)

  010ea	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_OSError
  010f1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_07DLGONEPD@OSError?$AA@
  010f8	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  010fd	e8 00 00 00 00	 call	 PyDict_SetItemString
  01102	85 c0		 test	 eax, eax
  01104	74 0c		 je	 SHORT $LN125@PyExc_Init
  01106	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0110d	e8 00 00 00 00	 call	 Py_FatalError
$LN125@PyExc_Init:

; 2549 :     INIT_ALIAS(EnvironmentError, OSError)

  01112	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_OSError
  01119	e8 00 00 00 00	 call	 _Py_IncRef
$LN124@PyExc_Init:
  0111e	48 83 3d 00 00
	00 00 00	 cmp	 QWORD PTR PyExc_EnvironmentError, 0
  01126	74 0c		 je	 SHORT $LN121@PyExc_Init
  01128	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_EnvironmentError
  0112f	e8 00 00 00 00	 call	 _Py_DecRef
$LN121@PyExc_Init:
  01134	33 c0		 xor	 eax, eax
  01136	85 c0		 test	 eax, eax
  01138	75 e4		 jne	 SHORT $LN124@PyExc_Init
  0113a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR PyExc_OSError
  01141	48 89 05 00 00
	00 00		 mov	 QWORD PTR PyExc_EnvironmentError, rax
  01148	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_EnvironmentError
  0114f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BB@KOECNPDN@EnvironmentError?$AA@
  01156	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  0115b	e8 00 00 00 00	 call	 PyDict_SetItemString
  01160	85 c0		 test	 eax, eax
  01162	74 0c		 je	 SHORT $LN120@PyExc_Init
  01164	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0116b	e8 00 00 00 00	 call	 Py_FatalError
$LN120@PyExc_Init:

; 2550 :     INIT_ALIAS(IOError, OSError)

  01170	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_OSError
  01177	e8 00 00 00 00	 call	 _Py_IncRef
$LN119@PyExc_Init:
  0117c	48 83 3d 00 00
	00 00 00	 cmp	 QWORD PTR PyExc_IOError, 0
  01184	74 0c		 je	 SHORT $LN116@PyExc_Init
  01186	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_IOError
  0118d	e8 00 00 00 00	 call	 _Py_DecRef
$LN116@PyExc_Init:
  01192	33 c0		 xor	 eax, eax
  01194	85 c0		 test	 eax, eax
  01196	75 e4		 jne	 SHORT $LN119@PyExc_Init
  01198	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR PyExc_OSError
  0119f	48 89 05 00 00
	00 00		 mov	 QWORD PTR PyExc_IOError, rax
  011a6	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_IOError
  011ad	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_07FNHPCLMO@IOError?$AA@
  011b4	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  011b9	e8 00 00 00 00	 call	 PyDict_SetItemString
  011be	85 c0		 test	 eax, eax
  011c0	74 0c		 je	 SHORT $LN115@PyExc_Init
  011c2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  011c9	e8 00 00 00 00	 call	 Py_FatalError
$LN115@PyExc_Init:

; 2551 : #ifdef MS_WINDOWS
; 2552 :     INIT_ALIAS(WindowsError, OSError)

  011ce	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_OSError
  011d5	e8 00 00 00 00	 call	 _Py_IncRef
$LN114@PyExc_Init:
  011da	48 83 3d 00 00
	00 00 00	 cmp	 QWORD PTR PyExc_WindowsError, 0
  011e2	74 0c		 je	 SHORT $LN111@PyExc_Init
  011e4	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_WindowsError
  011eb	e8 00 00 00 00	 call	 _Py_DecRef
$LN111@PyExc_Init:
  011f0	33 c0		 xor	 eax, eax
  011f2	85 c0		 test	 eax, eax
  011f4	75 e4		 jne	 SHORT $LN114@PyExc_Init
  011f6	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR PyExc_OSError
  011fd	48 89 05 00 00
	00 00		 mov	 QWORD PTR PyExc_WindowsError, rax
  01204	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_WindowsError
  0120b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0N@FANLAMLN@WindowsError?$AA@
  01212	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  01217	e8 00 00 00 00	 call	 PyDict_SetItemString
  0121c	85 c0		 test	 eax, eax
  0121e	74 0c		 je	 SHORT $LN110@PyExc_Init
  01220	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01227	e8 00 00 00 00	 call	 Py_FatalError
$LN110@PyExc_Init:

; 2553 : #endif
; 2554 : #ifdef __VMS
; 2555 :     INIT_ALIAS(VMSError, OSError)
; 2556 : #endif
; 2557 :     POST_INIT(EOFError)

  0122c	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_EOFError
  01233	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_08BJKGOKBF@EOFError?$AA@
  0123a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  0123f	e8 00 00 00 00	 call	 PyDict_SetItemString
  01244	85 c0		 test	 eax, eax
  01246	74 0c		 je	 SHORT $LN109@PyExc_Init
  01248	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0124f	e8 00 00 00 00	 call	 Py_FatalError
$LN109@PyExc_Init:

; 2558 :     POST_INIT(RuntimeError)

  01254	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_RuntimeError
  0125b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0N@PJCHGDKG@RuntimeError?$AA@
  01262	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  01267	e8 00 00 00 00	 call	 PyDict_SetItemString
  0126c	85 c0		 test	 eax, eax
  0126e	74 0c		 je	 SHORT $LN108@PyExc_Init
  01270	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01277	e8 00 00 00 00	 call	 Py_FatalError
$LN108@PyExc_Init:

; 2559 :     POST_INIT(NotImplementedError)

  0127c	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_NotImplementedError
  01283	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BE@NIHEKDAM@NotImplementedError?$AA@
  0128a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  0128f	e8 00 00 00 00	 call	 PyDict_SetItemString
  01294	85 c0		 test	 eax, eax
  01296	74 0c		 je	 SHORT $LN107@PyExc_Init
  01298	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0129f	e8 00 00 00 00	 call	 Py_FatalError
$LN107@PyExc_Init:

; 2560 :     POST_INIT(NameError)

  012a4	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_NameError
  012ab	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_09GENDEFL@NameError?$AA@
  012b2	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  012b7	e8 00 00 00 00	 call	 PyDict_SetItemString
  012bc	85 c0		 test	 eax, eax
  012be	74 0c		 je	 SHORT $LN106@PyExc_Init
  012c0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  012c7	e8 00 00 00 00	 call	 Py_FatalError
$LN106@PyExc_Init:

; 2561 :     POST_INIT(UnboundLocalError)

  012cc	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_UnboundLocalError
  012d3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BC@EJBPJIJA@UnboundLocalError?$AA@
  012da	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  012df	e8 00 00 00 00	 call	 PyDict_SetItemString
  012e4	85 c0		 test	 eax, eax
  012e6	74 0c		 je	 SHORT $LN105@PyExc_Init
  012e8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  012ef	e8 00 00 00 00	 call	 Py_FatalError
$LN105@PyExc_Init:

; 2562 :     POST_INIT(AttributeError)

  012f4	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_AttributeError
  012fb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0P@OMMLLIOG@AttributeError?$AA@
  01302	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  01307	e8 00 00 00 00	 call	 PyDict_SetItemString
  0130c	85 c0		 test	 eax, eax
  0130e	74 0c		 je	 SHORT $LN104@PyExc_Init
  01310	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01317	e8 00 00 00 00	 call	 Py_FatalError
$LN104@PyExc_Init:

; 2563 :     POST_INIT(SyntaxError)

  0131c	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_SyntaxError
  01323	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0M@KIDEJCGH@SyntaxError?$AA@
  0132a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  0132f	e8 00 00 00 00	 call	 PyDict_SetItemString
  01334	85 c0		 test	 eax, eax
  01336	74 0c		 je	 SHORT $LN103@PyExc_Init
  01338	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0133f	e8 00 00 00 00	 call	 Py_FatalError
$LN103@PyExc_Init:

; 2564 :     POST_INIT(IndentationError)

  01344	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_IndentationError
  0134b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BB@PAPDAKC@IndentationError?$AA@
  01352	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  01357	e8 00 00 00 00	 call	 PyDict_SetItemString
  0135c	85 c0		 test	 eax, eax
  0135e	74 0c		 je	 SHORT $LN102@PyExc_Init
  01360	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01367	e8 00 00 00 00	 call	 Py_FatalError
$LN102@PyExc_Init:

; 2565 :     POST_INIT(TabError)

  0136c	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_TabError
  01373	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_08HFBDNBMM@TabError?$AA@
  0137a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  0137f	e8 00 00 00 00	 call	 PyDict_SetItemString
  01384	85 c0		 test	 eax, eax
  01386	74 0c		 je	 SHORT $LN101@PyExc_Init
  01388	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0138f	e8 00 00 00 00	 call	 Py_FatalError
$LN101@PyExc_Init:

; 2566 :     POST_INIT(LookupError)

  01394	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_LookupError
  0139b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0M@MHFOHJEK@LookupError?$AA@
  013a2	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  013a7	e8 00 00 00 00	 call	 PyDict_SetItemString
  013ac	85 c0		 test	 eax, eax
  013ae	74 0c		 je	 SHORT $LN100@PyExc_Init
  013b0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  013b7	e8 00 00 00 00	 call	 Py_FatalError
$LN100@PyExc_Init:

; 2567 :     POST_INIT(IndexError)

  013bc	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_IndexError
  013c3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0L@PDGDGKIP@IndexError?$AA@
  013ca	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  013cf	e8 00 00 00 00	 call	 PyDict_SetItemString
  013d4	85 c0		 test	 eax, eax
  013d6	74 0c		 je	 SHORT $LN99@PyExc_Init
  013d8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  013df	e8 00 00 00 00	 call	 Py_FatalError
$LN99@PyExc_Init:

; 2568 :     POST_INIT(KeyError)

  013e4	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_KeyError
  013eb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_08OHPJJKKC@KeyError?$AA@
  013f2	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  013f7	e8 00 00 00 00	 call	 PyDict_SetItemString
  013fc	85 c0		 test	 eax, eax
  013fe	74 0c		 je	 SHORT $LN98@PyExc_Init
  01400	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01407	e8 00 00 00 00	 call	 Py_FatalError
$LN98@PyExc_Init:

; 2569 :     POST_INIT(ValueError)

  0140c	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ValueError
  01413	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0L@POAMGPDC@ValueError?$AA@
  0141a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  0141f	e8 00 00 00 00	 call	 PyDict_SetItemString
  01424	85 c0		 test	 eax, eax
  01426	74 0c		 je	 SHORT $LN97@PyExc_Init
  01428	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0142f	e8 00 00 00 00	 call	 Py_FatalError
$LN97@PyExc_Init:

; 2570 :     POST_INIT(UnicodeError)

  01434	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_UnicodeError
  0143b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0N@HJMCMBLP@UnicodeError?$AA@
  01442	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  01447	e8 00 00 00 00	 call	 PyDict_SetItemString
  0144c	85 c0		 test	 eax, eax
  0144e	74 0c		 je	 SHORT $LN96@PyExc_Init
  01450	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01457	e8 00 00 00 00	 call	 Py_FatalError
$LN96@PyExc_Init:

; 2571 :     POST_INIT(UnicodeEncodeError)

  0145c	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_UnicodeEncodeError
  01463	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BD@PEGECFKD@UnicodeEncodeError?$AA@
  0146a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  0146f	e8 00 00 00 00	 call	 PyDict_SetItemString
  01474	85 c0		 test	 eax, eax
  01476	74 0c		 je	 SHORT $LN95@PyExc_Init
  01478	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0147f	e8 00 00 00 00	 call	 Py_FatalError
$LN95@PyExc_Init:

; 2572 :     POST_INIT(UnicodeDecodeError)

  01484	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_UnicodeDecodeError
  0148b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BD@EMOAOOII@UnicodeDecodeError?$AA@
  01492	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  01497	e8 00 00 00 00	 call	 PyDict_SetItemString
  0149c	85 c0		 test	 eax, eax
  0149e	74 0c		 je	 SHORT $LN94@PyExc_Init
  014a0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  014a7	e8 00 00 00 00	 call	 Py_FatalError
$LN94@PyExc_Init:

; 2573 :     POST_INIT(UnicodeTranslateError)

  014ac	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_UnicodeTranslateError
  014b3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BG@MKGFNNGN@UnicodeTranslateError?$AA@
  014ba	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  014bf	e8 00 00 00 00	 call	 PyDict_SetItemString
  014c4	85 c0		 test	 eax, eax
  014c6	74 0c		 je	 SHORT $LN93@PyExc_Init
  014c8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  014cf	e8 00 00 00 00	 call	 Py_FatalError
$LN93@PyExc_Init:

; 2574 :     POST_INIT(AssertionError)

  014d4	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_AssertionError
  014db	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0P@ECLAGKMP@AssertionError?$AA@
  014e2	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  014e7	e8 00 00 00 00	 call	 PyDict_SetItemString
  014ec	85 c0		 test	 eax, eax
  014ee	74 0c		 je	 SHORT $LN92@PyExc_Init
  014f0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  014f7	e8 00 00 00 00	 call	 Py_FatalError
$LN92@PyExc_Init:

; 2575 :     POST_INIT(ArithmeticError)

  014fc	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ArithmeticError
  01503	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BA@HMBIHIEF@ArithmeticError?$AA@
  0150a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  0150f	e8 00 00 00 00	 call	 PyDict_SetItemString
  01514	85 c0		 test	 eax, eax
  01516	74 0c		 je	 SHORT $LN91@PyExc_Init
  01518	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0151f	e8 00 00 00 00	 call	 Py_FatalError
$LN91@PyExc_Init:

; 2576 :     POST_INIT(FloatingPointError)

  01524	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_FloatingPointError
  0152b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BD@BMMMKAGK@FloatingPointError?$AA@
  01532	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  01537	e8 00 00 00 00	 call	 PyDict_SetItemString
  0153c	85 c0		 test	 eax, eax
  0153e	74 0c		 je	 SHORT $LN90@PyExc_Init
  01540	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01547	e8 00 00 00 00	 call	 Py_FatalError
$LN90@PyExc_Init:

; 2577 :     POST_INIT(OverflowError)

  0154c	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_OverflowError
  01553	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0O@DAFOBLHH@OverflowError?$AA@
  0155a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  0155f	e8 00 00 00 00	 call	 PyDict_SetItemString
  01564	85 c0		 test	 eax, eax
  01566	74 0c		 je	 SHORT $LN89@PyExc_Init
  01568	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0156f	e8 00 00 00 00	 call	 Py_FatalError
$LN89@PyExc_Init:

; 2578 :     POST_INIT(ZeroDivisionError)

  01574	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ZeroDivisionError
  0157b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BC@JKCGANPD@ZeroDivisionError?$AA@
  01582	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  01587	e8 00 00 00 00	 call	 PyDict_SetItemString
  0158c	85 c0		 test	 eax, eax
  0158e	74 0c		 je	 SHORT $LN88@PyExc_Init
  01590	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01597	e8 00 00 00 00	 call	 Py_FatalError
$LN88@PyExc_Init:

; 2579 :     POST_INIT(SystemError)

  0159c	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_SystemError
  015a3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0M@MLMICFKM@SystemError?$AA@
  015aa	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  015af	e8 00 00 00 00	 call	 PyDict_SetItemString
  015b4	85 c0		 test	 eax, eax
  015b6	74 0c		 je	 SHORT $LN87@PyExc_Init
  015b8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  015bf	e8 00 00 00 00	 call	 Py_FatalError
$LN87@PyExc_Init:

; 2580 :     POST_INIT(ReferenceError)

  015c4	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ReferenceError
  015cb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0P@NJFCDLEA@ReferenceError?$AA@
  015d2	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  015d7	e8 00 00 00 00	 call	 PyDict_SetItemString
  015dc	85 c0		 test	 eax, eax
  015de	74 0c		 je	 SHORT $LN86@PyExc_Init
  015e0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  015e7	e8 00 00 00 00	 call	 Py_FatalError
$LN86@PyExc_Init:

; 2581 :     POST_INIT(BufferError)

  015ec	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_BufferError
  015f3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0M@IEEINKIE@BufferError?$AA@
  015fa	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  015ff	e8 00 00 00 00	 call	 PyDict_SetItemString
  01604	85 c0		 test	 eax, eax
  01606	74 0c		 je	 SHORT $LN85@PyExc_Init
  01608	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0160f	e8 00 00 00 00	 call	 Py_FatalError
$LN85@PyExc_Init:

; 2582 :     POST_INIT(MemoryError)

  01614	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_MemoryError
  0161b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0M@HIBAKAFK@MemoryError?$AA@
  01622	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  01627	e8 00 00 00 00	 call	 PyDict_SetItemString
  0162c	85 c0		 test	 eax, eax
  0162e	74 0c		 je	 SHORT $LN84@PyExc_Init
  01630	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01637	e8 00 00 00 00	 call	 Py_FatalError
$LN84@PyExc_Init:

; 2583 :     POST_INIT(BufferError)

  0163c	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_BufferError
  01643	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0M@IEEINKIE@BufferError?$AA@
  0164a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  0164f	e8 00 00 00 00	 call	 PyDict_SetItemString
  01654	85 c0		 test	 eax, eax
  01656	74 0c		 je	 SHORT $LN83@PyExc_Init
  01658	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0165f	e8 00 00 00 00	 call	 Py_FatalError
$LN83@PyExc_Init:

; 2584 : #ifdef WITH_PARALLEL
; 2585 :     POST_INIT(ParallelError)

  01664	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ParallelError
  0166b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0O@GFKDNBOD@ParallelError?$AA@
  01672	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  01677	e8 00 00 00 00	 call	 PyDict_SetItemString
  0167c	85 c0		 test	 eax, eax
  0167e	74 0c		 je	 SHORT $LN82@PyExc_Init
  01680	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01687	e8 00 00 00 00	 call	 Py_FatalError
$LN82@PyExc_Init:

; 2586 :     POST_INIT(ParallelThreadInitializationError)

  0168c	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ParallelThreadInitializationError
  01693	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CC@IAEHFMP@ParallelThreadInitializationErro@
  0169a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  0169f	e8 00 00 00 00	 call	 PyDict_SetItemString
  016a4	85 c0		 test	 eax, eax
  016a6	74 0c		 je	 SHORT $LN81@PyExc_Init
  016a8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  016af	e8 00 00 00 00	 call	 Py_FatalError
$LN81@PyExc_Init:

; 2587 :     POST_INIT(ParallelContextInitializationError)

  016b4	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ParallelContextInitializationError
  016bb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CD@MNHCHPAI@ParallelContextInitializationErr@
  016c2	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  016c7	e8 00 00 00 00	 call	 PyDict_SetItemString
  016cc	85 c0		 test	 eax, eax
  016ce	74 0c		 je	 SHORT $LN80@PyExc_Init
  016d0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  016d7	e8 00 00 00 00	 call	 Py_FatalError
$LN80@PyExc_Init:

; 2588 :     POST_INIT(ParallelContextError)

  016dc	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ParallelContextError
  016e3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@HFKFAIAA@ParallelContextError?$AA@
  016ea	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  016ef	e8 00 00 00 00	 call	 PyDict_SetItemString
  016f4	85 c0		 test	 eax, eax
  016f6	74 0c		 je	 SHORT $LN79@PyExc_Init
  016f8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  016ff	e8 00 00 00 00	 call	 Py_FatalError
$LN79@PyExc_Init:

; 2589 :     POST_INIT(ParallelImportError)

  01704	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ParallelImportError
  0170b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BE@FCGCAOGC@ParallelImportError?$AA@
  01712	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  01717	e8 00 00 00 00	 call	 PyDict_SetItemString
  0171c	85 c0		 test	 eax, eax
  0171e	74 0c		 je	 SHORT $LN78@PyExc_Init
  01720	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01727	e8 00 00 00 00	 call	 Py_FatalError
$LN78@PyExc_Init:

; 2590 :     POST_INIT(ParallelGlobalVariableAccessError)

  0172c	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ParallelGlobalVariableAccessError
  01733	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CC@HPLHCPKN@ParallelGlobalVariableAccessErro@
  0173a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  0173f	e8 00 00 00 00	 call	 PyDict_SetItemString
  01744	85 c0		 test	 eax, eax
  01746	74 0c		 je	 SHORT $LN77@PyExc_Init
  01748	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0174f	e8 00 00 00 00	 call	 Py_FatalError
$LN77@PyExc_Init:

; 2591 :     POST_INIT(ParallelNonlocalVariableAccessError)

  01754	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ParallelNonlocalVariableAccessError
  0175b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CE@ONNHACJB@ParallelNonlocalVariableAccessEr@
  01762	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  01767	e8 00 00 00 00	 call	 PyDict_SetItemString
  0176c	85 c0		 test	 eax, eax
  0176e	74 0c		 je	 SHORT $LN76@PyExc_Init
  01770	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01777	e8 00 00 00 00	 call	 Py_FatalError
$LN76@PyExc_Init:

; 2592 :     POST_INIT(AsyncError)

  0177c	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_AsyncError
  01783	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0L@POMMPANG@AsyncError?$AA@
  0178a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  0178f	e8 00 00 00 00	 call	 PyDict_SetItemString
  01794	85 c0		 test	 eax, eax
  01796	74 0c		 je	 SHORT $LN75@PyExc_Init
  01798	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0179f	e8 00 00 00 00	 call	 Py_FatalError
$LN75@PyExc_Init:

; 2593 :     POST_INIT(AsyncRunCalledWithoutEventsError)

  017a4	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_AsyncRunCalledWithoutEventsError
  017ab	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CB@DHCJJACB@AsyncRunCalledWithoutEventsError@
  017b2	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  017b7	e8 00 00 00 00	 call	 PyDict_SetItemString
  017bc	85 c0		 test	 eax, eax
  017be	74 0c		 je	 SHORT $LN74@PyExc_Init
  017c0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  017c7	e8 00 00 00 00	 call	 Py_FatalError
$LN74@PyExc_Init:

; 2594 :     POST_INIT(AsyncRunNoActiveEventsError)

  017cc	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_AsyncRunNoActiveEventsError
  017d3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BM@GCGOLDFN@AsyncRunNoActiveEventsError?$AA@
  017da	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  017df	e8 00 00 00 00	 call	 PyDict_SetItemString
  017e4	85 c0		 test	 eax, eax
  017e6	74 0c		 je	 SHORT $LN73@PyExc_Init
  017e8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  017ef	e8 00 00 00 00	 call	 Py_FatalError
$LN73@PyExc_Init:

; 2595 : #endif
; 2596 :     POST_INIT(Warning)

  017f4	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_Warning
  017fb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_07KGMMFLDN@Warning?$AA@
  01802	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  01807	e8 00 00 00 00	 call	 PyDict_SetItemString
  0180c	85 c0		 test	 eax, eax
  0180e	74 0c		 je	 SHORT $LN72@PyExc_Init
  01810	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01817	e8 00 00 00 00	 call	 Py_FatalError
$LN72@PyExc_Init:

; 2597 :     POST_INIT(UserWarning)

  0181c	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_UserWarning
  01823	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0M@JCLIHPLC@UserWarning?$AA@
  0182a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  0182f	e8 00 00 00 00	 call	 PyDict_SetItemString
  01834	85 c0		 test	 eax, eax
  01836	74 0c		 je	 SHORT $LN71@PyExc_Init
  01838	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0183f	e8 00 00 00 00	 call	 Py_FatalError
$LN71@PyExc_Init:

; 2598 :     POST_INIT(DeprecationWarning)

  01844	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_DeprecationWarning
  0184b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BD@GIDNBIPD@DeprecationWarning?$AA@
  01852	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  01857	e8 00 00 00 00	 call	 PyDict_SetItemString
  0185c	85 c0		 test	 eax, eax
  0185e	74 0c		 je	 SHORT $LN70@PyExc_Init
  01860	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01867	e8 00 00 00 00	 call	 Py_FatalError
$LN70@PyExc_Init:

; 2599 :     POST_INIT(PendingDeprecationWarning)

  0186c	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_PendingDeprecationWarning
  01873	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BK@JDBEDOM@PendingDeprecationWarning?$AA@
  0187a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  0187f	e8 00 00 00 00	 call	 PyDict_SetItemString
  01884	85 c0		 test	 eax, eax
  01886	74 0c		 je	 SHORT $LN69@PyExc_Init
  01888	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0188f	e8 00 00 00 00	 call	 Py_FatalError
$LN69@PyExc_Init:

; 2600 :     POST_INIT(SyntaxWarning)

  01894	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_SyntaxWarning
  0189b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0O@IOJIPFFN@SyntaxWarning?$AA@
  018a2	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  018a7	e8 00 00 00 00	 call	 PyDict_SetItemString
  018ac	85 c0		 test	 eax, eax
  018ae	74 0c		 je	 SHORT $LN68@PyExc_Init
  018b0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  018b7	e8 00 00 00 00	 call	 Py_FatalError
$LN68@PyExc_Init:

; 2601 :     POST_INIT(RuntimeWarning)

  018bc	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_RuntimeWarning
  018c3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0P@JGMDIAML@RuntimeWarning?$AA@
  018ca	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  018cf	e8 00 00 00 00	 call	 PyDict_SetItemString
  018d4	85 c0		 test	 eax, eax
  018d6	74 0c		 je	 SHORT $LN67@PyExc_Init
  018d8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  018df	e8 00 00 00 00	 call	 Py_FatalError
$LN67@PyExc_Init:

; 2602 :     POST_INIT(FutureWarning)

  018e4	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_FutureWarning
  018eb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0O@EAIEFLDH@FutureWarning?$AA@
  018f2	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  018f7	e8 00 00 00 00	 call	 PyDict_SetItemString
  018fc	85 c0		 test	 eax, eax
  018fe	74 0c		 je	 SHORT $LN66@PyExc_Init
  01900	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01907	e8 00 00 00 00	 call	 Py_FatalError
$LN66@PyExc_Init:

; 2603 :     POST_INIT(ImportWarning)

  0190c	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ImportWarning
  01913	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0O@MPAGLHE@ImportWarning?$AA@
  0191a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  0191f	e8 00 00 00 00	 call	 PyDict_SetItemString
  01924	85 c0		 test	 eax, eax
  01926	74 0c		 je	 SHORT $LN65@PyExc_Init
  01928	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0192f	e8 00 00 00 00	 call	 Py_FatalError
$LN65@PyExc_Init:

; 2604 :     POST_INIT(UnicodeWarning)

  01934	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_UnicodeWarning
  0193b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0P@DFBLGLPC@UnicodeWarning?$AA@
  01942	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  01947	e8 00 00 00 00	 call	 PyDict_SetItemString
  0194c	85 c0		 test	 eax, eax
  0194e	74 0c		 je	 SHORT $LN64@PyExc_Init
  01950	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01957	e8 00 00 00 00	 call	 Py_FatalError
$LN64@PyExc_Init:

; 2605 :     POST_INIT(BytesWarning)

  0195c	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_BytesWarning
  01963	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0N@BILDEMAG@BytesWarning?$AA@
  0196a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  0196f	e8 00 00 00 00	 call	 PyDict_SetItemString
  01974	85 c0		 test	 eax, eax
  01976	74 0c		 je	 SHORT $LN63@PyExc_Init
  01978	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0197f	e8 00 00 00 00	 call	 Py_FatalError
$LN63@PyExc_Init:

; 2606 :     POST_INIT(ResourceWarning)

  01984	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ResourceWarning
  0198b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BA@JIBLCGNF@ResourceWarning?$AA@
  01992	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  01997	e8 00 00 00 00	 call	 PyDict_SetItemString
  0199c	85 c0		 test	 eax, eax
  0199e	74 0c		 je	 SHORT $LN62@PyExc_Init
  019a0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  019a7	e8 00 00 00 00	 call	 Py_FatalError
$LN62@PyExc_Init:

; 2607 : 
; 2608 :     if (!errnomap) {

  019ac	48 83 3d 00 00
	00 00 00	 cmp	 QWORD PTR errnomap, 0
  019b4	75 22		 jne	 SHORT $LN61@PyExc_Init

; 2609 :         errnomap = PyDict_New();

  019b6	e8 00 00 00 00	 call	 PyDict_New
  019bb	48 89 05 00 00
	00 00		 mov	 QWORD PTR errnomap, rax

; 2610 :         if (!errnomap)

  019c2	48 83 3d 00 00
	00 00 00	 cmp	 QWORD PTR errnomap, 0
  019ca	75 0c		 jne	 SHORT $LN60@PyExc_Init

; 2611 :             Py_FatalError("Cannot allocate map from errnos to OSError subclasses");

  019cc	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0DG@OANAGHEJ@Cannot?5allocate?5map?5from?5errnos?5@
  019d3	e8 00 00 00 00	 call	 Py_FatalError
$LN60@PyExc_Init:
$LN61@PyExc_Init:

; 2612 :     }
; 2613 : 
; 2614 :     /* OSError subclasses */
; 2615 :     POST_INIT(ConnectionError);

  019d8	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ConnectionError
  019df	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BA@FGMDNHAG@ConnectionError?$AA@
  019e6	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  019eb	e8 00 00 00 00	 call	 PyDict_SetItemString
  019f0	85 c0		 test	 eax, eax
  019f2	74 0c		 je	 SHORT $LN59@PyExc_Init
  019f4	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  019fb	e8 00 00 00 00	 call	 Py_FatalError
$LN59@PyExc_Init:

; 2616 : 
; 2617 :     POST_INIT(BlockingIOError);

  01a00	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_BlockingIOError
  01a07	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BA@JGPGLFDG@BlockingIOError?$AA@
  01a0e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  01a13	e8 00 00 00 00	 call	 PyDict_SetItemString
  01a18	85 c0		 test	 eax, eax
  01a1a	74 0c		 je	 SHORT $LN58@PyExc_Init
  01a1c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01a23	e8 00 00 00 00	 call	 Py_FatalError
$LN58@PyExc_Init:

; 2618 :     ADD_ERRNO(BlockingIOError, EAGAIN);

  01a28	b9 0b 00 00 00	 mov	 ecx, 11
  01a2d	e8 00 00 00 00	 call	 PyLong_FromLong
  01a32	48 89 44 24 28	 mov	 QWORD PTR _code$126109[rsp], rax
  01a37	48 8b 15 00 00
	00 00		 mov	 rdx, QWORD PTR PyExc_OSError
  01a3e	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_BlockingIOError
  01a45	e8 00 00 00 00	 call	 _PyObject_RealIsSubclass
  01a4a	85 c0		 test	 eax, eax
  01a4c	75 1c		 jne	 SHORT $LN281@PyExc_Init
  01a4e	41 b8 3a 0a 00
	00		 mov	 r8d, 2618		; 00000a3aH
  01a54	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  01a5b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HO@DGEMPBJC@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAB@
  01a62	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  01a68	33 c0		 xor	 eax, eax
$LN281@PyExc_Init:
  01a6a	48 83 7c 24 28
	00		 cmp	 QWORD PTR _code$126109[rsp], 0
  01a70	74 1c		 je	 SHORT $LN56@PyExc_Init
  01a72	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_BlockingIOError
  01a79	48 8b 54 24 28	 mov	 rdx, QWORD PTR _code$126109[rsp]
  01a7e	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  01a85	e8 00 00 00 00	 call	 PyDict_SetItem
  01a8a	85 c0		 test	 eax, eax
  01a8c	74 0c		 je	 SHORT $LN57@PyExc_Init
$LN56@PyExc_Init:
  01a8e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  01a95	e8 00 00 00 00	 call	 Py_FatalError
$LN57@PyExc_Init:
  01a9a	48 8b 4c 24 28	 mov	 rcx, QWORD PTR _code$126109[rsp]
  01a9f	e8 00 00 00 00	 call	 _Py_DecRef

; 2619 :     ADD_ERRNO(BlockingIOError, EALREADY);

  01aa4	b9 35 27 00 00	 mov	 ecx, 10037		; 00002735H
  01aa9	e8 00 00 00 00	 call	 PyLong_FromLong
  01aae	48 89 44 24 30	 mov	 QWORD PTR _code$126116[rsp], rax
  01ab3	48 8b 15 00 00
	00 00		 mov	 rdx, QWORD PTR PyExc_OSError
  01aba	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_BlockingIOError
  01ac1	e8 00 00 00 00	 call	 _PyObject_RealIsSubclass
  01ac6	85 c0		 test	 eax, eax
  01ac8	75 1c		 jne	 SHORT $LN282@PyExc_Init
  01aca	41 b8 3b 0a 00
	00		 mov	 r8d, 2619		; 00000a3bH
  01ad0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  01ad7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HO@DGEMPBJC@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAB@
  01ade	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  01ae4	33 c0		 xor	 eax, eax
$LN282@PyExc_Init:
  01ae6	48 83 7c 24 30
	00		 cmp	 QWORD PTR _code$126116[rsp], 0
  01aec	74 1c		 je	 SHORT $LN54@PyExc_Init
  01aee	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_BlockingIOError
  01af5	48 8b 54 24 30	 mov	 rdx, QWORD PTR _code$126116[rsp]
  01afa	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  01b01	e8 00 00 00 00	 call	 PyDict_SetItem
  01b06	85 c0		 test	 eax, eax
  01b08	74 0c		 je	 SHORT $LN55@PyExc_Init
$LN54@PyExc_Init:
  01b0a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  01b11	e8 00 00 00 00	 call	 Py_FatalError
$LN55@PyExc_Init:
  01b16	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _code$126116[rsp]
  01b1b	e8 00 00 00 00	 call	 _Py_DecRef

; 2620 :     ADD_ERRNO(BlockingIOError, EINPROGRESS);

  01b20	b9 34 27 00 00	 mov	 ecx, 10036		; 00002734H
  01b25	e8 00 00 00 00	 call	 PyLong_FromLong
  01b2a	48 89 44 24 38	 mov	 QWORD PTR _code$126121[rsp], rax
  01b2f	48 8b 15 00 00
	00 00		 mov	 rdx, QWORD PTR PyExc_OSError
  01b36	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_BlockingIOError
  01b3d	e8 00 00 00 00	 call	 _PyObject_RealIsSubclass
  01b42	85 c0		 test	 eax, eax
  01b44	75 1c		 jne	 SHORT $LN283@PyExc_Init
  01b46	41 b8 3c 0a 00
	00		 mov	 r8d, 2620		; 00000a3cH
  01b4c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  01b53	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HO@DGEMPBJC@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAB@
  01b5a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  01b60	33 c0		 xor	 eax, eax
$LN283@PyExc_Init:
  01b62	48 83 7c 24 38
	00		 cmp	 QWORD PTR _code$126121[rsp], 0
  01b68	74 1c		 je	 SHORT $LN52@PyExc_Init
  01b6a	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_BlockingIOError
  01b71	48 8b 54 24 38	 mov	 rdx, QWORD PTR _code$126121[rsp]
  01b76	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  01b7d	e8 00 00 00 00	 call	 PyDict_SetItem
  01b82	85 c0		 test	 eax, eax
  01b84	74 0c		 je	 SHORT $LN53@PyExc_Init
$LN52@PyExc_Init:
  01b86	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  01b8d	e8 00 00 00 00	 call	 Py_FatalError
$LN53@PyExc_Init:
  01b92	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _code$126121[rsp]
  01b97	e8 00 00 00 00	 call	 _Py_DecRef

; 2621 :     ADD_ERRNO(BlockingIOError, EWOULDBLOCK);

  01b9c	b9 33 27 00 00	 mov	 ecx, 10035		; 00002733H
  01ba1	e8 00 00 00 00	 call	 PyLong_FromLong
  01ba6	48 89 44 24 40	 mov	 QWORD PTR _code$126126[rsp], rax
  01bab	48 8b 15 00 00
	00 00		 mov	 rdx, QWORD PTR PyExc_OSError
  01bb2	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_BlockingIOError
  01bb9	e8 00 00 00 00	 call	 _PyObject_RealIsSubclass
  01bbe	85 c0		 test	 eax, eax
  01bc0	75 1c		 jne	 SHORT $LN284@PyExc_Init
  01bc2	41 b8 3d 0a 00
	00		 mov	 r8d, 2621		; 00000a3dH
  01bc8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  01bcf	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HO@DGEMPBJC@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAB@
  01bd6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  01bdc	33 c0		 xor	 eax, eax
$LN284@PyExc_Init:
  01bde	48 83 7c 24 40
	00		 cmp	 QWORD PTR _code$126126[rsp], 0
  01be4	74 1c		 je	 SHORT $LN50@PyExc_Init
  01be6	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_BlockingIOError
  01bed	48 8b 54 24 40	 mov	 rdx, QWORD PTR _code$126126[rsp]
  01bf2	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  01bf9	e8 00 00 00 00	 call	 PyDict_SetItem
  01bfe	85 c0		 test	 eax, eax
  01c00	74 0c		 je	 SHORT $LN51@PyExc_Init
$LN50@PyExc_Init:
  01c02	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  01c09	e8 00 00 00 00	 call	 Py_FatalError
$LN51@PyExc_Init:
  01c0e	48 8b 4c 24 40	 mov	 rcx, QWORD PTR _code$126126[rsp]
  01c13	e8 00 00 00 00	 call	 _Py_DecRef

; 2622 :     POST_INIT(BrokenPipeError);

  01c18	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_BrokenPipeError
  01c1f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BA@OKFJGAGB@BrokenPipeError?$AA@
  01c26	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  01c2b	e8 00 00 00 00	 call	 PyDict_SetItemString
  01c30	85 c0		 test	 eax, eax
  01c32	74 0c		 je	 SHORT $LN49@PyExc_Init
  01c34	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01c3b	e8 00 00 00 00	 call	 Py_FatalError
$LN49@PyExc_Init:

; 2623 :     ADD_ERRNO(BrokenPipeError, EPIPE);

  01c40	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  01c45	e8 00 00 00 00	 call	 PyLong_FromLong
  01c4a	48 89 44 24 48	 mov	 QWORD PTR _code$126132[rsp], rax
  01c4f	48 8b 15 00 00
	00 00		 mov	 rdx, QWORD PTR PyExc_OSError
  01c56	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_BrokenPipeError
  01c5d	e8 00 00 00 00	 call	 _PyObject_RealIsSubclass
  01c62	85 c0		 test	 eax, eax
  01c64	75 1c		 jne	 SHORT $LN285@PyExc_Init
  01c66	41 b8 3f 0a 00
	00		 mov	 r8d, 2623		; 00000a3fH
  01c6c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  01c73	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HO@COJMDIJF@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAB@
  01c7a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  01c80	33 c0		 xor	 eax, eax
$LN285@PyExc_Init:
  01c82	48 83 7c 24 48
	00		 cmp	 QWORD PTR _code$126132[rsp], 0
  01c88	74 1c		 je	 SHORT $LN47@PyExc_Init
  01c8a	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_BrokenPipeError
  01c91	48 8b 54 24 48	 mov	 rdx, QWORD PTR _code$126132[rsp]
  01c96	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  01c9d	e8 00 00 00 00	 call	 PyDict_SetItem
  01ca2	85 c0		 test	 eax, eax
  01ca4	74 0c		 je	 SHORT $LN48@PyExc_Init
$LN47@PyExc_Init:
  01ca6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  01cad	e8 00 00 00 00	 call	 Py_FatalError
$LN48@PyExc_Init:
  01cb2	48 8b 4c 24 48	 mov	 rcx, QWORD PTR _code$126132[rsp]
  01cb7	e8 00 00 00 00	 call	 _Py_DecRef

; 2624 :     ADD_ERRNO(BrokenPipeError, ESHUTDOWN);

  01cbc	b9 4a 27 00 00	 mov	 ecx, 10058		; 0000274aH
  01cc1	e8 00 00 00 00	 call	 PyLong_FromLong
  01cc6	48 89 44 24 50	 mov	 QWORD PTR _code$126138[rsp], rax
  01ccb	48 8b 15 00 00
	00 00		 mov	 rdx, QWORD PTR PyExc_OSError
  01cd2	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_BrokenPipeError
  01cd9	e8 00 00 00 00	 call	 _PyObject_RealIsSubclass
  01cde	85 c0		 test	 eax, eax
  01ce0	75 1c		 jne	 SHORT $LN286@PyExc_Init
  01ce2	41 b8 40 0a 00
	00		 mov	 r8d, 2624		; 00000a40H
  01ce8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  01cef	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HO@COJMDIJF@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAB@
  01cf6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  01cfc	33 c0		 xor	 eax, eax
$LN286@PyExc_Init:
  01cfe	48 83 7c 24 50
	00		 cmp	 QWORD PTR _code$126138[rsp], 0
  01d04	74 1c		 je	 SHORT $LN45@PyExc_Init
  01d06	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_BrokenPipeError
  01d0d	48 8b 54 24 50	 mov	 rdx, QWORD PTR _code$126138[rsp]
  01d12	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  01d19	e8 00 00 00 00	 call	 PyDict_SetItem
  01d1e	85 c0		 test	 eax, eax
  01d20	74 0c		 je	 SHORT $LN46@PyExc_Init
$LN45@PyExc_Init:
  01d22	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  01d29	e8 00 00 00 00	 call	 Py_FatalError
$LN46@PyExc_Init:
  01d2e	48 8b 4c 24 50	 mov	 rcx, QWORD PTR _code$126138[rsp]
  01d33	e8 00 00 00 00	 call	 _Py_DecRef

; 2625 :     POST_INIT(ChildProcessError);

  01d38	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ChildProcessError
  01d3f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BC@LJAFFAPL@ChildProcessError?$AA@
  01d46	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  01d4b	e8 00 00 00 00	 call	 PyDict_SetItemString
  01d50	85 c0		 test	 eax, eax
  01d52	74 0c		 je	 SHORT $LN44@PyExc_Init
  01d54	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01d5b	e8 00 00 00 00	 call	 Py_FatalError
$LN44@PyExc_Init:

; 2626 :     ADD_ERRNO(ChildProcessError, ECHILD);

  01d60	b9 0a 00 00 00	 mov	 ecx, 10
  01d65	e8 00 00 00 00	 call	 PyLong_FromLong
  01d6a	48 89 44 24 58	 mov	 QWORD PTR _code$126144[rsp], rax
  01d6f	48 8b 15 00 00
	00 00		 mov	 rdx, QWORD PTR PyExc_OSError
  01d76	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ChildProcessError
  01d7d	e8 00 00 00 00	 call	 _PyObject_RealIsSubclass
  01d82	85 c0		 test	 eax, eax
  01d84	75 1c		 jne	 SHORT $LN287@PyExc_Init
  01d86	41 b8 42 0a 00
	00		 mov	 r8d, 2626		; 00000a42H
  01d8c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  01d93	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1IC@DJCIMOHJ@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAC@
  01d9a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  01da0	33 c0		 xor	 eax, eax
$LN287@PyExc_Init:
  01da2	48 83 7c 24 58
	00		 cmp	 QWORD PTR _code$126144[rsp], 0
  01da8	74 1c		 je	 SHORT $LN42@PyExc_Init
  01daa	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ChildProcessError
  01db1	48 8b 54 24 58	 mov	 rdx, QWORD PTR _code$126144[rsp]
  01db6	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  01dbd	e8 00 00 00 00	 call	 PyDict_SetItem
  01dc2	85 c0		 test	 eax, eax
  01dc4	74 0c		 je	 SHORT $LN43@PyExc_Init
$LN42@PyExc_Init:
  01dc6	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  01dcd	e8 00 00 00 00	 call	 Py_FatalError
$LN43@PyExc_Init:
  01dd2	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _code$126144[rsp]
  01dd7	e8 00 00 00 00	 call	 _Py_DecRef

; 2627 :     POST_INIT(ConnectionAbortedError);

  01ddc	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ConnectionAbortedError
  01de3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BH@IAHALHIL@ConnectionAbortedError?$AA@
  01dea	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  01def	e8 00 00 00 00	 call	 PyDict_SetItemString
  01df4	85 c0		 test	 eax, eax
  01df6	74 0c		 je	 SHORT $LN41@PyExc_Init
  01df8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01dff	e8 00 00 00 00	 call	 Py_FatalError
$LN41@PyExc_Init:

; 2628 :     ADD_ERRNO(ConnectionAbortedError, ECONNABORTED);

  01e04	b9 45 27 00 00	 mov	 ecx, 10053		; 00002745H
  01e09	e8 00 00 00 00	 call	 PyLong_FromLong
  01e0e	48 89 44 24 60	 mov	 QWORD PTR _code$126151[rsp], rax
  01e13	48 8b 15 00 00
	00 00		 mov	 rdx, QWORD PTR PyExc_OSError
  01e1a	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ConnectionAbortedError
  01e21	e8 00 00 00 00	 call	 _PyObject_RealIsSubclass
  01e26	85 c0		 test	 eax, eax
  01e28	75 1c		 jne	 SHORT $LN288@PyExc_Init
  01e2a	41 b8 44 0a 00
	00		 mov	 r8d, 2628		; 00000a44H
  01e30	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  01e37	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1IM@EMAHNOPP@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAC@
  01e3e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  01e44	33 c0		 xor	 eax, eax
$LN288@PyExc_Init:
  01e46	48 83 7c 24 60
	00		 cmp	 QWORD PTR _code$126151[rsp], 0
  01e4c	74 1c		 je	 SHORT $LN39@PyExc_Init
  01e4e	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ConnectionAbortedError
  01e55	48 8b 54 24 60	 mov	 rdx, QWORD PTR _code$126151[rsp]
  01e5a	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  01e61	e8 00 00 00 00	 call	 PyDict_SetItem
  01e66	85 c0		 test	 eax, eax
  01e68	74 0c		 je	 SHORT $LN40@PyExc_Init
$LN39@PyExc_Init:
  01e6a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  01e71	e8 00 00 00 00	 call	 Py_FatalError
$LN40@PyExc_Init:
  01e76	48 8b 4c 24 60	 mov	 rcx, QWORD PTR _code$126151[rsp]
  01e7b	e8 00 00 00 00	 call	 _Py_DecRef

; 2629 :     POST_INIT(ConnectionRefusedError);

  01e80	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ConnectionRefusedError
  01e87	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BH@NFNMCF@ConnectionRefusedError?$AA@
  01e8e	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  01e93	e8 00 00 00 00	 call	 PyDict_SetItemString
  01e98	85 c0		 test	 eax, eax
  01e9a	74 0c		 je	 SHORT $LN38@PyExc_Init
  01e9c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01ea3	e8 00 00 00 00	 call	 Py_FatalError
$LN38@PyExc_Init:

; 2630 :     ADD_ERRNO(ConnectionRefusedError, ECONNREFUSED);

  01ea8	b9 4d 27 00 00	 mov	 ecx, 10061		; 0000274dH
  01ead	e8 00 00 00 00	 call	 PyLong_FromLong
  01eb2	48 89 44 24 68	 mov	 QWORD PTR _code$126158[rsp], rax
  01eb7	48 8b 15 00 00
	00 00		 mov	 rdx, QWORD PTR PyExc_OSError
  01ebe	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ConnectionRefusedError
  01ec5	e8 00 00 00 00	 call	 _PyObject_RealIsSubclass
  01eca	85 c0		 test	 eax, eax
  01ecc	75 1c		 jne	 SHORT $LN289@PyExc_Init
  01ece	41 b8 46 0a 00
	00		 mov	 r8d, 2630		; 00000a46H
  01ed4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  01edb	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1IM@FEBJAOOI@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAC@
  01ee2	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  01ee8	33 c0		 xor	 eax, eax
$LN289@PyExc_Init:
  01eea	48 83 7c 24 68
	00		 cmp	 QWORD PTR _code$126158[rsp], 0
  01ef0	74 1c		 je	 SHORT $LN36@PyExc_Init
  01ef2	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ConnectionRefusedError
  01ef9	48 8b 54 24 68	 mov	 rdx, QWORD PTR _code$126158[rsp]
  01efe	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  01f05	e8 00 00 00 00	 call	 PyDict_SetItem
  01f0a	85 c0		 test	 eax, eax
  01f0c	74 0c		 je	 SHORT $LN37@PyExc_Init
$LN36@PyExc_Init:
  01f0e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  01f15	e8 00 00 00 00	 call	 Py_FatalError
$LN37@PyExc_Init:
  01f1a	48 8b 4c 24 68	 mov	 rcx, QWORD PTR _code$126158[rsp]
  01f1f	e8 00 00 00 00	 call	 _Py_DecRef

; 2631 :     POST_INIT(ConnectionResetError);

  01f24	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ConnectionResetError
  01f2b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@KPCMAHCN@ConnectionResetError?$AA@
  01f32	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  01f37	e8 00 00 00 00	 call	 PyDict_SetItemString
  01f3c	85 c0		 test	 eax, eax
  01f3e	74 0c		 je	 SHORT $LN35@PyExc_Init
  01f40	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01f47	e8 00 00 00 00	 call	 Py_FatalError
$LN35@PyExc_Init:

; 2632 :     ADD_ERRNO(ConnectionResetError, ECONNRESET);

  01f4c	b9 46 27 00 00	 mov	 ecx, 10054		; 00002746H
  01f51	e8 00 00 00 00	 call	 PyLong_FromLong
  01f56	48 89 44 24 70	 mov	 QWORD PTR _code$126165[rsp], rax
  01f5b	48 8b 15 00 00
	00 00		 mov	 rdx, QWORD PTR PyExc_OSError
  01f62	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ConnectionResetError
  01f69	e8 00 00 00 00	 call	 _PyObject_RealIsSubclass
  01f6e	85 c0		 test	 eax, eax
  01f70	75 1c		 jne	 SHORT $LN290@PyExc_Init
  01f72	41 b8 48 0a 00
	00		 mov	 r8d, 2632		; 00000a48H
  01f78	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  01f7f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1II@HPBIAIEI@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAC@
  01f86	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  01f8c	33 c0		 xor	 eax, eax
$LN290@PyExc_Init:
  01f8e	48 83 7c 24 70
	00		 cmp	 QWORD PTR _code$126165[rsp], 0
  01f94	74 1c		 je	 SHORT $LN33@PyExc_Init
  01f96	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ConnectionResetError
  01f9d	48 8b 54 24 70	 mov	 rdx, QWORD PTR _code$126165[rsp]
  01fa2	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  01fa9	e8 00 00 00 00	 call	 PyDict_SetItem
  01fae	85 c0		 test	 eax, eax
  01fb0	74 0c		 je	 SHORT $LN34@PyExc_Init
$LN33@PyExc_Init:
  01fb2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  01fb9	e8 00 00 00 00	 call	 Py_FatalError
$LN34@PyExc_Init:
  01fbe	48 8b 4c 24 70	 mov	 rcx, QWORD PTR _code$126165[rsp]
  01fc3	e8 00 00 00 00	 call	 _Py_DecRef

; 2633 :     POST_INIT(FileExistsError);

  01fc8	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_FileExistsError
  01fcf	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BA@FBEHCPFP@FileExistsError?$AA@
  01fd6	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  01fdb	e8 00 00 00 00	 call	 PyDict_SetItemString
  01fe0	85 c0		 test	 eax, eax
  01fe2	74 0c		 je	 SHORT $LN32@PyExc_Init
  01fe4	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  01feb	e8 00 00 00 00	 call	 Py_FatalError
$LN32@PyExc_Init:

; 2634 :     ADD_ERRNO(FileExistsError, EEXIST);

  01ff0	b9 11 00 00 00	 mov	 ecx, 17
  01ff5	e8 00 00 00 00	 call	 PyLong_FromLong
  01ffa	48 89 44 24 78	 mov	 QWORD PTR _code$126172[rsp], rax
  01fff	48 8b 15 00 00
	00 00		 mov	 rdx, QWORD PTR PyExc_OSError
  02006	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_FileExistsError
  0200d	e8 00 00 00 00	 call	 _PyObject_RealIsSubclass
  02012	85 c0		 test	 eax, eax
  02014	75 1c		 jne	 SHORT $LN291@PyExc_Init
  02016	41 b8 4a 0a 00
	00		 mov	 r8d, 2634		; 00000a4aH
  0201c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  02023	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HO@OBOMCJIK@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAF@
  0202a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  02030	33 c0		 xor	 eax, eax
$LN291@PyExc_Init:
  02032	48 83 7c 24 78
	00		 cmp	 QWORD PTR _code$126172[rsp], 0
  02038	74 1c		 je	 SHORT $LN30@PyExc_Init
  0203a	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_FileExistsError
  02041	48 8b 54 24 78	 mov	 rdx, QWORD PTR _code$126172[rsp]
  02046	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  0204d	e8 00 00 00 00	 call	 PyDict_SetItem
  02052	85 c0		 test	 eax, eax
  02054	74 0c		 je	 SHORT $LN31@PyExc_Init
$LN30@PyExc_Init:
  02056	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  0205d	e8 00 00 00 00	 call	 Py_FatalError
$LN31@PyExc_Init:
  02062	48 8b 4c 24 78	 mov	 rcx, QWORD PTR _code$126172[rsp]
  02067	e8 00 00 00 00	 call	 _Py_DecRef

; 2635 :     POST_INIT(FileNotFoundError);

  0206c	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_FileNotFoundError
  02073	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BC@IPPJKII@FileNotFoundError?$AA@
  0207a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  0207f	e8 00 00 00 00	 call	 PyDict_SetItemString
  02084	85 c0		 test	 eax, eax
  02086	74 0c		 je	 SHORT $LN29@PyExc_Init
  02088	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0208f	e8 00 00 00 00	 call	 Py_FatalError
$LN29@PyExc_Init:

; 2636 :     ADD_ERRNO(FileNotFoundError, ENOENT);

  02094	b9 02 00 00 00	 mov	 ecx, 2
  02099	e8 00 00 00 00	 call	 PyLong_FromLong
  0209e	48 89 84 24 80
	00 00 00	 mov	 QWORD PTR _code$126179[rsp], rax
  020a6	48 8b 15 00 00
	00 00		 mov	 rdx, QWORD PTR PyExc_OSError
  020ad	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_FileNotFoundError
  020b4	e8 00 00 00 00	 call	 _PyObject_RealIsSubclass
  020b9	85 c0		 test	 eax, eax
  020bb	75 1c		 jne	 SHORT $LN292@PyExc_Init
  020bd	41 b8 4c 0a 00
	00		 mov	 r8d, 2636		; 00000a4cH
  020c3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  020ca	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1IC@ONNKMPKA@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAF@
  020d1	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  020d7	33 c0		 xor	 eax, eax
$LN292@PyExc_Init:
  020d9	48 83 bc 24 80
	00 00 00 00	 cmp	 QWORD PTR _code$126179[rsp], 0
  020e2	74 1f		 je	 SHORT $LN27@PyExc_Init
  020e4	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_FileNotFoundError
  020eb	48 8b 94 24 80
	00 00 00	 mov	 rdx, QWORD PTR _code$126179[rsp]
  020f3	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  020fa	e8 00 00 00 00	 call	 PyDict_SetItem
  020ff	85 c0		 test	 eax, eax
  02101	74 0c		 je	 SHORT $LN28@PyExc_Init
$LN27@PyExc_Init:
  02103	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  0210a	e8 00 00 00 00	 call	 Py_FatalError
$LN28@PyExc_Init:
  0210f	48 8b 8c 24 80
	00 00 00	 mov	 rcx, QWORD PTR _code$126179[rsp]
  02117	e8 00 00 00 00	 call	 _Py_DecRef

; 2637 :     POST_INIT(IsADirectoryError);

  0211c	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_IsADirectoryError
  02123	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BC@EPPFJLG@IsADirectoryError?$AA@
  0212a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  0212f	e8 00 00 00 00	 call	 PyDict_SetItemString
  02134	85 c0		 test	 eax, eax
  02136	74 0c		 je	 SHORT $LN26@PyExc_Init
  02138	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0213f	e8 00 00 00 00	 call	 Py_FatalError
$LN26@PyExc_Init:

; 2638 :     ADD_ERRNO(IsADirectoryError, EISDIR);

  02144	b9 15 00 00 00	 mov	 ecx, 21
  02149	e8 00 00 00 00	 call	 PyLong_FromLong
  0214e	48 89 84 24 88
	00 00 00	 mov	 QWORD PTR _code$126186[rsp], rax
  02156	48 8b 15 00 00
	00 00		 mov	 rdx, QWORD PTR PyExc_OSError
  0215d	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_IsADirectoryError
  02164	e8 00 00 00 00	 call	 _PyObject_RealIsSubclass
  02169	85 c0		 test	 eax, eax
  0216b	75 1c		 jne	 SHORT $LN293@PyExc_Init
  0216d	41 b8 4e 0a 00
	00		 mov	 r8d, 2638		; 00000a4eH
  02173	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  0217a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1IC@FBEGNJIO@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAI@
  02181	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  02187	33 c0		 xor	 eax, eax
$LN293@PyExc_Init:
  02189	48 83 bc 24 88
	00 00 00 00	 cmp	 QWORD PTR _code$126186[rsp], 0
  02192	74 1f		 je	 SHORT $LN24@PyExc_Init
  02194	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_IsADirectoryError
  0219b	48 8b 94 24 88
	00 00 00	 mov	 rdx, QWORD PTR _code$126186[rsp]
  021a3	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  021aa	e8 00 00 00 00	 call	 PyDict_SetItem
  021af	85 c0		 test	 eax, eax
  021b1	74 0c		 je	 SHORT $LN25@PyExc_Init
$LN24@PyExc_Init:
  021b3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  021ba	e8 00 00 00 00	 call	 Py_FatalError
$LN25@PyExc_Init:
  021bf	48 8b 8c 24 88
	00 00 00	 mov	 rcx, QWORD PTR _code$126186[rsp]
  021c7	e8 00 00 00 00	 call	 _Py_DecRef

; 2639 :     POST_INIT(NotADirectoryError);

  021cc	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_NotADirectoryError
  021d3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BD@BDDBNNNE@NotADirectoryError?$AA@
  021da	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  021df	e8 00 00 00 00	 call	 PyDict_SetItemString
  021e4	85 c0		 test	 eax, eax
  021e6	74 0c		 je	 SHORT $LN23@PyExc_Init
  021e8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  021ef	e8 00 00 00 00	 call	 Py_FatalError
$LN23@PyExc_Init:

; 2640 :     ADD_ERRNO(NotADirectoryError, ENOTDIR);

  021f4	b9 14 00 00 00	 mov	 ecx, 20
  021f9	e8 00 00 00 00	 call	 PyLong_FromLong
  021fe	48 89 84 24 90
	00 00 00	 mov	 QWORD PTR _code$126193[rsp], rax
  02206	48 8b 15 00 00
	00 00		 mov	 rdx, QWORD PTR PyExc_OSError
  0220d	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_NotADirectoryError
  02214	e8 00 00 00 00	 call	 _PyObject_RealIsSubclass
  02219	85 c0		 test	 eax, eax
  0221b	75 1c		 jne	 SHORT $LN294@PyExc_Init
  0221d	41 b8 50 0a 00
	00		 mov	 r8d, 2640		; 00000a50H
  02223	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  0222a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1IE@IDPOBJCC@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAN@
  02231	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  02237	33 c0		 xor	 eax, eax
$LN294@PyExc_Init:
  02239	48 83 bc 24 90
	00 00 00 00	 cmp	 QWORD PTR _code$126193[rsp], 0
  02242	74 1f		 je	 SHORT $LN21@PyExc_Init
  02244	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_NotADirectoryError
  0224b	48 8b 94 24 90
	00 00 00	 mov	 rdx, QWORD PTR _code$126193[rsp]
  02253	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  0225a	e8 00 00 00 00	 call	 PyDict_SetItem
  0225f	85 c0		 test	 eax, eax
  02261	74 0c		 je	 SHORT $LN22@PyExc_Init
$LN21@PyExc_Init:
  02263	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  0226a	e8 00 00 00 00	 call	 Py_FatalError
$LN22@PyExc_Init:
  0226f	48 8b 8c 24 90
	00 00 00	 mov	 rcx, QWORD PTR _code$126193[rsp]
  02277	e8 00 00 00 00	 call	 _Py_DecRef

; 2641 :     POST_INIT(InterruptedError);

  0227c	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_InterruptedError
  02283	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BB@PFBGOELP@InterruptedError?$AA@
  0228a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  0228f	e8 00 00 00 00	 call	 PyDict_SetItemString
  02294	85 c0		 test	 eax, eax
  02296	74 0c		 je	 SHORT $LN20@PyExc_Init
  02298	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0229f	e8 00 00 00 00	 call	 Py_FatalError
$LN20@PyExc_Init:

; 2642 :     ADD_ERRNO(InterruptedError, EINTR);

  022a4	b9 04 00 00 00	 mov	 ecx, 4
  022a9	e8 00 00 00 00	 call	 PyLong_FromLong
  022ae	48 89 84 24 98
	00 00 00	 mov	 QWORD PTR _code$126200[rsp], rax
  022b6	48 8b 15 00 00
	00 00		 mov	 rdx, QWORD PTR PyExc_OSError
  022bd	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_InterruptedError
  022c4	e8 00 00 00 00	 call	 _PyObject_RealIsSubclass
  022c9	85 c0		 test	 eax, eax
  022cb	75 1c		 jne	 SHORT $LN295@PyExc_Init
  022cd	41 b8 52 0a 00
	00		 mov	 r8d, 2642		; 00000a52H
  022d3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  022da	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1IA@HPPAOLHI@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAI@
  022e1	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  022e7	33 c0		 xor	 eax, eax
$LN295@PyExc_Init:
  022e9	48 83 bc 24 98
	00 00 00 00	 cmp	 QWORD PTR _code$126200[rsp], 0
  022f2	74 1f		 je	 SHORT $LN18@PyExc_Init
  022f4	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_InterruptedError
  022fb	48 8b 94 24 98
	00 00 00	 mov	 rdx, QWORD PTR _code$126200[rsp]
  02303	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  0230a	e8 00 00 00 00	 call	 PyDict_SetItem
  0230f	85 c0		 test	 eax, eax
  02311	74 0c		 je	 SHORT $LN19@PyExc_Init
$LN18@PyExc_Init:
  02313	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  0231a	e8 00 00 00 00	 call	 Py_FatalError
$LN19@PyExc_Init:
  0231f	48 8b 8c 24 98
	00 00 00	 mov	 rcx, QWORD PTR _code$126200[rsp]
  02327	e8 00 00 00 00	 call	 _Py_DecRef

; 2643 :     POST_INIT(PermissionError);

  0232c	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_PermissionError
  02333	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BA@EGIOHDMA@PermissionError?$AA@
  0233a	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  0233f	e8 00 00 00 00	 call	 PyDict_SetItemString
  02344	85 c0		 test	 eax, eax
  02346	74 0c		 je	 SHORT $LN17@PyExc_Init
  02348	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  0234f	e8 00 00 00 00	 call	 Py_FatalError
$LN17@PyExc_Init:

; 2644 :     ADD_ERRNO(PermissionError, EACCES);

  02354	b9 0d 00 00 00	 mov	 ecx, 13
  02359	e8 00 00 00 00	 call	 PyLong_FromLong
  0235e	48 89 84 24 a0
	00 00 00	 mov	 QWORD PTR _code$126207[rsp], rax
  02366	48 8b 15 00 00
	00 00		 mov	 rdx, QWORD PTR PyExc_OSError
  0236d	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_PermissionError
  02374	e8 00 00 00 00	 call	 _PyObject_RealIsSubclass
  02379	85 c0		 test	 eax, eax
  0237b	75 1c		 jne	 SHORT $LN296@PyExc_Init
  0237d	41 b8 54 0a 00
	00		 mov	 r8d, 2644		; 00000a54H
  02383	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  0238a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HO@PFEFNGNN@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAP@
  02391	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  02397	33 c0		 xor	 eax, eax
$LN296@PyExc_Init:
  02399	48 83 bc 24 a0
	00 00 00 00	 cmp	 QWORD PTR _code$126207[rsp], 0
  023a2	74 1f		 je	 SHORT $LN15@PyExc_Init
  023a4	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_PermissionError
  023ab	48 8b 94 24 a0
	00 00 00	 mov	 rdx, QWORD PTR _code$126207[rsp]
  023b3	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  023ba	e8 00 00 00 00	 call	 PyDict_SetItem
  023bf	85 c0		 test	 eax, eax
  023c1	74 0c		 je	 SHORT $LN16@PyExc_Init
$LN15@PyExc_Init:
  023c3	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  023ca	e8 00 00 00 00	 call	 Py_FatalError
$LN16@PyExc_Init:
  023cf	48 8b 8c 24 a0
	00 00 00	 mov	 rcx, QWORD PTR _code$126207[rsp]
  023d7	e8 00 00 00 00	 call	 _Py_DecRef

; 2645 :     ADD_ERRNO(PermissionError, EPERM);

  023dc	b9 01 00 00 00	 mov	 ecx, 1
  023e1	e8 00 00 00 00	 call	 PyLong_FromLong
  023e6	48 89 84 24 a8
	00 00 00	 mov	 QWORD PTR _code$126213[rsp], rax
  023ee	48 8b 15 00 00
	00 00		 mov	 rdx, QWORD PTR PyExc_OSError
  023f5	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_PermissionError
  023fc	e8 00 00 00 00	 call	 _PyObject_RealIsSubclass
  02401	85 c0		 test	 eax, eax
  02403	75 1c		 jne	 SHORT $LN297@PyExc_Init
  02405	41 b8 55 0a 00
	00		 mov	 r8d, 2645		; 00000a55H
  0240b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  02412	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HO@PFEFNGNN@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAP@
  02419	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  0241f	33 c0		 xor	 eax, eax
$LN297@PyExc_Init:
  02421	48 83 bc 24 a8
	00 00 00 00	 cmp	 QWORD PTR _code$126213[rsp], 0
  0242a	74 1f		 je	 SHORT $LN13@PyExc_Init
  0242c	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_PermissionError
  02433	48 8b 94 24 a8
	00 00 00	 mov	 rdx, QWORD PTR _code$126213[rsp]
  0243b	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  02442	e8 00 00 00 00	 call	 PyDict_SetItem
  02447	85 c0		 test	 eax, eax
  02449	74 0c		 je	 SHORT $LN14@PyExc_Init
$LN13@PyExc_Init:
  0244b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  02452	e8 00 00 00 00	 call	 Py_FatalError
$LN14@PyExc_Init:
  02457	48 8b 8c 24 a8
	00 00 00	 mov	 rcx, QWORD PTR _code$126213[rsp]
  0245f	e8 00 00 00 00	 call	 _Py_DecRef

; 2646 :     POST_INIT(ProcessLookupError);

  02464	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ProcessLookupError
  0246b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BD@LBBCHOLB@ProcessLookupError?$AA@
  02472	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  02477	e8 00 00 00 00	 call	 PyDict_SetItemString
  0247c	85 c0		 test	 eax, eax
  0247e	74 0c		 je	 SHORT $LN12@PyExc_Init
  02480	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02487	e8 00 00 00 00	 call	 Py_FatalError
$LN12@PyExc_Init:

; 2647 :     ADD_ERRNO(ProcessLookupError, ESRCH);

  0248c	b9 03 00 00 00	 mov	 ecx, 3
  02491	e8 00 00 00 00	 call	 PyLong_FromLong
  02496	48 89 84 24 b0
	00 00 00	 mov	 QWORD PTR _code$126219[rsp], rax
  0249e	48 8b 15 00 00
	00 00		 mov	 rdx, QWORD PTR PyExc_OSError
  024a5	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_ProcessLookupError
  024ac	e8 00 00 00 00	 call	 _PyObject_RealIsSubclass
  024b1	85 c0		 test	 eax, eax
  024b3	75 1c		 jne	 SHORT $LN298@PyExc_Init
  024b5	41 b8 57 0a 00
	00		 mov	 r8d, 2647		; 00000a57H
  024bb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  024c2	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1IE@PKICBNGH@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAP@
  024c9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  024cf	33 c0		 xor	 eax, eax
$LN298@PyExc_Init:
  024d1	48 83 bc 24 b0
	00 00 00 00	 cmp	 QWORD PTR _code$126219[rsp], 0
  024da	74 1f		 je	 SHORT $LN10@PyExc_Init
  024dc	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_ProcessLookupError
  024e3	48 8b 94 24 b0
	00 00 00	 mov	 rdx, QWORD PTR _code$126219[rsp]
  024eb	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  024f2	e8 00 00 00 00	 call	 PyDict_SetItem
  024f7	85 c0		 test	 eax, eax
  024f9	74 0c		 je	 SHORT $LN11@PyExc_Init
$LN10@PyExc_Init:
  024fb	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  02502	e8 00 00 00 00	 call	 Py_FatalError
$LN11@PyExc_Init:
  02507	48 8b 8c 24 b0
	00 00 00	 mov	 rcx, QWORD PTR _code$126219[rsp]
  0250f	e8 00 00 00 00	 call	 _Py_DecRef

; 2648 :     POST_INIT(TimeoutError);

  02514	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_TimeoutError
  0251b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0N@BMLDFELP@TimeoutError?$AA@
  02522	48 8b 4c 24 20	 mov	 rcx, QWORD PTR bdict$[rsp]
  02527	e8 00 00 00 00	 call	 PyDict_SetItemString
  0252c	85 c0		 test	 eax, eax
  0252e	74 0c		 je	 SHORT $LN9@PyExc_Init
  02530	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CF@GALJCGPG@Module?5dictionary?5insertion?5prob@
  02537	e8 00 00 00 00	 call	 Py_FatalError
$LN9@PyExc_Init:

; 2649 :     ADD_ERRNO(TimeoutError, ETIMEDOUT);

  0253c	b9 4c 27 00 00	 mov	 ecx, 10060		; 0000274cH
  02541	e8 00 00 00 00	 call	 PyLong_FromLong
  02546	48 89 84 24 b8
	00 00 00	 mov	 QWORD PTR _code$126226[rsp], rax
  0254e	48 8b 15 00 00
	00 00		 mov	 rdx, QWORD PTR PyExc_OSError
  02555	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_TimeoutError
  0255c	e8 00 00 00 00	 call	 _PyObject_RealIsSubclass
  02561	85 c0		 test	 eax, eax
  02563	75 1c		 jne	 SHORT $LN299@PyExc_Init
  02565	41 b8 59 0a 00
	00		 mov	 r8d, 2649		; 00000a59H
  0256b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1DA@DBFJBBCA@?$AA?4?$AA?4?$AA?2?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AAs?$AA?2?$AAe?$AAx?$AAc?$AAe?$AAp?$AAt?$AAi?$AAo?$AAn?$AAs?$AA?4?$AAc?$AA?$AA@
  02572	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HI@JGBKNOGF@?$AA_?$AAP?$AAy?$AAO?$AAb?$AAj?$AAe?$AAc?$AAt?$AA_?$AAR?$AAe?$AAa?$AAl?$AAI?$AAs?$AAS?$AAu?$AAb?$AAc?$AAl?$AAa?$AAs?$AAs?$AA?$CI?$AAP?$AAy?$AAE?$AAx?$AAc?$AA_?$AAT@
  02579	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__wassert
  0257f	33 c0		 xor	 eax, eax
$LN299@PyExc_Init:
  02581	48 83 bc 24 b8
	00 00 00 00	 cmp	 QWORD PTR _code$126226[rsp], 0
  0258a	74 1f		 je	 SHORT $LN7@PyExc_Init
  0258c	4c 8b 05 00 00
	00 00		 mov	 r8, QWORD PTR PyExc_TimeoutError
  02593	48 8b 94 24 b8
	00 00 00	 mov	 rdx, QWORD PTR _code$126226[rsp]
  0259b	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR errnomap
  025a2	e8 00 00 00 00	 call	 PyDict_SetItem
  025a7	85 c0		 test	 eax, eax
  025a9	74 0c		 je	 SHORT $LN8@PyExc_Init
$LN7@PyExc_Init:
  025ab	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BK@FBLDPOGF@errmap?5insertion?5problem?4?$AA@
  025b2	e8 00 00 00 00	 call	 Py_FatalError
$LN8@PyExc_Init:
  025b7	48 8b 8c 24 b8
	00 00 00	 mov	 rcx, QWORD PTR _code$126226[rsp]
  025bf	e8 00 00 00 00	 call	 _Py_DecRef

; 2650 : 
; 2651 :     preallocate_memerrors();

  025c4	e8 00 00 00 00	 call	 preallocate_memerrors

; 2652 : 
; 2653 :     if (!PyExc_RecursionErrorInst) {

  025c9	48 83 3d 00 00
	00 00 00	 cmp	 QWORD PTR PyExc_RecursionErrorInst, 0
  025d1	0f 85 e0 00 00
	00		 jne	 $LN6@PyExc_Init

; 2654 :         PyExc_RecursionErrorInst = BaseException_new(&_PyExc_RuntimeError, NULL, NULL);

  025d7	45 33 c0	 xor	 r8d, r8d
  025da	33 d2		 xor	 edx, edx
  025dc	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:_PyExc_RuntimeError
  025e3	e8 00 00 00 00	 call	 BaseException_new
  025e8	48 89 05 00 00
	00 00		 mov	 QWORD PTR PyExc_RecursionErrorInst, rax

; 2655 :         if (!PyExc_RecursionErrorInst)

  025ef	48 83 3d 00 00
	00 00 00	 cmp	 QWORD PTR PyExc_RecursionErrorInst, 0
  025f7	75 11		 jne	 SHORT $LN5@PyExc_Init

; 2656 :             Py_FatalError("Cannot pre-allocate RuntimeError instance for "
; 2657 :                             "recursion errors");

  025f9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0DP@ICIAEEBH@Cannot?5pre?9allocate?5RuntimeError@
  02600	e8 00 00 00 00	 call	 Py_FatalError

; 2658 :         else {

  02605	e9 ad 00 00 00	 jmp	 $LN4@PyExc_Init
$LN5@PyExc_Init:

; 2659 :             PyBaseExceptionObject *err_inst =
; 2660 :                 (PyBaseExceptionObject *)PyExc_RecursionErrorInst;

  0260a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR PyExc_RecursionErrorInst
  02611	48 89 84 24 d0
	00 00 00	 mov	 QWORD PTR err_inst$126238[rsp], rax

; 2661 :             PyObject *args_tuple;
; 2662 :             PyObject *exc_message;
; 2663 :             exc_message = PyUnicode_FromString("maximum recursion depth exceeded");

  02619	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CB@JIEDPDLF@maximum?5recursion?5depth?5exceeded@
  02620	e8 00 00 00 00	 call	 PyUnicode_FromString
  02625	48 89 84 24 c0
	00 00 00	 mov	 QWORD PTR exc_message$126241[rsp], rax

; 2664 :             if (!exc_message)

  0262d	48 83 bc 24 c0
	00 00 00 00	 cmp	 QWORD PTR exc_message$126241[rsp], 0
  02636	75 0c		 jne	 SHORT $LN3@PyExc_Init

; 2665 :                 Py_FatalError("cannot allocate argument for RuntimeError "
; 2666 :                                 "pre-allocation");

  02638	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0DJ@IIJEFPMJ@cannot?5allocate?5argument?5for?5Run@
  0263f	e8 00 00 00 00	 call	 Py_FatalError
$LN3@PyExc_Init:

; 2667 :             args_tuple = PyTuple_Pack(1, exc_message);

  02644	48 8b 94 24 c0
	00 00 00	 mov	 rdx, QWORD PTR exc_message$126241[rsp]
  0264c	b9 01 00 00 00	 mov	 ecx, 1
  02651	e8 00 00 00 00	 call	 PyTuple_Pack
  02656	48 89 84 24 c8
	00 00 00	 mov	 QWORD PTR args_tuple$126240[rsp], rax

; 2668 :             if (!args_tuple)

  0265e	48 83 bc 24 c8
	00 00 00 00	 cmp	 QWORD PTR args_tuple$126240[rsp], 0
  02667	75 0c		 jne	 SHORT $LN2@PyExc_Init

; 2669 :                 Py_FatalError("cannot allocate tuple for RuntimeError "
; 2670 :                                 "pre-allocation");

  02669	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0DG@DCAIDKJK@cannot?5allocate?5tuple?5for?5Runtim@
  02670	e8 00 00 00 00	 call	 Py_FatalError
$LN2@PyExc_Init:

; 2671 :             Py_DECREF(exc_message);

  02675	48 8b 8c 24 c0
	00 00 00	 mov	 rcx, QWORD PTR exc_message$126241[rsp]
  0267d	e8 00 00 00 00	 call	 _Py_DecRef

; 2672 :             if (BaseException_init(err_inst, args_tuple, NULL))

  02682	45 33 c0	 xor	 r8d, r8d
  02685	48 8b 94 24 c8
	00 00 00	 mov	 rdx, QWORD PTR args_tuple$126240[rsp]
  0268d	48 8b 8c 24 d0
	00 00 00	 mov	 rcx, QWORD PTR err_inst$126238[rsp]
  02695	e8 00 00 00 00	 call	 BaseException_init
  0269a	85 c0		 test	 eax, eax
  0269c	74 0c		 je	 SHORT $LN1@PyExc_Init

; 2673 :                 Py_FatalError("init of pre-allocated RuntimeError failed");

  0269e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CK@HNJAAFFN@init?5of?5pre?9allocated?5RuntimeErr@
  026a5	e8 00 00 00 00	 call	 Py_FatalError
$LN1@PyExc_Init:

; 2674 :             Py_DECREF(args_tuple);

  026aa	48 8b 8c 24 c8
	00 00 00	 mov	 rcx, QWORD PTR args_tuple$126240[rsp]
  026b2	e8 00 00 00 00	 call	 _Py_DecRef
$LN4@PyExc_Init:
$LN6@PyExc_Init:

; 2675 :         }
; 2676 :     }
; 2677 : }

  026b7	48 81 c4 e8 00
	00 00		 add	 rsp, 232		; 000000e8H
  026be	c3		 ret	 0
_PyExc_Init ENDP
_TEXT	ENDS
PUBLIC	??_C@_0CJ@IKMFGPOI@Could?5not?5preallocate?5MemoryErro@ ; `string'
;	COMDAT pdata
pdata	SEGMENT
$pdata$preallocate_memerrors DD imagerel preallocate_memerrors
	DD	imagerel preallocate_memerrors+140
	DD	imagerel $unwind$preallocate_memerrors
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$preallocate_memerrors DD 020701H
	DD	0170107H
xdata	ENDS
;	COMDAT ??_C@_0CJ@IKMFGPOI@Could?5not?5preallocate?5MemoryErro@
CONST	SEGMENT
??_C@_0CJ@IKMFGPOI@Could?5not?5preallocate?5MemoryErro@ DB 'Could not pre'
	DB	'allocate MemoryError object', 00H		; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT preallocate_memerrors
_TEXT	SEGMENT
i$ = 32
errors$ = 48
preallocate_memerrors PROC				; COMDAT

; 2234 : {

  00000	48 81 ec b8 00
	00 00		 sub	 rsp, 184		; 000000b8H

; 2235 :     /* We create enough MemoryErrors and then decref them, which will fill
; 2236 :        up the freelist. */
; 2237 :     int i;
; 2238 :     PyObject *errors[MEMERRORS_SAVE];
; 2239 :     for (i = 0; i < MEMERRORS_SAVE; i++) {

  00007	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR i$[rsp], 0
  0000f	eb 0a		 jmp	 SHORT $LN7@preallocat
$LN6@preallocat:
  00011	8b 44 24 20	 mov	 eax, DWORD PTR i$[rsp]
  00015	ff c0		 inc	 eax
  00017	89 44 24 20	 mov	 DWORD PTR i$[rsp], eax
$LN7@preallocat:
  0001b	83 7c 24 20 10	 cmp	 DWORD PTR i$[rsp], 16
  00020	7d 36		 jge	 SHORT $LN5@preallocat

; 2240 :         errors[i] = MemoryError_new((PyTypeObject *) PyExc_MemoryError,
; 2241 :                                     NULL, NULL);

  00022	45 33 c0	 xor	 r8d, r8d
  00025	33 d2		 xor	 edx, edx
  00027	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR PyExc_MemoryError
  0002e	e8 00 00 00 00	 call	 MemoryError_new
  00033	48 63 4c 24 20	 movsxd	 rcx, DWORD PTR i$[rsp]
  00038	48 89 44 cc 30	 mov	 QWORD PTR errors$[rsp+rcx*8], rax

; 2242 :         if (!errors[i])

  0003d	48 63 44 24 20	 movsxd	 rax, DWORD PTR i$[rsp]
  00042	48 83 7c c4 30
	00		 cmp	 QWORD PTR errors$[rsp+rax*8], 0
  00048	75 0c		 jne	 SHORT $LN4@preallocat

; 2243 :             Py_FatalError("Could not preallocate MemoryError object");

  0004a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0CJ@IKMFGPOI@Could?5not?5preallocate?5MemoryErro@
  00051	e8 00 00 00 00	 call	 Py_FatalError
$LN4@preallocat:

; 2244 :     }

  00056	eb b9		 jmp	 SHORT $LN6@preallocat
$LN5@preallocat:

; 2245 :     for (i = 0; i < MEMERRORS_SAVE; i++) {

  00058	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR i$[rsp], 0
  00060	eb 0a		 jmp	 SHORT $LN3@preallocat
$LN2@preallocat:
  00062	8b 44 24 20	 mov	 eax, DWORD PTR i$[rsp]
  00066	ff c0		 inc	 eax
  00068	89 44 24 20	 mov	 DWORD PTR i$[rsp], eax
$LN3@preallocat:
  0006c	83 7c 24 20 10	 cmp	 DWORD PTR i$[rsp], 16
  00071	7d 11		 jge	 SHORT $LN1@preallocat

; 2246 :         Py_DECREF(errors[i]);

  00073	48 63 44 24 20	 movsxd	 rax, DWORD PTR i$[rsp]
  00078	48 8b 4c c4 30	 mov	 rcx, QWORD PTR errors$[rsp+rax*8]
  0007d	e8 00 00 00 00	 call	 _Py_DecRef

; 2247 :     }

  00082	eb de		 jmp	 SHORT $LN2@preallocat
$LN1@preallocat:

; 2248 : }

  00084	48 81 c4 b8 00
	00 00		 add	 rsp, 184		; 000000b8H
  0008b	c3		 ret	 0
preallocate_memerrors ENDP
_TEXT	ENDS
PUBLIC	??_C@_0M@HDPKIMAI@_PyExc_Fini?$AA@		; `string'
PUBLIC	_PyExc_Fini
;	COMDAT pdata
pdata	SEGMENT
$pdata$_PyExc_Fini DD imagerel $LN11
	DD	imagerel $LN11+200
	DD	imagerel $unwind$_PyExc_Fini
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_PyExc_Fini DD 010401H
	DD	08204H
xdata	ENDS
;	COMDAT ??_C@_0M@HDPKIMAI@_PyExc_Fini?$AA@
CONST	SEGMENT
??_C@_0M@HDPKIMAI@_PyExc_Fini?$AA@ DB '_PyExc_Fini', 00H ; `string'
; Function compile flags: /Odtp
CONST	ENDS
;	COMDAT _PyExc_Fini
_TEXT	SEGMENT
_py_tmp$126259 = 48
_py_tmp$126267 = 56
_PyExc_Fini PROC					; COMDAT

; 2681 : {

$LN11:
  00000	48 83 ec 48	 sub	 rsp, 72			; 00000048H
$LN8@PyExc_Fini:

; 2682 :     Py_CLEAR(PyExc_RecursionErrorInst);

  00004	48 83 3d 00 00
	00 00 00	 cmp	 QWORD PTR PyExc_RecursionErrorInst, 0
  0000c	74 4d		 je	 SHORT $LN5@PyExc_Fini
  0000e	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00016	4c 8b 0d 00 00
	00 00		 mov	 r9, QWORD PTR PyExc_RecursionErrorInst
  0001d	41 b8 7a 0a 00
	00		 mov	 r8d, 2682		; 00000a7aH
  00023	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0M@HDPKIMAI@_PyExc_Fini?$AA@
  00031	e8 00 00 00 00	 call	 _PyParallel_Guard
  00036	85 c0		 test	 eax, eax
  00038	75 21		 jne	 SHORT $LN5@PyExc_Fini
  0003a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR PyExc_RecursionErrorInst
  00041	48 89 44 24 30	 mov	 QWORD PTR _py_tmp$126259[rsp], rax
  00046	48 c7 05 00 00
	00 00 00 00 00
	00		 mov	 QWORD PTR PyExc_RecursionErrorInst, 0
  00051	48 8b 4c 24 30	 mov	 rcx, QWORD PTR _py_tmp$126259[rsp]
  00056	e8 00 00 00 00	 call	 _Py_DecRef
$LN5@PyExc_Fini:
  0005b	33 c0		 xor	 eax, eax
  0005d	85 c0		 test	 eax, eax
  0005f	75 a3		 jne	 SHORT $LN8@PyExc_Fini

; 2683 :     free_preallocated_memerrors();

  00061	e8 00 00 00 00	 call	 free_preallocated_memerrors
$LN4@PyExc_Fini:

; 2684 :     Py_CLEAR(errnomap);

  00066	48 83 3d 00 00
	00 00 00	 cmp	 QWORD PTR errnomap, 0
  0006e	74 4d		 je	 SHORT $LN1@PyExc_Fini
  00070	c7 44 24 20 10
	00 00 00	 mov	 DWORD PTR [rsp+32], 16
  00078	4c 8b 0d 00 00
	00 00		 mov	 r9, QWORD PTR errnomap
  0007f	41 b8 7c 0a 00
	00		 mov	 r8d, 2684		; 00000a7cH
  00085	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BI@DKIONFF@?4?4?2Objects?2exceptions?4c?$AA@
  0008c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0M@HDPKIMAI@_PyExc_Fini?$AA@
  00093	e8 00 00 00 00	 call	 _PyParallel_Guard
  00098	85 c0		 test	 eax, eax
  0009a	75 21		 jne	 SHORT $LN1@PyExc_Fini
  0009c	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR errnomap
  000a3	48 89 44 24 38	 mov	 QWORD PTR _py_tmp$126267[rsp], rax
  000a8	48 c7 05 00 00
	00 00 00 00 00
	00		 mov	 QWORD PTR errnomap, 0
  000b3	48 8b 4c 24 38	 mov	 rcx, QWORD PTR _py_tmp$126267[rsp]
  000b8	e8 00 00 00 00	 call	 _Py_DecRef
$LN1@PyExc_Fini:
  000bd	33 c0		 xor	 eax, eax
  000bf	85 c0		 test	 eax, eax
  000c1	75 a3		 jne	 SHORT $LN4@PyExc_Fini

; 2685 : }

  000c3	48 83 c4 48	 add	 rsp, 72			; 00000048H
  000c7	c3		 ret	 0
_PyExc_Fini ENDP
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$free_preallocated_memerrors DD imagerel free_preallocated_memerrors
	DD	imagerel free_preallocated_memerrors+71
	DD	imagerel $unwind$free_preallocated_memerrors
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$free_preallocated_memerrors DD 010401H
	DD	06204H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT free_preallocated_memerrors
_TEXT	SEGMENT
self$24036 = 32
free_preallocated_memerrors PROC			; COMDAT

; 2252 : {

  00000	48 83 ec 38	 sub	 rsp, 56			; 00000038H
$LN2@free_preal:

; 2253 :     while (memerrors_freelist != NULL) {

  00004	48 83 3d 00 00
	00 00 00	 cmp	 QWORD PTR memerrors_freelist, 0
  0000c	74 34		 je	 SHORT $LN1@free_preal

; 2254 :         PyObject *self = (PyObject *) memerrors_freelist;

  0000e	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR memerrors_freelist
  00015	48 89 44 24 20	 mov	 QWORD PTR self$24036[rsp], rax

; 2255 :         memerrors_freelist = (PyBaseExceptionObject *) memerrors_freelist->dict;

  0001a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR memerrors_freelist
  00021	48 8b 40 60	 mov	 rax, QWORD PTR [rax+96]
  00025	48 89 05 00 00
	00 00		 mov	 QWORD PTR memerrors_freelist, rax

; 2256 :         Py_TYPE(self)->tp_free((PyObject *)self);

  0002c	48 8b 44 24 20	 mov	 rax, QWORD PTR self$24036[rsp]
  00031	48 8b 40 58	 mov	 rax, QWORD PTR [rax+88]
  00035	48 8b 4c 24 20	 mov	 rcx, QWORD PTR self$24036[rsp]
  0003a	ff 90 98 01 00
	00		 call	 QWORD PTR [rax+408]

; 2257 :     }

  00040	eb c2		 jmp	 SHORT $LN2@free_preal
$LN1@free_preal:

; 2258 : }

  00042	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00046	c3		 ret	 0
free_preallocated_memerrors ENDP
_TEXT	ENDS
END
